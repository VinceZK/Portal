{"version":3,"sources":["webpack:///$_lazy_route_resources|lazy|groupOptions: {}|namespace object","webpack:///src/app/admin-info/admin-info.component.ts","webpack:///src/app/admin-info/admin-info.component.html","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app/app-detail/app-categories/app-categories.component.html","webpack:///src/app/app/app-detail/app-categories/app-categories.component.ts","webpack:///src/app/app/app-detail/app-detail.component.html","webpack:///src/app/app/app-detail/app-detail.component.ts","webpack:///src/app/app/app-detail/app-target/app-target.component.ts","webpack:///src/app/app/app-detail/app-target/app-target.component.html","webpack:///src/app/app/app-list/app-list.component.html","webpack:///src/app/app/app-list/app-list.component.ts","webpack:///src/app/app_category/app-category-detail/app-category-detail-app/app-category-detail-app.component.html","webpack:///src/app/app_category/app-category-detail/app-category-detail-app/app-category-detail-app.component.ts","webpack:///src/app/app_category/app-category-detail/app-category-detail-role/app-category-detail-role.component.html","webpack:///src/app/app_category/app-category-detail/app-category-detail-role/app-category-detail-role.component.ts","webpack:///src/app/app_category/app-category-detail/app-category-detail.component.html","webpack:///src/app/app_category/app-category-detail/app-category-detail.component.ts","webpack:///src/app/app_category/app-category-list/app-category-list.component.html","webpack:///src/app/app_category/app-category-list/app-category-list.component.ts","webpack:///src/app/async-validators.ts","webpack:///src/app/auth_object/auth-object-detail/auth-object-detail.component.html","webpack:///src/app/auth_object/auth-object-detail/auth-object-detail.component.ts","webpack:///src/app/auth_object/auth-object-detail/auth-object-field/auth-object-field.component.html","webpack:///src/app/auth_object/auth-object-detail/auth-object-field/auth-object-field.component.ts","webpack:///src/app/auth_object/auth-object-list/auth-object-list.component.html","webpack:///src/app/auth_object/auth-object-list/auth-object-list.component.ts","webpack:///src/app/authorization/auth-value/auth-value-selopts/auth-value-selopts.component.html","webpack:///src/app/authorization/auth-value/auth-value-selopts/auth-value-selopts.component.ts","webpack:///src/app/authorization/auth-value/auth-value-singles/auth-value-singles.component.html","webpack:///src/app/authorization/auth-value/auth-value-singles/auth-value-singles.component.ts","webpack:///src/app/authorization/auth-value/auth-value.component.html","webpack:///src/app/authorization/auth-value/auth-value.component.ts","webpack:///src/app/authorization/authorization.component.html","webpack:///src/app/authorization/authorization.component.ts","webpack:///src/app/custom.reuse.strategy.ts","webpack:///src/app/dialog.service.ts","webpack:///src/app/identity.service.ts","webpack:///src/app/identity.ts","webpack:///src/app/msgStore.ts","webpack:///src/app/permission/permission-detail/permission-detail-category/permission-detail-category.component.html","webpack:///src/app/permission/permission-detail/permission-detail-category/permission-detail-category.component.ts","webpack:///src/app/permission/permission-detail/permission-detail-profile/permission-detail-profile.component.html","webpack:///src/app/permission/permission-detail/permission-detail-profile/permission-detail-profile.component.ts","webpack:///src/app/permission/permission-detail/permission-detail-user/permission-detail-user.component.html","webpack:///src/app/permission/permission-detail/permission-detail-user/permission-detail-user.component.ts","webpack:///src/app/permission/permission-detail/permission-detail.component.html","webpack:///src/app/permission/permission-detail/permission-detail.component.ts","webpack:///src/app/permission/permission-list/permission-list.component.html","webpack:///src/app/permission/permission-list/permission-list.component.ts","webpack:///src/app/profile/profile-detail/profile-detail.component.html","webpack:///src/app/profile/profile-detail/profile-detail.component.ts","webpack:///src/app/profile/profile-list/profile-list.component.html","webpack:///src/app/profile/profile-list/profile-list.component.ts","webpack:///src/app/user/user-detail/user-address/user-address.component.html","webpack:///src/app/user/user-detail/user-address/user-address.component.ts","webpack:///src/app/user/user-detail/user-basic/user-basic.component.ts","webpack:///src/app/user/user-detail/user-basic/user-basic.component.html","webpack:///src/app/user/user-detail/user-detail.component.html","webpack:///src/app/user/user-detail/user-detail.component.ts","webpack:///src/app/user/user-detail/user-email/user-email.component.html","webpack:///src/app/user/user-detail/user-email/user-email.component.ts","webpack:///src/app/user/user-detail/user-personalization/user-personalization.component.ts","webpack:///src/app/user/user-detail/user-personalization/user-personalization.component.html","webpack:///src/app/user/user-detail/user-role/user-role.component.html","webpack:///src/app/user/user-detail/user-role/user-role.component.ts","webpack:///src/app/user/user-list/user-list.component.html","webpack:///src/app/user/user-list/user-list.component.ts","webpack:///src/app/work-protection.guard.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","id","module","exports","AdminInfoComponent","attributeControlService","adminForm","mainForm","get","attrCtrls","toAttributeControl","relationMetas","find","relationMeta","RELATION_ID","adminRelation","ATTRIBUTES","fieldName","attrCtrl","name","AppComponent","entityService","identityService","messageService","logonService","setOriginalHost","environment","setHost","try_get_session","subscribe","data","setSession","setMessageStore","msgStore","Session","LANGUAGE","appRoutes","path","component","LogonComponent","title","userLabel","pwdLabel","btnLabel","redirectPath","redirectUrl","host","LandingPageComponent","UserListComponent","UserDetailComponent","canDeactivate","WorkProtectionGuard","AppListComponent","AppDetailComponent","AppCategoryListComponent","AppCategoryDetailComponent","AuthObjectListComponent","AuthObjectDetailComponent","PermissionListComponent","PermissionDetailComponent","ProfileListComponent","ProfileDetailComponent","redirectTo","pathMatch","AppModule","provide","RouteReuseStrategy","useClass","CustomReuseStrategy","BrowserModule","LogonModule","RouterModule","relativeLinkResolution","FormsModule","ReactiveFormsModule","MessageModule","JorAngularModule","UserBasicComponent","UserPersonalizationComponent","UserRoleComponent","UserEmailComponent","UserAddressComponent","AppTargetComponent","AppCategoriesComponent","AuthObjectFieldComponent","AuthorizationComponent","AuthValueComponent","AuthValueSinglesComponent","AuthValueSeloptsComponent","AppCategoryDetailAppComponent","AppCategoryDetailRoleComponent","PermissionDetailCategoryComponent","PermissionDetailProfileComponent","PermissionDetailUserComponent","appCategoryFormArray","rowID","exportObject","afterExportFn","context","rowIDx","onChangeKey","bind","searchHelpComponent","openSearchHelpModalByEntity","SearchHelpComponent","fb","route","router","dialogService","uiMapperService","readonly","isNewMode","originalValue","changedValue","tabStrip","paramMap","pipe","switchMap","params","action","forkJoin","getRelationMetaOfEntity","_createNewEntity","getAppDetail","instanceGUID","_generateMainForm","_switch2EditMode","_switch2DisplayMode","errorMessages","forEach","msg","add","navigate","tabStripID","dirty","confirm","reset","clearMessages","_setCheckBoxState","appIDCtrl","clearAsyncValidators","appCategoryArray","lastIndex","length","appCategoryGroup","at","invalid","value","ID","removeAt","markAsPristine","window","history","replaceState","setAsyncValidators","existingAppValidator","appDetail","Entity","ENTITY_ID","APP_ID","NAME","ROUTE_LINK","IS_EXTERNAL","CREATED_BY","CREATE_TIME","CHANGED_BY","CHANGE_TIME","of","group","Validators","target","admin","parsedRelationship","_parseRelationships","addControl","array","appCategories","map","appCategory","appAuthObjects","appAuthObject","getRawValue","relationships","relationship","RELATIONSHIP_ID","__parseAppCategory","parseProfileAuthObject","values","push","RELATIONSHIP_INSTANCE_GUID","ORDER","app_category_INSTANCE_GUID","ICON","__parseAppAuthObject","authorization","JSON","parse","status","Object","AuthFieldValue","findIndex","authValue","CHECKED","COLLAPSED","NODE_ID","STATUS","auth_object_INSTANCE_GUID","AUTH_VALUE","OBJ_NAME","DESC","ROW_TYPE","FIELD_NAME","DATA_ELEMENT","authObjectFields","value2","authFieldName","stringify","disable","enable","_composeChanges","save","appID","instance","_resetValue","reportMessage","USER_ID","CurrentTime","appAuthObjFormArray","composeAuthChanges","return2List","switchEditDisplay","appTargetForm","showDeletionConfirmation","apps","trim","appName","searchApps","messageType","messages","$event","keyCode","search","toBeDeletedInstance","toBeDeletedInstanceGUID","ele","INSTANCE_GUID","errorMsg","enterSearch","cancelDeletion","confirmDeletion","appFormArray","controls","ctrl","index","markAsDirty","currentFormGroup","isExisting","setErrors","message","portal_app_INSTANCE_GUID","getAppByID","setValue","key","existIndex","pristine","valid","roleFormArray","openSearchHelpModalBySearchHelp","getAppCategoryDetail","appCategoryIDCtrl","appArray","appGroup","existingAppCategoryValidator","appCategoryDetail","TYPE","app","roles","role","__parseApp","__parseSystemRole","permission","partner","system_role_INSTANCE_GUID","r_role","DESCRIPTION","appCategoryID","composeChangedRelationship","ROLE_ID","appCategoryName","searchAppCategories","existingUserNameValidator","userID","control","timer","getUserByUserName","generateMessage","msgShortText","existingUserIDValidator","getUserByUserID","existingPermissionValidator","getPermissionByName","existingAuthObjectValidator","getAuthObjectByName","getAppCategoryByID","existingProfileValidator","getAuthProfileByName","getAuthObjectDetail","authFieldArray","authFieldGroup","authObjCtrl","auth_field_INSTANCE_GUID","authObjectDetail","authFields","authField","__parseAuthField","authObjName","authFieldFormArray","getAuthFieldInfo","authObjects","authObjDesc","searchAuthObjects","operatorEnum","Operator","optionEnum","Option","idx","selectOptionCtrl","selectOptionArray","insert","Low","High","singleValueArray","authFieldValueForm","clear","fullPermission","authValues","getElementMeta","attribute","ATTR_GUID","ELEMENT_ID","ATTR_NAME","toSingleAttributeControl","highAttrCtrl","disabled","authValueArray","_setFullPermission","singleValues","selectOptions","hasErrors","singleValueCtrl","singleValue","selectOption","isFull","checkFullPermission","switchTabStrip","isAuthValueModalShown","isAuthObjectModalShown","selectAll","nodeID","authObjFormArray","ctrlName","currentAuthObjCtrl","newAuthFieldValueForm","authObjAttr","elementMeta","onChangeCategory","currentCtrl","parentNode","appAuthObjCtrl","currentAuthFieldValueForm","authValueComponent","generateAuthValue","_coordinateStatus","currentAuthObjForm","appAuthObjForm","parentAuthObjectCtrl","addAuthValue","closeAuthObjectModal","addAuthObject","routesToCache","storedRouteHandles","Map","indexOf","routeConfig","handle","set","has","future","curr","DialogService","confirmation","httpOptions","headers","HttpHeaders","IdentityService","http","originalHost","pseudoNodeID","session","defaultSession","formatDate","Date","permissionID","permissionDesc","queryObject","QueryObject","PROJECTION","FILTER","includes","OPERATOR","LOW","replace","SORT","post","catchError","handleError","permissionName","pieceObject","piece","RELATIONS","RELATIONSHIPS","PARTNER_ENTITY_PIECES","categoryID","profileName","profileDesc","PROFILE_NAME","userName","USER_NAME","roleID","operations","entity","put","entityGUID","authorizations","formArray","relationshipID","currentAuthObjectCtrl","isAuthorizationChanged","rowType","Authorization","AuthObject","originalAuthObjValue","authObj","operation","result","error","addMessage","console","PermissionList","UserList","AppList","AuthObjList","AuthProfileList","AppCategoryList","SelectOption","msgCat","msgName","msgText","EN","shortText","longText","isCategoryModalShown","categoryFormArray","appCategoryCtrl","currentCategoryCtrl","categoryCtrl","newCategoryForm","auth_profile_INSTANCE_GUID","category","categoryAttr","appRelationship","appGUIDs","_generateProfile","profileCtrl","toUpperCase","appGUID","orchestrate","errs","rsAuthorization","concat","hasError","authFormArray","checkAll","closeCategoryModal","profileFormArray","onSelect","currentProfileFormGroup","userFormArray","getPermissionDetail","permissionNameCtrl","permissionDetail","DESCR","categories","profile","users","user","__parseRoleCategoryProfile","__parseRoleUsers","sort","a","b","appCategoryInstance","PARTNER_INSTANCES","partnerInstance","authProfileInstance","rsAppCategory","SYNCED","log","results","msgType","originalProfile","noCommit","authProfile","onlySelf","rsCategory","filter","newCategoryIndex","NO_EXISTING_CHECK","newProfilesIndex","replacements","movePath","toPath","permissions","searchPermissions","toBeDeletedPermissionGUID","getAuthProfileDetail","profileNameCtrl","profileDetail","authObject","__parseAuthObjects","authObjectFormArray","authProfiles","searchAuthProfiles","userAddressFormArray","userForm","addressFormGroup","ADDRESS_ID","ADDRESS_VALUE","POSTCODE","CITY","COUNTRY","PRIMARY","newPrimaryIndex","addAddress","userBasicNamesForm","userBasicEmployeeForm","originalUserValue","changedUser","_createNewUser","getUserDetail","_generateUserForm","userIDCtrl","userNameCtrl","emailArray","emailFormGroup","EMAIL","addressArray","roleArray","roleFormGroup","userDetail","LOCK","PWD_STATUS","DISPLAY_NAME","GIVEN_NAME","MIDDLE_NAME","FAMILY_NAME","TITLE","DEPARTMENT_ID","COMPANY_ID","GENDER","TIMEZONE","DECIMAL_FORMAT","DATE_FORMAT","userBasic","names","employee","emails","addresses","userPersonalization","userRole","email","address","userRoleRelationship","roleInstance","userEmailFormArray","userEmployeeForm","userPersonalizationForm","userEmailForm","userAddressForm","_composeChangesToUser","userData","_resetUserValue","SYSTEM_ACCESS","userBasicFormGroup","userBasicNamesFormGroup","composeChangedRelation","userBasicEmployeeFormGroup","composeChangedRelationArray","userPersonalizationFormGroup","userRoleFormArray","addEmail","onChangeRoleID","currentRole","oldRole","getRoleDesc","userRoleForm","roleIdx","searchUsers","toBeDeletedUser","toBeDeletedUserGUID","newUser","currentRoute","currentState","nextState","production","enableProdMode","platformBrowser","bootstrapModule","err"],"mappings":";;;;;;;;;;;;;;;;AAAA,eAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,eAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,cAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,WAAC,CAACE,IAAF,GAAS,kBAAT;AACA,gBAAMF,CAAN;AACA,SAJM,CAAP;AAKA;;AACDL,8BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,eAAO,EAAP;AAAY,OAAzD;;AACAR,8BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAA,8BAAwB,CAACS,EAAzB,GAA8B,IAA9B;AACAC,YAAM,CAACC,OAAP,GAAiBX,wBAAjaY,mB;AAOX,qCAAoBC,uBAApB,EAAsE;AAAA;;AAAlD,eAAAA,uBAAA,GAAAA,uBAAA;AAAqD;;;;iBAEzE,oBAAW;AAAA;;AACT,iBAAKC,SAAL,GAAiB,KAAKC,QAAL,CAAcC,GAAd,CAAkB,OAAlB,CAAjB;AACA,iBAAKC,SAAL,GAAiB,KAAKJ,uBAAL,CAA6BK,kBAA7B,CACf,KAAKC,aAAL,CAAmBC,IAAnB,CAAyB,UAAAC,YAAY;AAAA,qBAAIA,YAAY,CAACC,WAAb,KAA6B,MAAI,CAACC,aAAtC;AAAA,aAArC,EAA0FC,UAD3E,CAAjB;AAED;;;iBAED,2BAAkBC,SAAlB,EAAmC;AACjC,mBAAO,KAAKR,SAAL,CAAeG,IAAf,CAAqB,UAAAM,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,KAAkBF,SAAtB;AAAA,aAA7B,CAAP;AACD;;;;;;;yBAjBUb,mB,EAAkB,iI;AAAA,O;;;cAAlBA,mB;AAAkB,uC;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,gB;AAAA,yJ;AAAA;AAAA;ACT/B;;AACE;;AAMA;;AAMA;;AAMA;;AAMF;;;;AAvB0B;;AAAA,8HAAoD,WAApD,EAAoD,aAApD,EAAoD,aAApD,EAAoD,IAApD,EAAoD,UAApD,EAAoD,IAApD;;AAMA;;AAAA,+HAAqD,WAArD,EAAqD,aAArD,EAAqD,aAArD,EAAqD,IAArD,EAAqD,UAArD,EAAqD,IAArD;;AAMA;;AAAA,8HAAoD,WAApD,EAAoD,aAApD,EAAoD,aAApD,EAAoD,IAApD,EAAoD,UAApD,EAAoD,IAApD;;AAMA;;AAAA,+HAAqD,WAArD,EAAqD,aAArD,EAAqD,aAArD,EAAqD,IAArD,EAAqD,UAArD,EAAqD,IAArD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCPbgB,a,GACX,uBAAoBC,aAApB,EACoBC,eADpB,EAEoBC,cAFpB,EAGoBC,YAHpB,EAGgD;AAAA;;AAAA;;AAH5B,aAAAH,aAAA,GAAAA,aAAA;AACA,aAAAC,eAAA,GAAAA,eAAA;AACA,aAAAC,cAAA,GAAAA,cAAA;AACA,aAAAC,YAAA,GAAAA,YAAA;AAClB,aAAKH,aAAL,CAAmBI,eAAnB,CAAmC,uDAAAC,WAAA,aAAnC;AACA,aAAKF,YAAL,CAAkBG,OAAlB,CAA0B,uDAAAD,WAAA,aAA1B;AACA,aAAKF,YAAL,CAAkBI,eAAlB,GAAoCC,SAApC,CAA+C,UAAAC,IAAI,EAAI;AACrD,gBAAI,CAACR,eAAL,CAAqBS,UAArB,CAAiCD,IAAjC;;AACA,gBAAI,CAACP,cAAL,CAAoBS,eAApB,CAAoC,uCAAAC,QAApC,EAA8C,MAAI,CAACX,eAAL,CAAqBY,OAArB,CAA6BC,QAA3E;AACD,SAHD;AAID,O;;;yBAXUf,a,EAAY,uH,EAAA,+H,EAAA,+H,EAAA,2H;AAAA,O;;;cAAZA,a;AAAY,iC;AAAA,gB;AAAA,e;AAAA,sC;AAAA;AAAA;ACbzB;;AACE;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC2CA,UAAMgB,SAAS,GAAW,CACxB;AACEC,YAAI,EAAE,OADR;AACiBC,iBAAS,EAAE,+CAAAC,cAD5B;AAEET,YAAI,EAAE;AACJU,eAAK,EAAE,+BADH;AACoCC,mBAAS,EAAE,SAD/C;AAC0DC,kBAAQ,EAAE,UADpE;AACgFC,kBAAQ,EAAE,SAD1F;AAEJC,sBAAY,EAAE,uDAAAlB,WAAA,aAFV;AAEoCmB,qBAAW,EAAE,uDAAAnB,WAAA,YAFjD;AAE0EoB,cAAI,EAAE,uDAAApB,WAAA;AAFhF;AAFR,OADwB,EAQxB;AAAEW,YAAI,EAAE,SAAR;AAAmBC,iBAAS,EAAE,+CAAAS;AAA9B,OARwB,EASxB;AAAEV,YAAI,EAAE,OAAR;AAAiBC,iBAAS,EAAE,kEAAAU;AAA5B,OATwB,EAUxB;AAAEX,YAAI,EAAE,eAAR;AAAyBC,iBAAS,EAAE,sEAAAW,mBAApC;AAAyDC,qBAAa,EAAE,CAAC,oDAAAC,mBAAD;AAAxE,OAVwB,EAWxB;AAAEd,YAAI,EAAE,MAAR;AAAgBC,iBAAS,EAAE,8DAAAc;AAA3B,OAXwB,EAYxB;AAAEf,YAAI,EAAE,aAAR;AAAuBC,iBAAS,EAAE,kEAAAe,kBAAlC;AAAsDH,qBAAa,EAAE,CAAC,oDAAAC,mBAAD;AAArE,OAZwB,EAaxB;AAAEd,YAAI,EAAE,gBAAR;AAA0BC,iBAAS,EAAE,0FAAAgB;AAArC,OAbwB,EAcxB;AAAEjB,YAAI,EAAE,6BAAR;AAAuCC,iBAAS,EAAE,8FAAAiB,0BAAlD;AAA8EL,qBAAa,EAAE,CAAC,oDAAAC,mBAAD;AAA7F,OAdwB,EAexB;AAAEd,YAAI,EAAE,cAAR;AAAwBC,iBAAS,EAAE,sFAAAkB;AAAnC,OAfwB,EAgBxB;AAAEnB,YAAI,EAAE,2BAAR;AAAqCC,iBAAS,EAAE,2FAAAmB,yBAAhD;AAA2EP,qBAAa,EAAE,CAAC,oDAAAC,mBAAD;AAA1F,OAhBwB,EAiBxB;AAAEd,YAAI,EAAE,aAAR;AAAuBC,iBAAS,EAAE,mFAAAoB;AAAlC,OAjBwB,EAkBxB;AAAErB,YAAI,EAAE,6BAAR;AAAuCC,iBAAS,EAAE,uFAAAqB,yBAAlD;AAA6ET,qBAAa,EAAE,CAAC,oDAAAC,mBAAD;AAA5F,OAlBwB,EAmBxB;AAAEd,YAAI,EAAE,UAAR;AAAoBC,iBAAS,EAAE,2EAAAsB;AAA/B,OAnBwB,EAoBxB;AAAEvB,YAAI,EAAE,uBAAR;AAAiCC,iBAAS,EAAE,+EAAAuB,sBAA5C;AAAoEX,qBAAa,EAAE,CAAC,oDAAAC,mBAAD;AAAnF,OApBwB,EAqBxB;AAAEd,YAAI,EAAE,IAAR;AAAcyB,kBAAU,EAAE,OAA1B;AAAmCC,iBAAS,EAAE;AAA9C,OArBwB,CAA1B;;UAwEaC,U;;;;;yBAAAA,U;AAAS,O;;;cAATA,U;AAAS,oBAFR,4CAAA5C,YAEQ;;;mBALT,CACT;AAAC6C,iBAAO,EAAE,8CAAAC,kBAAV;AAA8BC,kBAAQ,EAAE,qDAAAC;AAAxC,SADS,C;AAEV,kBAXQ,CACP,wDAAAC,aADO,EAEP,+CAAAC,WAFO,EAGP,8CAAAC,YAAA,SAAqBnC,SAArB,EAAgC;AAAEoC,gCAAsB,EAAE;AAA1B,SAAhC,CAHO,EAIP,6CAAAC,WAJO,EAKP,6CAAAC,mBALO,EAMP,iDAAAC,aANO,EAOP,0CAAAC,gBAPO,CAWR;;;;6HAGUZ,U,EAAS;AAAA,yBA9ClB,4CAAA5C,YA8CkB,EA7ClB,kEAAA4B,iBA6CkB,EA5ClB,sEAAAC,mBA4CkB,EA3ClB,gFAAA4B,kBA2CkB,EA1ClB,oGAAAC,4BA0CkB,EAzClB,8EAAAC,iBAyCkB,EAxClB,gFAAAC,kBAwCkB,EAvClB,oFAAAC,oBAuCkB,EAtClB,8DAAA7B,gBAsCkB,EArClB,kEAAAC,kBAqCkB,EApClB,6EAAA6B,kBAoCkB,EAnClB,qFAAAC,sBAmCkB,EAlClB,sFAAA3B,uBAkCkB,EAjClB,2FAAAC,yBAiCkB,EAhClB,4GAAA2B,wBAgCkB,EA/BlB,+DAAAhF,kBA+BkB,EA9BlB,qEAAAiF,sBA8BkB,EA7BlB,6EAAAC,kBA6BkB,EA5BlB,wGAAAC,yBA4BkB,EA3BlB,wGAAAC,yBA2BkB,EA1BlB,0FAAAlC,wBA0BkB,EAzBlB,8FAAAC,0BAyBkB,EAxBlB,0HAAAkC,6BAwBkB,EAvBlB,4HAAAC,8BAuBkB,EAtBlB,2EAAA9B,oBAsBkB,EArBlB,+EAAAC,sBAqBkB,EApBlB,mFAAAH,uBAoBkB,EAnBlB,uFAAAC,yBAmBkB,EAlBlB,4HAAAgC,iCAkBkB,EAjBlB,0HAAAC,gCAiBkB,EAhBlB,oHAAAC,6BAgBkB;AAhBW,oBAG7B,wDAAAxB,aAH6B,EAI7B,+CAAAC,WAJ6B,EAIlB,0DAJkB,EAM7B,6CAAAG,WAN6B,EAO7B,6CAAAC,mBAP6B,EAQ7B,iDAAAC,aAR6B,EAS7B,0CAAAC,gBAT6B;AAgBX,S;AAPF,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnGlB;;AACE;;AACE;;AACE;;AACA;;AACE;;AACQ;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;;;;;AApBM;;AAAA;;AAWA;;AAAA;;AAII;;AAAA;;AAEJ;;AAAA;;;;UCpBKO,uB;AAKX,2CAAc;AAAA;AAAG;;;;iBAKjB,oBAAW;AACT,iBAAKW,oBAAL,GAA4B,KAAKvF,QAAL,CAAcC,GAAd,CAAkB,eAAlB,CAA5B;AACD;;;iBAED,sBAAauF,KAAb,EAA4BC,YAA5B,EAAyD;AACvD,gBAAMC,aAAa,GAAG,UAAUC,OAAV,EAAwBC,MAAxB,EAAwC;AAC5D,qBAAO;AAAA,uBAAMD,OAAO,CAACE,WAAR,CAAoBD,MAApB,CAAN;AAAA,eAAP;AACD,aAFqB,CAEpB,IAFoB,EAEdJ,KAFc,EAEPM,IAFO,CAEF,IAFE,CAAtB;;AAIA,iBAAKC,mBAAL,CAAyBC,2BAAzB,CAAqD,UAArD,EAAiE,gBAAjE,EACEP,YADF,EACgB,IADhB,EACsB,IADtB,EAC4B,IAD5B,EACkCC,aADlC;AAED;;;;;;;yBArBUd,uB;AAAsB,O;;;cAAtBA,uB;AAAsB,2C;AAAA;AAAA;sEAOtB,yCAAAqB,mB,EAAqB,C;;;;;;;;;;;;;;;;;;ADhBlC;;AACE;;AACA;;AACE;;AAAoB;;AAAQ;;AAC5B;;AAA2B;;AAAI;;AAC/B;;AAAoB;;AAAI;;AACxB;;AAAsB;;AAAK;;AAC7B;;AACA;;AAEA;;AACA;;AAsBA;;AACF;;AAEA;;;;AApCgE;;AAW9B;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEA5B;;AAA4C;;AAAI;;;;;;AAChD;;AAAgD;;AAAO;;;;;;AA4CzD;;;;;;AAAkC,gGAAqB,eAArB,EAAqB,oBAArB,EAAqB,UAArB,EAAqB,eAArB;;;;;;AAClC;;;;;;AAAqC,gGAAqB,UAArB,EAAqB,gBAArB,EAAqB,UAArB,EAAqB,eAArB;;;;;;AACrC;;;;;;AAAsC,gGAAqB,UAArB,EAAqB,eAArB;;;;;;AACtC;;;;;;AAAkC,gGAAqB,eAArB,EAAqB,oBAArB,EAAqB,eAArB,EAAqB,KAArB;;;;;;;;AAnCtC;;AACE;;AACE;;AAMA;;AAMF;;AAEA;;AACE;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,yCAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAM;;AACjH;;AACA;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,yCAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAa;;AACxH;;AACA;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,0CAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAU;;AACrH;;AACA;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,0CAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAK;;AAChH;;AACF;;AAEA;;AACE;;AACA;;AACA;;AACA;;AACF;;AACF;;;;;;AAlC4B;;AAAA,2HAAgD,WAAhD,EAAgD,eAAhD,EAAgD,UAAhD,EAAgD,iBAAhD,EAAgD,aAAhD,EAAgD,IAAhD;;AAMA;;AAAA,yHAA8C,WAA9C,EAA8C,eAA9C,EAA8C,UAA9C,EAA8C,eAA9C,EAA8C,aAA9C,EAA8C,IAA9C;;AASF;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIN;;AAAA;;AACC;;AAAA;;AACG;;AAAA;;AACC;;AAAA;;AACJ;;AAAA;;;;UC1CRnD,mB;AAYX,qCAAoBoD,EAApB,EACoBC,KADpB,EAEoBC,MAFpB,EAGoBC,aAHpB,EAIoBtF,eAJpB,EAKoBjB,uBALpB,EAMoBgB,aANpB,EAOoBwF,eAPpB,EAQoBtF,cARpB,EAQoD;AAAA;;AARhC,eAAAkF,EAAA,GAAAA,EAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAtF,eAAA,GAAAA,eAAA;AACA,eAAAjB,uBAAA,GAAAA,uBAAA;AACA,eAAAgB,aAAA,GAAAA,aAAA;AACA,eAAAwF,eAAA,GAAAA,eAAA;AACA,eAAAtF,cAAA,GAAAA,cAAA;AAhBpB,eAAAuF,QAAA,GAAW,IAAX;AACA,eAAAC,SAAA,GAAY,KAAZ;AAGA,eAAAC,aAAA,GAAgB,EAAhB;AACA,eAAAC,YAAA,GAAe,EAAf;AACA,eAAAC,QAAA,GAAW,CAAX;AAWC;;;;iBAED,oBAAW;AAAA;;AACT,iBAAKR,KAAL,CAAWS,QAAX,CAAoBC,IAApB,CACE,gDAAAC,SAAA,EAAU,UAACC,MAAD,EAAsB;AAC9B,oBAAI,CAACC,MAAL,GAAcD,MAAM,CAAC9G,GAAP,CAAW,QAAX,CAAd;;AACA,kBAAI,MAAI,CAAC+G,MAAL,KAAgB,KAApB,EAA2B;AACzB,sBAAI,CAACR,SAAL,GAAiB,IAAjB;AACA,uBAAO,sCAAAS,QAAA,EAAS,CACd,MAAI,CAACnG,aAAL,CAAmBoG,uBAAnB,CAA2C,KAA3C,CADc,EAEd,MAAI,CAACC,gBAAL,EAFc,CAAT,CAAP;AAID,eAND,MAMO;AACL,sBAAI,CAACX,SAAL,GAAiB,KAAjB;AACA,uBAAO,sCAAAS,QAAA,EAAS,CACd,MAAI,CAACnG,aAAL,CAAmBoG,uBAAnB,CAA2C,KAA3C,CADc,EAEd,MAAI,CAACnG,eAAL,CAAqBqG,YAArB,CAAkCL,MAAM,CAAC9G,GAAP,CAAW,OAAX,CAAlC,CAFc,CAAT,CAAP;AAID;AACF,aAfD,CADF,EAiBEqB,SAjBF,CAiBa,UAAAC,IAAI,EAAI;AACnB,oBAAI,CAACnB,aAAL,GAAqBmB,IAAI,CAAC,CAAD,CAAzB;AACA,oBAAI,CAACrB,SAAL,GAAiB,MAAI,CAACJ,uBAAL,CAA6BK,kBAA7B,CACf,MAAI,CAACC,aAAL,CAAmBC,IAAnB,CAAyB,UAAAC,YAAY;AAAA,uBAAIA,YAAY,CAACC,WAAb,KAA6B,KAAjC;AAAA,eAArC,EAA6EE,UAD9D,CAAjB;;AAEA,kBAAI,eAAec,IAAI,CAAC,CAAD,CAAvB,EAA4B;AAC1B,sBAAI,CAAC8F,YAAL,GAAoB9F,IAAI,CAAC,CAAD,CAAJ,CAAQ,eAAR,CAApB;;AACA,sBAAI,CAAC+F,iBAAL,CAA+B/F,IAAI,CAAC,CAAD,CAAnC;;AACA,oBAAI,MAAI,CAACiF,SAAL,IAAkB,MAAI,CAACQ,MAAL,KAAgB,QAAtC,EAAgD;AAC9C,wBAAI,CAACO,gBAAL;AACD,iBAFD,MAEO;AACL,wBAAI,CAACC,mBAAL;AACD;AACF,eARD,MAQO;AACL,oBAAMC,aAAa,GAAclG,IAAI,CAAC,CAAD,CAArC;AACAkG,6BAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,yBAAI,MAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAA1B;AACD;AACF,aAjCD;AAkCD;;;iBAED,uBAAW;AACT,iBAAKvB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,MAAD,CAArB;AACD;;;iBAED,2BAAkBnH,SAAlB,EAAmC;AACjC,mBAAO,KAAKR,SAAL,CAAeG,IAAf,CAAqB,UAAAM,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,KAAkBF,SAAtB;AAAA,aAA7B,CAAP;AACD;;;iBAED,wBAAeoH,UAAf,EAAiC;AAC/B,iBAAKnB,QAAL,GAAgBmB,UAAhB;AACD;;;iBAED,6BAAiB;AAAA;;AACf,gBAAI,KAAKvB,QAAT,EAAoB;AAClB,mBAAKgB,gBAAL;AACD,aAFD,MAEO;AACL,kBAAI,KAAKvH,QAAL,CAAc+H,KAAlB,EAAyB;AACvB,qBAAK1B,aAAL,CAAmB2B,OAAnB,CAA2B,kBAA3B,EAA+C1G,SAA/C,CAAyD,UAAA0G,OAAO,EAAI;AAClE,sBAAIA,OAAJ,EAAa;AACX,2BAAI,CAAChI,QAAL,CAAciI,KAAd,CAAoB,OAAI,CAACxB,aAAzB;;AACA,2BAAI,CAACe,mBAAL;AACD;AACF,iBALD;AAMD,eAPD,MAOO;AACL,qBAAKA,mBAAL;AACD;AACF;;AACD,iBAAKxG,cAAL,CAAoBkH,aAApB;AACD;;;iBAED,+BAAmB;AACjB,iBAAK3B,QAAL,GAAgB,IAAhB;;AACA,iBAAK4B,iBAAL;;AAEA,gBAAMC,SAAS,GAAG,KAAKpI,QAAL,CAAcC,GAAd,CAAkB,QAAlB,CAAlB;AACAmI,qBAAS,CAACC,oBAAV;AAEA,gBAAMC,gBAAgB,GAAG,KAAKtI,QAAL,CAAcC,GAAd,CAAkB,eAAlB,CAAzB;AACA,gBAAIsI,SAAS,GAAGD,gBAAgB,CAACE,MAAjB,GAA0B,CAA1C;;AACA,mBAAOD,SAAS,IAAI,CAApB,EAAuB;AACrB,kBAAME,gBAAgB,GAAGH,gBAAgB,CAACI,EAAjB,CAAoBH,SAApB,CAAzB;;AACA,kBAAIE,gBAAgB,CAACE,OAAjB,IAA4B,CAACF,gBAAgB,CAACG,KAAjB,CAAuBC,EAAxD,EAA4D;AAC1DP,gCAAgB,CAACQ,QAAjB,CAA0BP,SAA1B;AACD;;AACDA,uBAAS;AACV;;AAED,iBAAKvI,QAAL,CAAc+I,cAAd,GAjBiB,CAkBjB;;AACAC,kBAAM,CAACC,OAAP,CAAeC,YAAf,CAA4B,EAA5B,EAAgC,EAAhC,kBAA6Cd,SAAS,CAACQ,KAAvD;AACD;;;iBAED,4BAAgB;AACd,iBAAKrC,QAAL,GAAgB,KAAhB;;AACA,iBAAK4B,iBAAL;;AAEA,gBAAMC,SAAS,GAAG,KAAKpI,QAAL,CAAcC,GAAd,CAAkB,QAAlB,CAAlB;;AACA,gBAAI,KAAKuG,SAAT,EAAoB;AAClB4B,uBAAS,CAACe,kBAAV,CACE,mDAAAC,oBAAA,EAAqB,KAAKrI,eAA1B,EAA2C,KAAKC,cAAhD,CADF;AAED,aARa,CAUd;;;AACA,gBAAI,KAAKgG,MAAL,KAAgB,SAApB,EAA+B;AAAC,mBAAKA,MAAL,GAAc,QAAd;AAAyB;;AACzDgC,kBAAM,CAACC,OAAP,CAAeC,YAAf,CAA4B,EAA5B,EAAgC,EAAhC,EAAoC,gBAASd,SAAS,CAACQ,KAAnB,gBAAqC,KAAK5B,MAA9E;AACD;;;iBAED,4BAAgB;AACd,gBAAMqC,SAAS,GAAG,IAAI,0CAAAC,MAAJ,EAAlB;AACAD,qBAAS,CAACE,SAAV,GAAsB,KAAtB;AACAF,qBAAS,CAAC,KAAD,CAAT,GAAmB,CACjB;AAAEG,oBAAM,EAAE,EAAV;AAAcC,kBAAI,EAAE,EAApB;AAAwBC,wBAAU,EAAE,EAApC;AAAwCC,yBAAW,EAAE,EAArD;AAAyDC,wBAAU,EAAE,EAArE;AAAyEC,yBAAW,EAAE,EAAtF;AAA0FC,wBAAU,EAAE,EAAtG;AAA0GC,yBAAW,EAAE;AAAvH,aADiB,CAAnB;AAGAV,qBAAS,CAAC,eAAD,CAAT,GAA6B,EAA7B;AACA,mBAAO,uCAAAW,EAAA,EAAGX,SAAH,CAAP;AACD;;;iBAED,2BAAkB9H,IAAlB,EAA8B;AAAA;;AAC5B,iBAAKvB,QAAL,GAAgB,KAAKkG,EAAL,CAAQ+D,KAAR,CAAc;AAC5BT,oBAAM,EAAE,CAACjI,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,QAAf,CAAD,EAA2B,CAAC,6CAAA2I,UAAA,SAAD,CAA3B,CADoB;AAE5BT,kBAAI,EAAE,CAAClI,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,MAAf,CAAD,CAFsB;AAG5B4I,oBAAM,EAAE,KAAKjE,EAAL,CAAQ+D,KAAR,CAAc;AACpBP,0BAAU,EAAE,CAACnI,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,YAAf,CAAD,CADQ;AAEpBoI,2BAAW,EAAE,CAACpI,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,aAAf,CAAD;AAFO,eAAd,CAHoB;AAO5B6I,mBAAK,EAAE,KAAKlE,EAAL,CAAQ+D,KAAR,CAAc;AACnBL,0BAAU,EAAE,CAACrI,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,YAAf,CAAD,CADO;AAEnBsI,2BAAW,EAAE,CAACtI,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,aAAf,CAAD,CAFM;AAGnBuI,0BAAU,EAAE,CAACvI,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,YAAf,CAAD,CAHO;AAInBwI,2BAAW,EAAE,CAACxI,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,aAAf,CAAD;AAJM,eAAd;AAPqB,aAAd,CAAhB;;AAcA,gBAAM8I,kBAAkB,GAAG,KAAKC,mBAAL,CAA0B/I,IAAI,CAAC,eAAD,CAA9B,CAA3B;;AACA,iBAAKvB,QAAL,CAAcuK,UAAd,CAAyB,eAAzB,EACE,KAAKrE,EAAL,CAAQsE,KAAR,CAAcH,kBAAkB,CAACI,aAAnB,CAAiCC,GAAjC,CAAsC,UAAAC,WAAW;AAAA,qBAAI,OAAI,CAACzE,EAAL,CAAQ+D,KAAR,CAAeU,WAAf,CAAJ;AAAA,aAAjD,CAAd,CADF;AAEA,iBAAK3K,QAAL,CAAcuK,UAAd,CAAyB,gBAAzB,EACE,KAAKrE,EAAL,CAAQsE,KAAR,CAAcH,kBAAkB,CAACO,cAAnB,CAAkCF,GAAlC,CAAuC,UAAAG,aAAa;AAAA,qBAAI,OAAI,CAAC3E,EAAL,CAAQ+D,KAAR,CAAeY,aAAf,CAAJ;AAAA,aAApD,CAAd,CADF;AAEA,iBAAKpE,aAAL,GAAqB,KAAKzG,QAAL,CAAc8K,WAAd,EAArB;AACD;;;iBAED,6BAAqBC,aAArB,EAAkD;AAAA;;AAChD,gBAAMV,kBAAkB,GAAG;AACzBI,2BAAa,EAAE,EADU;AAEzBG,4BAAc,EAAE;AAFS,aAA3B;;AAIA,gBAAI,CAACG,aAAL,EAAoB;AAAE,qBAAOV,kBAAP;AAA4B;;AAClDU,yBAAa,CAACrD,OAAd,CAAuB,UAAAsD,YAAY,EAAI;AACrC,sBAAQA,YAAY,CAACC,eAArB;AACE,qBAAK,iBAAL;AACEC,oCAAkB,CAACF,YAAD,CAAlB;;AACA;;AACF,qBAAK,aAAL;AACEX,oCAAkB,CAACO,cAAnB,GAAoC,OAAI,CAAC7J,eAAL,CAAqBoK,sBAArB,CAA4CH,YAA5C,CAApC;AACA;;AACF,wBAPF,CAQE;;AARF;AAUD,aAXD;AAYA,mBAAOX,kBAAP;;AAEA,qBAASa,kBAAT,CAA6BF,YAA7B,EAAuD;AACrDA,0BAAY,CAACI,MAAb,CAAoB1D,OAApB,CAA6B,UAAAkB,KAAK,EAAI;AACpCyB,kCAAkB,CAACI,aAAnB,CAAiCY,IAAjC,CAAsC;AACpCC,4CAA0B,EAAE1C,KAAK,CAAC,4BAAD,CADG;AAEpC2C,uBAAK,EAAE3C,KAAK,CAAC,OAAD,CAFwB;AAGpC4C,4CAA0B,EAAE5C,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,eAA9B,CAHQ;AAIpCC,oBAAE,EAAED,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,gBAA9B,EAAgD,CAAhD,EAAmD,IAAnD,CAJgC;AAKpCa,sBAAI,EAAEb,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,gBAA9B,EAAgD,CAAhD,EAAmD,MAAnD,CAL8B;AAMpC6C,sBAAI,EAAE7C,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,gBAA9B,EAAgD,CAAhD,EAAmD,MAAnD;AAN8B,iBAAtC;AAQD,eATD;AAUD;;AAED,qBAAS8C,oBAAT,CAA+BV,YAA/B,EAAyD;AACvDA,0BAAY,CAACI,MAAb,CAAoB1D,OAApB,CAA6B,UAAAkB,KAAK,EAAI;AACpC,oBAAM+C,aAAa,GAAG/C,KAAK,CAAC,YAAD,CAAL,GACLgD,IAAI,CAACC,KAAL,CAAWjD,KAAK,CAAC,YAAD,CAAhB,CADK,GAC6B,IADnD;AAEA,oBAAMkD,MAAM,GAAGH,aAAa,GAC1BI,MAAM,CAACX,MAAP,CAAcO,aAAa,CAACK,cAA5B,EAA4CC,SAA5C,CAAuD,UAAAC,SAAS;AAAA,yBAAI,CAACA,SAAL;AAAA,iBAAhE,MAAqF,CAAC,CAAtF,GACE,QADF,GACa,OAFa,GAEH,KAFzB;AAGA7B,kCAAkB,CAACO,cAAnB,CAAkCS,IAAlC,CAAuC;AACrCc,yBAAO,EAAE,EAD4B;AAErCC,2BAAS,EAAE,KAF0B;AAGrCC,yBAAO,EAAEzD,KAAK,CAAC,4BAAD,CAHuB;AAIrC0D,wBAAM,EAAER,MAJ6B;AAKrCR,4CAA0B,EAAE1C,KAAK,CAAC,4BAAD,CALI;AAMrC2D,2CAAyB,EAAE3D,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,eAA9B,CANU;AAOrC4D,4BAAU,EAAE5D,KAAK,CAAC,YAAD,CAPoB;AAQrC6D,0BAAQ,EAAE7D,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,YAA9B,EAA4C,CAA5C,EAA+C,UAA/C,CAR2B;AASrC8D,sBAAI,EAAE9D,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,YAA9B,EAA4C,CAA5C,EAA+C,MAA/C,CAT+B;AAUrC+D,0BAAQ,EAAE,QAV2B;AAWrCC,4BAAU,EAAE,EAXyB;AAYrCC,8BAAY,EAAE;AAZuB,iBAAvC;AAeA,oBAAMC,gBAAgB,GAAGlE,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,eAA9B,EAA+C,CAA/C,CAAzB;AACAkE,gCAAgB,CAAC1B,MAAjB,CAAwB1D,OAAxB,CAAiC,UAAAqF,MAAM,EAAI;AACzC,sBAAMC,aAAa,GAAGD,MAAM,CAAC,mBAAD,CAAN,CAA4B,CAA5B,EAA+B,WAA/B,EAA4C,CAA5C,EAA+C,YAA/C,CAAtB;AACA1C,oCAAkB,CAACO,cAAnB,CAAkCS,IAAlC,CAAuC;AACrCc,2BAAO,EAAE,EAD4B;AAErCC,6BAAS,EAAE,KAF0B;AAGrCC,2BAAO,EAAEzD,KAAK,CAAC,4BAAD,CAHuB;AAIrC0D,0BAAM,EAAEX,aAAa,CAACK,cAAd,CAA6BgB,aAA7B,IACNrB,aAAa,CAACK,cAAd,CAA6BgB,aAA7B,EAA4CxE,MAA5C,GAAqD,CAArD,GAAyD,OAAzD,GAAmE,KAD7D,GACqE,KALxC;AAMrC8C,8CAA0B,EAAE1C,KAAK,CAAC,4BAAD,CANI;AAOrC2D,6CAAyB,EAAE,EAPU;AAQrCC,8BAAU,EAAEb,aAAa,IAAIA,aAAa,CAACK,cAAd,CAA6BgB,aAA7B,CAAjB,IACPpB,IAAI,CAACqB,SAAL,CAAetB,aAAa,CAACK,cAAd,CAA6BgB,aAA7B,CAAf,EAA4D,IAA5D,EAAkE,GAAlE,CATgC;AAUrCP,4BAAQ,EAAE7D,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,YAA9B,EAA4C,CAA5C,EAA+C,UAA/C,CAV2B;AAWrC8D,wBAAI,EAAE,EAX+B;AAYrCC,4BAAQ,EAAE,OAZ2B;AAarCC,8BAAU,EAAEI,aAbyB;AAcrCH,gCAAY,EAAEE,MAAM,CAAC,mBAAD,CAAN,CAA4B,CAA5B,EAA+B,WAA/B,EAA4C,CAA5C,EAA+C,cAA/C;AAduB,mBAAvC;AAgBD,iBAlBD;AAmBD,eAzCD;AA0CD;AACF;;;iBAED,qBAAYxL,IAAZ,EAAwB;AACtB,iBAAKkF,aAAL,GAAqB;AACnB+C,oBAAM,EAAEjI,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,QAAf,CADW;AAEnBkI,kBAAI,EAAElI,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,MAAf,CAFa;AAGnB4I,oBAAM,EAAE;AACNT,0BAAU,EAAEnI,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,YAAf,CADN;AAENoI,2BAAW,EAAEpI,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,aAAf;AAFP,eAHW;AAOnB6I,mBAAK,EAAE;AACLR,0BAAU,EAAErI,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,YAAf,CADP;AAELsI,2BAAW,EAAEtI,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,aAAf,CAFR;AAGLuI,0BAAU,EAAEvI,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,YAAf,CAHP;AAILwI,2BAAW,EAAExI,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,aAAf;AAJR;AAPY,aAArB;;AAcA,gBAAM8I,kBAAkB,GAAG,KAAKC,mBAAL,CAA0B/I,IAAI,CAAC,eAAD,CAA9B,CAA3B;;AACA,iBAAKkF,aAAL,CAAmB,eAAnB,IAAsC4D,kBAAkB,CAACI,aAAzD;AACA,iBAAKhE,aAAL,CAAmB,gBAAnB,IAAuC4D,kBAAkB,CAACO,cAA1D;AACA,iBAAK5K,QAAL,CAAciI,KAAd,CAAoB,KAAKxB,aAAzB;AACD;;;iBAED,6BAAoB;AAClB,gBAAI,KAAKF,QAAT,EAAmB;AACjB,mBAAKvG,QAAL,CAAcC,GAAd,CAAkB,oBAAlB,EAAwCiN,OAAxC;AACD,aAFD,MAEO;AACL,mBAAKlN,QAAL,CAAcC,GAAd,CAAkB,oBAAlB,EAAwCkN,MAAxC;AACD;AACF;;;iBAED,gBAAO;AAAA;;AACL,iBAAKnM,cAAL,CAAoBkH,aAApB;;AACA,gBAAI,KAAKkF,eAAL,EAAJ,EAA4B;AAC1B,mBAAKrM,eAAL,CAAqBsM,IAArB,CAAkC,KAAK3G,YAAvC,EAAqDpF,SAArD,CAAgE,UAAAC,IAAI,EAAI;AACtE,uBAAI,CAACmF,YAAL,GAAoB,EAApB;;AACA,oBAAI,mBAAmBnF,IAAvB,EAA6B;AAC3B,sBAAM+L,KAAK,GAAG/L,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,QAAf,CAAd;AACA,yBAAI,CAAC8F,YAAL,GAAoB9F,IAAI,CAAC,eAAD,CAAxB;AACA,yBAAI,CAACiF,SAAL,GAAiB,KAAjB;;AACA,yBAAI,CAACzF,eAAL,CAAqBqG,YAArB,CAAkCkG,KAAlC,EAAyChM,SAAzC,CAAmD,UAAAiM,QAAQ,EAAI;AAC7D,wBAAI,eAAeA,QAAnB,EAA6B;AAC3B,6BAAI,CAAC/F,mBAAL;;AACA,6BAAI,CAACgG,WAAL,CAAyBD,QAAzB;AACD,qBAHD,MAGO;AACL,0BAAM9F,aAAa,GAAc8F,QAAjC;AACA9F,mCAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,+BAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,uBAA1B;AACD;AACF,mBARD;;AASA,yBAAI,CAAC3G,cAAL,CAAoByM,aAApB,CAAkC,KAAlC,EAAyC,OAAzC,EAAkD,GAAlD,EAAuDH,KAAvD;AACD,iBAdD,MAcO;AACL,sBAAM7F,aAAa,GAAclG,IAAjC;AACAkG,+BAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,2BAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,mBAA1B;AACD;AACF,eApBD;AAqBD;AACF;;;iBAED,2BAAkB;AAChB,gBAAI,KAAK3H,QAAL,CAAc2I,OAAlB,EAA2B;AACzB,mBAAK3H,cAAL,CAAoByM,aAApB,CAAkC,YAAlC,EAAgD,SAAhD,EAA2D,GAA3D;AACA,qBAAO,KAAP;AACD;;AAED,gBAAI,KAAKzN,QAAL,CAAc+H,KAAd,KAAwB,KAA5B,EAAmC;AACjC,mBAAK/G,cAAL,CAAoByM,aAApB,CAAkC,SAAlC,EAA6C,WAA7C,EAA0D,GAA1D;AACA,qBAAO,KAAP;AACD;;AAED,iBAAK/G,YAAL,CAAkB,WAAlB,IAAiC,KAAjC;AACA,iBAAKA,YAAL,CAAkB,eAAlB,IAAqC,KAAKW,YAA1C;;AAEA,gBAAI,KAAKb,SAAT,EAAoB;AAClB,mBAAKE,YAAL,CAAkB,KAAlB,IAA2B;AACzBM,sBAAM,EAAE,KADiB;AACVwC,sBAAM,EAAE,KAAKxJ,QAAL,CAAcC,GAAd,CAAkB,QAAlB,EAA4B2I,KAD1B;AAEzBgB,0BAAU,EAAE,KAAK7I,eAAL,CAAqBY,OAArB,CAA6B+L,OAFhB;AAEyB7D,2BAAW,EAAE,KAAK9I,eAAL,CAAqB4M,WAF3D;AAGzB7D,0BAAU,EAAE,KAAK/I,eAAL,CAAqBY,OAArB,CAA6B+L,OAHhB;AAGyB3D,2BAAW,EAAE,KAAKhJ,eAAL,CAAqB4M;AAH3D,eAA3B;AAID,aALD,MAKO;AACL,mBAAKjH,YAAL,CAAkB,KAAlB,IAA2B;AACzBM,sBAAM,EAAE,QADiB;AACP8C,0BAAU,EAAE,KAAK/I,eAAL,CAAqBY,OAArB,CAA6B+L,OADlC;AAC2C3D,2BAAW,EAAE,KAAKhJ,eAAL,CAAqB4M;AAD7E,eAA3B;AAED;;AAED,gBAAI,KAAK3N,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAA0B8H,KAA9B,EAAqC;AACnC,mBAAKrB,YAAL,CAAkB,KAAlB,EAAyB,MAAzB,IAAmC,KAAK1G,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAA0B2I,KAA7D;AACD;;AACD,gBAAI,KAAK5I,QAAL,CAAcC,GAAd,CAAkB,mBAAlB,EAAuC8H,KAA3C,EAAkD;AAChD,mBAAKrB,YAAL,CAAkB,KAAlB,EAAyB,YAAzB,IAAyC,KAAK1G,QAAL,CAAcC,GAAd,CAAkB,mBAAlB,EAAuC2I,KAAhF;AACD;;AACD,gBAAI,KAAK5I,QAAL,CAAcC,GAAd,CAAkB,oBAAlB,EAAwC8H,KAA5C,EAAmD;AACjD,mBAAKrB,YAAL,CAAkB,KAAlB,EAAyB,aAAzB,IAA0C,KAAK1G,QAAL,CAAcC,GAAd,CAAkB,oBAAlB,EAAwC2I,KAAlF;AACD;;AAED,gBAAMgF,mBAAmB,GAAG,KAAK5N,QAAL,CAAcC,GAAd,CAAkB,gBAAlB,CAA5B;AACA,gBAAM+K,YAAY,GAAG,KAAKjK,eAAL,CAAqB8M,kBAArB,CAAwCD,mBAAxC,EACnB,KAAKnH,aAAL,CAAmB,gBAAnB,CADmB,EACmB,aADnB,CAArB;;AAEA,gBAAIuE,YAAJ,EAAkB;AAAE,mBAAKtE,YAAL,CAAkB,eAAlB,IAAqC,CAACsE,YAAD,CAArC;AAAsD;;AAE1E,mBAAO,IAAP;AACD;;;iBAED,yBAAa;AACX,gBAAI,KAAKxE,SAAL,IAAmB,KAAKxG,QAAL,IAAiB,KAAKA,QAAL,CAAc+H,KAAtD,EAA8D;AAC5D,qBAAO,KAAK1B,aAAL,CAAmB2B,OAAnB,CAA2B,kBAA3B,CAAP;AACD,aAFD,MAEO;AACL,qBAAO,IAAP;AACD;AACF;;;;;;;yBAvVUlF,mB,EAAkB,yH,EAAA,6H,EAAA,qH,EAAA,2H,EAAA,+H,EAAA,kI,EAAA,wH,EAAA,0H,EAAA,gI;AAAA,O;;;cAAlBA,mB;AAAkB,uC;AAAA,iB;AAAA,e;AAAA,i5C;AAAA;AAAA;ADjB/B;;AACE;;AACE;;AAAyC;;AAAiE;;AAC5G;;AAEA;;AACE;;AACQ;AAAA,qBAAS,IAAAgL,WAAA,EAAT;AAAsB,aAAtB;;AACN;;AAA8B;;AAAO;;AACvC;;AACA;;AAAwG;AAAA,qBAAS,IAAAC,iBAAA,EAAT;AAA4B,aAA5B;;AACtG;;AACA;;AACF;;AACA;;AAAyF;AAAA,qBAAS,IAAAV,IAAA,EAAT;AAAe,aAAf;;AACvF;;AAA2B;;AAAI;;AACjC;;AACF;;AACF;;AAEA;;AACE;;AACF;;AAEA;;;;AAtB6C;;AAAA;;AAShC;;AAAA;;AACA;;AAAA;;AAEiG;;AAAA;;AAUxG;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEfO1I,mB;AAOX,qCAAoB7E,uBAApB,EAAsE;AAAA;;AAAlD,eAAAA,uBAAA,GAAAA,uBAAA;AAAqD;;;;iBAEzE,oBAAW;AACT,iBAAKkO,aAAL,GAAqB,KAAKhO,QAAL,CAAcC,GAAd,CAAkB,QAAlB,CAArB;AACA,iBAAKC,SAAL,GAAiB,KAAKJ,uBAAL,CAA6BK,kBAA7B,CACf,KAAKC,aAAL,CAAmBC,IAAnB,CAAyB,UAAAC,YAAY;AAAA,qBAAIA,YAAY,CAACC,WAAb,KAA6B,KAAjC;AAAA,aAArC,EAA6EE,UAD9D,CAAjB;AAED;;;iBAED,2BAAkBC,SAAlB,EAAmC;AACjC,mBAAO,KAAKR,SAAL,CAAeG,IAAf,CAAqB,UAAAM,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,KAAkBF,SAAtB;AAAA,aAA7B,CAAP;AACD;;;;;;;yBAjBUiE,mB,EAAkB,iI;AAAA,O;;;cAAlBA,mB;AAAkB,uC;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,yJ;AAAA;AAAA;ACT/B;;AACE;;AAMA;;AAMF;;;;AAX0B;;AAAA,8HAAoD,WAApD,EAAoD,iBAApD,EAAoD,aAApD,EAAoD,IAApD,EAAoD,UAApD,EAAoD,YAApD;;AAMA;;AAAA,+HAAqD,WAArD,EAAqD,iBAArD,EAAqD,aAArD,EAAqD,IAArD,EAAqD,UAArD,EAAqD,YAArD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiCtB;;AACE;;AAAI;;AAA6D;;AAAc;;AAAI;;AACnF;;AAAI;;AAAY;;AAChB;;AAAI;;AAAkB;;AACtB;;AAAK;;AAAuB;AAAA;AAAA;AAAA;;AAAvB;;AAA8D;;AAGnE;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAmB;;AACvB;;AACE;;AAAsE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpE;;AACF;;AACA;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClE;;AACF;;AACA;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClE;;AACF;;AACF;;AACF;;;;;;AAnBS;;AAAA;;AAA0D;;AAAA;;AAC7D;;AAAA;;AACA;;AAAA;;AACwB;;AAAA;;AAGxB;;AAAA;;AACA;;AAAA;;;;;;;;;;UCtCG9B,iB;AASX,mCAAoB9B,eAApB,EACoBC,cADpB,EAEoBoF,MAFpB,EAEoC;AAAA;;AAFhB,eAAArF,eAAA,GAAAA,eAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAoF,MAAA,GAAAA,MAAA;AAPpB,eAAA6H,wBAAA,GAA2B,KAA3B;AAOuC;;;;eAJvC,eAAkC;AAAC,mBAAO,KAAKA,wBAAL,GAAgC,OAAhC,GAA0C,MAAjD;AAA0D;;;iBAM7F,oBAAW,CACV;;;iBAED,kBAAS;AAAA;;AACP,iBAAKjN,cAAL,CAAoBkH,aAApB;AACA,iBAAKgG,IAAL,GAAY,EAAZ;AACA,iBAAKZ,KAAL,GAAa,KAAKA,KAAL,GAAa,KAAKA,KAAL,CAAWa,IAAX,EAAb,GAAiC,EAA9C;AACA,iBAAKC,OAAL,GAAe,KAAKA,OAAL,GAAe,KAAKA,OAAL,CAAaD,IAAb,EAAf,GAAqC,EAApD;AACA,iBAAKpN,eAAL,CAAqBsN,UAArB,CAAgC,KAAKf,KAArC,EAA4C,KAAKc,OAAjD,EAA0D9M,SAA1D,CACE,UAAAC,IAAI,EAAI;AACN,kBAAI,CAACA,IAAI,CAAC,CAAD,CAAT,EAAc;AACZ,uBAAI,CAACP,cAAL,CAAoByM,aAApB,CAAkC,SAAlC,EAA6C,YAA7C,EAA2D,gDAAAa,WAAA,QAA3D;AACD,eAFD,MAEO,IAAI/M,IAAI,CAAC,CAAD,CAAJ,CAAQ,QAAR,CAAJ,EAAuB;AAC5B,oBAAMgN,QAAQ,GAAchN,IAA5B;AACAgN,wBAAQ,CAAC7G,OAAT,CAAkB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAArB;AACD,eAHM,MAGA;AACL,uBAAI,CAACuG,IAAL,GAAuB3M,IAAvB;AACD;AACF,aAVH;AAYD;;;iBAED,qBAAYiN,MAAZ,EAAkB;AAChB,gBAAIA,MAAM,CAACC,OAAP,KAAmB,EAAvB,EAA4B;AAC1B,mBAAKC,MAAL;AACD;AACF;;;iBAED,gBAAG;AACD,iBAAKtI,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,MAAD,EAAS,GAAT,EAAc;AAACb,oBAAM,EAAE;AAAT,aAAd,CAArB;AACD;;;iBAED,iBAAQsG,KAAR,EAAqB;AACnB,iBAAKlH,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,MAAD,EAASyF,KAAT,EAAgB;AAACtG,oBAAM,EAAE;AAAT,aAAhB,CAArB;AACD;;;iBAED,gBAAOsG,KAAP,EAAoB;AAClB,iBAAKlH,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,MAAD,EAASyF,KAAT,EAAgB;AAACtG,oBAAM,EAAE;AAAT,aAAhB,CAArB;AACD;;;iBAED,iBAAOsG,KAAP,EAAoB;AAClB,iBAAKqB,mBAAL,GAA2BrB,KAA3B;AACA,iBAAKW,wBAAL,GAAgC,IAAhC;AACD;;;iBAED,0BAAc;AACZ,iBAAKA,wBAAL,GAAgC,KAAhC;AACD;;;iBAED,2BAAe;AAAA;;AACb,gBAAMW,uBAAuB,GAAG,KAAKV,IAAL,CAAU7N,IAAV,CAC9B,UAAAwO,GAAG;AAAA,qBAAIA,GAAG,CAACrF,MAAJ,KAAe,OAAI,CAACmF,mBAAxB;AAAA,aAD2B,EACkBG,aADlD;AAEA,iBAAK/N,eAAL,WAA4B6N,uBAA5B,EAAqDtN,SAArD,CAAgE,UAAAyN,QAAQ,EAAI;AAC1E,qBAAI,CAACd,wBAAL,GAAgC,KAAhC;;AACA,kBAAIc,QAAJ,EAAc;AACZ,oBAAMR,QAAQ,GAAcQ,QAA5B;AACAR,wBAAQ,CAAC7G,OAAT,CAAkB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAArB;AACD,eAHD,MAGO;AACL,uBAAI,CAAC+G,MAAL;AACD;AACF,aARD;AASD;;;;;;;yBA1EU7L,iB,EAAgB,+H,EAAA,+H,EAAA,oH;AAAA,O;;;cAAhBA,iB;AAAgB,qC;AAAA,iB;AAAA,e;AAAA,w4D;AAAA;AAAA;ADX7B;;AACE;;AACE;;AACE;;AAAoD;;AAAO;;AAC3D;;AAAiC;AAAA;AAAA,eAAmB,OAAnB,EAAmB;AAAA,qBACU,IAAAmM,WAAA,QADV;AAC6B,aADhD;;AAAjC;;AAEF;;AACA;;AACE;;AAAsD;;AAAS;;AAC/D;;AAAqC;AAAA;AAAA,eAAqB,OAArB,EAAqB;AAAA,qBACI,IAAAA,WAAA,QADJ;AACuB,aAD5C;;AAArC;;AAEF;;AACF;;AAEA;;AACE;;AAAkF;AAAA,qBAAS,IAAAN,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAAM;;AAC7G;;AACF;;AAEA;;AACE;;AACA;;AACE;;AAA4D;AAAA,qBAAS,YAAT;AAAc,aAAd;;AAC1D;;AAAkC;;AAAG;;AACzC;;AACA;;AACE;;AACA;;AACE;;AAAgB;;AAAE;;AAClB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAS;;AAGzB;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAM;;AACxB;;AACA;;AAEA;;AACA;;AAqBA;;AACF;;AAEA;;AAEE;;AACE;;AACE;;AACE;;AAA6C;;AAAgB;;AAC7D;;AAAoC;AAAA,qBAAS,IAAAO,cAAA,EAAT;AAAyB,aAAzB;;AAClC;;AAAyB;;AAAO;;AAClC;;AACF;;AACA;;AACE;;AAAG;;AAAyD;;AAC9D;;AACA;;AACE;;AAAmE;AAAA,qBAAS,IAAAA,cAAA,EAAT;AAAyB,aAAzB;;AAA2B;;AAAM;;AACpG;;AAAkE;AAAA,qBAAS,IAAAC,eAAA,EAAT;AAA0B,aAA1B;;AAA4B;;AAAO;;AACvG;;AACF;;AACF;;AACF;;AAEF;;;;AAlFuC;;AAAA;;AAKI;;AAAA;;AAgCnB;;AAAA;;AAwBH;;AAAA;;AACd;;AAUM;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjEX;;AACE;;AACE;;AACE;;AACqE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AADrE;;AAEA;;AACE;;AACF;;AACA;;AACE;;AACQ;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AAA2E;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACzE;;AACF;;AACF;;AACF;;;;;;;;AA1BM;;AAAA;;AAGO;;AAAA;;AAEL;;AAAA;;AAUF;;AAAA;;AAGA;;AAAA;;AAC2C;;AAAA;;AAGQ;;AAAA;;;;UCxB9ChK,8B;AAKX,gDAAoBgB,EAApB,EACoBnF,eADpB,EACsD;AAAA;;AADlC,eAAAmF,EAAA,GAAAA,EAAA;AACA,eAAAnF,eAAA,GAAAA,eAAA;AAAqC;;;;iBAKzD,oBAAW;AAAA;;AACT,iBAAKoO,YAAL,GAAoB,KAAKnP,QAAL,CAAcC,GAAd,CAAkB,MAAlB,CAApB,CADS,CAET;;AACA,gBAAI,CAAC,KAAKsG,QAAV,EAAoB;AAClB,mBAAK4I,YAAL,CAAkBC,QAAlB,CAA2B1H,OAA3B,CAAoC,UAAC2H,IAAD,EAAOC,KAAP,EAAiB;AACnD,uBAAI,CAACzJ,WAAL,CAAiByJ,KAAjB;AACD,eAFD;AAGD;AACF;;;iBAED,iBAAOA,KAAP,EAAoB;AAClB,gBAAIA,KAAK,KAAK,KAAKH,YAAL,CAAkB3G,MAAlB,GAA2B,CAAzC,EAA4C;AAC1C,mBAAK2G,YAAL,CAAkBrG,QAAlB,CAA2BwG,KAA3B;AACA,mBAAKH,YAAL,CAAkBI,WAAlB;AACD;AACF;;;iBAED,qBAAYD,KAAZ,EAAyB;AACvB,gBAAME,gBAAgB,GAAG,KAAKL,YAAL,CAAkBzG,EAAlB,CAAqB4G,KAArB,CAAzB;;AACA,gBAAI,KAAKG,UAAL,CAAgBD,gBAAhB,CAAJ,EAAuC;AACrCA,8BAAgB,CAACvP,GAAjB,CAAqB,QAArB,EAA+ByP,SAA/B,CAAyC;AAACC,uBAAO,EAAE;AAAV,eAAzC;AACA;AACD;;AAED,gBAAIL,KAAK,KAAK,KAAKH,YAAL,CAAkB3G,MAAlB,GAA2B,CAArC,IAA0CgH,gBAAgB,CAAC5G,KAAjB,CAAuBY,MAAvB,CAA8B2E,IAA9B,OAAyC,EAAvF,EAA2F;AACzF;AACA,mBAAKgB,YAAL,CAAkB9D,IAAlB,CACE,KAAKnF,EAAL,CAAQ+D,KAAR,CAAc;AACZT,sBAAM,EAAE,CAAC,EAAD,CADI;AAEZC,oBAAI,EAAE,CAAC,EAAD,CAFM;AAGZ8B,qBAAK,EAAE,CAAC,CAAD,CAHK;AAIZqE,wCAAwB,EAAE,CAAC,EAAD,CAJd;AAKZtE,0CAA0B,EAAE,CAAC,EAAD;AALhB,eAAd,CADF;AASD;;AAED,gBAAIkE,gBAAgB,CAAC5G,KAAjB,CAAuBY,MAA3B,EAAmC;AACjC,mBAAKzI,eAAL,CAAqB8O,UAArB,CAAgCL,gBAAgB,CAAC5G,KAAjB,CAAuBY,MAAvD,EAA+DlI,SAA/D,CAAyE,UAAAC,IAAI,EAAI;AAC/E,oBAAIA,IAAI,CAAC,CAAD,CAAJ,IAAWA,IAAI,CAAC,CAAD,CAAJ,CAAQ,QAAR,CAAf,EAAkC;AAChCiO,kCAAgB,CAACvP,GAAjB,CAAqB,QAArB,EAA+ByP,SAA/B,CAAyC;AAACC,2BAAO,EAAEpO,IAAI,CAAC,CAAD,CAAJ,CAAQ,cAAR;AAAV,mBAAzC;AACD,iBAFD,MAEO;AACLiO,kCAAgB,CAACvP,GAAjB,CAAqB,MAArB,EAA6B6P,QAA7B,CAAsCvO,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,MAAf,CAAtC;AACAiO,kCAAgB,CAACvP,GAAjB,CAAqB,0BAArB,EAAiD6P,QAAjD,CAA0DvO,IAAI,CAAC,eAAD,CAA9D;AACD;AACF,eAPD;AAQD;AACF;;;iBAED,oBAAWwO,GAAX,EAA+B;AAC7B,gBAAMC,UAAU,GAAG,KAAKb,YAAL,CAAkBC,QAAlB,CAA2BnD,SAA3B,CACjB,UAAAoD,IAAI;AAAA,qBAAIA,IAAI,CAACzG,KAAL,CAAWY,MAAX,KAAsBuG,GAAG,CAACnH,KAAJ,CAAUY,MAAhC,IACH6F,IAAI,CAACpP,GAAL,CAAS,QAAT,EAAmBgQ,QADhB,IAC4BZ,IAAI,CAACzG,KAAL,CAAWY,MAAX,KAAsB,EADtD;AAAA,aADa,CAAnB;AAGA,mBAAOwG,UAAU,KAAK,CAAC,CAAvB;AACD;;;iBAED,sBAAaxK,KAAb,EAA4BC,YAA5B,EAAyD;AACvD,gBAAMC,aAAa,GAAG,UAAUC,OAAV,EAAwBC,MAAxB,EAAwC;AAC5D,qBAAO;AAAA,uBAAMD,OAAO,CAACE,WAAR,CAAoBD,MAApB,CAAN;AAAA,eAAP;AACD,aAFqB,CAEpB,IAFoB,EAEdJ,KAFc,EAEPM,IAFO,CAEF,IAFE,CAAtB;;AAIA,iBAAKC,mBAAL,CAAyBC,2BAAzB,CAAqD,KAArD,EAA4D,KAA5D,EAAmEP,YAAnE,EACE,KAAKc,QAAL,IAAiB,KAAKkJ,UAAL,CAAgBhK,YAAhB,KAAiCA,YAAY,CAACyK,KADjE,EAEE,QAFF,EAEY,QAFZ,EAEsBxK,aAFtB;AAGD;;;;;;;yBA3EUR,8B,EAA6B,wH,EAAA,+H;AAAA,O;;;cAA7BA,8B;AAA6B,oD;AAAA;AAAA;sEAQ7B,yCAAAe,mB,EAAqB,C;;;;;;;;;;;;;;;;;;ADlBlC;;AACE;;AACA;;AACE;;AAAoB;;AAAM;;AAC1B;;AAA2B;;AAAQ;;AACnC;;AAAsB;;AAAK;;AAC3B;;AAAuB;;AAAM;;AAC/B;;AACA;;AAEA;;AACA;;AA4BA;;AACF;;AAEA;;;;AA1CgE;;AAWtC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEDxB;;AACE;;AACE;;AACE;;AACA;;AACE;;AACQ;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;;;;;AAjBM;;AAAA;;AAWA;;AAAA;;AAGA;;AAAA;;;;UCfKd,+B;AAIX,iDAAoBe,EAApB,EACoBnF,eADpB,EACsD;AAAA;;AADlC,eAAAmF,EAAA,GAAAA,EAAA;AACA,eAAAnF,eAAA,GAAAA,eAAA;AAAqC;;;;iBAKzD,oBAAW;AACT,iBAAKoP,aAAL,GAAqB,KAAKnQ,QAAL,CAAcC,GAAd,CAAkB,OAAlB,CAArB;AACD;;;iBAED,sBAAauF,KAAb,EAA4BC,YAA5B,EAAyD;AACvD,iBAAKM,mBAAL,CAAyBqK,+BAAzB,CAAyD,MAAzD,EAAiE,MAAjE,EACE,MADF,EACU3K,YADV,EACwB,IADxB,EAC8B,IAD9B;AAED;;;;;;;yBAjBUN,+B,EAA8B,wH,EAAA,+H;AAAA,O;;;cAA9BA,+B;AAA8B,qD;AAAA;AAAA;sEAO9B,yCAAAc,mB,EAAqB,C;;;;;;;;;;;;;;;;;ADjBlC;;AACE;;AACA;;AACE;;AAAoB;;AAAI;;AACxB;;AAA2B;;AAAW;;AACtC;;AAAsB;;AAAK;;AAC7B;;AACA;;AAEA;;AACA;;AAmBA;;AACF;;AAEA;;;;AAhCgE;;AAUrC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEErB;;AAA4C;;AAAI;;;;;;AAChD;;AAAgD;;AAAO;;;;;;AA+CzD;;;;;;AAA+C,gGAAqB,UAArB,EAAqB,eAArB;;;;;;AAC/C;;;;;;AAAgD;;;;;;AAChD;;;;;;AAAkC,gGAAqB,eAArB,EAAqB,oBAArB,EAAqB,eAArB,EAAqB,UAArB;;;;;;;;AArCtC;;AACE;;AACE;;AAMA;;AAMA;;AAMF;;AAEA;;AACE;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,yCAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAI;;AAC/G;;AACA;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,yCAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAK;;AAChH;;AACA;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,yCAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAK;;AAChH;;AACF;;AAEA;;AACE;;AACA;;AACA;;AACF;;AACF;;;;;;AApC4B;;AAAA,uHAA4C,WAA5C,EAA4C,eAA5C,EAA4C,UAA5C,EAA4C,iBAA5C,EAA4C,aAA5C,EAA4C,IAA5C;;AAMA;;AAAA,yHAA8C,WAA9C,EAA8C,eAA9C,EAA8C,UAA9C,EAA8C,eAA9C,EAA8C,aAA9C,EAA8C,IAA9C;;AAMA;;AAAA,yHAA8C,WAA9C,EAA8C,eAA9C,EAA8C,UAA9C,EAA8C,eAA9C,EAA8C,aAA9C,EAA8C,IAA9C;;AASF;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIN;;AAAA;;AACc;;AAAA;;AACC;;AAAA;;AACd;;AAAA;;;;UC9CRjD,2B;AAYX,6CAAoBkD,EAApB,EACoBC,KADpB,EAEoBC,MAFpB,EAGoBC,aAHpB,EAIoBtF,eAJpB,EAKoBjB,uBALpB,EAMoBgB,aANpB,EAOoBwF,eAPpB,EAQoBtF,cARpB,EAQoD;AAAA;;AARhC,eAAAkF,EAAA,GAAAA,EAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAtF,eAAA,GAAAA,eAAA;AACA,eAAAjB,uBAAA,GAAAA,uBAAA;AACA,eAAAgB,aAAA,GAAAA,aAAA;AACA,eAAAwF,eAAA,GAAAA,eAAA;AACA,eAAAtF,cAAA,GAAAA,cAAA;AAhBpB,eAAAuF,QAAA,GAAW,IAAX;AACA,eAAAC,SAAA,GAAY,KAAZ;AAGA,eAAAC,aAAA,GAAgB,EAAhB;AACA,eAAAC,YAAA,GAAe,EAAf;AACA,eAAAC,QAAA,GAAW,CAAX;AAWC;;;;iBAED,oBAAW;AAAA;;AACT,iBAAKR,KAAL,CAAWS,QAAX,CAAoBC,IAApB,CACE,gDAAAC,SAAA,EAAU,UAACC,MAAD,EAAsB;AAC9B,qBAAI,CAACC,MAAL,GAAcD,MAAM,CAAC9G,GAAP,CAAW,QAAX,CAAd;;AACA,kBAAI,OAAI,CAAC+G,MAAL,KAAgB,KAApB,EAA2B;AACzB,uBAAI,CAACR,SAAL,GAAiB,IAAjB;AACA,uBAAO,sCAAAS,QAAA,EAAS,CACd,OAAI,CAACnG,aAAL,CAAmBoG,uBAAnB,CAA2C,UAA3C,CADc,EAEd,OAAI,CAACC,gBAAL,EAFc,CAAT,CAAP;AAID,eAND,MAMO;AACL,uBAAI,CAACX,SAAL,GAAiB,KAAjB;AACA,uBAAO,sCAAAS,QAAA,EAAS,CACd,OAAI,CAACnG,aAAL,CAAmBoG,uBAAnB,CAA2C,UAA3C,CADc,EAEd,OAAI,CAACnG,eAAL,CAAqBsP,oBAArB,CAA0CtJ,MAAM,CAAC9G,GAAP,CAAW,aAAX,CAA1C,CAFc,CAAT,CAAP;AAID;AACF,aAfD,CADF,EAiBEqB,SAjBF,CAiBa,UAAAC,IAAI,EAAI;AACnB,qBAAI,CAACnB,aAAL,GAAqBmB,IAAI,CAAC,CAAD,CAAzB;AACA,qBAAI,CAACrB,SAAL,GAAiB,OAAI,CAACJ,uBAAL,CAA6BK,kBAA7B,CACf,OAAI,CAACC,aAAL,CAAmBC,IAAnB,CAAyB,UAAAC,YAAY;AAAA,uBAAIA,YAAY,CAACC,WAAb,KAA6B,gBAAjC;AAAA,eAArC,EAAwFE,UADzE,CAAjB;;AAEA,kBAAI,eAAec,IAAI,CAAC,CAAD,CAAvB,EAA4B;AAC1B,uBAAI,CAAC8F,YAAL,GAAoB9F,IAAI,CAAC,CAAD,CAAJ,CAAQ,eAAR,CAApB;;AACA,uBAAI,CAAC+F,iBAAL,CAA+B/F,IAAI,CAAC,CAAD,CAAnC;;AACA,oBAAI,OAAI,CAACiF,SAAL,IAAkB,OAAI,CAACQ,MAAL,KAAgB,QAAtC,EAAgD;AAC9C,yBAAI,CAACO,gBAAL;AACD,iBAFD,MAEO;AACL,yBAAI,CAACC,mBAAL;AACD;AACF,eARD,MAQO;AACL,oBAAMC,aAAa,GAAclG,IAAI,CAAC,CAAD,CAArC;AACAkG,6BAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAA1B;AACD;AACF,aAjCD;AAkCD;;;iBAED,uBAAW;AACT,iBAAKvB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACD;;;iBAED,2BAAkBnH,SAAlB,EAAmC;AACjC,mBAAO,KAAKR,SAAL,CAAeG,IAAf,CAAqB,UAAAM,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,KAAkBF,SAAtB;AAAA,aAA7B,CAAP;AACD;;;iBAED,wBAAeoH,UAAf,EAAiC;AAC/B,iBAAKnB,QAAL,GAAgBmB,UAAhB;AACD;;;iBAED,6BAAiB;AAAA;;AACf,gBAAI,KAAKvB,QAAT,EAAoB;AAClB,mBAAKgB,gBAAL;AACD,aAFD,MAEO;AACL,kBAAI,KAAKvH,QAAL,CAAc+H,KAAlB,EAAyB;AACvB,qBAAK1B,aAAL,CAAmB2B,OAAnB,CAA2B,kBAA3B,EAA+C1G,SAA/C,CAAyD,UAAA0G,OAAO,EAAI;AAClE,sBAAIA,OAAJ,EAAa;AACX,2BAAI,CAAChI,QAAL,CAAciI,KAAd,CAAoB,OAAI,CAACxB,aAAzB;;AACA,2BAAI,CAACe,mBAAL;AACD;AACF,iBALD;AAMD,eAPD,MAOO;AACL,qBAAKA,mBAAL;AACD;AACF;;AACD,iBAAKxG,cAAL,CAAoBkH,aAApB;AACD;;;iBAED,+BAAmB;AACjB,iBAAK3B,QAAL,GAAgB,IAAhB;AAEA,gBAAM+J,iBAAiB,GAAG,KAAKtQ,QAAL,CAAcC,GAAd,CAAkB,IAAlB,CAA1B;AACAqQ,6BAAiB,CAACjI,oBAAlB;AAEA,gBAAMkI,QAAQ,GAAG,KAAKvQ,QAAL,CAAcC,GAAd,CAAkB,MAAlB,CAAjB;AACA,gBAAIsI,SAAS,GAAGgI,QAAQ,CAAC/H,MAAT,GAAkB,CAAlC;;AACA,mBAAOD,SAAS,IAAI,CAApB,EAAuB;AACrB,kBAAMiI,QAAQ,GAAGD,QAAQ,CAAC7H,EAAT,CAAYH,SAAZ,CAAjB;;AACA,kBAAIiI,QAAQ,CAAC7H,OAAT,IAAoB,CAAC6H,QAAQ,CAAC5H,KAAT,CAAeY,MAAxC,EAAgD;AAC9C+G,wBAAQ,CAACzH,QAAT,CAAkBP,SAAlB;AACD;;AACDA,uBAAS;AACV;;AAED,iBAAKvI,QAAL,CAAc+I,cAAd,GAhBiB,CAiBjB;;AACAC,kBAAM,CAACC,OAAP,CAAeC,YAAf,CAA4B,EAA5B,EAAgC,EAAhC,4BAAuDoH,iBAAiB,CAAC1H,KAAzE;AACD;;;iBAED,4BAAgB;AACd,iBAAKrC,QAAL,GAAgB,KAAhB;AAEA,gBAAM+J,iBAAiB,GAAG,KAAKtQ,QAAL,CAAcC,GAAd,CAAkB,IAAlB,CAA1B;;AACA,gBAAI,KAAKuG,SAAT,EAAoB;AAClB8J,+BAAiB,CAACnH,kBAAlB,CACE,mDAAAsH,4BAAA,EAA6B,KAAK1P,eAAlC,EAAmD,KAAKC,cAAxD,CADF;AAED;;AAED,gBAAMuP,QAAQ,GAAG,KAAKvQ,QAAL,CAAcC,GAAd,CAAkB,MAAlB,CAAjB;AACAsQ,oBAAQ,CAAClF,IAAT,CAAe,KAAKnF,EAAL,CAAQ+D,KAAR,CAAc;AAC3BT,oBAAM,EAAE,CAAC,EAAD,CADmB;AAE3BC,kBAAI,EAAE,CAAC,EAAD,CAFqB;AAG3B8B,mBAAK,EAAE,CAAC,CAAD,CAHoB;AAI3BqE,sCAAwB,EAAE,CAAC,EAAD,CAJC;AAK3BtE,wCAA0B,EAAE,CAAC,EAAD;AALD,aAAd,CAAf,EAVc,CAkBd;;AACA,gBAAI,KAAKtE,MAAL,KAAgB,SAApB,EAA+B;AAAC,mBAAKA,MAAL,GAAc,QAAd;AAAyB;;AACzDgC,kBAAM,CAACC,OAAP,CAAeC,YAAf,CAA4B,EAA5B,EAAgC,EAAhC,EAAoC,0BAAmBoH,iBAAiB,CAAC1H,KAArC,gBAAuD,KAAK5B,MAAhG;AACD;;;iBAED,4BAAgB;AACd,gBAAM0J,iBAAiB,GAAG,IAAI,yCAAApH,MAAJ,EAA1B;AACAoH,6BAAiB,CAACnH,SAAlB,GAA8B,UAA9B;AACAmH,6BAAiB,CAAC,UAAD,CAAjB,GAAgC,CAC9B;AAAEjH,kBAAI,EAAE,EAAR;AAAYkH,kBAAI,EAAE,KAAlB;AAAyB/G,wBAAU,EAAE,EAArC;AAAyCC,yBAAW,EAAE,EAAtD;AAA0DC,wBAAU,EAAE,EAAtE;AAA0EC,yBAAW,EAAE;AAAvF,aAD8B,CAAhC;AAGA2G,6BAAiB,CAAC,gBAAD,CAAjB,GAAsC,CACpC;AAAE7H,gBAAE,EAAE,EAAN;AAAUY,kBAAI,EAAE,EAAhB;AAAoBgC,kBAAI,EAAE;AAA1B,aADoC,CAAtC;AAGAiF,6BAAiB,CAAC,eAAD,CAAjB,GAAqC,EAArC;AACA,mBAAO,uCAAA1G,EAAA,EAAG0G,iBAAH,CAAP;AACD;;;iBAED,2BAAkBnP,IAAlB,EAA8B;AAAA;;AAC5B,iBAAKvB,QAAL,GAAgB,KAAKkG,EAAL,CAAQ+D,KAAR,CAAc;AAC5BpB,gBAAE,EAAE,CAACtH,IAAI,CAAC,gBAAD,CAAJ,CAAuB,CAAvB,EAA0B,IAA1B,CAAD,EAAkC,CAAC,6CAAA2I,UAAA,SAAD,CAAlC,CADwB;AAE5BT,kBAAI,EAAE,CAAClI,IAAI,CAAC,gBAAD,CAAJ,CAAuB,CAAvB,EAA0B,MAA1B,CAAD,CAFsB;AAG5BkK,kBAAI,EAAE,CAAClK,IAAI,CAAC,gBAAD,CAAJ,CAAuB,CAAvB,EAA0B,MAA1B,CAAD,CAHsB;AAI5B6I,mBAAK,EAAE,KAAKlE,EAAL,CAAQ+D,KAAR,CAAc;AACnBL,0BAAU,EAAE,CAACrI,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,YAApB,CAAD,CADO;AAEnBsI,2BAAW,EAAE,CAACtI,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,aAApB,CAAD,CAFM;AAGnBuI,0BAAU,EAAE,CAACvI,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,YAApB,CAAD,CAHO;AAInBwI,2BAAW,EAAE,CAACxI,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,aAApB,CAAD;AAJM,eAAd;AAJqB,aAAd,CAAhB;;AAWA,gBAAM8I,kBAAkB,GAAG,KAAKC,mBAAL,CAA0B/I,IAAI,CAAC,eAAD,CAA9B,CAA3B;;AACA,iBAAKvB,QAAL,CAAcuK,UAAd,CAAyB,MAAzB,EACE,KAAKrE,EAAL,CAAQsE,KAAR,CAAcH,kBAAkB,CAAC6D,IAAnB,CAAwBxD,GAAxB,CAA6B,UAAAkG,GAAG;AAAA,qBAAI,OAAI,CAAC1K,EAAL,CAAQ+D,KAAR,CAAe2G,GAAf,CAAJ;AAAA,aAAhC,CAAd,CADF;AAEA,iBAAK5Q,QAAL,CAAcuK,UAAd,CAAyB,OAAzB,EACE,KAAKrE,EAAL,CAAQsE,KAAR,CAAcH,kBAAkB,CAACwG,KAAnB,CAAyBnG,GAAzB,CAA8B,UAAAoG,IAAI;AAAA,qBAAI,OAAI,CAAC5K,EAAL,CAAQ+D,KAAR,CAAe6G,IAAf,CAAJ;AAAA,aAAlC,CAAd,CADF;AAEA,iBAAKrK,aAAL,GAAqB,KAAKzG,QAAL,CAAc8K,WAAd,EAArB;AACD;;;iBAED,6BAAqBC,aAArB,EAAkD;AAChD,gBAAMV,kBAAkB,GAAG;AACzB6D,kBAAI,EAAG,EADkB;AAEzB2C,mBAAK,EAAE;AAFkB,aAA3B;;AAIA,gBAAI,CAAC9F,aAAL,EAAoB;AAAE,qBAAOV,kBAAP;AAA4B;;AAClDU,yBAAa,CAACrD,OAAd,CAAuB,UAAAsD,YAAY,EAAI;AACrC,sBAAQA,YAAY,CAACC,eAArB;AACE,qBAAK,iBAAL;AACE8F,4BAAU,CAAC/F,YAAD,CAAV;;AACA;;AACF,qBAAK,0BAAL;AACEgG,mCAAiB,CAAChG,YAAD,CAAjB;;AACA;;AACF,wBAPF,CAQE;;AARF;AAUD,aAXD;AAYA,mBAAOX,kBAAP;;AAEA,qBAAS0G,UAAT,CAAqB/F,YAArB,EAA+C;AAC7CA,0BAAY,CAACI,MAAb,CAAoB1D,OAApB,CAA6B,UAAAkB,KAAK,EAAI;AACpCyB,kCAAkB,CAAC6D,IAAnB,CAAwB7C,IAAxB,CAA6B;AAC3BC,4CAA0B,EAAE1C,KAAK,CAAC,4BAAD,CADN;AAE3BgH,0CAAwB,EAAEhH,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,eAA9B,CAFC;AAG3BY,wBAAM,EAAEZ,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,KAA9B,EAAqC,CAArC,EAAwC,QAAxC,CAHmB;AAI3Ba,sBAAI,EAAEb,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,KAA9B,EAAqC,CAArC,EAAwC,MAAxC,CAJqB;AAK3B2C,uBAAK,EAAE3C,KAAK,CAAC,OAAD;AALe,iBAA7B;AAOD,eARD;AASD;;AAED,qBAASoI,iBAAT,CAA4BhG,YAA5B,EAAsD;AACpDA,0BAAY,CAACI,MAAb,CAAoB1D,OAApB,CAA6B,UAAAkB,KAAK,EAAI;AACpC,oBAAMqI,UAAU,GAAGrI,KAAK,CAAC,mBAAD,CAAL,CAA2BvI,IAA3B,CAAiC,UAAA6Q,OAAO;AAAA,yBAAIA,OAAO,CAAC3H,SAAR,KAAsB,YAA1B;AAAA,iBAAxC,CAAnB;AACAc,kCAAkB,CAACwG,KAAnB,CAAyBxF,IAAzB,CAA8B;AAC5BC,4CAA0B,EAAE1C,KAAK,CAAC,4BAAD,CADL;AAE5BuI,2CAAyB,EAAEF,UAAU,CAACnC,aAFV;AAG5BrF,sBAAI,EAAEwH,UAAU,CAACG,MAAX,CAAkB,CAAlB,EAAqB3H,IAHC;AAI5B4H,6BAAW,EAAEJ,UAAU,CAACG,MAAX,CAAkB,CAAlB,EAAqBC,WAJN;AAK5B9F,uBAAK,EAAE3C,KAAK,CAAC,OAAD;AALgB,iBAA9B;AAOD,eATD;AAUD;AACF;;;iBAED,qBAAYrH,IAAZ,EAAwB;AACtB,iBAAKkF,aAAL,GAAqB;AACnBoC,gBAAE,EAAEtH,IAAI,CAAC,gBAAD,CAAJ,CAAuB,CAAvB,EAA0B,IAA1B,CADe;AAEnBkI,kBAAI,EAAElI,IAAI,CAAC,gBAAD,CAAJ,CAAuB,CAAvB,EAA0B,MAA1B,CAFa;AAGnBkK,kBAAI,EAAElK,IAAI,CAAC,gBAAD,CAAJ,CAAuB,CAAvB,EAA0B,MAA1B,CAHa;AAInB6I,mBAAK,EAAE;AACLR,0BAAU,EAAErI,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,YAApB,CADP;AAELsI,2BAAW,EAAEtI,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,aAApB,CAFR;AAGLuI,0BAAU,EAAEvI,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,YAApB,CAHP;AAILwI,2BAAW,EAAExI,IAAI,CAAC,UAAD,CAAJ,CAAiB,CAAjB,EAAoB,aAApB;AAJR;AAJY,aAArB;;AAWA,gBAAM8I,kBAAkB,GAAG,KAAKC,mBAAL,CAA0B/I,IAAI,CAAC,eAAD,CAA9B,CAA3B;;AACA,iBAAKkF,aAAL,CAAmB,MAAnB,IAA6B4D,kBAAkB,CAAC6D,IAAhD;AACA,iBAAKzH,aAAL,CAAmB,OAAnB,IAA8B4D,kBAAkB,CAACwG,KAAjD;AACA,iBAAK7Q,QAAL,CAAciI,KAAd,CAAoB,KAAKxB,aAAzB;AACD;;;iBAED,gBAAO;AAAA;;AACL,iBAAKzF,cAAL,CAAoBkH,aAApB;;AACA,gBAAI,KAAKkF,eAAL,EAAJ,EAA4B;AAC1B,mBAAKrM,eAAL,CAAqBsM,IAArB,CAAkC,KAAK3G,YAAvC,EAAqDpF,SAArD,CAAgE,UAAAC,IAAI,EAAI;AACtE,uBAAI,CAACmF,YAAL,GAAoB,EAApB;;AACA,oBAAI,mBAAmBnF,IAAvB,EAA6B;AAC3B,sBAAM+P,aAAa,GAAG/P,IAAI,CAAC,gBAAD,CAAJ,CAAuB,CAAvB,EAA0B,IAA1B,CAAtB;AACA,yBAAI,CAAC8F,YAAL,GAAoB9F,IAAI,CAAC,eAAD,CAAxB;AACA,yBAAI,CAACiF,SAAL,GAAiB,KAAjB;;AACA,yBAAI,CAACzF,eAAL,CAAqBsP,oBAArB,CAA0CiB,aAA1C,EAAyDhQ,SAAzD,CAAmE,UAAAiM,QAAQ,EAAI;AAC7E,wBAAI,eAAeA,QAAnB,EAA6B;AAC3B,6BAAI,CAAC/F,mBAAL;;AACA,6BAAI,CAACgG,WAAL,CAAyBD,QAAzB;AACD,qBAHD,MAGO;AACL,0BAAM9F,aAAa,GAAc8F,QAAjC;AACA9F,mCAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,+BAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,uBAA1B;AACD;AACF,mBARD;;AASA,yBAAI,CAAC3G,cAAL,CAAoByM,aAApB,CAAkC,cAAlC,EAAkD,OAAlD,EAA2D,GAA3D,EAAgE6D,aAAhE;AACD,iBAdD,MAcO;AACL,sBAAM7J,aAAa,GAAclG,IAAjC;AACAkG,+BAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,2BAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,mBAA1B;AACD;AACF,eApBD;AAqBD;AACF;;;iBAED,2BAAkB;AAChB,gBAAI,KAAK3H,QAAL,CAAc2I,OAAlB,EAA2B;AACzB,mBAAK3H,cAAL,CAAoByM,aAApB,CAAkC,cAAlC,EAAkD,SAAlD,EAA6D,GAA7D;AACA,qBAAO,KAAP;AACD;;AAED,gBAAI,KAAKzN,QAAL,CAAc+H,KAAd,KAAwB,KAA5B,EAAmC;AACjC,mBAAK/G,cAAL,CAAoByM,aAApB,CAAkC,SAAlC,EAA6C,WAA7C,EAA0D,GAA1D;AACA,qBAAO,KAAP;AACD;;AAED,iBAAK/G,YAAL,CAAkB,WAAlB,IAAiC,UAAjC;AACA,iBAAKA,YAAL,CAAkB,eAAlB,IAAqC,KAAKW,YAA1C;;AAEA,gBAAI,KAAKb,SAAT,EAAoB;AAClB,mBAAKE,YAAL,CAAkB,UAAlB,IAAgC;AAC9BM,sBAAM,EAAE,KADsB;AACf2J,oBAAI,EAAE,KADS;AAE9B/G,0BAAU,EAAE,KAAK7I,eAAL,CAAqBY,OAArB,CAA6B+L,OAFX;AAEoB7D,2BAAW,EAAE,KAAK9I,eAAL,CAAqB4M,WAFtD;AAG9B7D,0BAAU,EAAE,KAAK/I,eAAL,CAAqBY,OAArB,CAA6B+L,OAHX;AAGoB3D,2BAAW,EAAE,KAAKhJ,eAAL,CAAqB4M;AAHtD,eAAhC;AAKA,mBAAKjH,YAAL,CAAkB,gBAAlB,IAAsC;AAAEM,sBAAM,EAAE,KAAV;AAAiB6B,kBAAE,EAAE,KAAK7I,QAAL,CAAcC,GAAd,CAAkB,IAAlB,EAAwB2I;AAA7C,eAAtC;AACD,aAPD,MAOO;AACL,mBAAKlC,YAAL,CAAkB,UAAlB,IAAgC;AAC9BM,sBAAM,EAAE,QADsB;AACZ8C,0BAAU,EAAE,KAAK/I,eAAL,CAAqBY,OAArB,CAA6B+L,OAD7B;AACsC3D,2BAAW,EAAE,KAAKhJ,eAAL,CAAqB4M;AADxE,eAAhC;AAEA,mBAAKjH,YAAL,CAAkB,gBAAlB,IAAsC;AAAEM,sBAAM,EAAE,QAAV;AAAoB6B,kBAAE,EAAE,KAAK7I,QAAL,CAAcC,GAAd,CAAkB,IAAlB,EAAwB2I;AAAhD,eAAtC;AACD;;AAED,gBAAI,KAAK5I,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAA0B8H,KAA9B,EAAqC;AACnC,mBAAKrB,YAAL,CAAkB,UAAlB,EAA8B,MAA9B,IAAwC,KAAK1G,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAA0B2I,KAAlE;AACA,mBAAKlC,YAAL,CAAkB,gBAAlB,EAAoC,MAApC,IAA8C,KAAK1G,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAA0B2I,KAAxE;AACD;;AAED,gBAAI,KAAK5I,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAA0B8H,KAA9B,EAAqC;AACnC,mBAAKrB,YAAL,CAAkB,gBAAlB,EAAoC,MAApC,IAA8C,KAAK1G,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAA0B2I,KAAxE;AACD;;AAED,gBAAMuG,YAAY,GAAG,KAAKnP,QAAL,CAAcC,GAAd,CAAkB,MAAlB,CAArB;AACA,gBAAM+K,YAAY,GAAG,KAAK1E,eAAL,CAAqBiL,0BAArB,CACnB,iBADmB,EAEnB,CAAC;AAAChI,uBAAS,EAAE,KAAZ;AAAmBiI,qBAAO,EAAE;AAA5B,aAAD,CAFmB,EAGnBrC,YAHmB,EAInB,KAAK1I,aAAL,CAAmB,MAAnB,CAJmB,EAKnB,CAAC,QAAD,EAAW,MAAX,CALmB,CAArB;;AAOA,gBAAIuE,YAAJ,EAAkB;AAAC,mBAAKtE,YAAL,CAAkB,eAAlB,IAAqC,CAACsE,YAAD,CAArC;AAAsD;;AAEzE,mBAAO,IAAP;AACD;;;iBAED,yBAAa;AACX,gBAAI,KAAKxE,SAAL,IAAmB,KAAKxG,QAAL,IAAiB,KAAKA,QAAL,CAAc+H,KAAtD,EAA8D;AAC5D,qBAAO,KAAK1B,aAAL,CAAmB2B,OAAnB,CAA2B,kBAA3B,CAAP;AACD,aAFD,MAEO;AACL,qBAAO,IAAP;AACD;AACF;;;;;;;yBAzTUhF,2B,EAA0B,yH,EAAA,6H,EAAA,qH,EAAA,2H,EAAA,+H,EAAA,iI,EAAA,uH,EAAA,yH,EAAA,gI;AAAA,O;;;cAA1BA,2B;AAA0B,gD;AAAA,iB;AAAA,e;AAAA,suC;AAAA;AAAA;ADhBvC;;AACE;;AACE;;AAAyC;;AACmB;;AAC9D;;AAEA;;AACE;;AACQ;AAAA,qBAAS,IAAA8K,WAAA,EAAT;AAAsB,aAAtB;;AACN;;AAA8B;;AAAO;;AACvC;;AACA;;AAAwG;AAAA,qBAAS,IAAAC,iBAAA,EAAT;AAA4B,aAA5B;;AACtG;;AACA;;AACF;;AACA;;AAAyF;AAAA,qBAAS,IAAAV,IAAA,EAAT;AAAe,aAAf;;AACvF;;AAA2B;;AAAI;;AACjC;;AACF;;AACF;;AAEA;;AACE;;AACF;;AAEA;;;;AAvB6C;;AAAA;;AAUhC;;AAAA;;AACA;;AAAA;;AAEiG;;AAAA;;AAUxG;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEaF;;AACE;;AAAI;;AAA2E;;AAAkB;;AAAI;;AACrG;;AAAI;;AAAoB;;AACxB;;AAAI;;AAA0C;;AAC9C;;AAAI;;AAA0B;;AAC9B;;AAAI;;AAA2B;;AAC/B;;AACE;;AAAsE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpE;;AACF;;AACA;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClE;;AACF;;AACA;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClE;;AACF;;AACF;;AACF;;;;;;AAhBS;;AAAA;;AAAwE;;AAAA;;AAC3E;;AAAA;;AACM;;AAAA;;AACN;;AAAA;;AACA;;AAAA;;;;;;;;;;UChCGtK,yB;AASX,2CAAoBhC,eAApB,EACoBC,cADpB,EAEoBoF,MAFpB,EAEoC;AAAA;;AAFhB,eAAArF,eAAA,GAAAA,eAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAoF,MAAA,GAAAA,MAAA;AAPpB,eAAA6H,wBAAA,GAA2B,KAA3B;AAOuC;;;;eAJvC,eAAkC;AAAC,mBAAO,KAAKA,wBAAL,GAAgC,OAAhC,GAA0C,MAAjD;AAA0D;;;iBAM7F,oBAAW,CACV;;;iBAED,kBAAS;AAAA;;AACP,iBAAKjN,cAAL,CAAoBkH,aAApB;AACA,iBAAKuC,aAAL,GAAqB,EAArB;AACA,iBAAK6G,aAAL,GAAqB,KAAKA,aAAL,GAAqB,KAAKA,aAAL,CAAmBnD,IAAnB,EAArB,GAAiD,EAAtE;AACA,iBAAKsD,eAAL,GAAuB,KAAKA,eAAL,GAAuB,KAAKA,eAAL,CAAqBtD,IAArB,EAAvB,GAAqD,EAA5E;AACA,iBAAKpN,eAAL,CAAqB2Q,mBAArB,CAAyC,KAAKJ,aAA9C,EAA6D,KAAKG,eAAlE,EAAmFnQ,SAAnF,CACE,UAAAC,IAAI,EAAI;AACN,kBAAI,CAACA,IAAI,CAAC,CAAD,CAAT,EAAc;AACZ,uBAAI,CAACP,cAAL,CAAoByM,aAApB,CAAkC,SAAlC,EAA6C,YAA7C,EAA2D,gDAAAa,WAAA,QAA3D;AACD,eAFD,MAEO,IAAI/M,IAAI,CAAC,CAAD,CAAJ,CAAQ,QAAR,CAAJ,EAAuB;AAC5B,oBAAMgN,QAAQ,GAAchN,IAA5B;AACAgN,wBAAQ,CAAC7G,OAAT,CAAkB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAArB;AACD,eAHM,MAGA;AACL,uBAAI,CAAC8C,aAAL,GAAwClJ,IAAxC;AACD;AACF,aAVH;AAYD;;;iBAED,qBAAYiN,MAAZ,EAAkB;AAChB,gBAAIA,MAAM,CAACC,OAAP,KAAmB,EAAvB,EAA4B;AAC1B,mBAAKC,MAAL;AACD;AACF;;;iBAED,gBAAG;AACD,iBAAKtI,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,gBAAD,EAAmB,GAAnB,EAAwB;AAACb,oBAAM,EAAE;AAAT,aAAxB,CAArB;AACD;;;iBAED,iBAAQsK,aAAR,EAA6B;AAC3B,iBAAKlL,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,gBAAD,EAAmByJ,aAAnB,EAAkC;AAACtK,oBAAM,EAAE;AAAT,aAAlC,CAArB;AACD;;;iBAED,gBAAOsK,aAAP,EAA4B;AAC1B,iBAAKlL,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,gBAAD,EAAmByJ,aAAnB,EAAkC;AAACtK,oBAAM,EAAE;AAAT,aAAlC,CAArB;AACD;;;iBAED,iBAAOsK,aAAP,EAA4B;AAC1B,iBAAK3C,mBAAL,GAA2B2C,aAA3B;AACA,iBAAKrD,wBAAL,GAAgC,IAAhC;AACD;;;iBAED,0BAAc;AACZ,iBAAKA,wBAAL,GAAgC,KAAhC;AACD;;;iBAED,2BAAe;AAAA;;AACb,gBAAMW,uBAAuB,GAAG,KAAKnE,aAAL,CAAmBpK,IAAnB,CAC9B,UAAAwO,GAAG;AAAA,qBAAIA,GAAG,CAAChG,EAAJ,KAAW,OAAI,CAAC8F,mBAApB;AAAA,aAD2B,EACcG,aAD9C;AAEA,iBAAK/N,eAAL,WAA4B6N,uBAA5B,EAAqDtN,SAArD,CAAgE,UAAAyN,QAAQ,EAAI;AAC1E,qBAAI,CAACd,wBAAL,GAAgC,KAAhC;;AACA,kBAAIc,QAAJ,EAAc;AACZ,oBAAMR,QAAQ,GAAcQ,QAA5B;AACAR,wBAAQ,CAAC7G,OAAT,CAAkB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAArB;AACD,eAHD,MAGO;AACL,uBAAI,CAAC+G,MAAL;AACD;AACF,aARD;AASD;;;;;;;yBA1EU3L,yB,EAAwB,+H,EAAA,+H,EAAA,oH;AAAA,O;;;cAAxBA,yB;AAAwB,8C;AAAA,iB;AAAA,e;AAAA,i5D;AAAA;AAAA;ADXrC;;AACE;;AACE;;AACE;;AAA6D;;AAAY;;AACzE;;AAAmD;AAAA;AAAA,eAA2B,OAA3B,EAA2B;AAAA,qBAChB,IAAAiM,WAAA,QADgB;AACG,aAD9B;;AAAnD;;AAEF;;AACA;;AACE;;AAA+D;;AAAc;;AAC7E;;AAAuD;AAAA;AAAA,eAA6B,OAA7B,EAA6B;AAAA,qBACtB,IAAAA,WAAA,QADsB;AACH,aAD1B;;AAAvD;;AAEF;;AACF;;AAEA;;AACE;;AAAkF;AAAA,qBAAS,IAAAN,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAAM;;AAC7G;;AACF;;AAEA;;AACE;;AACA;;AACE;;AAA4D;AAAA,qBAAS,YAAT;AAAc,aAAd;;AAC1D;;AAAkC;;AAAG;;AACzC;;AACA;;AACE;;AACA;;AACE;;AAAgB;;AAAE;;AAClB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAM;;AACxB;;AACA;;AAEA;;AACA;;AAkBA;;AACF;;AAEA;;AAEE;;AACE;;AACE;;AACE;;AAA6C;;AAAgB;;AAC7D;;AAAoC;AAAA,qBAAS,IAAAO,cAAA,EAAT;AAAyB,aAAzB;;AAClC;;AAAyB;;AAAO;;AAClC;;AACF;;AACA;;AACE;;AAAG;;AAAkE;;AACvE;;AACA;;AACE;;AAAmE;AAAA,qBAAS,IAAAA,cAAA,EAAT;AAAyB,aAAzB;;AAA2B;;AAAM;;AACpG;;AAAkE;AAAA,qBAAS,IAAAC,eAAA,EAAT;AAA0B,aAA1B;;AAA4B;;AAAO;;AACvG;;AACF;;AACF;;AACF;;AAEF;;;;AA5EyD;;AAAA;;AAKI;;AAAA;;AA6B7B;;AAAA;;AAqBN;;AAAA;;AACnB;;AAUM;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEhEN,eAASyC,0BAAT,CAAmC5Q,eAAnC,EACmCC,cADnC,EAEmC4Q,MAFnC,EAEiD;AACtD,eAAO,UAACC,OAAD,EAAsG;AAC3G,iBAAO,sCAAAC,KAAA,EAAM,GAAN,EAAWjL,IAAX,CACL,gDAAAC,SAAA,EAAW;AAAA,mBAAM/F,eAAe,CAACgR,iBAAhB,CAAkCF,OAAO,CAACjJ,KAA1C,EAAiD/B,IAAjD,CACf,gDAAA6D,GAAA,EAAI,UAAAnJ,IAAI,EAAI;AACV,kBAAIA,IAAI,CAAC,QAAD,CAAJ,IAAkBA,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,SAAlB,MAAiCqQ,MAAvD,EAA+D;AAC7D,uBAAO;AAACjC,yBAAO,EAAE3O,cAAc,CAACgR,eAAf,CAA+B,MAA/B,EAAuC,kBAAvC,EACb,GADa,EACRH,OAAO,CAACjJ,KADA,EACOqJ;AADjB,iBAAP;AAED,eAHD,MAGO;AACL,uBAAO,IAAP;AACD;AACF,aAPD,CADe,CAAN;AAAA,WAAX,CADK,CAAP;AAWD,SAZD;AAaD;;AAEM,eAASC,wBAAT,CAAiCnR,eAAjC,EACiCC,cADjC,EAC+D;AACpE,eAAO,UAAC6Q,OAAD,EAAsG;AAC3G,iBAAO,sCAAAC,KAAA,EAAM,GAAN,EAAWjL,IAAX,CACL,gDAAAC,SAAA,EAAW;AAAA,mBAAM/F,eAAe,CAACoR,eAAhB,CAAgCN,OAAO,CAACjJ,KAAxC,EAA+C/B,IAA/C,CACf,gDAAA6D,GAAA,EAAI,UAAAnJ,IAAI,EAAI;AACV,kBAAIA,IAAI,CAAC,QAAD,CAAJ,IAAkBA,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,SAAlB,MAAiCsQ,OAAO,CAACjJ,KAA/D,EAAsE;AACpE,uBAAO;AAAC+G,yBAAO,EAAE3O,cAAc,CAACgR,eAAf,CAA+B,MAA/B,EAAuC,gBAAvC,EACb,GADa,EACRH,OAAO,CAACjJ,KADA,EACOqJ;AADjB,iBAAP;AAED,eAHD,MAGO;AACL,uBAAO,IAAP;AACD;AACF,aAPD,CADe,CAAN;AAAA,WAAX,CADK,CAAP;AAWD,SAZD;AAaD;;AAEM,eAASG,4BAAT,CAAqCrR,eAArC,EACmCC,cADnC,EACiE;AACtE,eAAO,UAAC6Q,OAAD,EAAsG;AAC3G,iBAAO,sCAAAC,KAAA,EAAM,GAAN,EAAWjL,IAAX,CACL,gDAAAC,SAAA,EAAW;AAAA,mBAAM/F,eAAe,CAACsR,mBAAhB,CAAoCR,OAAO,CAACjJ,KAA5C,EAAmD/B,IAAnD,CACf,gDAAA6D,GAAA,EAAI,UAAAnJ,IAAI,EAAI;AACV,kBAAIA,IAAI,CAAC,QAAD,CAAJ,IAAkBA,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,MAAlB,MAA8BsQ,OAAO,CAACjJ,KAA5D,EAAmE;AACjE,uBAAO;AAAC+G,yBAAO,EAAE3O,cAAc,CAACgR,eAAf,CAA+B,YAA/B,EAA6C,mBAA7C,EACb,GADa,EACRH,OAAO,CAACjJ,KADA,EACOqJ;AADjB,iBAAP;AAED,eAHD,MAGO;AACL,uBAAO,IAAP;AACD;AACF,aAPD,CADe,CAAN;AAAA,WAAX,CADK,CAAP;AAWD,SAZD;AAaD;;AAEM,eAAS7I,qBAAT,CAA8BrI,eAA9B,EACqCC,cADrC,EACmE;AACxE,eAAO,UAAC6Q,OAAD,EAAsG;AAC3G,iBAAO,sCAAAC,KAAA,EAAM,GAAN,EAAWjL,IAAX,CACL,gDAAAC,SAAA,EAAW;AAAA,mBAAM/F,eAAe,CAAC8O,UAAhB,CAA2BgC,OAAO,CAACjJ,KAAnC,EAA0C/B,IAA1C,CACf,gDAAA6D,GAAA,EAAI,UAAAnJ,IAAI,EAAI;AACV,kBAAIA,IAAI,CAAC,KAAD,CAAJ,IAAeA,IAAI,CAAC,KAAD,CAAJ,CAAY,CAAZ,EAAe,QAAf,MAA6BsQ,OAAO,CAACjJ,KAAxD,EAA+D;AAC7D,uBAAO;AAAC+G,yBAAO,EAAE3O,cAAc,CAACgR,eAAf,CAA+B,KAA/B,EAAsC,YAAtC,EACb,GADa,EACRH,OAAO,CAACjJ,KADA,EACOqJ;AADjB,iBAAP;AAED,eAHD,MAGO;AACL,uBAAO,IAAP;AACD;AACF,aAPD,CADe,CAAN;AAAA,WAAX,CADK,CAAP;AAWD,SAZD;AAaD;;AAEM,eAASK,4BAAT,CAAqCvR,eAArC,EAC8BC,cAD9B,EAC4D;AACjE,eAAO,UAAC6Q,OAAD,EAAsG;AAC3G,iBAAO,sCAAAC,KAAA,EAAM,GAAN,EAAWjL,IAAX,CACL,gDAAAC,SAAA,EAAW;AAAA,mBAAM/F,eAAe,CAACwR,mBAAhB,CAAoCV,OAAO,CAACjJ,KAA5C,EAAmD/B,IAAnD,CACf,gDAAA6D,GAAA,EAAI,UAAAnJ,IAAI,EAAI;AACV,kBAAIA,IAAI,CAAC,YAAD,CAAJ,IAAsBA,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,UAAtB,MAAsCsQ,OAAO,CAACjJ,KAAxE,EAA+E;AAC7E,uBAAO;AAAC+G,yBAAO,EAAE3O,cAAc,CAACgR,eAAf,CAA+B,aAA/B,EAA8C,oBAA9C,EACb,GADa,EACRH,OAAO,CAACjJ,KADA,EACOqJ;AADjB,iBAAP;AAED,eAHD,MAGO;AACL,uBAAO,IAAP;AACD;AACF,aAPD,CADe,CAAN;AAAA,WAAX,CADK,CAAP;AAWD,SAZD;AAaD;;AAEM,eAASxB,6BAAT,CAAsC1P,eAAtC,EACqCC,cADrC,EACmE;AACxE,eAAO,UAAC6Q,OAAD,EAAsG;AAC3G,iBAAO,sCAAAC,KAAA,EAAM,GAAN,EAAWjL,IAAX,CACL,gDAAAC,SAAA,EAAW;AAAA,mBAAM/F,eAAe,CAACyR,kBAAhB,CAAmCX,OAAO,CAACjJ,KAA3C,EAAkD/B,IAAlD,CACf,gDAAA6D,GAAA,EAAI,UAAAnJ,IAAI,EAAI;AACV,kBAAIA,IAAI,CAAC,gBAAD,CAAJ,IAA0BA,IAAI,CAAC,gBAAD,CAAJ,CAAuB,CAAvB,EAA0B,IAA1B,MAAoCsQ,OAAO,CAACjJ,KAA1E,EAAiF;AAC/E,uBAAO;AAAC+G,yBAAO,EAAE3O,cAAc,CAACgR,eAAf,CAA+B,cAA/B,EAA+C,qBAA/C,EACb,GADa,EACRH,OAAO,CAACjJ,KADA,EACOqJ;AADjB,iBAAP;AAED,eAHD,MAGO;AACL,uBAAO,IAAP;AACD;AACF,aAPD,CADe,CAAN;AAAA,WAAX,CADK,CAAP;AAWD,SAZD;AAaD;;AAEM,eAASQ,yBAAT,CAAkC1R,eAAlC,EACsCC,cADtC,EACoE;AACzE,eAAO,UAAC6Q,OAAD,EAAsG;AAC3G,iBAAO,sCAAAC,KAAA,EAAM,GAAN,EAAWjL,IAAX,CACL,gDAAAC,SAAA,EAAW;AAAA,mBAAM/F,eAAe,CAAC2R,oBAAhB,CAAqCb,OAAO,CAACjJ,KAA7C,EAAoD/B,IAApD,CACf,gDAAA6D,GAAA,EAAI,UAAAnJ,IAAI,EAAI;AACV,kBAAIA,IAAI,CAAC,aAAD,CAAJ,IAAuBA,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,EAAuB,cAAvB,MAA2CsQ,OAAO,CAACjJ,KAA9E,EAAqF;AACnF,uBAAO;AAAC+G,yBAAO,EAAE3O,cAAc,CAACgR,eAAf,CAA+B,cAA/B,EAA+C,qBAA/C,EACb,GADa,EACRH,OAAO,CAACjJ,KADA,EACOqJ;AADjB,iBAAP;AAED,eAHD,MAGO;AACL,uBAAO,IAAP;AACD;AACF,aAPD,CADe,CAAN;AAAA,WAAX,CADK,CAAP;AAWD,SAZD;AAaD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChHK;;AAA4C;;AAAI;;;;;;AAChD;;AAAgD;;AAAO;;;;;;AAsCzD;;;;;;AAAyC,gGAAqB,UAArB,EAAqB,eAArB;;;;;;AACzC;;;;;;AAAkC,gGAAqB,eAArB,EAAqB,oBAArB,EAAqB,eAArB,EAAqB,YAArB;;;;;;;;AA3BtC;;AACE;;AACE;;AAMA;;AAMF;;AAEA;;AACE;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,yCAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAoB;;AAC/H;;AACA;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,yCAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAK;;AAChH;;AACF;;AAEA;;AACE;;AACA;;AACF;;AACF;;;;;;AA1B4B;;AAAA,6HAAkD,WAAlD,EAAkD,eAAlD,EAAkD,UAAlD,EAAkD,iBAAlD,EAAkD,aAAlD,EAAkD,IAAlD;;AAMA;;AAAA,yHAA8C,WAA9C,EAA8C,eAA9C,EAA8C,UAA9C,EAA8C,eAA9C,EAA8C,aAA9C,EAA8C,IAA9C;;AASF;;AAAA;;AAGA;;AAAA;;AAIN;;AAAA;;AACQ;;AAAA;;AACP;;AAAA;;;;UCpCR/O,0B;AAYX,4CAAoBgD,EAApB,EACoBC,KADpB,EAEoBC,MAFpB,EAGoBC,aAHpB,EAIoBtF,eAJpB,EAKoBjB,uBALpB,EAMoBgB,aANpB,EAOoBwF,eAPpB,EAQoBtF,cARpB,EAQoD;AAAA;;AARhC,eAAAkF,EAAA,GAAAA,EAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAtF,eAAA,GAAAA,eAAA;AACA,eAAAjB,uBAAA,GAAAA,uBAAA;AACA,eAAAgB,aAAA,GAAAA,aAAA;AACA,eAAAwF,eAAA,GAAAA,eAAA;AACA,eAAAtF,cAAA,GAAAA,cAAA;AAhBpB,eAAAuF,QAAA,GAAW,IAAX;AACA,eAAAC,SAAA,GAAY,KAAZ;AAGA,eAAAC,aAAA,GAAgB,EAAhB;AACA,eAAAC,YAAA,GAAe,EAAf;AACA,eAAAC,QAAA,GAAW,CAAX;AAWC;;;;iBAED,oBAAW;AAAA;;AACT,iBAAKR,KAAL,CAAWS,QAAX,CAAoBC,IAApB,CACE,gDAAAC,SAAA,EAAU,UAACC,MAAD,EAAsB;AAC9B,qBAAI,CAACC,MAAL,GAAcD,MAAM,CAAC9G,GAAP,CAAW,QAAX,CAAd;;AACA,kBAAI,OAAI,CAAC+G,MAAL,KAAgB,KAApB,EAA2B;AACzB,uBAAI,CAACR,SAAL,GAAiB,IAAjB;AACA,uBAAO,sCAAAS,QAAA,EAAS,CACd,OAAI,CAACnG,aAAL,CAAmBoG,uBAAnB,CAA2C,YAA3C,CADc,EAEd,OAAI,CAACC,gBAAL,EAFc,CAAT,CAAP;AAID,eAND,MAMO;AACL,uBAAI,CAACX,SAAL,GAAiB,KAAjB;AACA,uBAAO,sCAAAS,QAAA,EAAS,CACd,OAAI,CAACnG,aAAL,CAAmBoG,uBAAnB,CAA2C,YAA3C,CADc,EAEd,OAAI,CAACnG,eAAL,CAAqB4R,mBAArB,CAAyC5L,MAAM,CAAC9G,GAAP,CAAW,aAAX,CAAzC,CAFc,CAAT,CAAP;AAID;AACF,aAfD,CADF,EAiBEqB,SAjBF,CAiBa,UAAAC,IAAI,EAAI;AACnB,qBAAI,CAACnB,aAAL,GAAqBmB,IAAI,CAAC,CAAD,CAAzB;AACA,qBAAI,CAACrB,SAAL,GAAiB,OAAI,CAACJ,uBAAL,CAA6BK,kBAA7B,CACf,OAAI,CAACC,aAAL,CAAmBC,IAAnB,CAAyB,UAAAC,YAAY;AAAA,uBAAIA,YAAY,CAACC,WAAb,KAA6B,YAAjC;AAAA,eAArC,EAAoFE,UADrE,CAAjB;;AAEA,kBAAI,eAAec,IAAI,CAAC,CAAD,CAAvB,EAA4B;AAC1B,uBAAI,CAAC8F,YAAL,GAAoB9F,IAAI,CAAC,CAAD,CAAJ,CAAQ,eAAR,CAApB;;AACA,uBAAI,CAAC+F,iBAAL,CAA+B/F,IAAI,CAAC,CAAD,CAAnC;;AACA,oBAAI,OAAI,CAACiF,SAAL,IAAkB,OAAI,CAACQ,MAAL,KAAgB,QAAtC,EAAgD;AAC9C,yBAAI,CAACO,gBAAL;AACD,iBAFD,MAEO;AACL,yBAAI,CAACC,mBAAL;AACD;AACF,eARD,MAQO;AACL,oBAAMC,aAAa,GAAclG,IAAI,CAAC,CAAD,CAArC;AACAkG,6BAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAA1B;AACD;AACF,aAjCD;AAkCD;;;iBAED,uBAAW;AACT,iBAAKvB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,cAAD,CAArB;AACD;;;iBAED,2BAAkBnH,SAAlB,EAAmC;AACjC,mBAAO,KAAKR,SAAL,CAAeG,IAAf,CAAqB,UAAAM,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,KAAkBF,SAAtB;AAAA,aAA7B,CAAP;AACD;;;iBAED,wBAAeoH,UAAf,EAAiC;AAC/B,iBAAKnB,QAAL,GAAgBmB,UAAhB;AACD;;;iBAED,6BAAiB;AAAA;;AACf,gBAAI,KAAKvB,QAAT,EAAoB;AAClB,mBAAKgB,gBAAL;AACD,aAFD,MAEO;AACL,kBAAI,KAAKvH,QAAL,CAAc+H,KAAlB,EAAyB;AACvB,qBAAK1B,aAAL,CAAmB2B,OAAnB,CAA2B,kBAA3B,EAA+C1G,SAA/C,CAAyD,UAAA0G,OAAO,EAAI;AAClE,sBAAIA,OAAJ,EAAa;AACX,2BAAI,CAAChI,QAAL,CAAciI,KAAd,CAAoB,OAAI,CAACxB,aAAzB;;AACA,2BAAI,CAACe,mBAAL;AACD;AACF,iBALD;AAMD,eAPD,MAOO;AACL,qBAAKA,mBAAL;AACD;AACF;;AACD,iBAAKxG,cAAL,CAAoBkH,aAApB;AACD;;;iBAED,+BAAmB;AACjB,iBAAK3B,QAAL,GAAgB,IAAhB;AAEA,gBAAM6B,SAAS,GAAG,KAAKpI,QAAL,CAAcC,GAAd,CAAkB,UAAlB,CAAlB;AACAmI,qBAAS,CAACC,oBAAV;AAEA,gBAAMuK,cAAc,GAAG,KAAK5S,QAAL,CAAcC,GAAd,CAAkB,YAAlB,CAAvB;AACA,gBAAIsI,SAAS,GAAGqK,cAAc,CAACpK,MAAf,GAAwB,CAAxC;;AACA,mBAAOD,SAAS,IAAI,CAApB,EAAuB;AACrB,kBAAMsK,cAAc,GAAGD,cAAc,CAAClK,EAAf,CAAkBH,SAAlB,CAAvB;;AACA,kBAAIsK,cAAc,CAAClK,OAAf,IAA0B,CAACkK,cAAc,CAACjK,KAAf,CAAqBgE,UAApD,EAAgE;AAC9DgG,8BAAc,CAAC9J,QAAf,CAAwBP,SAAxB;AACD;;AACDA,uBAAS;AACV;;AAED,iBAAKvI,QAAL,CAAc+I,cAAd,GAhBiB,CAiBjB;;AACAC,kBAAM,CAACC,OAAP,CAAeC,YAAf,CAA4B,EAA5B,EAAgC,EAAhC,0BAAqDd,SAAS,CAACQ,KAA/D;AACD;;;iBAED,4BAAgB;AACd,iBAAKrC,QAAL,GAAgB,KAAhB;AAEA,gBAAMuM,WAAW,GAAG,KAAK9S,QAAL,CAAcC,GAAd,CAAkB,UAAlB,CAApB;;AACA,gBAAI,KAAKuG,SAAT,EAAoB;AAClBsM,yBAAW,CAAC3J,kBAAZ,CACE,mDAAAmJ,2BAAA,EAA4B,KAAKvR,eAAjC,EAAkD,KAAKC,cAAvD,CADF;AAED;;AAED,gBAAMsH,gBAAgB,GAAG,KAAKtI,QAAL,CAAcC,GAAd,CAAkB,YAAlB,CAAzB;AACAqI,4BAAgB,CAAC+C,IAAjB,CAAuB,KAAKnF,EAAL,CAAQ+D,KAAR,CAAc;AACnC2C,wBAAU,EAAE,CAAC,EAAD,CADuB;AAEnCC,0BAAY,EAAE,CAAC,EAAD,CAFqB;AAGnCkG,sCAAwB,EAAE,CAAC,EAAD,CAHS;AAInCzH,wCAA0B,EAAE,CAAC,EAAD;AAJO,aAAd,CAAvB,EAVc,CAiBd;;AACA,gBAAI,KAAKtE,MAAL,KAAgB,SAApB,EAA+B;AAAC,mBAAKA,MAAL,GAAc,QAAd;AAAyB;;AACzDgC,kBAAM,CAACC,OAAP,CAAeC,YAAf,CAA4B,EAA5B,EAAgC,EAAhC,EAAoC,wBAAiB4J,WAAW,CAAClK,KAA7B,gBAA+C,KAAK5B,MAAxF;AACD;;;iBAED,4BAAgB;AACd,gBAAMgM,gBAAgB,GAAG,IAAI,yCAAA1J,MAAJ,EAAzB;AACA0J,4BAAgB,CAACzJ,SAAjB,GAA6B,YAA7B;AACAyJ,4BAAgB,CAAC,YAAD,CAAhB,GAAiC,CAC/B;AAAEvG,sBAAQ,EAAE,EAAZ;AAAgBC,kBAAI,EAAE,EAAtB;AAA0B9C,wBAAU,EAAE,EAAtC;AAA0CC,yBAAW,EAAE,EAAvD;AAA2DC,wBAAU,EAAE,EAAvE;AAA2EC,yBAAW,EAAE;AAAxF,aAD+B,CAAjC;AAGAiJ,4BAAgB,CAAC,eAAD,CAAhB,GAAoC,EAApC;AACA,mBAAO,sCAAAhJ,EAAA,EAAGgJ,gBAAH,CAAP;AACD;;;iBAED,2BAAkBzR,IAAlB,EAA8B;AAAA;;AAC5B,iBAAKvB,QAAL,GAAgB,KAAKkG,EAAL,CAAQ+D,KAAR,CAAc;AAC5BwC,sBAAQ,EAAE,CAAClL,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,UAAtB,CAAD,EAAoC,CAAC,6CAAA2I,UAAA,SAAD,CAApC,CADkB;AAE5BwC,kBAAI,EAAE,CAACnL,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,MAAtB,CAAD,CAFsB;AAG5B6I,mBAAK,EAAE,KAAKlE,EAAL,CAAQ+D,KAAR,CAAc;AACnBL,0BAAU,EAAE,CAACrI,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,YAAtB,CAAD,CADO;AAEnBsI,2BAAW,EAAE,CAACtI,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,aAAtB,CAAD,CAFM;AAGnBuI,0BAAU,EAAE,CAACvI,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,YAAtB,CAAD,CAHO;AAInBwI,2BAAW,EAAE,CAACxI,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,aAAtB,CAAD;AAJM,eAAd;AAHqB,aAAd,CAAhB;;AAUA,gBAAM8I,kBAAkB,GAAG,KAAKC,mBAAL,CAA0B/I,IAAI,CAAC,eAAD,CAA9B,CAA3B;;AACA,iBAAKvB,QAAL,CAAcuK,UAAd,CAAyB,YAAzB,EACE,KAAKrE,EAAL,CAAQsE,KAAR,CAAcH,kBAAkB,CAAC4I,UAAnB,CAA8BvI,GAA9B,CAAmC,UAAAwI,SAAS;AAAA,qBAAI,OAAI,CAAChN,EAAL,CAAQ+D,KAAR,CAAeiJ,SAAf,CAAJ;AAAA,aAA5C,CAAd,CADF;AAEA,iBAAKzM,aAAL,GAAqB,KAAKzG,QAAL,CAAc8K,WAAd,EAArB;AACD;;;iBAED,6BAAqBC,aAArB,EAAkD;AAChD,gBAAMV,kBAAkB,GAAG;AACzB4I,wBAAU,EAAG;AADY,aAA3B;;AAGA,gBAAI,CAAClI,aAAL,EAAoB;AAAE,qBAAOV,kBAAP;AAA4B;;AAClDU,yBAAa,CAACrD,OAAd,CAAuB,UAAAsD,YAAY,EAAI;AACrC,sBAAQA,YAAY,CAACC,eAArB;AACE,qBAAK,sBAAL;AACEkI,kCAAgB,CAACnI,YAAD,CAAhB;;AACA;;AACF,wBAJF,CAKE;;AALF;AAOD,aARD;AASA,mBAAOX,kBAAP;;AAEA,qBAAS8I,gBAAT,CAA2BnI,YAA3B,EAAqD;AACnDA,0BAAY,CAACI,MAAb,CAAoB1D,OAApB,CAA6B,UAAAkB,KAAK,EAAI;AACpCyB,kCAAkB,CAAC4I,UAAnB,CAA8B5H,IAA9B,CAAmC;AACjCC,4CAA0B,EAAE1C,KAAK,CAAC,4BAAD,CADA;AAEjCmK,0CAAwB,EAAEnK,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,eAA9B,CAFO;AAGjCgE,4BAAU,EAAEhE,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,WAA9B,EAA2C,CAA3C,EAA8C,YAA9C,CAHqB;AAIjCiE,8BAAY,EAAEjE,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,WAA9B,EAA2C,CAA3C,EAA8C,cAA9C;AAJmB,iBAAnC;AAMD,eAPD;AAQD;AACF;;;iBAED,qBAAYrH,IAAZ,EAAwB;AACtB,iBAAKkF,aAAL,GAAqB;AACnBgG,sBAAQ,EAAElL,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,UAAtB,CADS;AAEnBmL,kBAAI,EAAEnL,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,MAAtB,CAFa;AAGnB6I,mBAAK,EAAE;AACLR,0BAAU,EAAErI,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,YAAtB,CADP;AAELsI,2BAAW,EAAEtI,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,aAAtB,CAFR;AAGLuI,0BAAU,EAAEvI,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,YAAtB,CAHP;AAILwI,2BAAW,EAAExI,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,aAAtB;AAJR;AAHY,aAArB;;AAUA,gBAAM8I,kBAAkB,GAAG,KAAKC,mBAAL,CAA0B/I,IAAI,CAAC,eAAD,CAA9B,CAA3B;;AACA,iBAAKkF,aAAL,CAAmB,YAAnB,IAAmC4D,kBAAkB,CAAC4I,UAAtD;AACA,iBAAKjT,QAAL,CAAciI,KAAd,CAAoB,KAAKxB,aAAzB;AACD;;;iBAED,gBAAO;AAAA;;AACL,iBAAKzF,cAAL,CAAoBkH,aAApB;;AACA,gBAAI,KAAKkF,eAAL,EAAJ,EAA4B;AAC1B,mBAAKrM,eAAL,CAAqBsM,IAArB,CAAkC,KAAK3G,YAAvC,EAAqDpF,SAArD,CAAgE,UAAAC,IAAI,EAAI;AACtE,uBAAI,CAACmF,YAAL,GAAoB,EAApB;;AACA,oBAAI,mBAAmBnF,IAAvB,EAA6B;AAC3B,sBAAM6R,WAAW,GAAG7R,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,UAAtB,CAApB;AACA,yBAAI,CAAC8F,YAAL,GAAoB9F,IAAI,CAAC,eAAD,CAAxB;AACA,yBAAI,CAACiF,SAAL,GAAiB,KAAjB;;AACA,yBAAI,CAACzF,eAAL,CAAqB4R,mBAArB,CAAyCS,WAAzC,EAAsD9R,SAAtD,CAAgE,UAAAiM,QAAQ,EAAI;AAC1E,wBAAI,eAAeA,QAAnB,EAA6B;AAC3B,6BAAI,CAAC/F,mBAAL;;AACA,6BAAI,CAACgG,WAAL,CAAyBD,QAAzB;AACD,qBAHD,MAGO;AACL,0BAAM9F,aAAa,GAAc8F,QAAjC;AACA9F,mCAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,+BAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,uBAA1B;AACD;AACF,mBARD;;AASA,yBAAI,CAAC3G,cAAL,CAAoByM,aAApB,CAAkC,aAAlC,EAAiD,OAAjD,EAA0D,GAA1D,EAA+D2F,WAA/D;AACD,iBAdD,MAcO;AACL,sBAAM3L,aAAa,GAAclG,IAAjC;AACAkG,+BAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,2BAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,mBAA1B;AACD;AACF,eApBD;AAqBD;AACF;;;iBAED,2BAAkB;AAChB,gBAAI,KAAK3H,QAAL,CAAc2I,OAAlB,EAA2B;AACzB,mBAAK3H,cAAL,CAAoByM,aAApB,CAAkC,aAAlC,EAAiD,SAAjD,EAA4D,GAA5D;AACA,qBAAO,KAAP;AACD;;AAED,gBAAI,KAAKzN,QAAL,CAAc+H,KAAd,KAAwB,KAA5B,EAAmC;AACjC,mBAAK/G,cAAL,CAAoByM,aAApB,CAAkC,SAAlC,EAA6C,WAA7C,EAA0D,GAA1D;AACA,qBAAO,KAAP;AACD;;AAED,iBAAK/G,YAAL,CAAkB,WAAlB,IAAiC,YAAjC;AACA,iBAAKA,YAAL,CAAkB,eAAlB,IAAqC,KAAKW,YAA1C;;AAEA,gBAAI,KAAKb,SAAT,EAAoB;AAClB,mBAAKE,YAAL,CAAkB,YAAlB,IAAkC;AAChCM,sBAAM,EAAE,KADwB;AACjByF,wBAAQ,EAAE,KAAKzM,QAAL,CAAcC,GAAd,CAAkB,UAAlB,EAA8B2I,KADvB;AAEhCgB,0BAAU,EAAE,KAAK7I,eAAL,CAAqBY,OAArB,CAA6B+L,OAFT;AAEkB7D,2BAAW,EAAE,KAAK9I,eAAL,CAAqB4M,WAFpD;AAGhC7D,0BAAU,EAAE,KAAK/I,eAAL,CAAqBY,OAArB,CAA6B+L,OAHT;AAGkB3D,2BAAW,EAAE,KAAKhJ,eAAL,CAAqB4M;AAHpD,eAAlC;AAID,aALD,MAKO;AACL,mBAAKjH,YAAL,CAAkB,YAAlB,IAAkC;AAChCM,sBAAM,EAAE,QADwB;AACd8C,0BAAU,EAAE,KAAK/I,eAAL,CAAqBY,OAArB,CAA6B+L,OAD3B;AACoC3D,2BAAW,EAAE,KAAKhJ,eAAL,CAAqB4M;AADtE,eAAlC;AAED;;AAED,gBAAI,KAAK3N,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAA0B8H,KAA9B,EAAqC;AACnC,mBAAKrB,YAAL,CAAkB,YAAlB,EAAgC,MAAhC,IAA0C,KAAK1G,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAA0B2I,KAApE;AACD;;AAED,gBAAMyK,kBAAkB,GAAG,KAAKrT,QAAL,CAAcC,GAAd,CAAkB,YAAlB,CAA3B;AACA,gBAAM+K,YAAY,GAAG,KAAK1E,eAAL,CAAqBiL,0BAArB,CACnB,sBADmB,EAEnB,CAAC;AAAChI,uBAAS,EAAE,WAAZ;AAAyBiI,qBAAO,EAAE;AAAlC,aAAD,CAFmB,EAGnB6B,kBAHmB,EAInB,KAAK5M,aAAL,CAAmB,YAAnB,CAJmB,EAKnB,CAAC,YAAD,EAAe,cAAf,CALmB,CAArB;;AAOA,gBAAIuE,YAAJ,EAAkB;AAAC,mBAAKtE,YAAL,CAAkB,eAAlB,IAAqC,CAACsE,YAAD,CAArC;AAAsD;;AAEzE,mBAAO,IAAP;AACD;;;iBAED,yBAAa;AACX,gBAAI,KAAKxE,SAAL,IAAmB,KAAKxG,QAAL,IAAiB,KAAKA,QAAL,CAAc+H,KAAtD,EAA8D;AAC5D,qBAAO,KAAK1B,aAAL,CAAmB2B,OAAnB,CAA2B,kBAA3B,CAAP;AACD,aAFD,MAEO;AACL,qBAAO,IAAP;AACD;AACF;;;;;;;yBAtRU9E,0B,EAAyB,yH,EAAA,6H,EAAA,qH,EAAA,2H,EAAA,+H,EAAA,iI,EAAA,uH,EAAA,yH,EAAA,gI;AAAA,O;;;cAAzBA,0B;AAAyB,+C;AAAA,iB;AAAA,e;AAAA,6rC;AAAA;AAAA;ADhBtC;;AACE;;AACE;;AAAyC;;AACmC;;AAC9E;;AAEA;;AACE;;AACQ;AAAA,qBAAS,IAAA4K,WAAA,EAAT;AAAsB,aAAtB;;AACN;;AAA8B;;AAAO;;AACvC;;AACA;;AAAwG;AAAA,qBAAS,IAAAC,iBAAA,EAAT;AAA4B,aAA5B;;AACtG;;AACA;;AACF;;AACA;;AAAyF;AAAA,qBAAS,IAAAV,IAAA,EAAT;AAAe,aAAf;;AACvF;;AAA2B;;AAAI;;AACjC;;AACF;;AACF;;AAEA;;AACE;;AACF;;AAEA;;;;AAvB6C;;AAAA;;AAUhC;;AAAA;;AACA;;AAAA;;AAEiG;;AAAA;;AAUxG;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEfJ;;AACE;;AACE;;AACE;;AACiF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AADjF;;AAEA;;AACE;;AACF;;AACA;;AACE;;AACQ;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AAA2E;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACzE;;AACF;;AACF;;AACF;;;;;;;;AAvBM;;AAAA;;AAGO;;AAAA;;AAEL;;AAAA;;AAUF;;AAAA;;AAImD;;AAAA;;;;UCpB9CxI,yB;AAKX,2CAAoBqB,EAApB,EACoBnF,eADpB,EACsD;AAAA;;AADlC,eAAAmF,EAAA,GAAAA,EAAA;AACA,eAAAnF,eAAA,GAAAA,eAAA;AAAqC;;;;iBAKzD,oBAAW;AAAA;;AACT,iBAAKsS,kBAAL,GAA0B,KAAKrT,QAAL,CAAcC,GAAd,CAAkB,YAAlB,CAA1B,CADS,CAET;;AACA,gBAAI,CAAC,KAAKsG,QAAV,EAAoB;AAClB,mBAAK8M,kBAAL,CAAwBjE,QAAxB,CAAiC1H,OAAjC,CAA0C,UAAC2H,IAAD,EAAOC,KAAP,EAAiB;AACzD,uBAAI,CAACzJ,WAAL,CAAiByJ,KAAjB;AACD,eAFD;AAGD;AACF;;;iBAED,iBAAOA,KAAP,EAAoB;AAClB,gBAAIA,KAAK,KAAK,KAAK+D,kBAAL,CAAwB7K,MAAxB,GAAiC,CAA/C,EAAkD;AAChD,mBAAK6K,kBAAL,CAAwBvK,QAAxB,CAAiCwG,KAAjC;AACA,mBAAK+D,kBAAL,CAAwB9D,WAAxB;AACD;AACF;;;iBAED,qBAAYD,KAAZ,EAAyB;AACvB,gBAAME,gBAAgB,GAAG,KAAK6D,kBAAL,CAAwB3K,EAAxB,CAA2B4G,KAA3B,CAAzB;;AACA,gBAAI,KAAKG,UAAL,CAAgBD,gBAAhB,CAAJ,EAAuC;AACrCA,8BAAgB,CAACvP,GAAjB,CAAqB,YAArB,EAAmCyP,SAAnC,CAA6C;AAACC,uBAAO,EAAE;AAAV,eAA7C;AACA;AACD;;AAED,gBAAIL,KAAK,KAAK,KAAK+D,kBAAL,CAAwB7K,MAAxB,GAAiC,CAA3C,IAAgDgH,gBAAgB,CAAC5G,KAAjB,CAAuBgE,UAAvB,CAAkCuB,IAAlC,OAA6C,EAAjG,EAAqG;AACnG;AACA,mBAAKkF,kBAAL,CAAwBhI,IAAxB,CACE,KAAKnF,EAAL,CAAQ+D,KAAR,CAAc;AACZ2C,0BAAU,EAAE,CAAC,EAAD,CADA;AAEZC,4BAAY,EAAE,CAAC,EAAD,CAFF;AAGZkG,wCAAwB,EAAE,CAAC,EAAD,CAHd;AAIZzH,0CAA0B,EAAE,CAAC,EAAD;AAJhB,eAAd,CADF;AAQD;;AAED,gBAAIkE,gBAAgB,CAAC5G,KAAjB,CAAuBgE,UAA3B,EAAuC;AACrC,mBAAK7L,eAAL,CAAqBuS,gBAArB,CAAsC9D,gBAAgB,CAAC5G,KAAjB,CAAuBgE,UAA7D,EAAyEtL,SAAzE,CAAmF,UAAAC,IAAI,EAAI;AACzF,oBAAIA,IAAI,CAAC,QAAD,CAAR,EAAoB;AAClBiO,kCAAgB,CAACvP,GAAjB,CAAqB,YAArB,EAAmCyP,SAAnC,CAA6C;AAACC,2BAAO,EAAEpO,IAAI,CAAC,cAAD;AAAd,mBAA7C;AACD,iBAFD,MAEO;AACLiO,kCAAgB,CAACvP,GAAjB,CAAqB,cAArB,EAAqC6P,QAArC,CAA8CvO,IAAI,CAAC,cAAD,CAAlD;AACAiO,kCAAgB,CAACvP,GAAjB,CAAqB,0BAArB,EAAiD6P,QAAjD,CAA0DvO,IAAI,CAAC,eAAD,CAA9D;AACD;AACF,eAPD;AAQD;AACF;;;iBAED,oBAAWwO,GAAX,EAA+B;AAC7B,gBAAMC,UAAU,GAAG,KAAKqD,kBAAL,CAAwBjE,QAAxB,CAAiCnD,SAAjC,CACjB,UAAAoD,IAAI;AAAA,qBAAIA,IAAI,CAACzG,KAAL,CAAWgE,UAAX,KAA0BmD,GAAG,CAACnH,KAAJ,CAAUgE,UAApC,IACHyC,IAAI,CAACY,QADF,IACcZ,IAAI,CAACzG,KAAL,CAAWgE,UAAX,KAA0B,EAD5C;AAAA,aADa,CAAnB;AAGA,mBAAOoD,UAAU,KAAK,CAAC,CAAvB;AACD;;;iBAED,sBAAaxK,KAAb,EAA4BC,YAA5B,EAAyD;AACvD,gBAAMC,aAAa,GAAG,UAAUC,OAAV,EAAwBC,MAAxB,EAAwC;AAC5D,qBAAO;AAAA,uBAAMD,OAAO,CAACE,WAAR,CAAoBD,MAApB,CAAN;AAAA,eAAP;AACD,aAFqB,CAEpB,IAFoB,EAEdJ,KAFc,EAEPM,IAFO,CAEF,IAFE,CAAtB;;AAIA,iBAAKC,mBAAL,CAAyBC,2BAAzB,CAAqD,WAArD,EAAkE,WAAlE,EAA+EP,YAA/E,EACE,KAAKc,QAAL,IAAiB,KAAKkJ,UAAL,CAAgBhK,YAAhB,KAAiCA,YAAY,CAACyK,KADjE,EACwE,IADxE,EAC8E,IAD9E,EACoFxK,aADpF;AAED;;;;;;;yBAzEUb,yB,EAAwB,wH,EAAA,+H;AAAA,O;;;cAAxBA,yB;AAAwB,8C;AAAA;AAAA;sEAQxB,yCAAAoB,mB,EAAqB,C;;;;;;;;;;;;;;;;;;ADlBlC;;AACE;;AACA;;AACE;;AAAgB;;AAAmB;;AACnC;;AAAgB;;AAAY;;AAC5B;;AAAgB;;AAAM;;AACxB;;AACA;;AAEA;;AACA;;AAyBA;;AACF;;AAEA;;;;AAtCgE;;AAUhC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE2B5B;;AACE;;AAAI;;AAA2E;;AAAoB;;AAAI;;AACvG;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAsB;;AAC1B;;AAAI;;AAAuB;;AAC3B;;AACE;;AAAsE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpE;;AACF;;AACA;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClE;;AACF;;AACA;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClE;;AACF;;AACF;;AACF;;;;;;AAfS;;AAAA;;AAAwE;;AAAA;;AAC3E;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;;UC9BGhD,wB;AASX,0CAAoBlC,eAApB,EACoBC,cADpB,EAEoBoF,MAFpB,EAEoC;AAAA;;AAFhB,eAAArF,eAAA,GAAAA,eAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAoF,MAAA,GAAAA,MAAA;AAPpB,eAAA6H,wBAAA,GAA2B,KAA3B;AAOuC;;;;eAJvC,eAAkC;AAAC,mBAAO,KAAKA,wBAAL,GAAgC,OAAhC,GAA0C,MAAjD;AAA0D;;;iBAM7F,oBAAW,CACV;;;iBAED,kBAAS;AAAA;;AACP,iBAAKjN,cAAL,CAAoBkH,aAApB;AACA,iBAAKqL,WAAL,GAAmB,EAAnB;AACA,iBAAKH,WAAL,GAAmB,KAAKA,WAAL,GAAmB,KAAKA,WAAL,CAAiBjF,IAAjB,EAAnB,GAA6C,EAAhE;AACA,iBAAKqF,WAAL,GAAmB,KAAKA,WAAL,GAAmB,KAAKA,WAAL,CAAiBrF,IAAjB,EAAnB,GAA6C,EAAhE;AACA,iBAAKpN,eAAL,CAAqB0S,iBAArB,CAAuC,KAAKL,WAA5C,EAAyD,KAAKI,WAA9D,EAA2ElS,SAA3E,CACE,UAAAC,IAAI,EAAI;AACN,kBAAI,CAACA,IAAI,CAAC,CAAD,CAAT,EAAc;AACZ,uBAAI,CAACP,cAAL,CAAoByM,aAApB,CAAkC,SAAlC,EAA6C,YAA7C,EAA2D,gDAAAa,WAAA,QAA3D;AACD,eAFD,MAEO,IAAI/M,IAAI,CAAC,CAAD,CAAJ,CAAQ,QAAR,CAAJ,EAAuB;AAC5B,oBAAMgN,QAAQ,GAAchN,IAA5B;AACAgN,wBAAQ,CAAC7G,OAAT,CAAkB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAArB;AACD,eAHM,MAGA;AACL,uBAAI,CAAC4L,WAAL,GAAkChS,IAAlC;AACD;AACF,aAVH;AAYD;;;iBAED,qBAAYiN,MAAZ,EAAkB;AAChB,gBAAIA,MAAM,CAACC,OAAP,KAAmB,EAAvB,EAA4B;AAC1B,mBAAKC,MAAL;AACD;AACF;;;iBAED,gBAAG;AACD,iBAAKtI,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,cAAD,EAAiB,GAAjB,EAAsB;AAACb,oBAAM,EAAE;AAAT,aAAtB,CAArB;AACD;;;iBAED,iBAAQoM,WAAR,EAA2B;AACzB,iBAAKhN,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,cAAD,EAAiBuL,WAAjB,EAA8B;AAACpM,oBAAM,EAAE;AAAT,aAA9B,CAArB;AACD;;;iBAED,gBAAOoM,WAAP,EAA0B;AACxB,iBAAKhN,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,cAAD,EAAiBuL,WAAjB,EAA8B;AAACpM,oBAAM,EAAE;AAAT,aAA9B,CAArB;AACD;;;iBAED,iBAAOoM,WAAP,EAA0B;AACxB,iBAAKzE,mBAAL,GAA2ByE,WAA3B;AACA,iBAAKnF,wBAAL,GAAgC,IAAhC;AACD;;;iBAED,0BAAc;AACZ,iBAAKA,wBAAL,GAAgC,KAAhC;AACD;;;iBAED,2BAAe;AAAA;;AACb,gBAAMW,uBAAuB,GAAG,KAAK2E,WAAL,CAAiBlT,IAAjB,CAC9B,UAAAwO,GAAG;AAAA,qBAAIA,GAAG,CAACpC,QAAJ,KAAiB,OAAI,CAACkC,mBAA1B;AAAA,aAD2B,EACoBG,aADpD;AAEA,iBAAK/N,eAAL,WAA4B6N,uBAA5B,EAAqDtN,SAArD,CAAgE,UAAAyN,QAAQ,EAAI;AAC1E,qBAAI,CAACd,wBAAL,GAAgC,KAAhC;;AACA,kBAAIc,QAAJ,EAAc;AACZ,oBAAMR,QAAQ,GAAcQ,QAA5B;AACAR,wBAAQ,CAAC7G,OAAT,CAAkB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAArB;AACD,eAHD,MAGO;AACL,uBAAI,CAAC+G,MAAL;AACD;AACF,aARD;AASD;;;;;;;yBA1EUzL,wB,EAAuB,+H,EAAA,+H,EAAA,oH;AAAA,O;;;cAAvBA,wB;AAAuB,6C;AAAA,iB;AAAA,e;AAAA,u2D;AAAA;AAAA;ADXpC;;AACE;;AACE;;AACE;;AAA2D;;AAAY;;AACvE;;AAA+C;AAAA;AAAA,eAAyB,OAAzB,EAAyB;AAAA,qBACV,IAAA+L,WAAA,QADU;AACS,aADlC;;AAA/C;;AAEF;;AACA;;AACE;;AAA2D;;AAAY;;AACvE;;AAA+C;AAAA;AAAA,eAAyB,OAAzB,EAAyB;AAAA,qBACV,IAAAA,WAAA,QADU;AACS,aADlC;;AAA/C;;AAEF;;AACF;;AAEA;;AACE;;AAAkF;AAAA,qBAAS,IAAAN,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAAM;;AAC7G;;AACF;;AAEA;;AACE;;AACA;;AACE;;AAA4D;AAAA,qBAAS,YAAT;AAAc,aAAd;;AAC1D;;AAAkC;;AAAG;;AACzC;;AACA;;AACE;;AACA;;AACE;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAM;;AACxB;;AACA;;AAEA;;AACA;;AAiBA;;AACF;;AAEA;;AAEE;;AACE;;AACE;;AACE;;AAA6C;;AAAgB;;AAC7D;;AAAoC;AAAA,qBAAS,IAAAO,cAAA,EAAT;AAAyB,aAAzB;;AAClC;;AAAyB;;AAAO;;AAClC;;AACF;;AACA;;AACE;;AAAG;;AAA0E;;AAC/E;;AACA;;AACE;;AAAmE;AAAA,qBAAS,IAAAA,cAAA,EAAT;AAAyB,aAAzB;;AAA2B;;AAAM;;AACpG;;AAAkE;AAAA,qBAAS,IAAAC,eAAA,EAAT;AAA0B,aAA1B;;AAA4B;;AAAO;;AACvG;;AACF;;AACF;;AACF;;AAEF;;;;AA1EqD;;AAAA;;AAKA;;AAAA;;AA4BzB;;AAAA;;AAoBP;;AAAA;;AACd;;AAUM;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpDL;;AAAiE;;AAAY;;;;;;AAA/B;;AAAmB;;AAAA;;;;;;AAKjE;;AAA2D;;AAAU;;;;;;AAA3B;;AAAiB;;AAAA;;;;;;;;AATjE;;AACE;;AACE;;AACmC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACjC;;AACF;;AACF;;AACA;;AACE;;AACE;;AACF;;AACF;;AACA;;AACE;;AAKF;;AACA;;AACE;;AAKF;;AACA;;AACE;;AAAwE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;AACA;;AAA2E;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACzE;;AACF;;AACF;;AACF;;;;;;;;AAjCM;;AAAA;;AAG6B;;AAAA;;AAG7B;;AAAA;;AAE2B;;AAAA;;AAIX;;AAAA,wGAA6B,WAA7B,EAA6B,mBAA7B,EAA6B,aAA7B,EAA6B,IAA7B,EAA6B,UAA7B,EAA6B,eAA7B;;AAOA;;AAAA,4GAAiC,WAAjC,EAAiC,mBAAjC,EAAiC,aAAjC,EAAiC,IAAjC,EAAiC,UAAjC,EAAiC,eAAjC;;AAOgC;;AAAA;;AAGG;;AAAA;;;;UChC9CjK,0B;AAQX,4CAAoBiB,EAApB,EAAqC;AAAA;;AAAjB,eAAAA,EAAA,GAAAA,EAAA;AAAoB;;;;iBAExC,oBAAQ;AACN,iBAAKwN,YAAL,GAAoB3H,MAAM,CAACX,MAAP,CAAc,uCAAAuI,QAAd,CAApB;AACA,iBAAKC,UAAL,GAAkB7H,MAAM,CAACX,MAAP,CAAc,uCAAAyI,MAAd,CAAlB;AACD;;;iBAED,0BAAiBC,GAAjB,EAA4B;AAC1B,gBAAMC,gBAAgB,GAAG,KAAKC,iBAAL,CAAuBtL,EAAvB,CAA0BoL,GAA1B,CAAzB;;AACA,gBAAKC,gBAAgB,CAAC9T,GAAjB,CAAqB,UAArB,EAAiC2I,KAAjC,KAA2C,uCAAA+K,QAAA,QAAhD,EAAmE;AACjEI,8BAAgB,CAAC9T,GAAjB,CAAqB,MAArB,EAA6BkN,MAA7B;AACD,aAFD,MAEO;AACL4G,8BAAgB,CAAC9T,GAAjB,CAAqB,MAArB,EAA6B6P,QAA7B,CAAsC,EAAtC;AACAiE,8BAAgB,CAAC9T,GAAjB,CAAqB,MAArB,EAA6BiN,OAA7B;AACD;AACF;;;iBAED,qBAAY4G,GAAZ,EAAuB;AACrB,iBAAKE,iBAAL,CAAuBC,MAAvB,CAA8BH,GAA9B,EAAmC,KAAK5N,EAAL,CAAQ+D,KAAR,CAAc;AAC/C0J,sBAAQ,EAAE,uCAAAA,QAAA,QADqC;AAE/CE,oBAAM,EAAE,uCAAAA,MAAA,QAFuC;AAG/CK,iBAAG,EAAE,EAH0C;AAI/CC,kBAAI,EAAE;AAJyC,aAAd,CAAnC;AAMD;;;iBAED,qBAAYL,GAAZ,EAAuB;AACrB,gBAAI,KAAKE,iBAAL,CAAuBxL,MAAvB,KAAkC,CAAtC,EAAyC;AACvC,mBAAKwL,iBAAL,CAAuBtL,EAAvB,CAA0BoL,GAA1B,EAA+B7T,GAA/B,CAAmC,KAAnC,EAA0C6P,QAA1C,CAAmD,EAAnD;AACA,mBAAKkE,iBAAL,CAAuBtL,EAAvB,CAA0BoL,GAA1B,EAA+B7T,GAA/B,CAAmC,MAAnC,EAA2C6P,QAA3C,CAAoD,EAApD;AACD,aAHD,MAGO;AACL,mBAAKkE,iBAAL,CAAuBlL,QAAvB,CAAgCgL,GAAhC;AACD;;AACD,iBAAKE,iBAAL,CAAuBzE,WAAvB;AACD;;;;;;;yBA1CUtK,0B,EAAyB,wH;AAAA,O;;;cAAzBA,0B;AAAyB,+C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,e;AAAA,2uB;AAAA;AAAA;ADVtC;;AACE;;AACA;;AACE;;AAAgB;;AAAQ;;AACxB;;AAAgB;;AAAM;;AACtB;;AAAgB;;AAAwB;;AACxC;;AAAgB;;AAAyB;;AACzC;;AAAgB;;AAAO;;AACzB;;AACA;;AAEA;;AACA;;AAmCA;;AACF;;;;AA3CoB;;AAAA;;AACA;;AAAA;;AAMe;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEHjC;;AACE;;AACE;;AAKF;;AACA;;AACE;;AAAwE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AACF;;AACA;;AAA2E;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACzE;;AACF;;AACF;;AACF;;;;;;;;AAdsB;;AAAA,wGAA6B,WAA7B,EAA6B,kBAA7B,EAA6B,aAA7B,EAA6B,IAA7B,EAA6B,UAA7B,EAA6B,eAA7B;;AAOgC;;AAAA;;AAGG;;AAAA;;;;UCZ9CD,0B;AAIX,4CAAoBkB,EAApB,EAAqC;AAAA;;AAAjB,eAAAA,EAAA,GAAAA,EAAA;AAAoB;;;;iBAExC,oBAAQ,CACP;;;iBAED,qBAAY4N,GAAZ,EAAuB;AACrB,iBAAKM,gBAAL,CAAsBH,MAAtB,CAA6BH,GAA7B,EAAkC,KAAK5N,EAAL,CAAQ+D,KAAR,CAAc;AAC9CiK,iBAAG,EAAE,CAAC,EAAD;AADyC,aAAd,CAAlC;AAGD;;;iBAED,qBAAYJ,GAAZ,EAAuB;AACrB,gBAAI,KAAKM,gBAAL,CAAsB5L,MAAtB,KAAiC,CAArC,EAAyC;AACvC,mBAAK4L,gBAAL,CAAsB1L,EAAtB,CAAyBoL,GAAzB,EAA8B7T,GAA9B,CAAkC,KAAlC,EAAyC6P,QAAzC,CAAkD,EAAlD;AACD,aAFD,MAEO;AACL,mBAAKsE,gBAAL,CAAsBtL,QAAtB,CAA+BgL,GAA/B;AACD;;AACD,iBAAKM,gBAAL,CAAsB7E,WAAtB;AACD;;;;;;;yBAtBUvK,0B,EAAyB,wH;AAAA,O;;;cAAzBA,0B;AAAyB,+C;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,qc;AAAA;AAAA;ADTtC;;AACE;;AACA;;AACE;;AAAgB;;AAAkB;;AAClC;;AAAgB;;AAAO;;AACzB;;AACA;;AAEA;;AACA;;AAiBA;;AACF;;;;AAxBoB;;AAAA;;AAMc;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEHhC;;;;;;AACM;;;;;;AAgBN;;;;;;AACwB,gHAAqC,UAArC,EAAqC,eAArC,EAAqC,UAArC,EAAqC,eAArC;;;;;;AAIxB;;;;;;AACwB,kHAAuC,UAAvC,EAAuC,eAAvC,EAAuC,cAAvC,EAAuC,mBAAvC,EAAuC,UAAvC,EAAuC,eAAvC;;;;;;AAP1B;;AACE;;AAKA;;AAMF;;;;;;AAZmC;;AACR;;AAAA;;AAKA;;AAAA;;;;UClBdD,mB;AAWX,qCAAoBmB,EAApB,EACoBpF,aADpB,EAEoBhB,uBAFpB,EAEsE;AAAA;;AAFlD,eAAAoG,EAAA,GAAAA,EAAA;AACA,eAAApF,aAAA,GAAAA,aAAA;AACA,eAAAhB,uBAAA,GAAAA,uBAAA;AAVpB,eAAA6G,QAAA,GAAW,CAAX;AAUyE;;;;iBAEzE,oBAAW,CACV;;;iBAED,uBAAW;AAAA;;AACT,gBAAI,CAAC,KAAK0N,kBAAV,EAA8B;AAAE;AAAS;;AACzC,gBAAI,KAAKD,gBAAT,EAA2B;AAAE,mBAAKA,gBAAL,CAAsBE,KAAtB;AAAgC;;AAC7D,gBAAI,KAAKN,iBAAT,EAA4B;AAAE,mBAAKA,iBAAL,CAAuBM,KAAvB;AAAiC;;AAC/D,iBAAKC,cAAL,GAAsB,KAAtB;AACA,iBAAK5T,QAAL,GAAgB,IAAhB;AACA,iBAAKgG,QAAL,GAAgB,CAAhB;AACA,gBAAM6N,UAAU,GAAG,KAAKH,kBAAL,CAAwBpU,GAAxB,CAA4B,YAA5B,EAA0C2I,KAA7D;AACA,iBAAK9H,aAAL,CAAmB2T,cAAnB,CAAkC,KAAKJ,kBAAL,CAAwBpU,GAAxB,CAA4B,cAA5B,EAA4C2I,KAA9E,EACGtH,SADH,CACc,UAAAX,QAAQ,EAAI;AACtB,kBAAM+T,SAAS,GAAc/T,QAA7B;AACA+T,uBAAS,CAACC,SAAV,GAAsBhU,QAAQ,CAACiU,UAA/B;AACAF,uBAAS,CAACG,SAAV,GAAsBlU,QAAQ,CAACiU,UAA/B;AACAF,uBAAS,CAAC7H,YAAV,GAAyBlM,QAAQ,CAACiU,UAAlC;AACA,qBAAI,CAACjU,QAAL,GAAgB,OAAI,CAACb,uBAAL,CAA6BgV,wBAA7B,CAAsDJ,SAAtD,CAAhB;AACA,qBAAI,CAAC/T,QAAL,CAAcC,IAAd,GAAqB,KAArB;AACA,qBAAI,CAACmU,YAAL,GAAoB,OAAI,CAACjV,uBAAL,CAA6BgV,wBAA7B,CAAsDJ,SAAtD,CAApB;AACA,qBAAI,CAACK,YAAL,CAAkBnU,IAAlB,GAAyB,MAAzB;AACD,aAVH;AAYA,iBAAKF,SAAL,GAAiB,KAAK2T,kBAAL,CAAwBpU,GAAxB,CAA4B,YAA5B,EAA0C2I,KAA3D;;AACA,gBAAI,CAAC4L,UAAD,IAAe,CAAC5I,IAAI,CAACC,KAAL,CAAW2I,UAAX,CAApB,EAA4C;AACxC,mBAAKJ,gBAAL,GAAwB,KAAKlO,EAAL,CAAQsE,KAAR,CAAc,CAAC,KAAKtE,EAAL,CAAQ+D,KAAR,CAAc;AAACiK,mBAAG,EAAE;AAAN,eAAd,CAAD,CAAd,CAAxB;AACA,mBAAKF,iBAAL,GAAyB,KAAK9N,EAAL,CAAQsE,KAAR,CAAc,CAAC,KAAKtE,EAAL,CAAQ+D,KAAR,CAAc;AACpD0J,wBAAQ,EAAE,CAAC;AAAC/K,uBAAK,EAAE,uCAAA+K,QAAA,QAAR;AAA0BqB,0BAAQ,EAAE,KAAKzO;AAAzC,iBAAD,CAD0C;AAEpDsN,sBAAM,EAAE,CAAC;AAACjL,uBAAK,EAAE,uCAAAiL,MAAA,QAAR;AAAwBmB,0BAAQ,EAAE,KAAKzO;AAAvC,iBAAD,CAF4C;AAEQ2N,mBAAG,EAAE,EAFb;AAEiBC,oBAAI,EAAE;AAFvB,eAAd,CAAD,CAAd,CAAzB;AAGH,aALD,MAKO;AACL,kBAAMc,cAAc,GAAGrJ,IAAI,CAACC,KAAL,CAAW2I,UAAX,CAAvB;;AACA,kBAAIS,cAAc,KAAK,GAAvB,EAA4B;AAC1B,qBAAKC,kBAAL,CAAwB,IAAxB;AACD,eAFD,MAEO;AACL,oBAAMC,YAAY,GAAG,EAArB;AACA,oBAAMC,aAAa,GAAG,EAAtB;AACAH,8BAAc,CAACvN,OAAf,CAAuB,UAAAwE,SAAS,EAAI;AAClC,sBAAI,OAAOA,SAAP,KAAqB,QAAzB,EAAmC;AACjCiJ,gCAAY,CAAC9J,IAAb,CAAkB,OAAI,CAACnF,EAAL,CAAQ+D,KAAR,CAAc;AAACiK,yBAAG,EAAEhI;AAAN,qBAAd,CAAlB;AACD,mBAFD,MAEO;AACLkJ,iCAAa,CAAC/J,IAAd,CAAmB,OAAI,CAACnF,EAAL,CAAQ+D,KAAR,CAAc;AAC/B0J,8BAAQ,EAAE,CAAC;AAAC/K,6BAAK,EAAEsD,SAAS,CAAC,UAAD,CAAjB;AAA+B8I,gCAAQ,EAAE,OAAI,CAACzO;AAA9C,uBAAD,CADqB;AAE/BsN,4BAAM,EAAE,CAAC;AAACjL,6BAAK,EAAEsD,SAAS,CAAC,QAAD,CAAjB;AAA6B8I,gCAAQ,EAAE,OAAI,CAACzO;AAA5C,uBAAD,CAFuB;AAG/B2N,yBAAG,EAAEhI,SAAS,CAAC,KAAD,CAHiB;AAI/BiI,0BAAI,EAAEjI,SAAS,CAAC,MAAD;AAJgB,qBAAd,CAAnB;AAMD;AACF,iBAXD;;AAYA,oBAAIiJ,YAAY,CAAC3M,MAAb,GAAsB,CAA1B,EAA8B;AAC5B,uBAAK4L,gBAAL,GAAwB,KAAKlO,EAAL,CAAQsE,KAAR,CAAc2K,YAAd,CAAxB;AACA,uBAAKxO,QAAL,GAAgB,CAAhB;AACD,iBAHD,MAGO;AACL,uBAAKyN,gBAAL,GAAwB,KAAKlO,EAAL,CAAQsE,KAAR,CAAc,CAAC,KAAKtE,EAAL,CAAQ+D,KAAR,CAAc;AAACiK,uBAAG,EAAE;AAAN,mBAAd,CAAD,CAAd,CAAxB;AACA,uBAAKvN,QAAL,GAAgB,CAAhB;AACD;;AAED,oBAAIyO,aAAa,CAAC5M,MAAd,GAAuB,CAA3B,EAA8B;AAC5B,uBAAKwL,iBAAL,GAAyB,KAAK9N,EAAL,CAAQsE,KAAR,CAAc4K,aAAd,CAAzB;AACD,iBAFD,MAEO;AACL,uBAAKpB,iBAAL,GAAyB,KAAK9N,EAAL,CAAQsE,KAAR,CAAc,CAAC,KAAKtE,EAAL,CAAQ+D,KAAR,CAAc;AACpD0J,4BAAQ,EAAE,CAAC;AAAC/K,2BAAK,EAAE,uCAAA+K,QAAA,QAAR;AAA0BqB,8BAAQ,EAAE,KAAKzO;AAAzC,qBAAD,CAD0C;AAEpDsN,0BAAM,EAAE,CAAC;AAACjL,2BAAK,EAAE,uCAAAiL,MAAA,QAAR;AAAwBmB,8BAAQ,EAAE,KAAKzO;AAAvC,qBAAD,CAF4C;AAEQ2N,uBAAG,EAAE,EAFb;AAEiBC,wBAAI,EAAE;AAFvB,mBAAd,CAAD,CAAd,CAAzB;AAGA,uBAAKxN,QAAL,GAAgB,CAAhB;AACD;AACF;AACF;AACF;;;iBAED,wBAAemB,UAAf,EAAiC;AAC/B,iBAAKnB,QAAL,GAAgBmB,UAAhB;AACD;;;iBAED,6BAAiB;AACf,gBAAI,CAAC,KAAKsM,gBAAL,CAAsBrM,KAAvB,IAAgC,CAAC,KAAKiM,iBAAL,CAAuBjM,KAA5D,EAAmE;AAAE,qBAAO,IAAP;AAAc;;AACnF,gBAAI,KAAKwM,cAAT,EAAyB;AAAE,qBAAO,IAAP;AAAc;;AACzC,gBAAMC,UAAU,GAAG,EAAnB;AACA,gBAAIa,SAAS,GAAG,KAAhB;AACA,iBAAKjB,gBAAL,CAAsBhF,QAAtB,CAA+B1H,OAA/B,CAAwC,UAAA4N,eAAe,EAAI;AACzD,kBAAMC,WAAW,GAAGD,eAAe,CAACrV,GAAhB,CAAoB,KAApB,EAA2B2I,KAA/C;;AACA,kBAAI2M,WAAW,IAAIf,UAAU,CAACvI,SAAX,CAAsB,UAAArD,KAAK;AAAA,uBAAIA,KAAK,KAAK2M,WAAd;AAAA,eAA3B,MAA0D,CAAC,CAA9E,EAAiF;AAC/Ef,0BAAU,CAACnJ,IAAX,CAAgBkK,WAAhB;AACD;AACF,aALD;AAMA,iBAAKvB,iBAAL,CAAuB5E,QAAvB,CAAgC1H,OAAhC,CAAyC,UAAAqM,gBAAgB,EAAI;AAC3D,kBAAMyB,YAAY,GAAiBzB,gBAAgB,CAACnL,KAApD;;AACA,kBAAI4M,YAAY,CAACtB,GAAjB,EAAsB;AACpB,oBAAIsB,YAAY,CAAC7B,QAAb,KAA0B,uCAAAA,QAAA,QAA1B,IACF6B,YAAY,CAACtB,GAAb,IAAoBsB,YAAY,CAACrB,IADnC,EACyC;AACvCJ,kCAAgB,CAAC9T,GAAjB,CAAqB,KAArB,EAA4ByP,SAA5B,CAAsC;AAACC,2BAAO,EAAE;AAAV,mBAAtC;AACA0F,2BAAS,GAAG,IAAZ;AACD,iBAJD,MAIO;AACLb,4BAAU,CAACnJ,IAAX,CAAgBmK,YAAhB;AACD;AACF;AACF,aAXD;;AAYA,gBAAIH,SAAJ,EAAe;AAAE,qBAAO,KAAP;AAAe;;AAEhC,gBAAIb,UAAU,CAAChM,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,mBAAK6L,kBAAL,CAAwBpU,GAAxB,CAA4B,YAA5B,EAA0C6P,QAA1C,CAAmD,EAAnD;AACA,mBAAKuE,kBAAL,CAAwBpU,GAAxB,CAA4B,QAA5B,EAAsC6P,QAAtC,CAA+C,KAA/C;AACD,aAHD,MAGO;AACL,mBAAKuE,kBAAL,CAAwBpU,GAAxB,CAA4B,YAA5B,EAA0C6P,QAA1C,CAAmDlE,IAAI,CAACqB,SAAL,CAAeuH,UAAf,EAA2B,IAA3B,EAAiC,GAAjC,CAAnD;AACA,mBAAKH,kBAAL,CAAwBpU,GAAxB,CAA4B,QAA5B,EAAsC6P,QAAtC,CAA+C,OAA/C;AACD;;AACD,iBAAKuE,kBAAL,CAAwBpU,GAAxB,CAA4B,YAA5B,EAA0CsP,WAA1C;AACA,mBAAO,IAAP;AACD;;;iBAED,+BAAmB;AACjB,iBAAK2F,kBAAL,CAAwB,CAAC,KAAKX,cAA9B;;AACA,iBAAKF,kBAAL,CAAwBpU,GAAxB,CAA4B,YAA5B,EAA0CsP,WAA1C;AACD;;;iBAED,4BAAmBkG,MAAnB,EAAkC;AAChC,iBAAKlB,cAAL,GAAsBkB,MAAtB;AACA,iBAAKpB,kBAAL,CAAwBpU,GAAxB,CAA4B,QAA5B,EAAsC6P,QAAtC,CAA+C2F,MAAM,GAAG,OAAH,GAAa,KAAlE;AACA,iBAAKpB,kBAAL,CAAwBpU,GAAxB,CAA4B,YAA5B,EAA0C6P,QAA1C,CAAmD2F,MAAM,GAAG,KAAH,GAAW,EAApE;;AACA,gBAAIA,MAAJ,EAAY;AACV,mBAAKrB,gBAAL,GAAwB,KAAKlO,EAAL,CAAQsE,KAAR,CAAc,EAAd,CAAxB;AACA,mBAAKwJ,iBAAL,GAAyB,KAAK9N,EAAL,CAAQsE,KAAR,CAAc,EAAd,CAAzB;AACD,aAHD,MAGO;AACL,mBAAK4J,gBAAL,GAAwB,KAAKlO,EAAL,CAAQsE,KAAR,CAAc,CAAC,KAAKtE,EAAL,CAAQ+D,KAAR,CAAc;AAACiK,mBAAG,EAAE;AAAN,eAAd,CAAD,CAAd,CAAxB;AACA,mBAAKF,iBAAL,GAAyB,KAAK9N,EAAL,CAAQsE,KAAR,CAAc,CAAC,KAAKtE,EAAL,CAAQ+D,KAAR,CAAc;AACpD0J,wBAAQ,EAAE,uCAAAA,QAAA,QAD0C;AACxBE,sBAAM,EAAE,uCAAAA,MAAA,QADgB;AAEpDK,mBAAG,EAAE,EAF+C;AAE3CC,oBAAI,EAAE;AAFqC,eAAd,CAAD,CAAd,CAAzB;AAGD;AACF;;;;;;;yBA7IUpP,mB,EAAkB,wH,EAAA,uH,EAAA,iI;AAAA,O;;;cAAlBA,mB;AAAkB,uC;AAAA;AAAA;AAAA;AAAA,S;AAAA,sF;AAAA,iB;AAAA,e;AAAA,y0B;AAAA;AAAA;ADV/B;;AACE;;AACE;;AACO;AAAA;AAAA,eAA4B,OAA5B,EAA4B;AAAA,qBAAgC,IAAA2Q,mBAAA,EAAhC;AAAqD,aAAjF;;AADP;;AAEA;;AAAyD;;AAAsB;;AACjF;;AACA;;AAIF;;AAEA;;AACE;;AACE;;AACG;AAAA,qBAAS,IAAAC,cAAA,CAAe,CAAf,CAAT;AAA0B,aAA1B;;AAA4B;;AAAa;;AAC9C;;AACA;;AACE;;AACG;AAAA,qBAAS,IAAAA,cAAA,CAAe,CAAf,CAAT;AAA0B,aAA1B;;AAA4B;;AAAc;;AAC/C;;AACF;;AACA;;;;AAnBW;;AAAA,oGAA4B,UAA5B,EAA4B,YAA5B;;AAGF;;AAAA;;AAQe;;AAAA;;AAIA;;AAAA;;AAIlB;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEEF;;AACE;;AAEgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAChC;;AAAO;;AACT;;;;;;AAJQ;;AAAA;;AAGC;;AAAA;;;;;;AAET;;AACE;;AACA;;AACA;;AACF;;;;;;AADE;;AAAA;;;;;;AAYF;;AAA2D;;AAAiC;;;;;;AAAjC;;AAAA;;;;;;;;AAC3D;;AACE;;AAA+C;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAC7C;;AACuB;;AAC3B;;;;;;AAFI;;AAAA;;;;;;;;;;;;;;;;AA7BN;;AAEE;;AACE;;AAAsF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAtF;;AACF;;AACA;;AAMA;;AAMA;;AACE;;AAAwE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACtE;;AAIF;;AACF;;AAEA;;AACA;;AAKF;;;;;;;;AA/BI;;AACsB;;AAAA;;AAGnB;;AAAA;;AAMA;;AAAA;;AAO+C;;AAAA;;AAC1C;;AAAA;;AAOL;;AAAA;;AACA;;AAAA;;;;;;;;AAvCT;;AAEE;;AACA;;AACE;;AAAwB;;AAA0C;AAAA;;AAAA;;AAAA;AAAA;;AAA1C;;AAA+D;;AACvF;;AAA2B;;AAA4B;;AACvD;;AAA2B;;AAAM;;AACjC;;AAA0B;;AAAiC;;AAC7D;;AACA;;AAEA;;AACA;;AAiCA;;AACF;;;;;;AA7CiD;;AAWnB;;AAAA;;;;;;AAoEtB;;;;;;AACwB,2GAAgC,WAAhC,EAAgC,4BAAhC,EAAgC,aAAhC,EAAgC,IAAhC,EAAgC,UAAhC,EAAgC,KAAhC;;;;;;;;;;;;;;;;UC5EnB7Q,uB;AAeX,yCAAqBoB,EAArB,EACqBnF,eADrB,EAEqBD,aAFrB,EAGqBE,cAHrB,EAIqBlB,uBAJrB,EAIqE;AAAA;;AAJhD,eAAAoG,EAAA,GAAAA,EAAA;AACA,eAAAnF,eAAA,GAAAA,eAAA;AACA,eAAAD,aAAA,GAAAA,aAAA;AACA,eAAAE,cAAA,GAAAA,cAAA;AACA,eAAAlB,uBAAA,GAAAA,uBAAA;AAZrB,eAAA8V,qBAAA,GAAwB,KAAxB;AACA,eAAAC,sBAAA,GAAyB,KAAzB;AACA,eAAAC,SAAA,GAAY,KAAZ;AACA,eAAAC,MAAA,GAAS,CAAT;AAS2E;;;;eAP3E,eAA4B;AAAC,mBAAO,KAAKH,qBAAL,GAA6B,OAA7B,GAAuC,MAA9C;AAAuD;;;eACpF,eAA6B;AAAC,mBAAO,KAAKC,sBAAL,GAA8B,OAA9B,GAAwC,MAA/C;AAAwD;;;iBAatF,oBAAW,CACV;;;iBAED,uBAAc;AACZ,gBAAI,CAAC,KAAK7V,QAAV,EAAoB;AAAE;AAAS;;AAC/B,iBAAKgW,gBAAL,GAAmC,KAAKhW,QAAL,CAAcC,GAAd,CAAkB,KAAKgW,QAAvB,CAAnC;AACA,iBAAKD,gBAAL,CAAsB5G,QAAtB,CAA+B1H,OAA/B,CAAwC,UAAA2H,IAAI,EAAI;AAC9C,kBAAIA,IAAI,CAACpP,GAAL,CAAS,UAAT,EAAqB2I,KAArB,KAA+B,OAAnC,EAA4C;AAAEyG,oBAAI,CAACpP,GAAL,CAAS,SAAT,EAAoBiN,OAApB;AAAgC;AAC/E,aAFD;AAGD;;;iBAED,oBAAQ;AAAA;;AACN,iBAAK8I,gBAAL,CAAsB5G,QAAtB,CAA+B1H,OAA/B,CAAwC,UAAAoL,WAAW;AAAA,qBAAIA,WAAW,CAAC7S,GAAZ,CAAgB,SAAhB,EAA2B6P,QAA3B,CAAoC,CAAC,OAAI,CAACgG,SAA1C,CAAJ;AAAA,aAAnD;AACA,iBAAKA,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACD;;;iBAED,yBAAgBhC,GAAhB,EAA2B;AACzB,gBAAMoC,kBAAkB,GAAG,KAAKF,gBAAL,CAAsBtN,EAAtB,CAAyBoL,GAAzB,CAA3B;AACA,iBAAKkC,gBAAL,CAAsB5G,QAAtB,CAA+B1H,OAA/B,CAAwC,UAACoL,WAAD,EAAcxD,KAAd,EAAwB;AAC9D,kBAAIA,KAAK,IAAIwE,GAAb,EAAkB;AAAE;AAAS;;AAC7B,kBAAIhB,WAAW,CAAC7S,GAAZ,CAAgB,SAAhB,EAA2B2I,KAA3B,KAAqCsN,kBAAkB,CAACjW,GAAnB,CAAuB,SAAvB,EAAkC2I,KAA3E,EAAkF;AAChFkK,2BAAW,CAAC7S,GAAZ,CAAgB,SAAhB,EAA2B6P,QAA3B,CAAoC,CAACoG,kBAAkB,CAACjW,GAAnB,CAAuB,SAAvB,EAAkC2I,KAAvE;AACD;AACF,aALD;AAMD;;;iBAED,eAAG;AAAA;;AACD,iBAAKuN,qBAAL,GAA6B,KAAKjQ,EAAL,CAAQ+D,KAAR,CAAc;AACzCkC,qBAAO,EAAE,EADgC;AAEzCC,uBAAS,EAAE,KAF8B;AAGzCC,qBAAO,EAAE,EAAE,KAAK0J,MAHyB;AAIzCzJ,oBAAM,EAAE,KAJiC;AAKzChB,wCAA0B,EAAE,EALa;AAMzCiB,uCAAyB,EAAE,EANc;AAOzCC,wBAAU,EAAE,EAP6B;AAQzCC,sBAAQ,EAAE,EAR+B;AASzCC,kBAAI,EAAE,EATmC;AAUzCC,sBAAQ,EAAE,QAV+B;AAWzCC,wBAAU,EAAE,EAX6B;AAYzCC,0BAAY,EAAE;AAZ2B,aAAd,CAA7B;;AAcA,gBAAI,CAAC,KAAKuJ,WAAV,EAAuB;AACrB,mBAAKtV,aAAL,CAAmB2T,cAAnB,CAAkC,eAAlC,EACGnT,SADH,CACa,UAAA+U,WAAW,EAAI;AACxB,oBAAM3B,SAAS,GAAc2B,WAA7B;AACA3B,yBAAS,CAACC,SAAV,GAAsB0B,WAAW,CAACzB,UAAlC;AACAF,yBAAS,CAACG,SAAV,GAAsBwB,WAAW,CAACzB,UAAlC;AACAF,yBAAS,CAAC7H,YAAV,GAAyBwJ,WAAW,CAACzB,UAArC;AACA,uBAAI,CAACwB,WAAL,GAAmB,OAAI,CAACtW,uBAAL,CAA6BgV,wBAA7B,CAAsDJ,SAAtD,CAAnB;AACA,uBAAI,CAAC0B,WAAL,CAAiBxV,IAAjB,GAAwB,UAAxB;AACD,eARH;AASD;;AACD,iBAAKiV,sBAAL,GAA8B,IAA9B;AACD;;;iBAED,gCAAoB;AAClB,iBAAKA,sBAAL,GAA8B,KAA9B;AACD;;;iBAED,yBAAa;AAAA;;AACX,gBAAMzC,WAAW,GAAG,KAAK+C,qBAAL,CAA2BlW,GAA3B,CAA+B,UAA/B,EAA2C2I,KAA/D;AACA,iBAAK7H,eAAL,CAAqB4R,mBAArB,CAAyCS,WAAzC,EACG9R,SADH,CACc,UAAAC,IAAI,EAAI;AAClB,kBAAI,eAAeA,IAAnB,EAAyB;AACvB,uBAAI,CAAC4U,qBAAL,CAA2BlW,GAA3B,CAA+B,2BAA/B,EAA4D6P,QAA5D,CAAqEvO,IAAI,CAAC,eAAD,CAAzE;;AACA,uBAAI,CAAC4U,qBAAL,CAA2BlW,GAA3B,CAA+B,MAA/B,EAAuC6P,QAAvC,CAAgDvO,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,MAAtB,CAAhD;;AACA,uBAAI,CAACyU,gBAAL,CAAsB3K,IAAtB,CAA2B,OAAI,CAAC8K,qBAAhC;;AACA5U,oBAAI,CAAC,eAAD,CAAJ,CAAsB,CAAtB,EAAyB6J,MAAzB,CAAgC1D,OAAhC,CAAyC,UAAAkB,KAAK,EAAI;AAChD,yBAAI,CAACoN,gBAAL,CAAsB3K,IAAtB,CAA2B,OAAI,CAACnF,EAAL,CAAQ+D,KAAR,CAAc;AACvCkC,2BAAO,EAAE,CAAC;AAACvD,2BAAK,EAAE,EAAR;AAAYoM,8BAAQ,EAAE;AAAtB,qBAAD,CAD8B;AAEvC5I,6BAAS,EAAE,KAF4B;AAGvCC,2BAAO,EAAE,OAAI,CAAC0J,MAHyB;AAIvCzJ,0BAAM,EAAE,KAJ+B;AAKvChB,8CAA0B,EAAE,EALW;AAMvCiB,6CAAyB,EAAE3D,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,eAA9B,CANY;AAOvC4D,8BAAU,EAAE,EAP2B;AAQvCC,4BAAQ,EAAE2G,WAR6B;AASvC1G,wBAAI,EAAE,OAAI,CAACyJ,qBAAL,CAA2BlW,GAA3B,CAA+B,MAA/B,EAAuC2I,KATN;AAUvC+D,4BAAQ,EAAE,OAV6B;AAWvCC,8BAAU,EAAEhE,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,WAA9B,EAA2C,CAA3C,EAA8C,YAA9C,CAX2B;AAYvCiE,gCAAY,EAAEjE,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,WAA9B,EAA2C,CAA3C,EAA8C,cAA9C;AAZyB,mBAAd,CAA3B;AAcD,iBAfD;AAgBD,eApBD,MAoBO;AACL,oBAAMnB,aAAa,GAAclG,IAAjC;AACAkG,6BAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAA1B;AACD;;AACD,qBAAI,CAACkO,sBAAL,GAA8B,KAA9B;AACD,aA3BH;AA4BD;;;iBAED,mBAAM;AACJ,gBAAIvG,KAAK,GAAG,KAAK0G,gBAAL,CAAsB5G,QAAtB,CAA+BnD,SAA/B,CAA0C,UAAA6G,WAAW;AAAA,qBAAIA,WAAW,CAAC7S,GAAZ,CAAgB,SAAhB,EAA2B2I,KAA/B;AAAA,aAArD,CAAZ;;AACA,mBAAQ0G,KAAK,KAAK,CAAC,CAAnB,EAAsB;AACpB,mBAAK0G,gBAAL,CAAsBlN,QAAtB,CAA+BwG,KAA/B;AACA,mBAAK0G,gBAAL,CAAsBzG,WAAtB;AACAD,mBAAK,GAAG,KAAK0G,gBAAL,CAAsB5G,QAAtB,CAA+BnD,SAA/B,CAA0C,UAAA6G,WAAW;AAAA,uBAAIA,WAAW,CAAC7S,GAAZ,CAAgB,SAAhB,EAA2B2I,KAA/B;AAAA,eAArD,CAAR;AACD;AACF;;;iBAED,sBAAapD,KAAb,EAA4BC,YAA5B,EAAyD;AACvD,gBAAMC,aAAa,GAAG,UAAUC,OAAV,EAAwBC,MAAxB,EAAwC;AAC5D,qBAAO;AAAA,uBAAMD,OAAO,CAAC2Q,gBAAR,CAAyB1Q,MAAzB,CAAN;AAAA,eAAP;AACD,aAFqB,CAEpB,IAFoB,EAEdJ,KAFc,EAEPM,IAFO,CAEF,IAFE,CAAtB;;AAIA,iBAAKC,mBAAL,CAAyBC,2BAAzB,CAAqD,YAArD,EAAmE,YAAnE,EACEP,YADF,EACgB,KAAKc,QADrB,EAC+B,IAD/B,EACqC,IADrC,EAC2Cb,aAD3C;AAED;;;iBAED,wBAAeoO,GAAf,EAA0B;AACxB,gBAAMyC,WAAW,GAAG,KAAKP,gBAAL,CAAsBtN,EAAtB,CAAyBoL,GAAzB,CAApB;AACA,gBAAM0C,UAAU,GAAGD,WAAW,CAACtW,GAAZ,CAAgB,SAAhB,EAA2B2I,KAA9C;AACA,iBAAKoN,gBAAL,CAAsB5G,QAAtB,CAA+B1H,OAA/B,CAAwC,UAAA+O,cAAc,EAAI;AACxD,kBAAIA,cAAc,CAACxW,GAAf,CAAmB,SAAnB,EAA8B2I,KAA9B,KAAwC4N,UAA5C,EAAyD;AACvDC,8BAAc,CAACxW,GAAf,CAAmB,WAAnB,EAAgC6P,QAAhC,CAAyC,CAAC2G,cAAc,CAACxW,GAAf,CAAmB,WAAnB,EAAgC2I,KAA1E;AACD;AACF,aAJD;AAKD;;;iBAED,4BAAmBkL,GAAnB,EAA8B;AAC5B,iBAAK8B,qBAAL,GAA6B,IAA7B;AACA,iBAAKc,yBAAL,GAA4C,KAAKV,gBAAL,CAAsBtN,EAAtB,CAAyBoL,GAAzB,CAA5C;AACD;;;iBAED,wBAAY;AACV,gBAAK,KAAK6C,kBAAL,CAAwBC,iBAAxB,EAAL,EAAmD;AACjD,mBAAKC,iBAAL,CAAuB,KAAKH,yBAA5B;;AACA,mBAAKd,qBAAL,GAA6B,KAA7B;AACD;AACF;;;iBAED,2BAAkB9B,GAAlB,EAA6B;AAC3B,gBAAMgD,kBAAkB,GAAG,KAAKd,gBAAL,CAAsBtN,EAAtB,CAAyBoL,GAAzB,CAA3B;;AACA,gBAAIgD,kBAAkB,CAAC7W,GAAnB,CAAuB,QAAvB,EAAiC2I,KAAjC,KAA2C,OAA/C,EAAwD;AAAE;AAAS;;AAEnE,gBAAIkO,kBAAkB,CAAC7W,GAAnB,CAAuB,UAAvB,EAAmC2I,KAAnC,KAA6C,QAAjD,EAA2D;AACzDkO,gCAAkB,CAAC7W,GAAnB,CAAuB,QAAvB,EAAiC6P,QAAjC,CAA0C,OAA1C;AACA,mBAAKkG,gBAAL,CAAsB5G,QAAtB,CAA+B1H,OAA/B,CAAwC,UAAAqP,cAAc,EAAI;AACxD,oBAAIA,cAAc,CAAC9W,GAAf,CAAmB,SAAnB,EAA8B2I,KAA9B,KAAwCkO,kBAAkB,CAAC7W,GAAnB,CAAuB,SAAvB,EAAkC2I,KAA1E,IACAmO,cAAc,CAAC9W,GAAf,CAAmB,UAAnB,EAA+B2I,KAA/B,KAAyC,OAD7C,EACsD;AACpDmO,gCAAc,CAAC9W,GAAf,CAAmB,YAAnB,EAAiC6P,QAAjC,CAA0C,KAA1C;AACAiH,gCAAc,CAAC9W,GAAf,CAAmB,YAAnB,EAAiCsP,WAAjC;AACAwH,gCAAc,CAAC9W,GAAf,CAAmB,QAAnB,EAA6B6P,QAA7B,CAAsC,OAAtC;AACD;AACF,eAPD;AAQD,aAVD,MAUO;AAAE;AACPgH,gCAAkB,CAAC7W,GAAnB,CAAuB,YAAvB,EAAqC6P,QAArC,CAA8C,KAA9C;AACAgH,gCAAkB,CAAC7W,GAAnB,CAAuB,YAAvB,EAAqCsP,WAArC;AACAuH,gCAAkB,CAAC7W,GAAnB,CAAuB,QAAvB,EAAiC6P,QAAjC,CAA0C,OAA1C;;AACA,mBAAK+G,iBAAL,CAAuBC,kBAAvB;AACD;AACF;;;iBAED,2BAAkBC,cAAlB,EAAiD;AAC/C,gBAAMC,oBAAoB,GAAG,KAAKhB,gBAAL,CAAsB5G,QAAtB,CAA+B/O,IAA/B,CAAqC,UAAAgP,IAAI;AAAA,qBACpEA,IAAI,CAACpP,GAAL,CAAS,UAAT,EAAqB2I,KAArB,KAA+B,QAA/B,IACAyG,IAAI,CAACpP,GAAL,CAAS,SAAT,EAAoB2I,KAApB,KAA8BmO,cAAc,CAAC9W,GAAf,CAAmB,SAAnB,EAA8B2I,KAFQ;AAAA,aAAzC,CAA7B;;AAGA,gBAAI,KAAKoN,gBAAL,CAAsB5G,QAAtB,CAA+BnD,SAA/B,CAA0C,UAAAoD,IAAI;AAAA,qBAAIA,IAAI,CAACpP,GAAL,CAAS,UAAT,EAAqB2I,KAArB,KAA+B,OAA/B,IACpDyG,IAAI,CAACpP,GAAL,CAAS,SAAT,EAAoB2I,KAApB,KAA8BmO,cAAc,CAAC9W,GAAf,CAAmB,SAAnB,EAA8B2I,KADR,IAEpDyG,IAAI,CAACpP,GAAL,CAAS,QAAT,EAAmB2I,KAAnB,KAA6B,KAFmB;AAAA,aAA9C,MAEsC,CAAC,CAF3C,EAE8C;AAC5CoO,kCAAoB,CAAC/W,GAArB,CAAyB,QAAzB,EAAmC6P,QAAnC,CAA4C,OAA5C;AACD,aAJD,MAIO;AACL,kBAAI,KAAKkG,gBAAL,CAAsB5G,QAAtB,CAA+BnD,SAA/B,CAA0C,UAAAoD,IAAI;AAAA,uBAAIA,IAAI,CAACpP,GAAL,CAAS,UAAT,EAAqB2I,KAArB,KAA+B,OAA/B,IACpDyG,IAAI,CAACpP,GAAL,CAAS,SAAT,EAAoB2I,KAApB,KAA8BmO,cAAc,CAAC9W,GAAf,CAAmB,SAAnB,EAA8B2I,KADR,IAEpDyG,IAAI,CAACpP,GAAL,CAAS,QAAT,EAAmB2I,KAAnB,KAA6B,OAFmB;AAAA,eAA9C,MAEwC,CAAC,CAF7C,EAEgD;AAC9CoO,oCAAoB,CAAC/W,GAArB,CAAyB,QAAzB,EAAmC6P,QAAnC,CAA4C,KAA5C;AACD,eAJD,MAIO;AACLkH,oCAAoB,CAAC/W,GAArB,CAAyB,QAAzB,EAAmC6P,QAAnC,CAA4C,QAA5C;AACD;AACF;AACF;;;;;;;yBApMUhL,uB,EAAsB,wH,EAAA,+H,EAAA,uH,EAAA,+H,EAAA,iI;AAAA,O;;;cAAtBA,uB;AAAsB,0C;AAAA;AAAA;sEAqBtB,yCAAAmB,mB,EAAqB,C;;sEAErB,8DAAAlB,kB,EAAoB,C;;;;;;;;;;;;;;;;;;;;;ADnCjC;;AACA;;AACE;;AAAsE;AAAA,qBAAS,eAAT;AAAiB,aAAjB;;AACpE;;AAAmC;;AAAM;;AAC3C;;AAA4D;AAAA,qBAAS,IAAA6C,GAAA,EAAT;AAAc,aAAd;;AAC1D;;AAAkC;;AAAG;;AACzC;;AACA;;AA+CA;;AAEA;;AAGE;;AACE;;AACE;;AACE;;AAA0D;;AAA4B;;AACxF;;AACA;;AACE;;AACA;;AACF;;AACA;;AACE;;AAAqD;AAAA,qBAAS,IAAAqP,YAAA,EAAT;AAAuB,aAAvB;;AAAyB;;AAAE;;AAClF;;AACF;;AACF;;AACF;;AAEA;;AAGE;;AACE;;AACE;;AACE;;AAAgD;;AAAwB;;AACxE;;AAAoC;AAAA,qBAAS,IAAAC,oBAAA,EAAT;AAA+B,aAA/B;;AAClC;;AAAyB;;AAAO;;AAClC;;AACF;;AACA;;AACE;;AAMF;;AACA;;AACE;;AAAuD;AAAA,qBAAS,IAAAA,oBAAA,EAAT;AAA+B,aAA/B;;AAAiC;;AAAM;;AAC9F;;AAAqD;AAAA,qBAAS,IAAAC,aAAA,EAAT;AAAwB,aAAxB;;AAA0B;;AAAO;;AACxF;;AACF;;AACF;;AACF;;;;AAlG2F;;AAAA;;AAEb;;AAAA;;AAGtE;;AAAA;;AAkDH;;AAAA,mLAA2C,SAA3C,EAA2C,iGAA3C;;AASmB;;AAAA,0HAAgD,UAAhD,EAAgD,YAAhD;;AAUnB;;AAAA,oLAA4C,SAA5C,EAA4C,kGAA5C;;AAW4B;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEzEpBtT,oB;AADb;AAAA;;AAEE,eAAAuT,aAAA,GAA0B,CAAC,OAAD,EAAU,MAAV,EAAkB,gBAAlB,EAAoC,cAApC,EAAoD,aAApD,EAAmE,UAAnE,CAA1B;AACA,eAAAC,kBAAA,GAAqB,IAAIC,GAAJ,EAArB;AAsDD;AApDC;;;;;;;;;iBAKA,sBAAanR,KAAb,EAA0C;AACxC;AACA,mBAAO,KAAKiR,aAAL,CAAmBG,OAAnB,CAA2BpR,KAAK,CAACqR,WAAN,CAAkB1V,IAA7C,IAAqD,CAAC,CAA7D;AACD;AAED;;;;;;;;;iBAMA,eAAMqE,KAAN,EAAqCsR,MAArC,EAAgE;AAC9D;AACA,iBAAKJ,kBAAL,CAAwBK,GAAxB,CAA4BvR,KAAK,CAACqR,WAAN,CAAkB1V,IAA9C,EAAoD2V,MAApD;AACD;AAED;;;;;;;;iBAKA,sBAAatR,KAAb,EAA0C;AACxC;AACA,mBAAO,KAAKkR,kBAAL,CAAwBM,GAAxB,CAA4BxR,KAAK,CAACqR,WAAN,CAAkB1V,IAA9C,CAAP;AACD;AAED;;;;;;;iBAIA,kBAASqE,KAAT,EAAsC;AACpC,mBAAO,KAAKkR,kBAAL,CAAwBpX,GAAxB,CAA4BkG,KAAK,CAACqR,WAAN,CAAkB1V,IAA9C,CAAP;AACD;AAED;;;;;;;;;;;;iBASA,0BAAiB8V,MAAjB,EAAiDC,IAAjD,EAA6E;AAC3E;AACA,mBAAOD,MAAM,CAACJ,WAAP,KAAuBK,IAAI,CAACL,WAAnC;AACD;;;;;;;yBAvDU3T,oB;AAAmB,O;;;eAAnBA,oB;AAAmB,iBAAnBA,oBAAmB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCRnBiU,c;;;;;;;;AAEX;;;;AAIA,2BAAQnI,OAAR,EAAwB;AACtB,gBAAMoI,YAAY,GAAG/O,MAAM,CAAChB,OAAP,CAAe2H,OAAO,IAAI,WAA1B,CAArB;AAEA,mBAAO,sCAAA3F,EAAA,EAAG+N,YAAH,CAAP;AACD;;;;;;;yBAVUD,c;AAAa,O;;;eAAbA,c;AAAa,iBAAbA,cAAa,K;AAAA,oBAFZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACSd,UAAME,WAAW,GAAG;AAClBC,eAAO,EAAE,IAAI,kDAAAC,WAAJ,CAAgB;AAAE,0BAAgB;AAAlB,SAAhB;AADS,OAApB;;UAKaC,gB;AAKX,kCAAoBC,IAApB,EACoBpX,cADpB,EAEoBsF,eAFpB,EAGoBF,MAHpB,EAGoC;AAAA;;AAHhB,eAAAgS,IAAA,GAAAA,IAAA;AACA,eAAApX,cAAA,GAAAA,cAAA;AACA,eAAAsF,eAAA,GAAAA,eAAA;AACA,eAAAF,MAAA,GAAAA,MAAA;AAPZ,eAAAiS,YAAA,GAAe,uDAAAlX,WAAA,aAAf;AAEA,eAAAmX,YAAA,GAAe,CAAf;AAMP;;;;iBAED,oBAAY/W,IAAZ,EAAqB;AACnB,iBAAKgX,OAAL,GAAwBhX,IAAxB;AACD;;;eAED,eAAW;AACT,gBAAI,KAAKgX,OAAT,EAAkB;AAAE,qBAAO,KAAMA,OAAb;AAAuB;;AAC3C,gBAAMC,cAAc,GAAG,IAAI,8CAAA7W,OAAJ,EAAvB;AACA6W,0BAAc,CAAC9K,OAAf,GAAyB,OAAzB;AACA8K,0BAAc,CAAC5W,QAAf,GAA0B,IAA1B;AACA,mBAAO4W,cAAP;AACD;;;eAED,eAAe;AACb,mBAAO,iDAAAC,UAAA,EAAY,IAAIC,IAAJ,EAAZ,EAAwB,qBAAxB,EAA+C,OAA/C,CAAP;AACD;;;iBAED,2BAAkBC,YAAlB,EAAwCC,cAAxC,EAA8D;AAC5D,gBAAMC,WAAW,GAAG,IAAI,yCAAAC,WAAJ,EAApB;AACAD,uBAAW,CAACtP,SAAZ,GAAwB,YAAxB;AACAsP,uBAAW,CAACtY,WAAZ,GAA0B,QAA1B;AACAsY,uBAAW,CAACE,UAAZ,GAAyB,CAAC,MAAD,EAAS,aAAT,EACvB;AAACnM,wBAAU,EAAE,YAAb;AAA2BrM,yBAAW,EAAE;AAAxC,aADuB,EAEvB;AAACqM,wBAAU,EAAE,aAAb;AAA4BrM,yBAAW,EAAE;AAAzC,aAFuB,EAGvB;AAACqM,wBAAU,EAAE,YAAb;AAA2BrM,yBAAW,EAAE;AAAxC,aAHuB,EAIvB;AAACqM,wBAAU,EAAE,aAAb;AAA4BrM,yBAAW,EAAE;AAAzC,aAJuB,CAAzB;AAKAsY,uBAAW,CAACG,MAAZ,GAAqB,EAArB;;AACA,gBAAIL,YAAJ,EAAkB;AAChB,kBAAIA,YAAY,CAACM,QAAb,CAAsB,GAAtB,KAA8BN,YAAY,CAACM,QAAb,CAAsB,GAAtB,CAAlC,EAA8D;AAC5DJ,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,MAAb;AAAqBsM,0BAAQ,EAAE,IAA/B;AAAqCC,qBAAG,EAAER;AAA1C,iBAAxB;AACD,eAFD,MAEO;AACLE,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,MAAb;AAAqBsM,0BAAQ,EAAE,IAA/B;AAAqCC,qBAAG,EAAER;AAA1C,iBAAxB;AACD;AACF;;AACD,gBAAIC,cAAJ,EAAoB;AAClB,kBAAIA,cAAc,CAACK,QAAf,CAAwB,GAAxB,CAAJ,EAAkC;AAChCL,8BAAc,GAAGA,cAAc,CAACQ,OAAf,CAAuB,MAAvB,EAA+B,GAA/B,CAAjB;AACAP,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,aAAb;AAA4BsM,0BAAQ,EAAE,IAAtC;AAA4CC,qBAAG,EAAEP;AAAjD,iBAAxB;AACD,eAHD,MAGO;AACLC,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,aAAb;AAA4BsM,0BAAQ,EAAE,IAAtC;AAA4CC,qBAAG,EAAEP;AAAjD,iBAAxB;AACD;AACF;;AACDC,uBAAW,CAACQ,IAAZ,GAAmB,CAAC;AAACzM,wBAAU,EAAE,aAAb;AAA4BrM,yBAAW,EAAE,YAAzC;AAAuDgL,mBAAK,EAAE;AAA9D,aAAD,CAAnB;AACA,mBAAO,KAAK6M,IAAL,CAAUkB,IAAV,CAAoB,KAAKjB,YAAL,eAApB,EAAsDQ,WAAtD,EAAmEb,WAAnE,EAAgFnR,IAAhF,CACL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,eAAtB,CAAX,CADK,CAAP;AAED;;;iBAED,6BAAoBC,cAApB,EAA0C;AACxC,gBAAMC,WAAW,GAAG;AAClB7Q,gBAAE,EAAE;AAAEtI,2BAAW,EAAE,QAAf;AAAyBkJ,oBAAI,EAAEgQ;AAA/B,eADc;AAElBE,mBAAK,EAAE;AAACC,yBAAS,EAAE,CAAC,YAAD,EAAe,QAAf,CAAZ;AACLC,6BAAa,EAAE,CACb;AACE5O,iCAAe,EAAE,cADnB;AAEE6O,uCAAqB,EAAE;AAAEF,6BAAS,EAAE,CAAC,QAAD;AAAb;AAFzB,iBADa,EAKb;AACE3O,iCAAe,EAAE,0BADnB;AAEE6O,uCAAqB,EAAE,CACrB;AAAEvQ,6BAAS,EAAE,UAAb;AACEoQ,yBAAK,EAAE;AAAEC,+BAAS,EAAE,CAAC,gBAAD,CAAb;AACLC,mCAAa,EAAE,CAAC;AAAC5O,uCAAe,EAAE,iBAAlB;AACd6O,6CAAqB,EAAE;AAAEF,mCAAS,EAAE,CAAC,KAAD;AAAb;AADT,uBAAD;AADV;AADT,mBADqB,EAKrB;AAAErQ,6BAAS,EAAE,aAAb;AACEoQ,yBAAK,EAAE;AAAEC,+BAAS,EAAE,CAAC,aAAD,CAAb;AACLC,mCAAa,EAAE,CAAC;AAAC5O,uCAAe,EAAE,wBAAlB;AACd6O,6CAAqB,EAAE;AAAEF,mCAAS,EAAE,CAAC,YAAD,CAAb;AACrBC,uCAAa,EAAE,CAAC;AAAE5O,2CAAe,EAAE,sBAAnB;AACd6O,iDAAqB,EAAE;AAAEF,uCAAS,EAAE,CAAC,WAAD;AAAb;AADT,2BAAD;AADM;AADT,uBAAD;AADV;AADT,mBALqB;AAFzB,iBALa;AADV;AAFW,aAApB;AA0BA,mBAAO,KAAKxB,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,+BADK,EAC6CqB,WAD7C,EAC0D1B,WAD1D,EACuEnR,IADvE,CAEL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,qBAAtB,CAAX,CAFK,CAAP;AAGD;;;iBAED,6BAAoBC,cAApB,EAA0C;AACxC,gBAAMC,WAAW,GAAG;AAClB7Q,gBAAE,EAAE;AAAEtI,2BAAW,EAAE,QAAf;AAAyBkJ,oBAAI,EAAEgQ;AAA/B,eADc;AAElBE,mBAAK,EAAE;AAACC,yBAAS,EAAE,CAAC,QAAD;AAAZ;AAFW,aAApB;AAIA,mBAAO,KAAKxB,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,+BADK,EAC6CqB,WAD7C,EAC0D1B,WAD1D,EACuEnR,IADvE,CAEL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,qBAAtB,CAAX,CAFK,CAAP;AAGD;;;iBAED,oBAAWlM,KAAX,EAA0Bc,OAA1B,EAAyC;AACvC,gBAAMyK,WAAW,GAAG,IAAI,yCAAAC,WAAJ,EAApB;AACAD,uBAAW,CAACtP,SAAZ,GAAwB,KAAxB;AACAsP,uBAAW,CAACtY,WAAZ,GAA0B,KAA1B;AACAsY,uBAAW,CAACE,UAAZ,GAAyB,CAAC,QAAD,EAAW,MAAX,EAAmB,YAAnB,EAAiC,aAAjC,EAAgD,YAAhD,EAA8D,aAA9D,EAA6E,YAA7E,EAA2F,aAA3F,CAAzB;AACAF,uBAAW,CAACG,MAAZ,GAAqB,EAArB;;AACA,gBAAI1L,KAAJ,EAAW;AACT,kBAAIA,KAAK,CAAC2L,QAAN,CAAe,GAAf,KAAuB3L,KAAK,CAAC2L,QAAN,CAAe,GAAf,CAA3B,EAAgD;AAC9CJ,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,QAAb;AAAuBsM,0BAAQ,EAAE,IAAjC;AAAuCC,qBAAG,EAAE7L;AAA5C,iBAAxB;AACD,eAFD,MAEO;AACLuL,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,QAAb;AAAuBsM,0BAAQ,EAAE,IAAjC;AAAuCC,qBAAG,EAAE7L;AAA5C,iBAAxB;AACD;AACF;;AACD,gBAAIc,OAAJ,EAAa;AACX,kBAAIA,OAAO,CAAC6K,QAAR,CAAiB,GAAjB,CAAJ,EAA2B;AACzB7K,uBAAO,GAAGA,OAAO,CAACgL,OAAR,CAAgB,MAAhB,EAAwB,GAAxB,CAAV;AACAP,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,MAAb;AAAqBsM,0BAAQ,EAAE,IAA/B;AAAqCC,qBAAG,EAAE/K;AAA1C,iBAAxB;AACD,eAHD,MAGO;AACLyK,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,MAAb;AAAqBsM,0BAAQ,EAAE,IAA/B;AAAqCC,qBAAG,EAAE/K;AAA1C,iBAAxB;AACD;AACF;;AACDyK,uBAAW,CAACQ,IAAZ,GAAmB,CAAC;AAACzM,wBAAU,EAAE,aAAb;AAA4BrB,mBAAK,EAAE;AAAnC,aAAD,CAAnB;AACA,mBAAO,KAAK6M,IAAL,CAAUkB,IAAV,CAAoB,KAAKjB,YAAL,eAApB,EAAsDQ,WAAtD,EAAmEb,WAAnE,EAAgFnR,IAAhF,CACL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,eAAtB,CAAX,CADK,CAAP;AAED;;;iBAED,sBAAalM,KAAb,EAA0B;AACxB,gBAAMoM,WAAW,GAAG;AAClB7Q,gBAAE,EAAE;AAAEtI,2BAAW,EAAE,KAAf;AAAsBiJ,sBAAM,EAAE8D;AAA9B,eADc;AAElBqM,mBAAK,EAAE;AACLC,yBAAS,EAAE,CAAC,KAAD,CADN;AAELC,6BAAa,EAAE,CACb;AACE5O,iCAAe,EAAE,iBADnB;AAEE6O,uCAAqB,EAAE;AAAEF,6BAAS,EAAE,CAAC,gBAAD;AAAb;AAFzB,iBADa,EAKb;AACE3O,iCAAe,EAAE,aADnB;AAEE6O,uCAAqB,EAAE;AACrBF,6BAAS,EAAE,CAAC,YAAD,CADU;AAErBC,iCAAa,EAAE,CACb;AACE5O,qCAAe,EAAE,sBADnB;AAEE6O,2CAAqB,EAAE;AAAEF,iCAAS,EAAE,CAAC,WAAD;AAAb;AAFzB,qBADa;AAFM;AAFzB,iBALa;AAFV;AAFW,aAApB;AAwBA,mBAAO,KAAKxB,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,+BADK,EAC6CqB,WAD7C,EAC0D1B,WAD1D,EACuEnR,IADvE,CAEL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,cAAtB,CAAX,CAFK,CAAP;AAGD;;;iBAED,oBAAWlM,KAAX,EAAwB;AACtB,gBAAMoM,WAAW,GAAG;AAClB7Q,gBAAE,EAAE;AAAEtI,2BAAW,EAAE,KAAf;AAAsBiJ,sBAAM,EAAE8D;AAA9B,eADc;AAElBqM,mBAAK,EAAE;AAACC,yBAAS,EAAE,CAAC,KAAD;AAAZ;AAFW,aAApB;AAIA,mBAAO,KAAKxB,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,+BADK,EAC6CqB,WAD7C,EAC0D1B,WAD1D,EACuEnR,IADvE,CAEL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,YAAtB,CAAX,CAFK,CAAP;AAGD;;;iBAED,yBAAgBO,UAAhB,EAAkC;AAChC,gBAAML,WAAW,GAAG;AAClB7Q,gBAAE,EAAE;AAAEtI,2BAAW,EAAE,gBAAf;AAAiCsI,kBAAE,EAAEkR;AAArC,eADc;AAElBJ,mBAAK,EAAE;AAACC,yBAAS,EAAE,CAAC,gBAAD;AAAZ;AAFW,aAApB;AAIA,mBAAO,KAAKxB,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,+BADK,EAC6CqB,WAD7C,EAC0D1B,WAD1D,EACuEnR,IADvE,CAEL,gDAAA6D,GAAA,EAAI,UAAA6C,QAAQ,EAAI;AACd,qBAAO,mBAAmBA,QAAnB,GACL;AACEuB,6BAAa,EAAEvB,QAAQ,CAAC,eAAD,CADzB;AAEE9D,oBAAI,EAAE8D,QAAQ,CAAC,gBAAD,CAAR,GAA6BA,QAAQ,CAAC,gBAAD,CAAR,CAA2B,CAA3B,EAA8B,MAA9B,CAA7B,GAAqE,EAF7E;AAGE9B,oBAAI,EAAE8B,QAAQ,CAAC,gBAAD,CAAR,GAA6BA,QAAQ,CAAC,gBAAD,CAAR,CAA2B,CAA3B,EAA8B,MAA9B,CAA7B,GAAqE;AAH7E,eADK,GAKDA,QAAQ,CAAC,CAAD,CALd;AAMD,aAPD,CAFK,EAUL,gDAAAgM,UAAA,EAAW,KAAKC,WAAL,CAAsB,iBAAtB,CAAX,CAVK,CAAP;AAWD;;;iBAED,2BAAkBpG,WAAlB,EAAuCI,WAAvC,EAA0D;AACxD,gBAAMqF,WAAW,GAAG,IAAI,yCAAAC,WAAJ,EAApB;AACAD,uBAAW,CAACtP,SAAZ,GAAwB,YAAxB;AACAsP,uBAAW,CAACtY,WAAZ,GAA0B,YAA1B;AACAsY,uBAAW,CAACE,UAAZ,GAAyB,CAAC,UAAD,EAAa,MAAb,EAAqB,YAArB,EAAmC,aAAnC,EAAkD,YAAlD,EAAgE,aAAhE,CAAzB;AACAF,uBAAW,CAACG,MAAZ,GAAqB,EAArB;;AACA,gBAAI5F,WAAJ,EAAiB;AACf,kBAAIA,WAAW,CAAC6F,QAAZ,CAAqB,GAArB,KAA6B7F,WAAW,CAAC6F,QAAZ,CAAqB,GAArB,CAAjC,EAA4D;AAC1DJ,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,UAAb;AAAyBsM,0BAAQ,EAAE,IAAnC;AAAyCC,qBAAG,EAAE/F;AAA9C,iBAAxB;AACD,eAFD,MAEO;AACLyF,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,UAAb;AAAyBsM,0BAAQ,EAAE,IAAnC;AAAyCC,qBAAG,EAAE/F;AAA9C,iBAAxB;AACD;AACF;;AACD,gBAAII,WAAJ,EAAiB;AACf,kBAAIA,WAAW,CAACyF,QAAZ,CAAqB,GAArB,CAAJ,EAA+B;AAC7BzF,2BAAW,GAAGA,WAAW,CAAC4F,OAAZ,CAAoB,MAApB,EAA4B,GAA5B,CAAd;AACAP,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,MAAb;AAAqBsM,0BAAQ,EAAE,IAA/B;AAAqCC,qBAAG,EAAE3F;AAA1C,iBAAxB;AACD,eAHD,MAGO;AACLqF,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,MAAb;AAAqBsM,0BAAQ,EAAE,IAA/B;AAAqCC,qBAAG,EAAE3F;AAA1C,iBAAxB;AACD;AACF;;AACDqF,uBAAW,CAACQ,IAAZ,GAAmB,CAAC;AAACzM,wBAAU,EAAE,aAAb;AAA4BrB,mBAAK,EAAE;AAAnC,aAAD,CAAnB;AACA,mBAAO,KAAK6M,IAAL,CAAUkB,IAAV,CAAoB,KAAKjB,YAAL,eAApB,EAAsDQ,WAAtD,EAAmEb,WAAnE,EAAgFnR,IAAhF,CACL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,mBAAtB,CAAX,CADK,CAAP;AAED;;;iBAED,6BAAoBpG,WAApB,EAAuC;AACrC,gBAAMsG,WAAW,GAAG;AAClB7Q,gBAAE,EAAE;AAAEtI,2BAAW,EAAE,YAAf;AAA6BkM,wBAAQ,EAAE2G;AAAvC,eADc;AAElBuG,mBAAK,EAAE;AACLC,yBAAS,EAAE,CAAC,YAAD,CADN;AAELC,6BAAa,EAAE,CACb;AACE5O,iCAAe,EAAE,sBADnB;AAEE6O,uCAAqB,EAAE;AAAEF,6BAAS,EAAE,CAAC,WAAD;AAAb;AAFzB,iBADa;AAFV;AAFW,aAApB;AAYA,mBAAO,KAAKxB,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,+BADK,EAC6CqB,WAD7C,EAC0D1B,WAD1D,EACuEnR,IADvE,CAEL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,qBAAtB,CAAX,CAFK,CAAP;AAGD;;;iBAED,6BAAoBpG,WAApB,EAAuC;AACrC,gBAAMsG,WAAW,GAAG;AAClB7Q,gBAAE,EAAE;AAAEtI,2BAAW,EAAE,YAAf;AAA6BkM,wBAAQ,EAAE2G;AAAvC,eADc;AAElBuG,mBAAK,EAAE;AAACC,yBAAS,EAAE,CAAC,YAAD;AAAZ;AAFW,aAApB;AAIA,mBAAO,KAAKxB,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,+BADK,EAC6CqB,WAD7C,EAC0D1B,WAD1D,EACuEnR,IADvE,CAEL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,qBAAtB,CAAX,CAFK,CAAP;AAGD;;;iBAED,0BAAiBxM,aAAjB,EAAsC;AACpC,gBAAM0M,WAAW,GAAG;AAClB7Q,gBAAE,EAAE;AAAEtI,2BAAW,EAAE,WAAf;AAA4BqM,0BAAU,EAAEI;AAAxC,eADc;AAElB2M,mBAAK,EAAE;AAACC,yBAAS,EAAE,CAAC,WAAD;AAAZ;AAFW,aAApB;AAIA,mBAAO,KAAKxB,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,+BADK,EAC6CqB,WAD7C,EAC0D1B,WAD1D,EACuEnR,IADvE,CAEL,gDAAA6D,GAAA,EAAI,UAAA6C,QAAQ,EAAI;AACd,qBAAO,mBAAmBA,QAAnB,GACL;AACEuB,6BAAa,EAAEvB,QAAQ,CAAC,eAAD,CADzB;AAEE9D,oBAAI,EAAE8D,QAAQ,CAAC,WAAD,CAAR,GAAwBA,QAAQ,CAAC,WAAD,CAAR,CAAsB,CAAtB,EAAyB,YAAzB,CAAxB,GAAiE,EAFzE;AAGEV,4BAAY,EAAEU,QAAQ,CAAC,WAAD,CAAR,GAAwBA,QAAQ,CAAC,WAAD,CAAR,CAAsB,CAAtB,EAAyB,cAAzB,CAAxB,GAAmE;AAHnF,eADK,GAKDA,QAAQ,CAAC,CAAD,CALd;AAMD,aAPD,CAFK,EAUL,gDAAAgM,UAAA,EAAW,KAAKC,WAAL,CAAsB,qBAAtB,CAAX,CAVK,CAAP;AAWD;;;iBAED,6BAAoBlI,aAApB,EAA2CG,eAA3C,EAAkE;AAChE,gBAAMoH,WAAW,GAAG,IAAI,yCAAAC,WAAJ,EAApB;AACAD,uBAAW,CAACtP,SAAZ,GAAwB,UAAxB;AACAsP,uBAAW,CAACtY,WAAZ,GAA0B,gBAA1B;AACAsY,uBAAW,CAACE,UAAZ,GAAyB,CAAE,IAAF,EAAQ,MAAR,EAAgB,MAAhB,EACvB;AAACnM,wBAAU,EAAE,YAAb;AAA2BrM,yBAAW,EAAE;AAAxC,aADuB,EAEvB;AAACqM,wBAAU,EAAE,aAAb;AAA4BrM,yBAAW,EAAE;AAAzC,aAFuB,EAGvB;AAACqM,wBAAU,EAAE,YAAb;AAA2BrM,yBAAW,EAAE;AAAxC,aAHuB,EAIvB;AAACqM,wBAAU,EAAE,aAAb;AAA4BrM,yBAAW,EAAE;AAAzC,aAJuB,CAAzB;AAKAsY,uBAAW,CAACG,MAAZ,GAAqB,EAArB;;AACA,gBAAI1H,aAAJ,EAAmB;AACjB,kBAAIA,aAAa,CAAC2H,QAAd,CAAuB,GAAvB,KAA+B3H,aAAa,CAAC2H,QAAd,CAAuB,GAAvB,CAAnC,EAAgE;AAC9DJ,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,IAAb;AAAmBsM,0BAAQ,EAAE,IAA7B;AAAmCC,qBAAG,EAAE7H;AAAxC,iBAAxB;AACD,eAFD,MAEO;AACLuH,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,IAAb;AAAmBsM,0BAAQ,EAAE,IAA7B;AAAmCC,qBAAG,EAAE7H;AAAxC,iBAAxB;AACD;AACF;;AACD,gBAAIG,eAAJ,EAAqB;AACnB,kBAAIA,eAAe,CAACwH,QAAhB,CAAyB,GAAzB,CAAJ,EAAmC;AACjCxH,+BAAe,GAAGA,eAAe,CAAC2H,OAAhB,CAAwB,MAAxB,EAAgC,GAAhC,CAAlB;AACAP,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,MAAb;AAAqBsM,0BAAQ,EAAE,IAA/B;AAAqCC,qBAAG,EAAE1H;AAA1C,iBAAxB;AACD,eAHD,MAGO;AACLoH,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,MAAb;AAAqBsM,0BAAQ,EAAE,IAA/B;AAAqCC,qBAAG,EAAE1H;AAA1C,iBAAxB;AACD;AACF;;AACDoH,uBAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAAC9K,yBAAW,EAAE,UAAd;AAA0BqM,wBAAU,EAAE,MAAtC;AAA8CsM,sBAAQ,EAAE,IAAxD;AAA8DC,iBAAG,EAAE;AAAnE,aAAxB;AACAN,uBAAW,CAACQ,IAAZ,GAAmB,CAAC;AAACzM,wBAAU,EAAE,aAAb;AAA4BrM,yBAAW,EAAE,UAAzC;AAAqDgL,mBAAK,EAAE;AAA5D,aAAD,CAAnB;AACA,mBAAO,KAAK6M,IAAL,CAAUkB,IAAV,CAAoB,KAAKjB,YAAL,eAApB,EAAsDQ,WAAtD,EAAmEb,WAAnE,EAAgFnR,IAAhF,CACL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,qBAAtB,CAAX,CADK,CAAP;AAED;;;iBAED,8BAAqBlI,aAArB,EAA0C;AACxC,gBAAMoI,WAAW,GAAG;AAClB7Q,gBAAE,EAAE;AAAEtI,2BAAW,EAAE,gBAAf;AAAiCsI,kBAAE,EAAEyI;AAArC,eADc;AAElBqI,mBAAK,EAAE;AACLC,yBAAS,EAAE,CAAC,UAAD,EAAa,gBAAb,CADN;AAELC,6BAAa,EAAE,CACb;AACE5O,iCAAe,EAAE,iBADnB;AAEE6O,uCAAqB,EAAE;AAAEF,6BAAS,EAAE,CAAC,KAAD;AAAb;AAFzB,iBADa,EAKb;AACE3O,iCAAe,EAAE,0BADnB;AAEE6O,uCAAqB,EAAE,CACrB;AACEvQ,6BAAS,EAAE,YADb;AAEEoQ,yBAAK,EAAE;AAAEC,+BAAS,EAAE,CAAC,QAAD;AAAb;AAFT,mBADqB;AAFzB,iBALa;AAFV;AAFW,aAApB;AAqBA,mBAAO,KAAKxB,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,+BADK,EAC6CqB,WAD7C,EAC0D1B,WAD1D,EACuEnR,IADvE,CAEL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,sBAAtB,CAAX,CAFK,CAAP;AAGD;;;iBAED,4BAAmBlI,aAAnB,EAAwC;AACtC,gBAAMoI,WAAW,GAAG;AAClB7Q,gBAAE,EAAE;AAAEtI,2BAAW,EAAE,gBAAf;AAAiCsI,kBAAE,EAAEyI;AAArC,eADc;AAElBqI,mBAAK,EAAE;AAACC,yBAAS,EAAE,CAAC,gBAAD;AAAZ;AAFW,aAApB;AAIA,mBAAO,KAAKxB,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,+BADK,EAC6CqB,WAD7C,EAC0D1B,WAD1D,EACuEnR,IADvE,CAEL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,oBAAtB,CAAX,CAFK,CAAP;AAGD;;;iBAED,4BAAmBQ,WAAnB,EAAwCC,WAAxC,EAA2D;AACzD,gBAAMpB,WAAW,GAAG,IAAI,yCAAAC,WAAJ,EAApB;AACAD,uBAAW,CAACtP,SAAZ,GAAwB,aAAxB;AACAsP,uBAAW,CAACtY,WAAZ,GAA0B,aAA1B;AACAsY,uBAAW,CAACE,UAAZ,GAAyB,CAAE,cAAF,EAAkB,MAAlB,EAA0B,YAA1B,EAAwC,aAAxC,EAAuD,YAAvD,EAAqE,aAArE,CAAzB;AACAF,uBAAW,CAACG,MAAZ,GAAqB,EAArB;;AACA,gBAAIgB,WAAJ,EAAiB;AACf,kBAAIA,WAAW,CAACf,QAAZ,CAAqB,GAArB,KAA6Be,WAAW,CAACf,QAAZ,CAAqB,GAArB,CAAjC,EAA4D;AAC1DJ,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,cAAb;AAA6BsM,0BAAQ,EAAE,IAAvC;AAA6CC,qBAAG,EAAEa;AAAlD,iBAAxB;AACD,eAFD,MAEO;AACLnB,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,cAAb;AAA6BsM,0BAAQ,EAAE,IAAvC;AAA6CC,qBAAG,EAAEa;AAAlD,iBAAxB;AACD;AACF;;AACD,gBAAIC,WAAJ,EAAiB;AACf,kBAAIA,WAAW,CAAChB,QAAZ,CAAqB,GAArB,CAAJ,EAA+B;AAC7BgB,2BAAW,GAAGA,WAAW,CAACb,OAAZ,CAAoB,MAApB,EAA4B,GAA5B,CAAd;AACAP,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,MAAb;AAAqBsM,0BAAQ,EAAE,IAA/B;AAAqCC,qBAAG,EAAEc;AAA1C,iBAAxB;AACD,eAHD,MAGO;AACLpB,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,MAAb;AAAqBsM,0BAAQ,EAAE,IAA/B;AAAqCC,qBAAG,EAAEc;AAA1C,iBAAxB;AACD;AACF;;AACDpB,uBAAW,CAACQ,IAAZ,GAAmB,CAAC;AAACzM,wBAAU,EAAE,aAAb;AAA4BrB,mBAAK,EAAE;AAAnC,aAAD,CAAnB;AACA,mBAAO,KAAK6M,IAAL,CAAUkB,IAAV,CAAoB,KAAKjB,YAAL,eAApB,EAAsDQ,WAAtD,EAAmEb,WAAnE,EAAgFnR,IAAhF,CACL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,oBAAtB,CAAX,CADK,CAAP;AAED;;;iBAED,8BAAqBQ,WAArB,EAAwC;AACtC,gBAAMN,WAAW,GAAG;AAClB7Q,gBAAE,EAAE;AAAEtI,2BAAW,EAAE,aAAf;AAA8B2Z,4BAAY,EAAEF;AAA5C,eADc;AAElBL,mBAAK,EAAE;AACLC,yBAAS,EAAE,CAAC,aAAD,CADN;AAELC,6BAAa,EAAE,CACb;AACE5O,iCAAe,EAAE,wBADnB;AAEE6O,uCAAqB,EAAE;AACrBF,6BAAS,EAAE,CAAC,YAAD,CADU;AAErBC,iCAAa,EAAE,CACb;AACE5O,qCAAe,EAAE,sBADnB;AAEE6O,2CAAqB,EAAE;AAAEF,iCAAS,EAAE,CAAC,WAAD;AAAb;AAFzB,qBADa;AAFM;AAFzB,iBADa;AAFV;AAFW,aAApB;AAoBA,mBAAO,KAAKxB,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,+BADK,EAC6CqB,WAD7C,EAC0D1B,WAD1D,EACuEnR,IADvE,CAEL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,sBAAtB,CAAX,CAFK,CAAP;AAGD;;;iBAED,8BAAqBQ,WAArB,EAAwC;AACtC,gBAAMN,WAAW,GAAG;AAClB7Q,gBAAE,EAAE;AAAEtI,2BAAW,EAAE,aAAf;AAA8B2Z,4BAAY,EAAEF;AAA5C,eADc;AAElBL,mBAAK,EAAE;AAACC,yBAAS,EAAE,CAAC,aAAD;AAAZ;AAFW,aAApB;AAIA,mBAAO,KAAKxB,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,+BADK,EAC6CqB,WAD7C,EAC0D1B,WAD1D,EACuEnR,IADvE,CAEL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,sBAAtB,CAAX,CAFK,CAAP;AAGD;;;iBAED,qBAAY5H,MAAZ,EAA4BuI,QAA5B,EAA4C;AAC1C,gBAAMtB,WAAW,GAAG,IAAI,yCAAAC,WAAJ,EAApB;AACAD,uBAAW,CAACtP,SAAZ,GAAwB,QAAxB;AACAsP,uBAAW,CAACtY,WAAZ,GAA0B,QAA1B;AACAsY,uBAAW,CAACE,UAAZ,GAAyB,CAAC,SAAD,EAAY,WAAZ,EAAyB,cAAzB,EAAyC,MAAzC,EAAiD,WAAjD,CAAzB;AACAF,uBAAW,CAACG,MAAZ,GAAqB,EAArB;;AACA,gBAAIpH,MAAJ,EAAY;AACV,kBAAIA,MAAM,CAACqH,QAAP,CAAgB,GAAhB,KAAwBrH,MAAM,CAACqH,QAAP,CAAgB,GAAhB,CAA5B,EAAkD;AAChDJ,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,SAAb;AAAwBsM,0BAAQ,EAAE,IAAlC;AAAwCC,qBAAG,EAAEvH;AAA7C,iBAAxB;AACD,eAFD,MAEO;AACLiH,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,SAAb;AAAwBsM,0BAAQ,EAAE,IAAlC;AAAwCC,qBAAG,EAAEvH;AAA7C,iBAAxB;AACD;AACF;;AACD,gBAAIuI,QAAJ,EAAc;AACZ,kBAAIA,QAAQ,CAAClB,QAAT,CAAkB,GAAlB,CAAJ,EAA4B;AAC1BkB,wBAAQ,GAAGA,QAAQ,CAACf,OAAT,CAAiB,MAAjB,EAAyB,GAAzB,CAAX;AACAP,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,WAAb;AAA0BsM,0BAAQ,EAAE,IAApC;AAA0CC,qBAAG,EAAEgB;AAA/C,iBAAxB;AACD,eAHD,MAGO;AACLtB,2BAAW,CAACG,MAAZ,CAAmB3N,IAAnB,CAAwB;AAACuB,4BAAU,EAAE,WAAb;AAA0BsM,0BAAQ,EAAE,IAApC;AAA0CC,qBAAG,EAAEgB;AAA/C,iBAAxB;AACD;AACF;;AACDtB,uBAAW,CAACQ,IAAZ,GAAmB,CAAC,SAAD,CAAnB;AACA,mBAAO,KAAKjB,IAAL,CAAUkB,IAAV,CAAoB,KAAKjB,YAAL,eAApB,EAAsDQ,WAAtD,EAAmEb,WAAnE,EAAgFnR,IAAhF,CACL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,eAAtB,CAAX,CADK,CAAP;AAED;;;iBAED,uBAAc5H,MAAd,EAA4B;AAC1B,gBAAM8H,WAAW,GAAG;AAClB7Q,gBAAE,EAAE;AAAEtI,2BAAW,EAAE,QAAf;AAAyBmN,uBAAO,EAAEkE;AAAlC,eADc;AAElB+H,mBAAK,EAAE;AAACC,yBAAS,EAAE,CAAC,QAAD,EAAW,YAAX,EAAyB,SAAzB,EAAoC,WAApC,EAAiD,mBAAjD,CAAZ;AACLC,6BAAa,EAAE,CACb;AACE5O,iCAAe,EAAE,cADnB;AAEE6O,uCAAqB,EAAE;AAAEF,6BAAS,EAAE,CAAC,QAAD;AAAb;AAFzB,iBADa;AADV;AAFW,aAApB;AAUA,mBAAO,KAAKxB,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,+BADK,EAC6CqB,WAD7C,EAC0D1B,WAD1D,EACuEnR,IADvE,CAEL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,eAAtB,CAAX,CAFK,CAAP;AAGD;;;iBAED,yBAAgB5H,MAAhB,EAA8B;AAC5B,gBAAM8H,WAAW,GAAG;AAClB7Q,gBAAE,EAAE;AAAEtI,2BAAW,EAAE,QAAf;AAAyBmN,uBAAO,EAAEkE;AAAlC,eADc;AAElB+H,mBAAK,EAAE;AAACC,yBAAS,EAAE,CAAC,QAAD;AAAZ;AAFW,aAApB;AAIA,mBAAO,KAAKxB,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,+BADK,EAC6CqB,WAD7C,EAC0D1B,WAD1D,EACuEnR,IADvE,CAEL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,iBAAtB,CAAX,CAFK,CAAP;AAGD;;;iBAED,2BAAkBW,QAAlB,EAAkC;AAChC,gBAAMT,WAAW,GAAG;AAClB7Q,gBAAE,EAAE;AAAEtI,2BAAW,EAAE,QAAf;AAAyB6Z,yBAAS,EAAED;AAApC,eADc;AAElBR,mBAAK,EAAE;AAACC,yBAAS,EAAE,CAAC,QAAD;AAAZ;AAFW,aAApB;AAIA,mBAAO,KAAKxB,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,+BADK,EAC6CqB,WAD7C,EAC0D1B,WAD1D,EACuEnR,IADvE,CAEL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,mBAAtB,CAAX,CAFK,CAAP;AAGD;;;iBAED,qBAAYa,MAAZ,EAA0B;AACxB,gBAAMX,WAAW,GAAG;AAClB7Q,gBAAE,EAAE;AAAEtI,2BAAW,EAAE,QAAf;AAAyBkJ,oBAAI,EAAE4Q;AAA/B,eADc;AAElBV,mBAAK,EAAE;AAACC,yBAAS,EAAE,CAAC,QAAD;AAAZ;AAFW,aAApB;AAIA,mBAAO,KAAKxB,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,+BADK,EAC6CqB,WAD7C,EAC0D1B,WAD1D,EACuEnR,IADvE,CAEL,gDAAA6D,GAAA,EAAI,UAAA6C,QAAQ,EAAI;AACd,qBAAO,mBAAmBA,QAAnB,GACL;AACEuB,6BAAa,EAAEvB,QAAQ,CAAC,eAAD,CADzB;AAEE8D,2BAAW,EAAE9D,QAAQ,CAAC,QAAD,CAAR,GAAqBA,QAAQ,CAAC,QAAD,CAAR,CAAmB,CAAnB,EAAsB,aAAtB,CAArB,GAA4D;AAF3E,eADK,GAIDA,QAAQ,CAAC,CAAD,CAJd;AAKD,aAND,CAFK,EASL,gDAAAgM,UAAA,EAAW,KAAKC,WAAL,CAAsB,aAAtB,CAAX,CATK,CAAP;AAUD;;;iBAED,qBAAYc,UAAZ,EAA2B;AACzB,mBAAO,KAAKlC,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,4BADK,EAC0CiC,UAD1C,EACsDtC,WADtD,EACmEnR,IADnE,CAEL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,aAAtB,CAAX,CAFK,CAAP;AAGD;;;iBAED,cAAKe,MAAL,EAAmB;AACjB,gBAAIA,MAAM,CAAC,eAAD,CAAV,EAA6B;AAC3B,qBAAO,KAAKnC,IAAL,CAAUoC,GAAV,CACL,KAAKnC,YAAL,gBADK,EAC8BkC,MAD9B,EACsCvC,WADtC,EACmDnR,IADnD,CAEL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,UAAtB,CAAX,CAFK,CAAP;AAGD,aAJD,MAIO;AACL,qBAAO,KAAKpB,IAAL,CAAUkB,IAAV,CACL,KAAKjB,YAAL,gBADK,EAC8BkC,MAD9B,EACsCvC,WADtC,EACmDnR,IADnD,CAEL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,MAAtB,CAAX,CAFK,CAAP;AAGD;AACF;;;iBAED,iBAAOiB,UAAP,EAAyB;AACvB,mBAAO,KAAKrC,IAAL,WAAmC,KAAKC,YAAL,6BAA8CoC,UAAjF,EAA6FzC,WAA7F,EAA0GnR,IAA1G,CACL,gDAAA0S,UAAA,EAAW,KAAKC,WAAL,CAAsB,QAAtB,CAAX,CADK,CAAP;AAGD;;;iBAED,gCAAuBxO,YAAvB,EAAiD;AAAA;;AAC/C,gBAAM0P,cAAc,GAAG,EAAvB;;AACA,gBAAI,CAAC1P,YAAL,EAAmB;AAAE,qBAAO0P,cAAP;AAAwB;;AAC7C1P,wBAAY,CAACI,MAAb,CAAoB1D,OAApB,CAA6B,UAAAkB,KAAK,EAAI;AACpC,kBAAM+C,aAAa,GAAG/C,KAAK,CAAC,YAAD,CAAL,GACLgD,IAAI,CAACC,KAAL,CAAWjD,KAAK,CAAC,YAAD,CAAhB,CADK,GAC6B,IADnD;AAEA,kBAAMkD,MAAM,GAAGH,aAAa,GAC1BI,MAAM,CAACX,MAAP,CAAcO,aAAa,CAACK,cAA5B,EAA4CC,SAA5C,CAAuD,UAAAC,SAAS;AAAA,uBAAI,CAACA,SAAL;AAAA,eAAhE,MAAqF,CAAC,CAAtF,GACE,QADF,GACa,OAFa,GAEH,KAFzB;AAGAwO,4BAAc,CAACrP,IAAf,CAAoB;AAClBc,uBAAO,EAAE,EADS;AAElBC,yBAAS,EAAE,KAFO;AAGlBC,uBAAO,EAAEzD,KAAK,CAAC,4BAAD,CAAL,IAAuC,EAAE,OAAI,CAAC0P,YAHrC;AAIlBhM,sBAAM,EAAER,MAJU;AAKlBR,0CAA0B,EAAE1C,KAAK,CAAC,4BAAD,CALf;AAMlB2D,yCAAyB,EAAE3D,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,eAA9B,CANT;AAOlB4D,0BAAU,EAAE5D,KAAK,CAAC,YAAD,CAPC;AAQlB6D,wBAAQ,EAAE7D,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,YAA9B,EAA4C,CAA5C,EAA+C,UAA/C,CARQ;AASlB8D,oBAAI,EAAE9D,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,YAA9B,EAA4C,CAA5C,EAA+C,MAA/C,CATY;AAUlB+D,wBAAQ,EAAE,QAVQ;AAWlBC,0BAAU,EAAE,EAXM;AAYlBC,4BAAY,EAAE;AAZI,eAApB;AAeA,kBAAMC,gBAAgB,GAAGlE,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,eAA9B,EAA+C,CAA/C,CAAzB;AACAkE,8BAAgB,CAAC1B,MAAjB,CAAwB1D,OAAxB,CAAiC,UAAAqF,MAAM,EAAI;AACzC,oBAAMC,aAAa,GAAGD,MAAM,CAAC,mBAAD,CAAN,CAA4B,CAA5B,EAA+B,WAA/B,EAA4C,CAA5C,EAA+C,YAA/C,CAAtB;AACA2N,8BAAc,CAACrP,IAAf,CAAoB;AAClBc,yBAAO,EAAE,EADS;AAElBC,2BAAS,EAAE,KAFO;AAGlBC,yBAAO,EAAEzD,KAAK,CAAC,4BAAD,CAAL,IAAuC,OAAI,CAAC0P,YAHnC;AAIlBhM,wBAAM,EAAEX,aAAa,CAACK,cAAd,CAA6BgB,aAA7B,IACNrB,aAAa,CAACK,cAAd,CAA6BgB,aAA7B,EAA4CxE,MAA5C,GAAqD,CAArD,GAAyD,OAAzD,GAAmE,KAD7D,GACqE,KAL3D;AAMlB8C,4CAA0B,EAAE1C,KAAK,CAAC,4BAAD,CANf;AAOlB2D,2CAAyB,EAAE,EAPT;AAQlBC,4BAAU,EAAEb,aAAa,IAAIA,aAAa,CAACK,cAAd,CAA6BgB,aAA7B,CAAjB,IACPpB,IAAI,CAACqB,SAAL,CAAetB,aAAa,CAACK,cAAd,CAA6BgB,aAA7B,CAAf,EAA4D,IAA5D,EAAkE,GAAlE,CATa;AAUlBP,0BAAQ,EAAE7D,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,YAA9B,EAA4C,CAA5C,EAA+C,UAA/C,CAVQ;AAWlB8D,sBAAI,EAAE,EAXY;AAYlBC,0BAAQ,EAAE,OAZQ;AAalBC,4BAAU,EAAEI,aAbM;AAclBH,8BAAY,EAAEE,MAAM,CAAC,mBAAD,CAAN,CAA4B,CAA5B,EAA+B,WAA/B,EAA4C,CAA5C,EAA+C,cAA/C;AAdI,iBAApB;AAgBD,eAlBD;AAmBD,aAzCD;AA0CA,mBAAO2N,cAAP;AACD;;;iBAED,4BAAoBC,SAApB,EAA0ClU,aAA1C,EAA8DmU,cAA9D,EAAoF;AAClF,gBAAIjP,aAAJ;AACA,gBAAIkP,qBAAJ;AACA,gBAAIC,sBAAsB,GAAG,KAA7B;AACAH,qBAAS,CAACvL,QAAV,CAAmB1H,OAAnB,CAA4B,UAAAmK,OAAO,EAAI;AACrC,kBAAMkJ,OAAO,GAAGlJ,OAAO,CAAC5R,GAAR,CAAY,UAAZ,EAAwB2I,KAAxC;;AACA,kBAAImS,OAAO,KAAK,QAAhB,EAA0B;AACxB,oBAAIF,qBAAqB,IAAIC,sBAA7B,EAAqD;AACnDD,uCAAqB,CAAC5a,GAAtB,CAA0B,YAA1B,EAAwC6P,QAAxC,CAAiDlE,IAAI,CAACqB,SAAL,CAAetB,aAAf,EAA8B,IAA9B,EAAoC,GAApC,CAAjD;AACAkP,uCAAqB,CAAC5a,GAAtB,CAA0B,YAA1B,EAAwCsP,WAAxC;AACD;;AACDsL,qCAAqB,GAAGhJ,OAAxB;AACAlG,6BAAa,GAAG,IAAI,uCAAAqP,aAAJ,EAAhB;AACArP,6BAAa,CAACsP,UAAd,GAA2BpJ,OAAO,CAAC5R,GAAR,CAAY,UAAZ,EAAwB2I,KAAnD;AACA+C,6BAAa,CAACK,cAAd,GAA+B,EAA/B;AACA8O,sCAAsB,GAAG,KAAzB;AACD,eAVD,MAUO;AAAE;AACP,oBAAIjJ,OAAO,CAAC9J,KAAZ,EAAmB;AACjB+S,wCAAsB,GAAG,IAAzB;AACAjJ,yBAAO,CAAC9I,cAAR;AACD;;AACD4C,6BAAa,CAACK,cAAd,CAA6B6F,OAAO,CAAC5R,GAAR,CAAY,YAAZ,EAA0B2I,KAAvD,IACEiJ,OAAO,CAAC5R,GAAR,CAAY,YAAZ,EAA0B2I,KAA1B,GAAkCgD,IAAI,CAACC,KAAL,CAAWgG,OAAO,CAAC5R,GAAR,CAAY,YAAZ,EAA0B2I,KAArC,CAAlC,GAAgF,IADlF;AAED;AACF,aApBD;;AAqBA,gBAAIiS,qBAAqB,IAAIC,sBAA7B,EAAqD;AACnDD,mCAAqB,CAAC5a,GAAtB,CAA0B,YAA1B,EAAwC6P,QAAxC,CAAiDlE,IAAI,CAACqB,SAAL,CAAetB,aAAf,EAA8B,IAA9B,EAAoC,GAApC,CAAjD;AACAkP,mCAAqB,CAAC5a,GAAtB,CAA0B,YAA1B,EAAwCsP,WAAxC;AACD;;AACD,gBAAM2L,oBAAoB,GAAG,EAA7B;;AACA,gBAAKzU,aAAL,EAAqB;AACnBA,2BAAa,CAACiB,OAAd,CAAuB,UAAAyT,OAAO,EAAI;AAChC,oBAAIA,OAAO,CAACxO,QAAR,KAAqB,QAAzB,EAAmC;AAAEuO,sCAAoB,CAAC7P,IAArB,CAA2B8P,OAA3B;AAAuC;AAC7E,eAFD;AAGD;;AAED,mBAAO,KAAK7U,eAAL,CAAqBiL,0BAArB,CACLqJ,cADK,EACW,CAAC;AAACrR,uBAAS,EAAE,YAAZ;AAA0BiI,qBAAO,EAAE;AAAnC,aAAD,CADX,EAELmJ,SAFK,EAEMO,oBAFN,EAGL,CAAC,SAAD,EAAY,WAAZ,EAAyB,SAAzB,EAAoC,UAApC,EAAgD,MAAhD,EAAwD,UAAxD,EAAoE,YAApE,EAAkF,cAAlF,CAHK,CAAP;AAID;;;iBAEO,uBAAqD;AAAA;;AAAA,gBAArCE,SAAqC,uEAAzB,WAAyB;AAAA,gBAAZC,MAAY;AAC3D,mBAAO,UAACC,KAAD,EAA+B;AACpC,kBAAIA,KAAK,CAACxP,MAAN,KAAiB,GAArB,EAA0B;AACxB,uBAAI,CAAC9K,cAAL,CAAoBua,UAApB,CAA+B,WAA/B,EAA4C,sCAA5C,EAAoF,gDAAAjN,WAAA,UAApF;AACD,eAFD,MAEO;AACL,uBAAI,CAACtN,cAAL,CAAoBua,UAApB,CAA+B,WAA/B,EAA4C,SAA5C,EAAuD,gDAAAjN,WAAA,UAAvD,EAA8E8M,SAA9E,EAAyFE,KAAK,CAAC3L,OAA/F;AACD;;AAED,qBAAI,CAACvJ,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,QAAD,CAArB;;AACA2T,qBAAO,CAACF,KAAR,CAAcF,SAAd,EAAyBE,KAAzB,EARoC,CAQH;AAEjC;;AACA,qBAAO,sCAAAtR,EAAA,EAAGqR,MAAH,CAAP;AACD,aAZD;AAaD;;;;;;;yBAhlBUlD,gB,EAAe,qH,EAAA,uH,EAAA,iH,EAAA,6G;AAAA,O;;;eAAfA,gB;AAAe,iBAAfA,gBAAe,K;AAAA,oBADH;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCjBZsD,e;;;;UAUAC,S;;;;UASAC,Q;;;;UAYAC,Y;;;;UAUAC,gB;;;;UAUAC,gB;;;;UAYAd,c;;;;UAKAhP,e;;;;UAIA+P,a;;;;AAOb,UAAYpI,SAAZ;;AAAA,iBAAYA,QAAZ,EAAoB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,OAZD,EAAYA,SAAQ,KAARA,SAAQ,MAApB;;AAcA,UAAYE,OAAZ;;AAAA,iBAAYA,MAAZ,EAAkB;AAChB;AACA;AACD,OAHD,EAAYA,OAAM,KAANA,OAAM,MAAlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC7FO,UAAMnS,SAAQ,GAAG,CACtB;AAAEsa,cAAM,EAAE,WAAV;AACEC,eAAO,EAAE,SADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AAACC,qBAAS,EAAE,uCAAZ;AACCC,oBAAQ,EAAE;AADX;AADG;AAFX,OADsB,EAQtB;AAAEL,cAAM,EAAE,WAAV;AACEC,eAAO,EAAE,sCADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AAACC,qBAAS,EAAE,uDAAZ;AACFC,oBAAQ,EAAE;AADR;AADG;AAFX,OARsB,EAetB;AAAEL,cAAM,EAAE,SAAV;AACEC,eAAO,EAAE,YADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AAACC,qBAAS,EAAE,oBAAZ;AACFC,oBAAQ,EAAE;AADR;AADG;AAFX,OAfsB,EAsBtB;AAAEL,cAAM,EAAE,SAAV;AACEC,eAAO,EAAE,iBADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,6DADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OAtBsB,EA+BtB;AAAEL,cAAM,EAAE,SAAV;AACEC,eAAO,EAAE,WADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,6CADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OA/BsB,EAwCtB;AAAEL,cAAM,EAAE,MAAV;AACEC,eAAO,EAAE,SADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AAACC,qBAAS,EAAE,gCAAZ;AACFC,oBAAQ,EAAE;AADR;AADG;AAFX,OAxCsB,EA+CtB;AAAEL,cAAM,EAAE,MAAV;AACEC,eAAO,EAAE,kBADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AAACC,qBAAS,EAAE,mCAAZ;AACFC,oBAAQ,EAAE;AADR;AADG;AAFX,OA/CsB,EAsDtB;AAAEL,cAAM,EAAE,MAAV;AACEC,eAAO,EAAE,gBADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AAACC,qBAAS,EAAE,iCAAZ;AACFC,oBAAQ,EAAE;AADR;AADG;AAFX,OAtDsB,EA6DtB;AAAEL,cAAM,EAAE,MAAV;AACEC,eAAO,EAAE,oBADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,4CADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OA7DsB,EAsEtB;AAAEL,cAAM,EAAE,MAAV;AACEC,eAAO,EAAE,YADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,uBADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OAtEsB,EA+EtB;AAAEL,cAAM,EAAE,YAAV;AACEC,eAAO,EAAE,mBADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,2BADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OA/EsB,EAwFtB;AAAEL,cAAM,EAAE,YAAV;AACEC,eAAO,EAAE,SADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,uDADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OAxFsB,EAiGtB;AAAEL,cAAM,EAAE,YAAV;AACEC,eAAO,EAAE,OADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,0BADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OAjGsB,EA0GtB;AAAEL,cAAM,EAAE,KAAV;AACEC,eAAO,EAAE,YADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,oBADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OA1GsB,EAmHtB;AAAEL,cAAM,EAAE,KAAV;AACEC,eAAO,EAAE,SADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,gDADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OAnHsB,EA4HtB;AAAEL,cAAM,EAAE,KAAV;AACEC,eAAO,EAAE,OADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,mBADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OA5HsB,EAqItB;AAAEL,cAAM,EAAE,aAAV;AACEC,eAAO,EAAE,oBADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,qCADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OArIsB,EA8ItB;AAAEL,cAAM,EAAE,aAAV;AACEC,eAAO,EAAE,SADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,iEADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OA9IsB,EAuJtB;AAAEL,cAAM,EAAE,aAAV;AACEC,eAAO,EAAE,OADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,oCADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OAvJsB,EAgKtB;AAAEL,cAAM,EAAE,cAAV;AACEC,eAAO,EAAE,qBADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,qCADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OAhKsB,EAyKtB;AAAEL,cAAM,EAAE,cAAV;AACEC,eAAO,EAAE,SADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,iEADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OAzKsB,EAkLtB;AAAEL,cAAM,EAAE,cAAV;AACEC,eAAO,EAAE,OADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,oCADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OAlLsB,EA2LtB;AAAEL,cAAM,EAAE,cAAV;AACEC,eAAO,EAAE,qBADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,sCADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OA3LsB,EAoMtB;AAAEL,cAAM,EAAE,cAAV;AACEC,eAAO,EAAE,SADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,kEADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OApMsB,EA6MtB;AAAEL,cAAM,EAAE,cAAV;AACEC,eAAO,EAAE,OADX;AAEEC,eAAO,EAAE;AACPC,YAAE,EAAE;AACFC,qBAAS,EAAE,qCADT;AAEFC,oBAAQ,EAAE;AAFR;AADG;AAFX,OA7MsB,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACuBD;;AACA;;AAEgC;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAChC;;AACE;;AACA;;AACF;;;;;;AANM;;AAAA;;AAIE;;AAAA;;AACN;;AAAA;;;;;;AAEF;;AACE;;AACA;;AACA;;AACF;;;;;;AADE;;AAAA;;;;;;AAMF;;AAA+D;;AAA2C;;;;;;AAA3C;;AAAA;;;;;;AAC/D;;AAA0D;;AAAsC;;;;;;AAAtC;;AAAA;;;;;;;;AAvB5D;;AAEE;;AACE;;AAAsF;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAtF;;AACF;;AACA;;AAQA;;AAKA;;AACE;;AAEF;;AACA;;AACA;;AACF;;;;;;;;AAvBI;;AACsB;;AAAA;;AAGnB;;AAAA;;AAQA;;AAAA;;AAKD;;AAAA;;AAEK;;AAAA;;AAEJ;;AAAA;;AACA;;AAAA;;;;;;;;AAkBH;;AAKwB;AAAA;;AAAA;;AAAA;AAAA;;AACxB;;;;;;AALwB,4GAAiC,WAAjC,EAAiC,sCAAjC,EAAiC,aAAjC,EAAiC,IAAjC,EAAiC,UAAjC,EAAiC,KAAjC;;;;;;;;;;;;;;;;UC/CnBjX,kC;AAWX,oDAAqBc,EAArB,EACqBnF,eADrB,EAEqBD,aAFrB,EAGqBE,cAHrB,EAIqBlB,uBAJrB,EAIqE;AAAA;;AAJhD,eAAAoG,EAAA,GAAAA,EAAA;AACA,eAAAnF,eAAA,GAAAA,eAAA;AACA,eAAAD,aAAA,GAAAA,aAAA;AACA,eAAAE,cAAA,GAAAA,cAAA;AACA,eAAAlB,uBAAA,GAAAA,uBAAA;AAVrB,eAAAwc,oBAAA,GAAuB,KAAvB;AACA,eAAAxG,SAAA,GAAY,KAAZ;AAS2E;;;;eAN3E,eAA2B;AAAC,mBAAO,KAAKwG,oBAAL,GAA4B,OAA5B,GAAsC,MAA7C;AAAsD;;;iBAalF,uBAAc;AACZ,iBAAKC,iBAAL,GAAoC,KAAKvc,QAAL,CAAcC,GAAd,CAAkB,YAAlB,CAApC;AACA,iBAAKsc,iBAAL,CAAuBnN,QAAvB,CAAgC1H,OAAhC,CAAyC,UAAA2H,IAAI,EAAI;AAC/C,kBAAKA,IAAI,CAACpP,GAAL,CAAS,UAAT,EAAqB2I,KAArB,KAA+B,KAApC,EAA2C;AAAEyG,oBAAI,CAACpP,GAAL,CAAS,SAAT,EAAoBiN,OAApB;AAAgC;AAC9E,aAFD;AAGD;;;iBAED,oBAAW,CAEV;;;iBAED,oBAAQ;AAAA;;AACN,iBAAKqP,iBAAL,CAAuBnN,QAAvB,CAAgC1H,OAAhC,CAAyC,UAAA8U,eAAe;AAAA,qBAAIA,eAAe,CAACvc,GAAhB,CAAoB,SAApB,EAA+B6P,QAA/B,CAAwC,CAAC,OAAI,CAACgG,SAA9C,CAAJ;AAAA,aAAxD;AACA,iBAAKA,SAAL,GAAiB,CAAC,KAAKA,SAAvB;AACD;;;iBAED,uBAAchC,GAAd,EAAyB;AACvB,gBAAM2I,mBAAmB,GAAG,KAAKF,iBAAL,CAAuB7T,EAAvB,CAA0BoL,GAA1B,CAA5B;AACA,iBAAKyI,iBAAL,CAAuBnN,QAAvB,CAAgC1H,OAAhC,CAAyC,UAACgV,YAAD,EAAepN,KAAf,EAAyB;AAChE,kBAAIA,KAAK,IAAIwE,GAAb,EAAkB;AAAE;AAAS;;AAC7B,kBAAI4I,YAAY,CAACzc,GAAb,CAAiB,aAAjB,EAAgC2I,KAAhC,KAA0C6T,mBAAmB,CAACxc,GAApB,CAAwB,aAAxB,EAAuC2I,KAArF,EAA4F;AAC1F8T,4BAAY,CAACzc,GAAb,CAAiB,SAAjB,EAA4B6P,QAA5B,CAAqC,CAAC2M,mBAAmB,CAACxc,GAApB,CAAwB,SAAxB,EAAmC2I,KAAzE;AACD;AACF,aALD;AAMD;;;iBAED,eAAG;AAAA;;AACD,iBAAK+T,eAAL,GAAuB,KAAKzW,EAAL,CAAQ+D,KAAR,CAAc;AACnCkC,qBAAO,EAAE,EAD0B;AAEnCC,uBAAS,EAAE,KAFwB;AAGnCO,sBAAQ,EAAE,UAHyB;AAInCrB,wCAA0B,EAAE,EAJO;AAKnCE,wCAA0B,EAAE,EALO;AAMnCoR,wCAA0B,EAAE,EANO;AAOnCrR,mBAAK,EAAE,EAP4B;AAQnCsR,sBAAQ,EAAE,KAAK3W,EAAL,CAAQ+D,KAAR,CAAc;AACtBpB,kBAAE,EAAE,EADkB;AAEtBY,oBAAI,EAAE,EAFgB;AAGtBgC,oBAAI,EAAE;AAHgB,eAAd;AARyB,aAAd,CAAvB;;AAcA,gBAAI,CAAC,KAAKqR,YAAV,EAAwB;AACtB,mBAAKhc,aAAL,CAAmB2T,cAAnB,CAAkC,aAAlC,EACGnT,SADH,CACa,UAAA+U,WAAW,EAAI;AACxB,oBAAM3B,SAAS,GAAc2B,WAA7B;AACA3B,yBAAS,CAACC,SAAV,GAAsB0B,WAAW,CAACzB,UAAlC;AACAF,yBAAS,CAACG,SAAV,GAAsBwB,WAAW,CAACzB,UAAlC;AACAF,yBAAS,CAAC7H,YAAV,GAAyBwJ,WAAW,CAACzB,UAArC;AACA,uBAAI,CAACkI,YAAL,GAAoB,OAAI,CAAChd,uBAAL,CAA6BgV,wBAA7B,CAAsDJ,SAAtD,CAApB;AACA,uBAAI,CAACoI,YAAL,CAAkBlc,IAAlB,GAAyB,IAAzB;AACD,eARH;AASD;;AACD,iBAAK0b,oBAAL,GAA4B,IAA5B;AACD;;;iBAED,8BAAkB;AAChB,iBAAKA,oBAAL,GAA4B,KAA5B;AACD;;;iBAED,mBAAO;AAAA;;AACL,gBAAMvC,UAAU,GAAG,KAAK4C,eAAL,CAAqB1c,GAArB,CAAyB,aAAzB,EAAwC2I,KAA3D;AACA,iBAAK7H,eAAL,CAAqBsP,oBAArB,CAA0C0J,UAA1C,EACGzY,SADH,CACc,UAAAC,IAAI,EAAI;AAClB,kBAAI,eAAeA,IAAnB,EAAyB;AACvB,uBAAI,CAACob,eAAL,CAAqB1c,GAArB,CAAyB,4BAAzB,EAAuD6P,QAAvD,CAAgEvO,IAAI,CAAC,eAAD,CAApE;;AACA,uBAAI,CAACob,eAAL,CAAqB1c,GAArB,CAAyB,aAAzB,EAAwC6P,QAAxC,CAAiDvO,IAAI,CAAC,gBAAD,CAAJ,CAAuB,CAAvB,EAA0B,IAA1B,CAAjD;;AACA,uBAAI,CAACob,eAAL,CAAqB1c,GAArB,CAAyB,eAAzB,EAA0C6P,QAA1C,CAAmDvO,IAAI,CAAC,gBAAD,CAAJ,CAAuB,CAAvB,EAA0B,MAA1B,CAAnD;;AACA,uBAAI,CAACob,eAAL,CAAqB1c,GAArB,CAAyB,eAAzB,EAA0C6P,QAA1C,CAAmDvO,IAAI,CAAC,gBAAD,CAAJ,CAAuB,CAAvB,EAA0B,MAA1B,CAAnD;;AACA,uBAAI,CAACob,eAAL,CAAqBpN,WAArB;;AACA,uBAAI,CAACgN,iBAAL,CAAuBlR,IAAvB,CAA4B,OAAI,CAACsR,eAAjC;;AACA,oBAAMI,eAAe,GAAGxb,IAAI,CAAC,eAAD,CAAJ,CAAsBlB,IAAtB,CAA2B,UAAA2K,YAAY;AAAA,yBAAIA,YAAY,CAACC,eAAb,KAAiC,iBAArC;AAAA,iBAAvC,CAAxB;AACA,oBAAM+R,QAAQ,GAAG,EAAjB;AACAD,+BAAe,CAAC3R,MAAhB,CAAuB1D,OAAvB,CAAgC,UAAAkB,KAAK,EAAI;AACvC,yBAAI,CAAC2T,iBAAL,CAAuBlR,IAAvB,CAA4B,OAAI,CAACnF,EAAL,CAAQ+D,KAAR,CAAc;AACxCkC,2BAAO,EAAE,CAAC;AAACvD,2BAAK,EAAE,EAAR;AAAYoM,8BAAQ,EAAE;AAAtB,qBAAD,CAD+B;AAExC5I,6BAAS,EAAE,KAF6B;AAGxCO,4BAAQ,EAAE,KAH8B;AAIxCrB,8CAA0B,EAAE,EAJY;AAKxCE,8CAA0B,EAAE,EALY;AAMxCoR,8CAA0B,EAAE,EANY;AAOxCrR,yBAAK,EAAE3C,KAAK,CAAC,OAAD,CAP4B;AAQxCiU,4BAAQ,EAAE,OAAI,CAAC3W,EAAL,CAAQ+D,KAAR,CAAc;AACtBpB,wBAAE,EAAEtH,IAAI,CAAC,gBAAD,CAAJ,CAAuB,CAAvB,EAA0B,IAA1B,CADkB;AAEtBkI,0BAAI,EAAEb,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,KAA9B,EAAqC,CAArC,EAAwC,MAAxC,CAFgB;AAGtB6C,0BAAI,EAAElK,IAAI,CAAC,gBAAD,CAAJ,CAAuB,CAAvB,EAA0B,MAA1B;AAHgB,qBAAd,CAR8B;AAaxCqP,uBAAG,EAAE,OAAI,CAAC1K,EAAL,CAAQ+D,KAAR,CAAc;AACjBT,4BAAM,EAAEZ,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,KAA9B,EAAqC,CAArC,EAAwC,QAAxC,CADS;AAEjBa,0BAAI,EAAEb,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,KAA9B,EAAqC,CAArC,EAAwC,MAAxC;AAFW,qBAAd;AAbmC,mBAAd,CAA5B;;AAkBAoU,0BAAQ,CAAC3R,IAAT,CAAczC,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,eAA9B,CAAd;AACD,iBApBD;;AAqBA,uBAAI,CAACqU,gBAAL,CAAsBD,QAAtB;AACD,eA/BD,MA+BO;AACL,oBAAMvV,aAAa,GAAclG,IAAjC;AACAkG,6BAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAA1B;;AACA,uBAAI,CAACgV,eAAL,CAAqBjN,SAArB,CAA+B;AAACC,yBAAO,EAAE;AAAV,iBAA/B;AACD;;AACD,qBAAI,CAAC2M,oBAAL,GAA4B,KAA5B;AACD,aAvCH;AAwCD;;;iBAED,0BAAiBU,QAAjB,EAAwC;AAAA;;AACtC,gBAAME,WAAW,GAAG,KAAKhX,EAAL,CAAQ+D,KAAR,CAAc;AAChCiQ,0BAAY,EAAE,4CAAOiD,WAAP,GAAqB/D,OAArB,CAA6B,IAA7B,EAAmC,EAAnC,CADkB;AAEhC1M,kBAAI,EAAE,KAAK1M,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAA0B2I,KAA1B,WAA0C,KAAK+T,eAAL,CAAqB1c,GAArB,CAAyB,aAAzB,EAAwC2I,KAFxD;AAGhCmB,yBAAW,EAAE;AAHmB,aAAd,CAApB;AAKA,iBAAK4S,eAAL,CAAqBpS,UAArB,CAAgC,SAAhC,EAA2C2S,WAA3C;AACA,gBAAM5C,UAAU,GAAG0C,QAAQ,CAACtS,GAAT,CAAc,UAAA0S,OAAO,EAAI;AAC1C,qBAAO;AACLpW,sBAAM,EAAE,wBADH;AAELuG,wBAAQ,EAAE;AAACuB,+BAAa,EAAEsO,OAAhB;AACRvD,+BAAa,EAAE,CAAC;AAAE5O,mCAAe,EAAE,aAAnB;AACd6O,yCAAqB,EAAE;AACrBF,+BAAS,EAAE,CAAC,YAAD,CADU;AAErBC,mCAAa,EAAE,CAAC;AAAC5O,uCAAe,EAAE,sBAAlB;AACd6O,6CAAqB,EAAE;AAACF,mCAAS,EAAE,CAAC,WAAD;AAAZ;AADT,uBAAD;AAFM;AADT,mBAAD;AADP;AAFL,eAAP;AASD,aAVkB,CAAnB;AAWA,iBAAK7Y,eAAL,CAAqBsc,WAArB,CAAiC/C,UAAjC,EAA6ChZ,SAA7C,CAAwD,UAAAC,IAAI,EAAI;AAC9D,kBAAImZ,cAAc,GAAG,EAArB;AACAnZ,kBAAI,CAACmG,OAAL,CAAc,UAAA0T,SAAS,EAAI;AACzB,oBAAIA,SAAS,CAACkC,IAAd,EAAoB;AAClB,sBAAM7V,aAAa,GAAclG,IAAjC;AACAkG,+BAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,2BAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,mBAA1B;AACAuV,6BAAW,CAACxN,SAAZ,CAAsB;AAACC,2BAAO,EAAE;AAAV,mBAAtB;AACD,iBAJD,MAIO;AACL,sBAAM4N,eAAe,GAAGnC,SAAS,CAACC,MAAV,CAAiB9N,QAAjB,CAA0BxC,aAA1B,CAAwC,CAAxC,CAAxB;;AACA,sBAAIwS,eAAJ,EAAqB;AACnBA,mCAAe,CAACnS,MAAhB,CAAuB1D,OAAvB,CAAgC,UAAAkB,KAAK;AAAA,6BAAIA,KAAK,CAAC0C,0BAAN,GAAmC,EAAvC;AAAA,qBAArC;AACAoP,kCAAc,GAAGA,cAAc,CAAC8C,MAAf,CACf,OAAI,CAACzc,eAAL,CAAqBoK,sBAArB,CAA4CoS,eAA5C,CADe,CAAjB;AAED;AACF;AACF,eAbD;;AAcA,kBAAI,CAACL,WAAW,CAACO,QAAZ,CAAqB,SAArB,CAAL,EAAsC;AACpC,oBAAMC,aAAa,GAAG,OAAI,CAACxX,EAAL,CAAQsE,KAAR,CAAckQ,cAAc,CAAChQ,GAAf,CAAmB,UAAAiB,aAAa;AAAA,yBAAI,OAAI,CAACzF,EAAL,CAAQ+D,KAAR,CAAc0B,aAAd,CAAJ;AAAA,iBAAhC,CAAd,CAAtB;;AACA+R,6BAAa,CAACtO,QAAd,CAAuB1H,OAAvB,CAAgC,UAAA2H,IAAI;AAAA,yBAAIA,IAAI,CAACE,WAAL,EAAJ;AAAA,iBAApC;AACA2N,2BAAW,CAAC3S,UAAZ,CAAuB,gBAAvB,EAAyCmT,aAAzC;AACD;AACF,aArBD;AAsBD;;;iBAED,mBAAM;AACJ,gBAAIpO,KAAK,GAAG,KAAKiN,iBAAL,CAAuBnN,QAAvB,CAAgCnD,SAAhC,CAA2C,UAAAuQ,eAAe;AAAA,qBAAIA,eAAe,CAACvc,GAAhB,CAAoB,SAApB,EAA+B2I,KAAnC;AAAA,aAA1D,CAAZ;;AACA,mBAAQ0G,KAAK,KAAK,CAAC,CAAnB,EAAsB;AACpB,mBAAKiN,iBAAL,CAAuBzT,QAAvB,CAAgCwG,KAAhC;AACA,mBAAKiN,iBAAL,CAAuBhN,WAAvB;AACAD,mBAAK,GAAG,KAAKiN,iBAAL,CAAuBnN,QAAvB,CAAgCnD,SAAhC,CAA2C,UAAAuQ,eAAe;AAAA,uBAAIA,eAAe,CAACvc,GAAhB,CAAoB,SAApB,EAA+B2I,KAAnC;AAAA,eAA1D,CAAR;AACD;AACF;;;iBAED,sBAAa4F,MAAb,EAAmB;AACjB,gBAAIA,MAAM,CAACC,OAAP,KAAmB,EAAvB,EAA4B;AAC1B,mBAAKzG,OAAL;AACD;AACF;;;iBACD,sBAAaxC,KAAb,EAA4BC,YAA5B,EAAyD;AACvD,gBAAMC,aAAa,GAAG,UAAUC,OAAV,EAAwBC,MAAxB,EAAwC;AAC5D,qBAAO;AAAA,uBAAMD,OAAO,CAAC2Q,gBAAR,CAAyB1Q,MAAzB,CAAN;AAAA,eAAP;AACD,aAFqB,CAEpB,IAFoB,EAEdJ,KAFc,EAEPM,IAFO,CAEF,IAFE,CAAtB;;AAIA,iBAAKC,mBAAL,CAAyBC,2BAAzB,CAAqD,UAArD,EAAiE,gBAAjE,EACEP,YADF,EACgB,KAAKc,QADrB,EAC+B,IAD/B,EACqC,IADrC,EAC2Cb,aAD3C;AAED;;;iBAED,wBAAeoO,GAAf,EAA0B;AACxB,gBAAMyC,WAAW,GAAG,KAAKgG,iBAAL,CAAuB7T,EAAvB,CAA0BoL,GAA1B,CAApB;AACA,gBAAM0C,UAAU,GAAGD,WAAW,CAACtW,GAAZ,CAAgB,aAAhB,EAA+B2I,KAAlD;AACA,iBAAK2T,iBAAL,CAAuBnN,QAAvB,CAAgC1H,OAAhC,CAAyC,UAAAgV,YAAY,EAAI;AACvD,kBAAIA,YAAY,CAACzc,GAAb,CAAiB,aAAjB,EAAgC2I,KAAhC,KAA0C4N,UAA9C,EAA2D;AACzDkG,4BAAY,CAACzc,GAAb,CAAiB,WAAjB,EAA8B6P,QAA9B,CAAuC,CAAC4M,YAAY,CAACzc,GAAb,CAAiB,WAAjB,EAA8B2I,KAAtE;AACD;AACF,aAJD;AAKD;;;;;;;yBAtMUxD,kC,EAAiC,wH,EAAA,+H,EAAA,uH,EAAA,+H,EAAA,iI;AAAA,O;;;cAAjCA,kC;AAAiC,uD;AAAA;AAAA;sEAiBjC,yCAAAa,mB,EAAqB,C;;sEAErB,4EAAAlB,kB,EAAoB,C;;;;;;;;;;;;;;;;;;;;ADhCjC;;AACE;;AACE;;AAAsE;AAAA,qBAAS,eAAT;AAAiB,aAAjB;;AACpE;;AAAmC;;AAAM;;AAC3C;;AAA4D;AAAA,qBAAS,IAAA6C,GAAA,EAAT;AAAc,aAAd;;AAC1D;;AAAkC;;AAAG;;AACzC;;AACA;;AACE;;AACA;;AACE;;AAAwB;;AAA0C;AAAA,qBAAS,IAAA+V,QAAA,EAAT;AAAmB,aAAnB;;AAA1C;;AAA+D;;AACvF;;AAA2B;;AAAmB;;AAC9C;;AAA0B;;AAAK;;AAC/B;;AAA0B;;AAAW;;AACvC;;AACA;;AAEA;;AACA;;AAyBA;;AACF;;AACF;;AAEA;;AAGE;;AACE;;AACE;;AACE;;AAAgD;;AAAgB;;AAChE;;AAAoC;AAAA,qBAAS,IAAAC,kBAAA,EAAT;AAA6B,aAA7B;;AAClC;;AAAyB;;AAAO;;AAClC;;AACF;;AACA;;AACE;;AAOF;;AACA;;AACE;;AAAuD;AAAA,qBAAS,IAAAA,kBAAA,EAAT;AAA6B,aAA7B;;AAA+B;;AAAM;;AAC5F;;AAAqD;AAAA,qBAAS,IAAA5V,OAAA,EAAT;AAAkB,aAAlB;;AAAoB;;AAAO;;AAClF;;AACF;;AACF;;AACF;;;;AAvE6F;;AAAA;;AAEb;;AAAA;;AAGxB;;AAAA;;AAWvB;;AAAA;;AA8B5B;;AAAA,iLAA0C,SAA1C,EAA0C,+FAA1C;;AAW4B;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEpDzB;;AAA4D;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAG5D;;AACE;;AAAyB;;AAAyC;;AACpE;;AACA;;AAAwB;;AAAiD;;AACzE;;AAAO;;AAA4D;;AACrE;;;;;;;;AANG;;AAE0B;;AAAA;;AAEH;;AAAA;;AACjB;;AAAA;;;;;;AART;;AACE;;AASF;;;;;;AATM;;AAAA;;;;UCCC3C,iC;AAMX,qDAAc;AAAA;AAAG;;;;iBAEjB,uBAAW;AACT,iBAAKwY,gBAAL,GAAmC,KAAK7d,QAAL,CAAcC,GAAd,CAAkB,YAAlB,CAAnC;AACA,iBAAK6d,QAAL,CAAc,KAAKD,gBAAL,CAAsBnV,EAAtB,CAAyB,CAAzB,CAAd;AACD;;;iBAED,oBAAQ,CACP;;;iBAED,kBAAS2G,IAAT,EAA8B;AAC5B,iBAAK0O,uBAAL,GAA0C1O,IAA1C;AACD;;;;;;;yBAlBUhK,iC;AAAgC,O;;;cAAhCA,iC;AAAgC,sD;AAAA;AAAA;AAAA;AAAA,S;AAAA,sF;AAAA,gB;AAAA,e;AAAA,wkB;AAAA;AAAA;ADR7C;;AACE;;AACE;;AACE;;AACF;;AACA;;AACE;;AAWF;;AACF;;AACA;;AACE;;AAEF;;AACF;;;;AAjBmC;;AAAA;;AAcZ;;AAAA,0KAAoD,UAApD,EAAoD,gBAApD,EAAoD,UAApD,EAAoD,YAApD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEVrB;;AACE;;AACE;;AACE;;AACA;;AACE;;AACQ;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;;;;;AAjBM;;AAAA;;AAWA;;AAAA;;AAGA;;AAAA;;;;UChBKC,8B;AAKX,kDAAc;AAAA;AAAG;;;;iBAKjB,uBAAW;AACT,iBAAK0Y,aAAL,GAAqB,KAAKhe,QAAL,CAAcC,GAAd,CAAkB,OAAlB,CAArB;AACD;;;iBAED,oBAAW,CAEV;;;iBAED,sBAAauF,KAAb,EAA4BC,YAA5B,EAAyD;AACvD,gBAAMC,aAAa,GAAG,UAAUC,OAAV,EAAwBC,MAAxB,EAAwC;AAC5D,qBAAO;AAAA,uBAAMD,OAAO,CAACE,WAAR,CAAoBD,MAApB,CAAN;AAAA,eAAP;AACD,aAFqB,CAEpB,IAFoB,EAEdJ,KAFc,EAEPM,IAFO,CAEF,IAFE,CAAtB;;AAIA,iBAAKC,mBAAL,CAAyBqK,+BAAzB,CAAyD,MAAzD,EAAiE,SAAjE,EACE,SADF,EACa3K,YADb,EAC2B,KAAKc,QADhC,EAC0Cb,aAD1C;AAED;;;;;;;yBAzBUJ,8B;AAA6B,O;;;cAA7BA,8B;AAA6B,mD;AAAA;AAAA;sEAO7B,yCAAAW,mB,EAAqB,C;;;;;;;;;;;;;;;;;;;ADhBlC;;AACE;;AACA;;AACE;;AAAoB;;AAAO;;AAC3B;;AAAoB;;AAAS;;AAC7B;;AAAoB;;AAAM;;AAC5B;;AACA;;AAEA;;AACA;;AAmBA;;AACF;;AAEA;;;;AAhCgE;;AAUrC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AECrB;;AAA4C;;AAAI;;;;;;AAChD;;AAAgD;;AAAO;;;;;;AA4CzD;;;;;;AAAkD,gGAAqB,UAArB,EAAqB,eAArB;;;;;;AAElD;;;;;;AAAiD,gGAAqB,UAArB,EAAqB,eAArB;;;;;;AAEjD;;;;;;AAA8C,gGAAqB,UAArB,EAAqB,eAArB;;;;;;AAE9C;;;;;;AAAkC,gGAAqB,eAArB,EAAqB,oBAArB,EAAqB,eAArB,EAAqB,YAArB;;;;;;;;AAtCtC;;AACE;;AACE;;AAMA;;AAMF;;AAEA;;AACE;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,yCAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAY;;AACvH;;AACA;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,yCAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAO;;AAClH;;AACA;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,0CAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAI;;AAC/G;;AACA;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,0CAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAK;;AAChH;;AACF;;AAEA;;AACE;;AAEA;;AAEA;;AAEA;;AAEF;;AACF;;;;;;AAtC4B;;AAAA,yHAA8C,WAA9C,EAA8C,eAA9C,EAA8C,UAA9C,EAA8C,iBAA9C,EAA8C,aAA9C,EAA8C,IAA9C;;AAMA;;AAAA,gIAAqD,WAArD,EAAqD,eAArD,EAAqD,UAArD,EAAqD,iBAArD,EAAqD,aAArD,EAAqD,IAArD;;AASF;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIN;;AAAA;;AACiB;;AAAA;;AAED;;AAAA;;AAEH;;AAAA;;AAEZ;;AAAA;;;;UC9CR7C,0B;AAYX,4CAAoB8C,EAApB,EACoBC,KADpB,EAEoBC,MAFpB,EAGoBC,aAHpB,EAIoBtF,eAJpB,EAKoBjB,uBALpB,EAMoBgB,aANpB,EAOoBwF,eAPpB,EAQoBtF,cARpB,EAQoD;AAAA;;AARhC,eAAAkF,EAAA,GAAAA,EAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAtF,eAAA,GAAAA,eAAA;AACA,eAAAjB,uBAAA,GAAAA,uBAAA;AACA,eAAAgB,aAAA,GAAAA,aAAA;AACA,eAAAwF,eAAA,GAAAA,eAAA;AACA,eAAAtF,cAAA,GAAAA,cAAA;AAhBpB,eAAAuF,QAAA,GAAW,IAAX;AACA,eAAAC,SAAA,GAAY,KAAZ;AAGA,eAAAC,aAAA,GAAgB,EAAhB;AACA,eAAA6T,UAAA,GAAa,EAAb;AACA,eAAA3T,QAAA,GAAW,CAAX;AAWC;;;;iBAED,oBAAW;AAAA;;AACT,iBAAKR,KAAL,CAAWS,QAAX,CAAoBC,IAApB,CACE,gDAAAC,SAAA,EAAU,UAACC,MAAD,EAAsB;AAC9B,qBAAI,CAACC,MAAL,GAAcD,MAAM,CAAC9G,GAAP,CAAW,QAAX,CAAd;;AACA,kBAAI,OAAI,CAAC+G,MAAL,KAAgB,KAApB,EAA2B;AACzB,uBAAI,CAACR,SAAL,GAAiB,IAAjB;AACA,uBAAO,sCAAAS,QAAA,EAAS,CACZ,OAAI,CAACnG,aAAL,CAAmBoG,uBAAnB,CAA2C,YAA3C,CADY,EAEZ,OAAI,CAACC,gBAAL,EAFY,CAAT,CAAP;AAID,eAND,MAMO;AACL,uBAAI,CAACX,SAAL,GAAiB,KAAjB;AACA,uBAAO,sCAAAS,QAAA,EAAS,CACd,OAAI,CAACnG,aAAL,CAAmBoG,uBAAnB,CAA2C,YAA3C,CADc,EAEd,OAAI,CAACnG,eAAL,CAAqBkd,mBAArB,CAAyClX,MAAM,CAAC9G,GAAP,CAAW,gBAAX,CAAzC,CAFc,CAAT,CAAP;AAID;AACF,aAfD,CADF,EAiBEqB,SAjBF,CAiBa,UAAAC,IAAI,EAAI;AACnB,qBAAI,CAACnB,aAAL,GAAqBmB,IAAI,CAAC,CAAD,CAAzB;AACA,qBAAI,CAACrB,SAAL,GAAiB,OAAI,CAACJ,uBAAL,CAA6BK,kBAA7B,CACf,OAAI,CAACC,aAAL,CAAmBC,IAAnB,CAAyB,UAAAC,YAAY;AAAA,uBAAIA,YAAY,CAACC,WAAb,KAA6B,QAAjC;AAAA,eAArC,EAAgFE,UADjE,CAAjB;;AAEA,kBAAI,eAAec,IAAI,CAAC,CAAD,CAAvB,EAA4B;AAC1B,uBAAI,CAAC8F,YAAL,GAAoB9F,IAAI,CAAC,CAAD,CAAJ,CAAQ,eAAR,CAApB;;AACA,uBAAI,CAAC+F,iBAAL,CAA+B/F,IAAI,CAAC,CAAD,CAAnC;;AACA,oBAAI,OAAI,CAACiF,SAAL,IAAkB,OAAI,CAACQ,MAAL,KAAgB,QAAtC,EAAgD;AAC9C,yBAAI,CAACO,gBAAL;AACD,iBAFD,MAEO;AACL,yBAAI,CAACC,mBAAL;AACD;AACF,eARD,MAQO;AACL,oBAAMC,aAAa,GAAclG,IAAI,CAAC,CAAD,CAArC;AACAkG,6BAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAA1B;AACD;AACF,aAjCD;AAkCD;;;iBAED,uBAAW;AACT,iBAAKvB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,aAAD,CAArB;AACD;;;iBAED,2BAAkBnH,SAAlB,EAAmC;AACjC,mBAAO,KAAKR,SAAL,CAAeG,IAAf,CAAqB,UAAAM,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,KAAkBF,SAAtB;AAAA,aAA7B,CAAP;AACD;;;iBAED,wBAAeoH,UAAf,EAAiC;AAC/B,iBAAKnB,QAAL,GAAgBmB,UAAhB;AACD;;;iBAED,6BAAiB;AAAA;;AACf,gBAAI,KAAKvB,QAAT,EAAoB;AAClB,mBAAKgB,gBAAL;AACD,aAFD,MAEO;AACL,kBAAI,KAAKvH,QAAL,CAAc+H,KAAlB,EAAyB;AACvB,qBAAK1B,aAAL,CAAmB2B,OAAnB,CAA2B,kBAA3B,EAA+C1G,SAA/C,CAAyD,UAAA0G,OAAO,EAAI;AAClE,sBAAIA,OAAJ,EAAa;AACX,2BAAI,CAAChI,QAAL,CAAciI,KAAd,CAAoB,OAAI,CAACxB,aAAzB;;AACA,2BAAI,CAACe,mBAAL;AACD;AACF,iBALD;AAMD,eAPD,MAOO;AACL,qBAAKA,mBAAL;AACD;AACF;;AACD,iBAAKxG,cAAL,CAAoBkH,aAApB;AACD;;;iBAED,+BAAmB;AACjB,iBAAK3B,QAAL,GAAgB,IAAhB;AAEA,gBAAM2X,kBAAkB,GAAG,KAAKle,QAAL,CAAcC,GAAd,CAAkB,MAAlB,CAA3B;AACAie,8BAAkB,CAAC7V,oBAAnB;AAEA,iBAAKrI,QAAL,CAAc+I,cAAd,GANiB,CAOjB;;AACAC,kBAAM,CAACC,OAAP,CAAeC,YAAf,CAA4B,EAA5B,EAAgC,EAAhC,yBAAoDgV,kBAAkB,CAACtV,KAAvE;AACD;;;iBAED,4BAAgB;AACd,iBAAKrC,QAAL,GAAgB,KAAhB;AAEA,gBAAM2X,kBAAkB,GAAG,KAAKle,QAAL,CAAcC,GAAd,CAAkB,MAAlB,CAA3B;;AACA,gBAAI,KAAKuG,SAAT,EAAoB;AAClB0X,gCAAkB,CAAC/U,kBAAnB,CACE,mDAAAiJ,2BAAA,EAA4B,KAAKrR,eAAjC,EAAkD,KAAKC,cAAvD,CADF;AAED,aAPa,CASd;;;AACA,gBAAI,KAAKgG,MAAL,KAAgB,SAApB,EAA+B;AAAC,mBAAKA,MAAL,GAAc,QAAd;AAAyB;;AACzDgC,kBAAM,CAACC,OAAP,CAAeC,YAAf,CAA4B,EAA5B,EAAgC,EAAhC,EAAoC,uBAAgBgV,kBAAkB,CAACtV,KAAnC,gBAAqD,KAAK5B,MAA9F;AACD;;;iBAED,4BAAgB;AACd,gBAAMmX,gBAAgB,GAAG,IAAI,0CAAA7U,MAAJ,EAAzB;AACA6U,4BAAgB,CAAC5U,SAAjB,GAA6B,YAA7B;AACA4U,4BAAgB,CAAC,YAAD,CAAhB,GAAiC,CAC/B;AAAEC,mBAAK,EAAE,EAAT;AAAaxU,wBAAU,EAAE,EAAzB;AAA6BC,yBAAW,EAAE,EAA1C;AAA8CC,wBAAU,EAAE,EAA1D;AAA8DC,yBAAW,EAAE;AAA3E,aAD+B,CAAjC;AAGAoU,4BAAgB,CAAC,QAAD,CAAhB,GAA6B,CAC3B;AAAE1U,kBAAI,EAAE,EAAR;AAAY4H,yBAAW,EAAE;AAAzB,aAD2B,CAA7B;AAGA8M,4BAAgB,CAAC,eAAD,CAAhB,GAAoC,EAApC;AACA,mBAAO,uCAAAnU,EAAA,EAAGmU,gBAAH,CAAP;AACD;;;iBAED,2BAAkB5c,IAAlB,EAA8B;AAAA;;AAC5B,iBAAKvB,QAAL,GAAgB,KAAKkG,EAAL,CAAQ+D,KAAR,CAAc;AAC5BR,kBAAI,EAAE,CAAClI,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,MAAlB,CAAD,EAA4B,CAAC,6CAAA2I,UAAA,SAAD,CAA5B,CADsB;AAE5BmH,yBAAW,EAAE,CAAC9P,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,aAAlB,CAAD,CAFe;AAG5B6I,mBAAK,EAAE,KAAKlE,EAAL,CAAQ+D,KAAR,CAAc;AACnBL,0BAAU,EAAE,CAACrI,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,YAAtB,CAAD,CADO;AAEnBsI,2BAAW,EAAE,CAACtI,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,aAAtB,CAAD,CAFM;AAGnBuI,0BAAU,EAAE,CAACvI,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,YAAtB,CAAD,CAHO;AAInBwI,2BAAW,EAAE,CAACxI,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,aAAtB,CAAD;AAJM,eAAd;AAHqB,aAAd,CAAhB;;AAUA,gBAAM8I,kBAAkB,GAAG,KAAKC,mBAAL,CAA0B/I,IAAI,CAAC,eAAD,CAA9B,CAA3B;;AACA,iBAAKvB,QAAL,CAAcuK,UAAd,CAAyB,YAAzB,EAAuC,KAAKrE,EAAL,CAAQsE,KAAR,CACrCH,kBAAkB,CAACgU,UAAnB,CAA8B3T,GAA9B,CAAmC,UAAAmS,QAAQ,EAAI;AAC7C,kBAAMH,YAAY,GAAI,OAAI,CAACxW,EAAL,CAAQ+D,KAAR,CAAc;AAClCkC,uBAAO,EAAE0Q,QAAQ,CAAC1Q,OADgB;AAElCC,yBAAS,EAAEyQ,QAAQ,CAACzQ,SAFc;AAGlCO,wBAAQ,EAAEkQ,QAAQ,CAAClQ,QAHe;AAIlCrB,0CAA0B,EAAEuR,QAAQ,CAACvR,0BAJH;AAKlCE,0CAA0B,EAAEqR,QAAQ,CAACrR,0BALH;AAMlCoR,0CAA0B,EAAEC,QAAQ,CAACD,0BANH;AAOlCrR,qBAAK,EAAEsR,QAAQ,CAACtR;AAPkB,eAAd,CAAtB;;AAUAmR,0BAAY,CAACnS,UAAb,CAAwB,UAAxB,EAAoC,OAAI,CAACrE,EAAL,CAAQ+D,KAAR,CAAc;AAChDpB,kBAAE,EAAEgU,QAAQ,CAACA,QAAT,CAAkBhU,EAD0B;AAEhDY,oBAAI,EAAEoT,QAAQ,CAACA,QAAT,CAAkBpT,IAFwB;AAGhDgC,oBAAI,EAAEoR,QAAQ,CAACA,QAAT,CAAkBpR;AAHwB,eAAd,CAApC;;AAMA,kBAAIoR,QAAQ,CAACyB,OAAb,EAAsB;AACpB5B,4BAAY,CAACnS,UAAb,CAAwB,SAAxB,EAAmC,OAAI,CAACrE,EAAL,CAAQ+D,KAAR,CAAc;AAC/CiQ,8BAAY,EAAE2C,QAAQ,CAACyB,OAAT,CAAiBpE,YADgB;AAE/CxN,sBAAI,EAAEmQ,QAAQ,CAACyB,OAAT,CAAiB5R,IAFwB;AAG/C3C,6BAAW,EAAE8S,QAAQ,CAACyB,OAAT,CAAiBvU,WAHiB;AAI/C2Q,gCAAc,EAAEmC,QAAQ,CAACyB,OAAT,CAAiB5D,cAAjB,GACd,OAAI,CAACxU,EAAL,CAAQsE,KAAR,CAAcqS,QAAQ,CAACyB,OAAT,CAAiB5D,cAAjB,CAAgChQ,GAAhC,CAAqC,UAAAiB,aAAa;AAAA,2BAAI,OAAI,CAACzF,EAAL,CAAQ+D,KAAR,CAAc0B,aAAd,CAAJ;AAAA,mBAAlD,CAAd,CADc,GACwF;AALzD,iBAAd,CAAnC;AAOD;;AAED,kBAAIkR,QAAQ,CAACjM,GAAb,EAAkB;AAChB8L,4BAAY,CAACnS,UAAb,CAAwB,KAAxB,EAA+B,OAAI,CAACrE,EAAL,CAAQ+D,KAAR,CAAc;AAC3CT,wBAAM,EAAEqT,QAAQ,CAACjM,GAAT,CAAapH,MADsB;AAE3CC,sBAAI,EAAEoT,QAAQ,CAACjM,GAAT,CAAanH;AAFwB,iBAAd,CAA/B;AAID;;AAED,qBAAOiT,YAAP;AACD,aAnCD,CADqC,CAAvC;AAqCA,iBAAK1c,QAAL,CAAcuK,UAAd,CAAyB,OAAzB,EAAkC,KAAKrE,EAAL,CAAQsE,KAAR,CAChCH,kBAAkB,CAACkU,KAAnB,CAAyB7T,GAAzB,CAA8B,UAAA8T,IAAI;AAAA,qBAAI,OAAI,CAACtY,EAAL,CAAQ+D,KAAR,CAAcuU,IAAd,CAAJ;AAAA,aAAlC,CADgC,CAAlC;AAEA,iBAAK/X,aAAL,GAAqB,KAAKzG,QAAL,CAAc8K,WAAd,EAArB;AACD;;;iBAED,6BAAqBC,aAArB,EAAkD;AAAA;;AAChD,gBAAMV,kBAAkB,GAAG;AACzBkU,mBAAK,EAAE,EADkB;AAEzBF,wBAAU,EAAE;AAFa,aAA3B;;AAIA,gBAAI,CAACtT,aAAL,EAAoB;AAAE,qBAAOV,kBAAP;AAA4B;;AAClDU,yBAAa,CAACrD,OAAd,CAAuB,UAAAsD,YAAY,EAAI;AACrC,sBAAQA,YAAY,CAACC,eAArB;AACE,qBAAK,0BAAL;AACEwT,4CAA0B,CAACzT,YAAD,EAAe,OAAf,CAA1B;;AACA;;AACF,qBAAK,cAAL;AACE0T,kCAAgB,CAAC1T,YAAD,CAAhB;;AACA;;AACF,wBAPF,CAQE;;AARF;AAUD,aAXD;AAYA,mBAAOX,kBAAP;;AAEA,qBAASoU,0BAAT,CAAqCzT,YAArC,EAAiErF,OAAjE,EAA6E;AAC3E,kBAAM0Y,UAAU,GAAGrT,YAAY,CAACI,MAAb,CAAoBuT,IAApB,CAA0B,UAACC,CAAD,EAAIC,CAAJ;AAAA,uBAAUD,CAAC,CAACrT,KAAF,GAAUsT,CAAC,CAACtT,KAAtB;AAAA,eAA1B,CAAnB;AACA8S,wBAAU,CAAC3W,OAAX,CAAoB,UAAAkB,KAAK,EAAI;AAC3B,oBAAMkW,mBAAmB,GAAGlW,KAAK,CAACmW,iBAAN,CAAwB1e,IAAxB,CAC1B,UAAA2e,eAAe;AAAA,yBAAIA,eAAe,CAACxN,OAAhB,KAA4B,cAAhC;AAAA,iBADW,CAA5B;AAEA,oBAAMyN,mBAAmB,GAAGrW,KAAK,CAACmW,iBAAN,CAAwB1e,IAAxB,CAC1B,UAAA2e,eAAe;AAAA,yBAAIA,eAAe,CAACxN,OAAhB,KAA4B,cAAhC;AAAA,iBADW,CAA5B;AAEAnH,kCAAkB,CAACgU,UAAnB,CAA8BhT,IAA9B,CAAmC;AACjCc,yBAAO,EAAE,EADwB;AAEjCC,2BAAS,EAAE,KAFsB;AAGjCO,0BAAQ,EAAE,UAHuB;AAIjCrB,4CAA0B,EAAE1C,KAAK,CAAC,4BAAD,CAJA;AAKjC4C,4CAA0B,EAAEsT,mBAAmB,CAAChQ,aALf;AAMjC8N,4CAA0B,EAAEqC,mBAAmB,CAACnQ,aANf;AAOjCvD,uBAAK,EAAE3C,KAAK,CAAC,OAAD,CAPqB;AAQjCiU,0BAAQ,EAAE;AACRhU,sBAAE,EAAEiW,mBAAmB,CAAC,gBAAD,CAAnB,CAAsC,CAAtC,EAAyC,IAAzC,CADI;AAERrV,wBAAI,EAAEqV,mBAAmB,CAAC,gBAAD,CAAnB,CAAsC,CAAtC,EAAyC,MAAzC,CAFE;AAGRrT,wBAAI,EAAEqT,mBAAmB,CAAC,gBAAD,CAAnB,CAAsC,CAAtC,EAAyC,MAAzC;AAHE,mBARuB;AAajCR,yBAAO,EAAE;AACPpE,gCAAY,EAAE+E,mBAAmB,CAAC,aAAD,CAAnB,CAAmC,CAAnC,EAAsC,cAAtC,CADP;AAEPvS,wBAAI,EAAEuS,mBAAmB,CAAC,aAAD,CAAnB,CAAmC,CAAnC,EAAsC,MAAtC,CAFC;AAGPlV,+BAAW,EAAEkV,mBAAmB,CAAC,aAAD,CAAnB,CAAmC,CAAnC,EAAsC,aAAtC,CAHN;AAIPvE,kCAAc,EAAE/U,OAAO,CAAC5E,eAAR,CAAwBoK,sBAAxB,CAA+C8T,mBAAmB,CAAClU,aAApB,CAAkC,CAAlC,CAA/C;AAJT;AAbwB,iBAAnC;AAoBA,oBAAMmU,aAAa,GAAGJ,mBAAmB,CAAC,eAAD,CAAnB,CAAqC,CAArC,CAAtB;AACAI,6BAAa,CAAC9T,MAAd,CAAqB1D,OAArB,CAA8B,UAAAqF,MAAM,EAAI;AACtC1C,oCAAkB,CAACgU,UAAnB,CAA8BhT,IAA9B,CAAmC;AACjCc,2BAAO,EAAE,EADwB;AAEjCC,6BAAS,EAAE,KAFsB;AAGjCO,4BAAQ,EAAE,KAHuB;AAIjCrB,8CAA0B,EAAEyB,MAAM,CAAC,4BAAD,CAJD;AAKjCvB,8CAA0B,EAAE,EALK;AAMjCoR,8CAA0B,EAAE,EANK;AAOjCrR,yBAAK,EAAEwB,MAAM,CAAC,OAAD,CAPoB;AAQjC8P,4BAAQ,EAAE;AACRhU,wBAAE,EAAEiW,mBAAmB,CAAC,gBAAD,CAAnB,CAAsC,CAAtC,EAAyC,IAAzC,CADI;AAERrV,0BAAI,EAAEqV,mBAAmB,CAAC,gBAAD,CAAnB,CAAsC,CAAtC,EAAyC,MAAzC,CAFE;AAGRrT,0BAAI,EAAEqT,mBAAmB,CAAC,gBAAD,CAAnB,CAAsC,CAAtC,EAAyC,MAAzC;AAHE,qBARuB;AAajClO,uBAAG,EAAE;AACHpH,4BAAM,EAAEuD,MAAM,CAAC,mBAAD,CAAN,CAA4B,CAA5B,EAA+B,KAA/B,EAAsC,CAAtC,EAAyC,QAAzC,CADL;AAEHtD,0BAAI,EAAEsD,MAAM,CAAC,mBAAD,CAAN,CAA4B,CAA5B,EAA+B,KAA/B,EAAsC,CAAtC,EAAyC,MAAzC;AAFH;AAb4B,mBAAnC;AAkBD,iBAnBD;AAoBD,eA9CD;AA+CD;;AAED,qBAAS2R,gBAAT,CAA2B1T,YAA3B,EAAqD;AACnDA,0BAAY,CAACI,MAAb,CAAoB1D,OAApB,CAA6B,UAAAkB,KAAK,EAAI;AACpCyB,kCAAkB,CAACkU,KAAnB,CAAyBlT,IAAzB,CAA+B;AAC7BC,4CAA0B,EAAE1C,KAAK,CAAC,4BAAD,CADJ;AAE7BuW,wBAAM,EAAEvW,KAAK,CAAC,QAAD,CAFgB;AAG7BkG,+BAAa,EAAElG,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,eAA9B,CAHc;AAI7B8E,yBAAO,EAAE9E,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,QAA9B,EAAwC,CAAxC,EAA2C,SAA3C,CAJoB;AAK7BwR,2BAAS,EAAExR,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,QAA9B,EAAwC,CAAxC,EAA2C,WAA3C;AALkB,iBAA/B;AAOD,eARD;AASD;AACF;;;iBAED,qBAAYrH,IAAZ,EAAwB;AACtB,iBAAKkF,aAAL,GAAqB;AACnBgD,kBAAI,EAAElI,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,MAAlB,CADa;AAEnB8P,yBAAW,EAAE9P,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,aAAlB,CAFM;AAGnB6I,mBAAK,EAAE;AACLR,0BAAU,EAAErI,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,YAAtB,CADP;AAELsI,2BAAW,EAAEtI,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,aAAtB,CAFR;AAGLuI,0BAAU,EAAEvI,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,YAAtB,CAHP;AAILwI,2BAAW,EAAExI,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,aAAtB;AAJR;AAHY,aAArB;;AAUA,gBAAM8I,kBAAkB,GAAG,KAAKC,mBAAL,CAA0B/I,IAAI,CAAC,eAAD,CAA9B,CAA3B;;AACA,iBAAKkF,aAAL,CAAmB,YAAnB,IAAmC4D,kBAAkB,CAACgU,UAAtD;AACA,iBAAK5X,aAAL,CAAmB,OAAnB,IAA8B4D,kBAAkB,CAACkU,KAAjD;AACA,iBAAKve,QAAL,CAAciI,KAAd,CAAoB,KAAKxB,aAAzB;AACD;;;iBAED,gBAAO;AAAA;;AACL,iBAAKzF,cAAL,CAAoBkH,aAApB;;AACA,gBAAI,KAAKkF,eAAL,EAAJ,EAA4B;AAC1BoO,qBAAO,CAAC4D,GAAR,CAAY,KAAK9E,UAAjB;AACA,mBAAKvZ,eAAL,CAAqBsc,WAArB,CAAiC,KAAK/C,UAAtC,EAAkDhZ,SAAlD,CAA6D,UAAA+d,OAAO,EAAI;AACtE,uBAAI,CAAC/E,UAAL,GAAkB,EAAlB;AACA+E,uBAAO,CAAC3X,OAAR,CAAiB,UAAA2T,MAAM,EAAI;AACzB,sBAAIA,MAAM,CAACiE,OAAX,EAAoB;AAClB,2BAAI,CAACte,cAAL,CAAoB4G,GAApB,CAAiCyT,MAAjC;AACD,mBAFD,MAEO,IAAIA,MAAM,CAAC9N,QAAP,IAAmB8N,MAAM,CAAC9N,QAAP,CAAgBhE,SAAhB,KAA8B,YAArD,EAAmE;AACxE,2BAAI,CAAClC,YAAL,GAAoBgU,MAAM,CAAC9N,QAAP,CAAgBuB,aAApC;AACA,2BAAI,CAACtI,SAAL,GAAiB,KAAjB;;AACA,wBAAMiT,cAAc,GAAG,OAAI,CAACzZ,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAA0B2I,KAAjD;;AACA,2BAAI,CAAC7H,eAAL,CAAqBkd,mBAArB,CAAyCxE,cAAzC,EAAyDnY,SAAzD,CAAmE,UAAAiM,QAAQ,EAAI;AAC7E,0BAAI,eAAeA,QAAnB,EAA6B;AAC3B,+BAAI,CAAC/F,mBAAL,GAD2B,CAE3B;;;AACA,+BAAI,CAACF,iBAAL,CAA+BiG,QAA/B;AACD,uBAJD,MAIO;AACL,4BAAM9F,aAAa,GAAc8F,QAAjC;AACA9F,qCAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,iCAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,yBAA1B;AACD;AACF,qBATD;;AAUA,2BAAI,CAAC3G,cAAL,CAAoByM,aAApB,CAAkC,YAAlC,EAAgD,OAAhD,EAAyD,GAAzD,EAA8DgM,cAA9D;AACD;AACF,iBAnBD;AAoBD,eAtBD;AAuBD;AACF;;;iBAED,2BAAkB;AAAA;;AAChB,gBAAI,KAAKzZ,QAAL,CAAc2I,OAAlB,EAA2B;AACzB,mBAAK3H,cAAL,CAAoByM,aAApB,CAAkC,YAAlC,EAAgD,SAAhD,EAA2D,GAA3D;AACA,qBAAO,KAAP;AACD;;AAED,gBAAI,KAAKzN,QAAL,CAAc+H,KAAd,KAAwB,KAA5B,EAAmC;AACjC,mBAAK/G,cAAL,CAAoByM,aAApB,CAAkC,SAAlC,EAA6C,WAA7C,EAA0D,GAA1D;AACA,qBAAO,KAAP;AACD;;AAED,gBAAM/G,YAAY,GAAG,EAArB;AACAA,wBAAY,CAAC,WAAD,CAAZ,GAA4B,YAA5B;AACAA,wBAAY,CAAC,eAAD,CAAZ,GAAgC,KAAKW,YAArC;;AACA,gBAAI,KAAKb,SAAT,EAAoB;AAClBE,0BAAY,CAAC,YAAD,CAAZ,GAA6B;AAC3BM,sBAAM,EAAE,KADmB;AACZoX,qBAAK,EAAE,KAAKpe,QAAL,CAAcC,GAAd,CAAkB,aAAlB,CADK;AAE3B2J,0BAAU,EAAE,KAAK7I,eAAL,CAAqBY,OAArB,CAA6B+L,OAFd;AAEuB7D,2BAAW,EAAE,KAAK9I,eAAL,CAAqB4M,WAFzD;AAG3B7D,0BAAU,EAAE,KAAK/I,eAAL,CAAqBY,OAArB,CAA6B+L,OAHd;AAGuB3D,2BAAW,EAAE,KAAKhJ,eAAL,CAAqB4M;AAHzD,eAA7B;AAIAjH,0BAAY,CAAC,QAAD,CAAZ,GAAyB;AACvBM,sBAAM,EAAE,KADe;AACRyC,oBAAI,EAAE,KAAKzJ,QAAL,CAAcC,GAAd,CAAkB,MAAlB,CADE;AAEvBoR,2BAAW,EAAE,KAAKrR,QAAL,CAAcC,GAAd,CAAkB,aAAlB;AAFU,eAAzB;AAID;;AAEDyG,wBAAY,CAAC,YAAD,CAAZ,GAA6B;AAC3BM,oBAAM,EAAE,QADmB;AACT8C,wBAAU,EAAE,KAAK/I,eAAL,CAAqBY,OAArB,CAA6B+L,OADhC;AACyC3D,yBAAW,EAAE,KAAKhJ,eAAL,CAAqB4M;AAD3E,aAA7B;;AAGA,gBAAI,KAAK3N,QAAL,CAAcC,GAAd,CAAkB,aAAlB,EAAiC8H,KAArC,EAA4C;AAC1CrB,0BAAY,CAAC,YAAD,CAAZ,CAA2B,OAA3B,IAAsC,KAAK1G,QAAL,CAAcC,GAAd,CAAkB,aAAlB,CAAtC;AACAyG,0BAAY,CAAC,QAAD,CAAZ,GAAyB;AACvBM,sBAAM,EAAE,QADe;AACJqK,2BAAW,EAAE,KAAKrR,QAAL,CAAcC,GAAd,CAAkB,aAAlB;AADT,eAAzB;AAED;;AAED,gBAAMsc,iBAAiB,GAAG,KAAKvc,QAAL,CAAcC,GAAd,CAAkB,YAAlB,CAA1B;AACAsc,6BAAiB,CAACnN,QAAlB,CAA2B1H,OAA3B,CAAoC,UAAA2H,IAAI,EAAI;AAC1C,kBAAIA,IAAI,CAACpP,GAAL,CAAS,UAAT,EAAqB2I,KAArB,KAA+B,UAAnC,EAA+C;AAC7C,oBAAIyG,IAAI,CAACpP,GAAL,CAAS,4BAAT,EAAuC2I,KAA3C,EAAkD;AAAE;AAClD,sBAAIyG,IAAI,CAACpP,GAAL,CAAS,wBAAT,EAAmCgQ,QAAvC,EAAiD;AAAE;AAAS;;AAC5D,sBAAMsP,eAAe,GAAG,OAAI,CAAC9Y,aAAL,CAAmB,YAAnB,EAAiCpG,IAAjC,CACtB,UAAAwc,QAAQ;AAAA,2BAAIA,QAAQ,CAACvR,0BAAT,KAAwC+D,IAAI,CAACpP,GAAL,CAAS,4BAAT,EAAuC2I,KAAnF;AAAA,mBADc,CAAxB;;AAEA,yBAAI,CAAC0R,UAAL,CAAgBjP,IAAhB,CAAqB;AACnBrE,0BAAM,EAAE,gBADW;AACOwY,4BAAQ,EAAE,IADjB;AAEnBjS,4BAAQ,EAAE;AACRhE,+BAAS,EAAE,aADH;AAERuF,mCAAa,EAAEO,IAAI,CAACpP,GAAL,CAAS,4BAAT,EAAuC2I,KAF9C;AAGR6W,iCAAW,EAAE;AAACzY,8BAAM,EAAE,QAAT;AAAmB8C,kCAAU,EAAE,OAAI,CAAC/I,eAAL,CAAqBY,OAArB,CAA6B+L,OAA5D;AACX3D,mCAAW,EAAE,OAAI,CAAChJ,eAAL,CAAqB4M;AADvB,uBAHL;AAKR5C,mCAAa,EAAE,CACb,OAAI,CAAChK,eAAL,CAAqB8M,kBAArB,CAAmDwB,IAAI,CAACpP,GAAL,CAAS,wBAAT,CAAnD,EACEsf,eAAe,CAAC7E,cADlB,EACkC,wBADlC,CADa;AALP;AAFS,mBAArB;AAYD,iBAhBD,MAgBO;AAAE;AACP,yBAAI,CAACJ,UAAL,CAAgBjP,IAAhB,CAAqB;AACnBrE,0BAAM,EAAE,gBADW;AACOwY,4BAAQ,EAAE,IADjB;AAEnBjS,4BAAQ,EAAE;AACRhE,+BAAS,EAAE,aADH;AAERuF,mCAAa,EAAEO,IAAI,CAACpP,GAAL,CAAS,4BAAT,EAAuC2I,KAF9C;AAGR6W,iCAAW,EAAE;AAACzY,8BAAM,EAAE,KAAT;AAAgBkT,oCAAY,EAAE7K,IAAI,CAACpP,GAAL,CAAS,sBAAT,EAAiC2I,KAA/D;AACX8D,4BAAI,EAAE2C,IAAI,CAACpP,GAAL,CAAS,cAAT,EAAyB2I,KADpB;AAEXgB,kCAAU,EAAE,OAAI,CAAC7I,eAAL,CAAqBY,OAArB,CAA6B+L,OAF9B;AAEuC7D,mCAAW,EAAE,OAAI,CAAC9I,eAAL,CAAqB4M,WAFzE;AAGX7D,kCAAU,EAAE,OAAI,CAAC/I,eAAL,CAAqBY,OAArB,CAA6B+L,OAH9B;AAGuC3D,mCAAW,EAAE,OAAI,CAAChJ,eAAL,CAAqB4M;AAHzE,uBAHL;AAOR5C,mCAAa,EAAE,CACb,OAAI,CAAChK,eAAL,CAAqB8M,kBAArB,CAAmDwB,IAAI,CAACpP,GAAL,CAAS,wBAAT,CAAnD,EACE,EADF,EACM,wBADN,CADa;AAPP;AAFS,mBAArB;AAeD;AACF,eAlCD,MAkCO;AAAE;AACPoP,oBAAI,CAACtG,cAAL,CAAoB;AAAC2W,0BAAQ,EAAE;AAAX,iBAApB;AACD;AACF,aAtCD;AAwCAhZ,wBAAY,CAAC,eAAD,CAAZ,GAAgC,EAAhC;AACA,gBAAMiZ,UAAU,GAAG,KAAKrZ,eAAL,CAAqBiL,0BAArB,CACjB,0BADiB,EAEjB,CACE;AAAChI,uBAAS,EAAE,UAAZ;AAAwBiI,qBAAO,EAAE;AAAjC,aADF,EAEE;AAACjI,uBAAS,EAAE,aAAZ;AAA2BiI,qBAAO,EAAE;AAApC,aAFF,CAFiB,EAKjB+K,iBALiB,EAMjB,KAAK9V,aAAL,CAAmB,YAAnB,EAAiCmZ,MAAjC,CAAyC,UAAA/C,QAAQ;AAAA,qBAAIA,QAAQ,CAAClQ,QAAT,KAAsB,UAA1B;AAAA,aAAjD,CANiB,EAOjB,CAAC,SAAD,EAAY,WAAZ,EAAyB,UAAzB,EAAqC,UAArC,EAAiD,SAAjD,EAA4D,KAA5D,CAPiB,CAAnB;AASA,gBAAMkT,gBAAgB,GAAG,EAAzB;;AACA,gBAAIF,UAAJ,EAAgB;AACdA,wBAAU,CAAC,QAAD,CAAV,CAAqBjY,OAArB,CAA8B,UAACkB,KAAD,EAAQ0G,KAAR,EAAkB;AAC9C,oBAAI1G,KAAK,CAACmW,iBAAV,EAA6B;AAC3BnW,uBAAK,CAACmW,iBAAN,CAAwB,CAAxB,EAA2Be,iBAA3B,GAA+C,IAA/C;AACAD,kCAAgB,CAACxU,IAAjB,CAAsBiE,KAAtB;AACD;AACF,eALD;AAMA5I,0BAAY,CAAC,eAAD,CAAZ,CAA8B2E,IAA9B,CAAmCsU,UAAnC;AACD;;AAED,gBAAMI,gBAAgB,GAAG,EAAzB;AACA,iBAAKzF,UAAL,CAAgB5S,OAAhB,CAAyB,UAAC0T,SAAD,EAAY9L,KAAZ,EAAsB;AAC7C,kBAAI8L,SAAS,CAACpU,MAAV,KAAqB,gBAAzB,EAA2C;AAAE+Y,gCAAgB,CAAC1U,IAAjB,CAAsBiE,KAAtB;AAA+B;AAC7E,aAFD;AAGA,iBAAKgL,UAAL,CAAgBjP,IAAhB,CAAqB;AACnBrE,oBAAM,EAAE,KAAKR,SAAL,GAAiB,gBAAjB,GAAoC,gBADzB;AAC2CgZ,sBAAQ,EAAE,IADrD;AAEnBQ,0BAAY,EAAED,gBAAgB,CAACrV,GAAjB,CAAsB,UAACoJ,GAAD,EAAMxE,KAAN,EAAgB;AAClD,uBAAO;AACL2Q,0BAAQ,EAAE,CAACnM,GAAD,EAAM,QAAN,EAAgB,UAAhB,EAA4B,eAA5B,CADL;AAEHoM,wBAAM,EAAE,CAAC,eAAD,EAAkB,CAAlB,EAAqB,QAArB,EAA+BL,gBAAgB,CAACvQ,KAAD,CAA/C,EAAwD,mBAAxD,EAA6E,CAA7E,EAAgF,eAAhF;AAFL,iBAAP;AAID,eALa,CAFK;AAQnB/B,sBAAQ,EAAE7G;AARS,aAArB,EApGgB,CA+GhB;;AACA,iBAAKD,aAAL,CAAmB,YAAnB,EAAiCiB,OAAjC,CAA0C,UAAAmV,QAAQ,EAAI;AACpD,kBAAIA,QAAQ,CAAClQ,QAAT,KAAsB,KAA1B,EAAiC;AAAE;AAAS;;AAC5C,kBAAMmH,GAAG,GAAGyI,iBAAiB,CAACnN,QAAlB,CAA2BnD,SAA3B,CACV,UAAAoD,IAAI;AAAA,uBAAIA,IAAI,CAACpP,GAAL,CAAS,4BAAT,EAAuC2I,KAAvC,KAAiDiU,QAAQ,CAACvR,0BAA9D;AAAA,eADM,CAAZ;;AAEA,kBAAIwI,GAAG,KAAK,CAAC,CAAb,EAAgB;AACd,uBAAI,CAACwG,UAAL,CAAgBjP,IAAhB,CAAqB;AACnBrE,wBAAM,EAAE,0BADW;AAEnBuG,0BAAQ,EAAE;AAACuB,iCAAa,EAAE+N,QAAQ,CAACD;AAAzB;AAFS,iBAArB;;AAIA,uBAAI,CAACtC,UAAL,CAAgBjP,IAAhB,CAAqB;AACnBrE,wBAAM,EAAE,kBADW;AAEnBuG,0BAAQ,EAAE;AAACuB,iCAAa,EAAE+N,QAAQ,CAACD;AAAzB;AAFS,iBAArB;AAID;AACF,aAdD;AAgBA,mBAAO,IAAP;AACD;;;iBAED,yBAAa;AACX,gBAAI,KAAKpW,SAAL,IAAmB,KAAKxG,QAAL,IAAiB,KAAKA,QAAL,CAAc+H,KAAtD,EAA8D;AAC5D,qBAAO,KAAK1B,aAAL,CAAmB2B,OAAnB,CAA2B,kBAA3B,CAAP;AACD,aAFD,MAEO;AACL,qBAAO,IAAP;AACD;AACF;;;;;;;yBAlcU5E,0B,EAAyB,yH,EAAA,6H,EAAA,qH,EAAA,2H,EAAA,+H,EAAA,kI,EAAA,wH,EAAA,0H,EAAA,gI;AAAA,O;;;cAAzBA,0B;AAAyB,8C;AAAA,iB;AAAA,e;AAAA,6rC;AAAA;AAAA;ADhBtC;;AACE;;AACE;;AAAyC;;AAAsF;;AACjI;;AAEA;;AACE;;AACQ;AAAA,qBAAS,IAAA0K,WAAA,EAAT;AAAsB,aAAtB;;AACN;;AAA8B;;AAAO;;AACvC;;AACA;;AAAwG;AAAA,qBAAS,IAAAC,iBAAA,EAAT;AAA4B,aAA5B;;AACtG;;AACA;;AACF;;AACA;;AAAyF;AAAA,qBAAS,IAAAV,IAAA,EAAT;AAAe,aAAf;;AACvF;;AAA2B;;AAAI;;AACjC;;AACF;;AACF;;AAEA;;AACE;;AACF;;AAEA;;;;AAtB6C;;AAAA;;AAShC;;AAAA;;AACA;;AAAA;;AAEiG;;AAAA;;AAUxG;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEeF;;AACE;;AAAI;;AAAyE;;AAAmB;;AAAI;;AACpG;;AAAI;;AAA0B;;AAC9B;;AAAI;;AAAyB;;AAC7B;;AAAI;;AAA0B;;AAC9B;;AAAI;;AAAyB;;AAC7B;;AAAI;;AAA0B;;AAC9B;;AACE;;AAAsE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpE;;AACF;;AACA;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClE;;AACF;;AACA;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClE;;AACF;;AACF;;AACF;;;;;;AAjBS;;AAAA;;AAAsE;;AAAA;;AACzE;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;;UClCGlK,wB;AASX,0CAAoBpC,eAApB,EACoBC,cADpB,EAEoBoF,MAFpB,EAEoC;AAAA;;AAFhB,eAAArF,eAAA,GAAAA,eAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAoF,MAAA,GAAAA,MAAA;AAPpB,eAAA6H,wBAAA,GAA2B,KAA3B;AAOuC;;;;eAJvC,eAAkC;AAAC,mBAAO,KAAKA,wBAAL,GAAgC,OAAhC,GAA0C,MAAjD;AAA0D;;;iBAM7F,oBAAW,CACV;;;iBAED,kBAAS;AAAA;;AACP,iBAAKjN,cAAL,CAAoBkH,aAApB;AACA,iBAAKiY,WAAL,GAAmB,EAAnB;AACA,iBAAK1G,cAAL,GAAsB,KAAKA,cAAL,GAAsB,KAAKA,cAAL,CAAoBtL,IAApB,EAAtB,GAAmD,EAAzE;AACA,iBAAKyK,cAAL,GAAsB,KAAKA,cAAL,GAAsB,KAAKA,cAAL,CAAoBzK,IAApB,EAAtB,GAAmD,EAAzE;AACA,iBAAKpN,eAAL,CAAqBqf,iBAArB,CAAuC,KAAK3G,cAA5C,EAA4D,KAAKb,cAAjE,EAAiFtX,SAAjF,CACE,UAAAC,IAAI,EAAI;AACN,kBAAI,CAACA,IAAI,CAAC,CAAD,CAAT,EAAc;AACZ,uBAAI,CAACP,cAAL,CAAoByM,aAApB,CAAkC,SAAlC,EAA6C,YAA7C,EAA2D,gDAAAa,WAAA,QAA3D;AACD,eAFD,MAEO,IAAI/M,IAAI,CAAC,CAAD,CAAJ,CAAQ,QAAR,CAAJ,EAAuB;AAC5B,oBAAMgN,QAAQ,GAAchN,IAA5B;AACAgN,wBAAQ,CAAC7G,OAAT,CAAkB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAArB;AACD,eAHM,MAGA;AACL,uBAAI,CAACwY,WAAL,GAAqC5e,IAArC;AACD;AACF,aAVH;AAYD;;;iBAED,qBAAYiN,MAAZ,EAAkB;AAChB,gBAAIA,MAAM,CAACC,OAAP,KAAmB,EAAvB,EAA4B;AAC1B,mBAAKC,MAAL;AACD;AACF;;;iBAED,gBAAG;AACD,iBAAKtI,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,aAAD,EAAgB,GAAhB,EAAqB;AAACb,oBAAM,EAAE;AAAT,aAArB,CAArB;AACD;;;iBAED,iBAAQyS,cAAR,EAA8B;AAC5B,iBAAKrT,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,aAAD,EAAgB4R,cAAhB,EAAgC;AAACzS,oBAAM,EAAE;AAAT,aAAhC,CAArB;AACD;;;iBAED,gBAAOyS,cAAP,EAA6B;AAC3B,iBAAKrT,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,aAAD,EAAgB4R,cAAhB,EAAgC;AAACzS,oBAAM,EAAE;AAAT,aAAhC,CAArB;AACD;;;iBAED,iBAAOyS,cAAP,EAA6B;AAC3B,iBAAK9K,mBAAL,GAA2B8K,cAA3B;AACA,iBAAKxL,wBAAL,GAAgC,IAAhC;AACD;;;iBAED,0BAAc;AACZ,iBAAKA,wBAAL,GAAgC,KAAhC;AACD;;;iBAED,2BAAe;AAAA;;AACb,gBAAMoS,yBAAyB,GAAG,KAAKF,WAAL,CAAiB9f,IAAjB,CAChC,UAAAwO,GAAG;AAAA,qBAAIA,GAAG,CAACpF,IAAJ,KAAa,OAAI,CAACkF,mBAAtB;AAAA,aAD6B,EACcG,aADhD;AAEA,iBAAK/N,eAAL,WAA4Bsf,yBAA5B,EAAuD/e,SAAvD,CAAkE,UAAAyN,QAAQ,EAAI;AAC5E,qBAAI,CAACd,wBAAL,GAAgC,KAAhC;;AACA,kBAAIc,QAAJ,EAAc;AACZ,oBAAMR,QAAQ,GAAcQ,QAA5B;AACAR,wBAAQ,CAAC7G,OAAT,CAAkB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAArB;AACD,eAHD,MAGO;AACL,uBAAI,CAAC+G,MAAL;AACD;AACF,aARD;AASD;;;;;;;yBA1EUvL,wB,EAAuB,+H,EAAA,+H,EAAA,oH;AAAA,O;;;cAAvBA,wB;AAAuB,4C;AAAA,iB;AAAA,e;AAAA,62D;AAAA;AAAA;ADXpC;;AACE;;AACE;;AACE;;AAA6D;;AAAW;;AACxE;;AAA2C;AAAA;AAAA,eAA4B,OAA5B,EAA4B;AAAA,qBACT,IAAA6L,WAAA,QADS;AACU,aADtC;;AAA3C;;AAEF;;AACA;;AACE;;AAA6D;;AAAY;;AACzE;;AAA6C;AAAA;AAAA,eAA4B,OAA5B,EAA4B;AAAA,qBACX,IAAAA,WAAA,QADW;AACQ,aADpC;;AAA7C;;AAEF;;AACF;;AAEA;;AACE;;AAAkF;AAAA,qBAAS,IAAAN,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAAM;;AAC7G;;AACF;;AAEA;;AACE;;AACA;;AACE;;AAA4D;AAAA,qBAAS,YAAT;AAAc,aAAd;;AAC1D;;AAAkC;;AAAG;;AACzC;;AACA;;AACE;;AACA;;AACE;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAW;;AAC3B;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAM;;AACxB;;AACA;;AAEA;;AACA;;AAmBA;;AACF;;AAEA;;AAEE;;AACE;;AACE;;AACE;;AAA6C;;AAAgB;;AAC7D;;AAAoC;AAAA,qBAAS,IAAAO,cAAA,EAAT;AAAyB,aAAzB;;AAClC;;AAAyB;;AAAO;;AAClC;;AACF;;AACA;;AACE;;AAAG;;AAAgE;;AACrE;;AACA;;AACE;;AAAmE;AAAA,qBAAS,IAAAA,cAAA,EAAT;AAAyB,aAAzB;;AAA2B;;AAAM;;AACpG;;AAAkE;AAAA,qBAAS,IAAAC,eAAA,EAAT;AAA0B,aAA1B;;AAA4B;;AAAO;;AACvG;;AACF;;AACF;;AACF;;AAEF;;;;AA9EiD;;AAAA;;AAKE;;AAAA;;AA8BpB;;AAAA;;AAsBL;;AAAA;;AACnB;;AAUM;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE7DP;;AAA4C;;AAAI;;;;;;AAChD;;AAAgD;;AAAO;;;;;;AAsCzD;;;;;;AAAqC,gGAAqB,UAArB,EAAqB,aAArB,EAAqB,UAArB,EAAqB,eAArB;;;;;;AACrC;;;;;;AAAkC,gGAAqB,eAArB,EAAqB,oBAArB,EAAqB,eAArB,EAAqB,aAArB;;;;;;;;AA3BtC;;AACE;;AACE;;AAMA;;AAMF;;AAEA;;AACE;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,yCAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAa;;AACxH;;AACA;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,yCAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAK;;AAChH;;AACF;;AAEA;;AACE;;AACA;;AACF;;AACF;;;;;;AA1B4B;;AAAA,iIAAsD,WAAtD,EAAsD,eAAtD,EAAsD,UAAtD,EAAsD,iBAAtD,EAAsD,aAAtD,EAAsD,IAAtD;;AAMA;;AAAA,yHAA8C,WAA9C,EAA8C,eAA9C,EAA8C,UAA9C,EAA8C,eAA9C,EAA8C,aAA9C,EAA8C,IAA9C;;AASF;;AAAA;;AAGA;;AAAA;;AAIN;;AAAA;;AACI;;AAAA;;AACH;;AAAA;;;;UClCR5L,uB;AAYX,yCAAoB4C,EAApB,EACoBC,KADpB,EAEoBC,MAFpB,EAGoBC,aAHpB,EAIoBtF,eAJpB,EAKoBjB,uBALpB,EAMoBgB,aANpB,EAOoBwF,eAPpB,EAQoBtF,cARpB,EAQoD;AAAA;;AARhC,eAAAkF,EAAA,GAAAA,EAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAtF,eAAA,GAAAA,eAAA;AACA,eAAAjB,uBAAA,GAAAA,uBAAA;AACA,eAAAgB,aAAA,GAAAA,aAAA;AACA,eAAAwF,eAAA,GAAAA,eAAA;AACA,eAAAtF,cAAA,GAAAA,cAAA;AAhBpB,eAAAuF,QAAA,GAAW,IAAX;AACA,eAAAC,SAAA,GAAY,KAAZ;AAGA,eAAAC,aAAA,GAAgB,EAAhB;AACA,eAAAC,YAAA,GAAe,EAAf;AACA,eAAAC,QAAA,GAAW,CAAX;AAWC;;;;iBAED,oBAAW;AAAA;;AACT,iBAAKR,KAAL,CAAWS,QAAX,CAAoBC,IAApB,CACE,gDAAAC,SAAA,EAAU,UAACC,MAAD,EAAsB;AAC9B,qBAAI,CAACC,MAAL,GAAcD,MAAM,CAAC9G,GAAP,CAAW,QAAX,CAAd;;AACA,kBAAI,OAAI,CAAC+G,MAAL,KAAgB,KAApB,EAA2B;AACzB,uBAAI,CAACR,SAAL,GAAiB,IAAjB;AACA,uBAAO,sCAAAS,QAAA,EAAS,CACd,OAAI,CAACnG,aAAL,CAAmBoG,uBAAnB,CAA2C,aAA3C,CADc,EAEd,OAAI,CAACC,gBAAL,EAFc,CAAT,CAAP;AAID,eAND,MAMO;AACL,uBAAI,CAACX,SAAL,GAAiB,KAAjB;AACA,uBAAO,sCAAAS,QAAA,EAAS,CACd,OAAI,CAACnG,aAAL,CAAmBoG,uBAAnB,CAA2C,aAA3C,CADc,EAEd,OAAI,CAACnG,eAAL,CAAqBuf,oBAArB,CAA0CvZ,MAAM,CAAC9G,GAAP,CAAW,aAAX,CAA1C,CAFc,CAAT,CAAP;AAID;AACF,aAfD,CADF,EAiBEqB,SAjBF,CAiBa,UAAAC,IAAI,EAAI;AACnB,qBAAI,CAACnB,aAAL,GAAqBmB,IAAI,CAAC,CAAD,CAAzB;AACA,qBAAI,CAACrB,SAAL,GAAiB,OAAI,CAACJ,uBAAL,CAA6BK,kBAA7B,CACf,OAAI,CAACC,aAAL,CAAmBC,IAAnB,CAAyB,UAAAC,YAAY;AAAA,uBAAIA,YAAY,CAACC,WAAb,KAA6B,aAAjC;AAAA,eAArC,EAAqFE,UADtE,CAAjB;;AAEA,kBAAI,eAAec,IAAI,CAAC,CAAD,CAAvB,EAA4B;AAC1B,uBAAI,CAAC8F,YAAL,GAAoB9F,IAAI,CAAC,CAAD,CAAJ,CAAQ,eAAR,CAApB;;AACA,uBAAI,CAAC+F,iBAAL,CAA+B/F,IAAI,CAAC,CAAD,CAAnC;;AACA,oBAAI,OAAI,CAACiF,SAAL,IAAkB,OAAI,CAACQ,MAAL,KAAgB,QAAtC,EAAgD;AAC9C,yBAAI,CAACO,gBAAL;AACD,iBAFD,MAEO;AACL,yBAAI,CAACC,mBAAL;AACD;AACF,eARD,MAQO;AACL,oBAAMC,aAAa,GAAclG,IAAI,CAAC,CAAD,CAArC;AACAkG,6BAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAA1B;AACD;AACF,aAjCD;AAkCD;;;iBAED,uBAAW;AACT,iBAAKvB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,UAAD,CAArB;AACD;;;iBAED,2BAAkBnH,SAAlB,EAAmC;AACjC,mBAAO,KAAKR,SAAL,CAAeG,IAAf,CAAqB,UAAAM,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,KAAkBF,SAAtB;AAAA,aAA7B,CAAP;AACD;;;iBAED,wBAAeoH,UAAf,EAAiC;AAC/B,iBAAKnB,QAAL,GAAgBmB,UAAhB;AACD;;;iBAED,6BAAiB;AAAA;;AACf,gBAAI,KAAKvB,QAAT,EAAoB;AAClB,mBAAKgB,gBAAL;AACD,aAFD,MAEO;AACL,kBAAI,KAAKvH,QAAL,CAAc+H,KAAlB,EAAyB;AACvB,qBAAK1B,aAAL,CAAmB2B,OAAnB,CAA2B,kBAA3B,EAA+C1G,SAA/C,CAAyD,UAAA0G,OAAO,EAAI;AAClE,sBAAIA,OAAJ,EAAa;AACX,2BAAI,CAAChI,QAAL,CAAciI,KAAd,CAAoB,OAAI,CAACxB,aAAzB;;AACA,2BAAI,CAACe,mBAAL;AACD;AACF,iBALD;AAMD,eAPD,MAOO;AACL,qBAAKA,mBAAL;AACD;AACF;;AACD,iBAAKxG,cAAL,CAAoBkH,aAApB;AACD;;;iBAED,+BAAmB;AACjB,iBAAK3B,QAAL,GAAgB,IAAhB;AAEA,gBAAMga,eAAe,GAAG,KAAKvgB,QAAL,CAAcC,GAAd,CAAkB,cAAlB,CAAxB;AACAsgB,2BAAe,CAAClY,oBAAhB;AAEA,iBAAKrI,QAAL,CAAc+I,cAAd,GANiB,CAOjB;;AACAC,kBAAM,CAACC,OAAP,CAAeC,YAAf,CAA4B,EAA5B,EAAgC,EAAhC,sBAAiDqX,eAAe,CAAC3X,KAAjE;AACD;;;iBAED,4BAAgB;AACd,iBAAKrC,QAAL,GAAgB,KAAhB;AAEA,gBAAMga,eAAe,GAAG,KAAKvgB,QAAL,CAAcC,GAAd,CAAkB,cAAlB,CAAxB;;AACA,gBAAI,KAAKuG,SAAT,EAAoB;AAClB+Z,6BAAe,CAACpX,kBAAhB,CACE,mDAAAsJ,wBAAA,EAAyB,KAAK1R,eAA9B,EAA+C,KAAKC,cAApD,CADF;AAED,aAPa,CASd;;;AACA,gBAAI,KAAKgG,MAAL,KAAgB,SAApB,EAA+B;AAAC,mBAAKA,MAAL,GAAc,QAAd;AAAyB;;AACzDgC,kBAAM,CAACC,OAAP,CAAeC,YAAf,CAA4B,EAA5B,EAAgC,EAAhC,EAAoC,oBAAaqX,eAAe,CAAC3X,KAA7B,gBAA+C,KAAK5B,MAAxF;AACD;;;iBAED,4BAAgB;AACd,gBAAMwZ,aAAa,GAAG,IAAI,yCAAAlX,MAAJ,EAAtB;AACAkX,yBAAa,CAACjX,SAAd,GAA0B,aAA1B;AACAiX,yBAAa,CAAC,aAAD,CAAb,GAA+B,CAC7B;AAAEtG,0BAAY,EAAE,EAAhB;AAAoBxN,kBAAI,EAAE,EAA1B;AAA8B9C,wBAAU,EAAE,EAA1C;AAA8CC,yBAAW,EAAE,EAA3D;AAA+DC,wBAAU,EAAE,EAA3E;AAA+EC,yBAAW,EAAE;AAA5F,aAD6B,CAA/B;AAGAyW,yBAAa,CAAC,eAAD,CAAb,GAAiC,EAAjC;AACA,mBAAO,sCAAAxW,EAAA,EAAGwW,aAAH,CAAP;AACD;;;iBAED,2BAAkBjf,IAAlB,EAA8B;AAAA;;AAC5B,iBAAKvB,QAAL,GAAgB,KAAKkG,EAAL,CAAQ+D,KAAR,CAAc;AAC5BiQ,0BAAY,EAAE,CAAC3Y,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,EAAuB,cAAvB,CAAD,EAAyC,CAAC,6CAAA2I,UAAA,SAAD,CAAzC,CADc;AAE5BwC,kBAAI,EAAE,CAACnL,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,EAAuB,MAAvB,CAAD,CAFsB;AAG5B6I,mBAAK,EAAE,KAAKlE,EAAL,CAAQ+D,KAAR,CAAc;AACnBL,0BAAU,EAAE,CAACrI,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,EAAuB,YAAvB,CAAD,CADO;AAEnBsI,2BAAW,EAAE,CAACtI,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,EAAuB,aAAvB,CAAD,CAFM;AAGnBuI,0BAAU,EAAE,CAACvI,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,EAAuB,YAAvB,CAAD,CAHO;AAInBwI,2BAAW,EAAE,CAACxI,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,EAAuB,aAAvB,CAAD;AAJM,eAAd;AAHqB,aAAd,CAAhB;;AAUA,gBAAM8I,kBAAkB,GAAG,KAAKC,mBAAL,CAA0B/I,IAAI,CAAC,eAAD,CAA9B,CAA3B;;AACA,iBAAKvB,QAAL,CAAcuK,UAAd,CAAyB,aAAzB,EACE,KAAKrE,EAAL,CAAQsE,KAAR,CAAcH,kBAAkB,CAACkJ,WAAnB,CAA+B7I,GAA/B,CAAoC,UAAA+V,UAAU;AAAA,qBAAI,OAAI,CAACva,EAAL,CAAQ+D,KAAR,CAAewW,UAAf,CAAJ;AAAA,aAA9C,CAAd,CADF;AAEA,iBAAKha,aAAL,GAAqB,KAAKzG,QAAL,CAAc8K,WAAd,EAArB;AACD;;;iBAED,6BAAqBC,aAArB,EAAkD;AAChD,gBAAMV,kBAAkB,GAAG;AACzBkJ,yBAAW,EAAG;AADW,aAA3B;;AAGA,gBAAI,CAACxI,aAAL,EAAoB;AAAE,qBAAOV,kBAAP;AAA4B;;AAClDU,yBAAa,CAACrD,OAAd,CAAuB,UAAAsD,YAAY,EAAI;AACrC,sBAAQA,YAAY,CAACC,eAArB;AACE,qBAAK,wBAAL;AACEyV,oCAAkB,CAAC1V,YAAD,CAAlB;;AACA;;AACF,wBAJF,CAKE;;AALF;AAOD,aARD;AASA,mBAAOX,kBAAP;;AAEA,qBAASqW,kBAAT,CAA4B1V,YAA5B,EAAsD;AACpDA,0BAAY,CAACI,MAAb,CAAoB1D,OAApB,CAA4B,UAAAkB,KAAK,EAAI;AACnC,oBAAM+C,aAAa,GAAG/C,KAAK,CAAC,YAAD,CAAL,GAAqCgD,IAAI,CAACC,KAAL,CAAWjD,KAAK,CAAC,YAAD,CAAhB,CAArC,GAAuE,IAA7F;AACA,oBAAMkD,MAAM,GAAGH,aAAa,GAC1BI,MAAM,CAACX,MAAP,CAAcO,aAAa,CAACK,cAA5B,EAA4CC,SAA5C,CAAsD,UAAAC,SAAS;AAAA,yBAAI,CAACA,SAAL;AAAA,iBAA/D,MAAmF,CAAC,CAApF,GACE,QADF,GACa,OAFa,GAEH,KAFzB;AAGA7B,kCAAkB,CAACkJ,WAAnB,CAA+BlI,IAA/B,CAAoC;AAClCc,yBAAO,EAAE,EADyB;AAElCC,2BAAS,EAAE,KAFuB;AAGlCC,yBAAO,EAAEzD,KAAK,CAAC,4BAAD,CAHoB;AAIlC0D,wBAAM,EAAER,MAJ0B;AAKlCR,4CAA0B,EAAE1C,KAAK,CAAC,4BAAD,CALC;AAMlC2D,2CAAyB,EAAE3D,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,eAA9B,CANO;AAOlC4D,4BAAU,EAAE5D,KAAK,CAAC,YAAD,CAPiB;AAQlC6D,0BAAQ,EAAE7D,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,YAA9B,EAA4C,CAA5C,EAA+C,UAA/C,CARwB;AASlC8D,sBAAI,EAAE9D,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,YAA9B,EAA4C,CAA5C,EAA+C,MAA/C,CAT4B;AAUlC+D,0BAAQ,EAAE,QAVwB;AAWlCC,4BAAU,EAAE,EAXsB;AAYlCC,8BAAY,EAAE;AAZoB,iBAApC;AAeA,oBAAMC,gBAAgB,GAAGlE,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,eAA9B,EAA+C,CAA/C,CAAzB;AACAkE,gCAAgB,CAAC1B,MAAjB,CAAwB1D,OAAxB,CAAgC,UAAAqF,MAAM,EAAI;AACxC,sBAAMC,aAAa,GAAGD,MAAM,CAAC,mBAAD,CAAN,CAA4B,CAA5B,EAA+B,WAA/B,EAA4C,CAA5C,EAA+C,YAA/C,CAAtB;AACA1C,oCAAkB,CAACkJ,WAAnB,CAA+BlI,IAA/B,CAAoC;AAClCc,2BAAO,EAAE,EADyB;AAElCC,6BAAS,EAAE,KAFuB;AAGlCC,2BAAO,EAAEzD,KAAK,CAAC,4BAAD,CAHoB;AAIlC0D,0BAAM,EAAEX,aAAa,IAAIA,aAAa,CAACK,cAA/B,IAAiDL,aAAa,CAACK,cAAd,CAA6BgB,aAA7B,CAAjD,GACNrB,aAAa,CAACK,cAAd,CAA6BgB,aAA7B,EAA4CxE,MAA5C,GAAqD,CAArD,GAAyD,OAAzD,GAAmE,KAD7D,GACqE,KAL3C;AAMlC8C,8CAA0B,EAAE1C,KAAK,CAAC,4BAAD,CANC;AAOlC2D,6CAAyB,EAAE,EAPO;AAQlCC,8BAAU,EAAEb,aAAa,IAAIA,aAAa,CAACK,cAAd,CAA6BgB,aAA7B,CAAjB,IACPpB,IAAI,CAACqB,SAAL,CAAetB,aAAa,CAACK,cAAd,CAA6BgB,aAA7B,CAAf,EAA4D,IAA5D,EAAkE,GAAlE,CAT6B;AAUlCP,4BAAQ,EAAE7D,KAAK,CAAC,mBAAD,CAAL,CAA2B,CAA3B,EAA8B,YAA9B,EAA4C,CAA5C,EAA+C,UAA/C,CAVwB;AAWlC8D,wBAAI,EAAE,EAX4B;AAYlCC,4BAAQ,EAAE,OAZwB;AAalCC,8BAAU,EAAEI,aAbsB;AAclCH,gCAAY,EAAEE,MAAM,CAAC,mBAAD,CAAN,CAA4B,CAA5B,EAA+B,WAA/B,EAA4C,CAA5C,EAA+C,cAA/C;AAdoB,mBAApC;AAgBD,iBAlBD;AAmBD,eAxCD;AAyCD;AACF;;;iBAED,qBAAYxL,IAAZ,EAAwB;AACtB,iBAAKkF,aAAL,GAAqB;AACnByT,0BAAY,EAAE3Y,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,EAAuB,cAAvB,CADK;AAEnBmL,kBAAI,EAAEnL,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,EAAuB,MAAvB,CAFa;AAGnB6I,mBAAK,EAAE;AACLR,0BAAU,EAAErI,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,EAAuB,YAAvB,CADP;AAELsI,2BAAW,EAAEtI,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,EAAuB,aAAvB,CAFR;AAGLuI,0BAAU,EAAEvI,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,EAAuB,YAAvB,CAHP;AAILwI,2BAAW,EAAExI,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,EAAuB,aAAvB;AAJR;AAHY,aAArB;;AAUA,gBAAM8I,kBAAkB,GAAG,KAAKC,mBAAL,CAA0B/I,IAAI,CAAC,eAAD,CAA9B,CAA3B;;AACA,iBAAKkF,aAAL,CAAmB,aAAnB,IAAoC4D,kBAAkB,CAACkJ,WAAvD;AACA,iBAAK9M,aAAL,CAAmB,OAAnB,IAA8B4D,kBAAkB,CAACwG,KAAjD;AACA,iBAAK7Q,QAAL,CAAciI,KAAd,CAAoB,KAAKxB,aAAzB;AACD;;;iBAED,gBAAO;AAAA;;AACL,iBAAKzF,cAAL,CAAoBkH,aAApB;;AACA,gBAAI,KAAKkF,eAAL,EAAJ,EAA4B;AAC1B,mBAAKrM,eAAL,CAAqBsM,IAArB,CAAkC,KAAK3G,YAAvC,EAAqDpF,SAArD,CAAgE,UAAAC,IAAI,EAAI;AACtE,uBAAI,CAACmF,YAAL,GAAoB,EAApB;;AACA,oBAAI,mBAAmBnF,IAAvB,EAA6B;AAC3B,sBAAMyY,WAAW,GAAGzY,IAAI,CAAC,aAAD,CAAJ,CAAoB,CAApB,EAAuB,cAAvB,CAApB;AACA,yBAAI,CAAC8F,YAAL,GAAoB9F,IAAI,CAAC,eAAD,CAAxB;AACA,yBAAI,CAACiF,SAAL,GAAiB,KAAjB;;AACA,yBAAI,CAACzF,eAAL,CAAqBuf,oBAArB,CAA0CtG,WAA1C,EAAuD1Y,SAAvD,CAAiE,UAAAiM,QAAQ,EAAI;AAC3E,wBAAI,eAAeA,QAAnB,EAA6B;AAC3B,6BAAI,CAAC/F,mBAAL;;AACA,6BAAI,CAACgG,WAAL,CAAyBD,QAAzB;AACD,qBAHD,MAGO;AACL,0BAAM9F,aAAa,GAAc8F,QAAjC;AACA9F,mCAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,+BAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,uBAA1B;AACD;AACF,mBARD;;AASA,yBAAI,CAAC3G,cAAL,CAAoByM,aAApB,CAAkC,cAAlC,EAAkD,OAAlD,EAA2D,GAA3D,EAAgEuM,WAAhE;AACD,iBAdD,MAcO;AACL,sBAAMvS,aAAa,GAAclG,IAAjC;AACAkG,+BAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,2BAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,mBAA1B;AACD;AACF,eApBD;AAqBD;AACF;;;iBAED,2BAAkB;AAChB,gBAAI,KAAK3H,QAAL,CAAc2I,OAAlB,EAA2B;AACzB,mBAAK3H,cAAL,CAAoByM,aAApB,CAAkC,cAAlC,EAAkD,SAAlD,EAA6D,GAA7D;AACA,qBAAO,KAAP;AACD;;AAED,gBAAI,KAAKzN,QAAL,CAAc+H,KAAd,KAAwB,KAA5B,EAAmC;AACjC,mBAAK/G,cAAL,CAAoByM,aAApB,CAAkC,SAAlC,EAA6C,WAA7C,EAA0D,GAA1D;AACA,qBAAO,KAAP;AACD;;AAED,iBAAK/G,YAAL,CAAkB,WAAlB,IAAiC,aAAjC;AACA,iBAAKA,YAAL,CAAkB,eAAlB,IAAqC,KAAKW,YAA1C;;AAEA,gBAAI,KAAKb,SAAT,EAAoB;AAClB,mBAAKE,YAAL,CAAkB,aAAlB,IAAmC;AACjCM,sBAAM,EAAE,KADyB;AAClBkT,4BAAY,EAAE,KAAKla,QAAL,CAAcC,GAAd,CAAkB,cAAlB,EAAkC2I,KAD9B;AAEjCgB,0BAAU,EAAE,KAAK7I,eAAL,CAAqBY,OAArB,CAA6B+L,OAFR;AAEiB7D,2BAAW,EAAE,KAAK9I,eAAL,CAAqB4M,WAFnD;AAGjC7D,0BAAU,EAAE,KAAK/I,eAAL,CAAqBY,OAArB,CAA6B+L,OAHR;AAGiB3D,2BAAW,EAAE,KAAKhJ,eAAL,CAAqB4M;AAHnD,eAAnC;AAID,aALD,MAKO;AACL,mBAAKjH,YAAL,CAAkB,aAAlB,IAAmC;AACjCM,sBAAM,EAAE,QADyB;AACf8C,0BAAU,EAAE,KAAK/I,eAAL,CAAqBY,OAArB,CAA6B+L,OAD1B;AACmC3D,2BAAW,EAAE,KAAKhJ,eAAL,CAAqB4M;AADrE,eAAnC;AAED;;AAED,gBAAI,KAAK3N,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAA0B8H,KAA9B,EAAqC;AACnC,mBAAKrB,YAAL,CAAkB,aAAlB,EAAiC,MAAjC,IAA2C,KAAK1G,QAAL,CAAcC,GAAd,CAAkB,MAAlB,EAA0B2I,KAArE;AACD;;AAED,gBAAM+X,mBAAmB,GAAG,KAAK3gB,QAAL,CAAcC,GAAd,CAAkB,aAAlB,CAA5B;AACA,gBAAM+K,YAAY,GAAG,KAAKjK,eAAL,CAAqB8M,kBAArB,CAAwC8S,mBAAxC,EACnB,KAAKla,aAAL,CAAmB,gBAAnB,CADmB,EACmB,wBADnB,CAArB;;AAEA,gBAAIuE,YAAJ,EAAkB;AAAE,mBAAKtE,YAAL,CAAkB,eAAlB,IAAqC,CAACsE,YAAD,CAArC;AAAsD;;AAE1E,mBAAO,IAAP;AACD;;;iBAED,yBAAa;AACX,gBAAI,KAAKxE,SAAL,IAAmB,KAAKxG,QAAL,IAAiB,KAAKA,QAAL,CAAc+H,KAAtD,EAA8D;AAC5D,qBAAO,KAAK1B,aAAL,CAAmB2B,OAAnB,CAA2B,kBAA3B,CAAP;AACD,aAFD,MAEO;AACL,qBAAO,IAAP;AACD;AACF;;;;;;;yBAjSU1E,uB,EAAsB,yH,EAAA,6H,EAAA,qH,EAAA,2H,EAAA,+H,EAAA,iI,EAAA,uH,EAAA,yH,EAAA,gI;AAAA,O;;;cAAtBA,uB;AAAsB,2C;AAAA,iB;AAAA,e;AAAA,qtC;AAAA;AAAA;ADjBnC;;AACE;;AACE;;AAAyC;;AAA6E;;AACxH;;AAEA;;AACE;;AACQ;AAAA,qBAAS,IAAAwK,WAAA,EAAT;AAAsB,aAAtB;;AACN;;AAA8B;;AAAO;;AACvC;;AACA;;AAAwG;AAAA,qBAAS,IAAAC,iBAAA,EAAT;AAA4B,aAA5B;;AACtG;;AACA;;AACF;;AACA;;AAAyF;AAAA,qBAAS,IAAAV,IAAA,EAAT;AAAe,aAAf;;AACvF;;AAA2B;;AAAI;;AACjC;;AACF;;AACF;;AAEA;;AACE;;AACF;;AAEA;;;;AAtB6C;;AAAA;;AAShC;;AAAA;;AACA;;AAAA;;AAEiG;;AAAA;;AAUxG;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEaF;;AACE;;AAAI;;AAA+E;;AAA4B;;AAAI;;AACnH;;AAAI;;AAAoB;;AACxB;;AAAI;;AAA0B;;AAC9B;;AAAI;;AAA2B;;AAC/B;;AACE;;AAAsE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpE;;AACF;;AACA;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClE;;AACF;;AACA;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClE;;AACF;;AACF;;AACF;;;;;;AAfS;;AAAA;;AAA4E;;AAAA;;AAC/E;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;;UC9BGhK,qB;AASX,uCAAoBtC,eAApB,EACoBC,cADpB,EAEoBoF,MAFpB,EAEoC;AAAA;;AAFhB,eAAArF,eAAA,GAAAA,eAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAoF,MAAA,GAAAA,MAAA;AAPpB,eAAA6H,wBAAA,GAA2B,KAA3B;AAOuC;;;;eAJvC,eAAkC;AAAC,mBAAO,KAAKA,wBAAL,GAAgC,OAAhC,GAA0C,MAAjD;AAA0D;;;iBAM7F,oBAAW,CACV;;;iBAED,kBAAS;AAAA;;AACP,iBAAKjN,cAAL,CAAoBkH,aAApB;AACA,iBAAK0Y,YAAL,GAAoB,EAApB;AACA,iBAAK5G,WAAL,GAAmB,KAAKA,WAAL,GAAmB,KAAKA,WAAL,CAAiB7L,IAAjB,EAAnB,GAA6C,EAAhE;AACA,iBAAK8L,WAAL,GAAmB,KAAKA,WAAL,GAAmB,KAAKA,WAAL,CAAiB9L,IAAjB,EAAnB,GAA6C,EAAhE;AACA,iBAAKpN,eAAL,CAAqB8f,kBAArB,CAAwC,KAAK7G,WAA7C,EAA0D,KAAKC,WAA/D,EAA4E3Y,SAA5E,CACE,UAAAC,IAAI,EAAI;AACN,kBAAI,CAACA,IAAI,CAAC,CAAD,CAAT,EAAc;AACZ,uBAAI,CAACP,cAAL,CAAoByM,aAApB,CAAkC,SAAlC,EAA6C,YAA7C,EAA2D,gDAAAa,WAAA,QAA3D;AACD,eAFD,MAEO,IAAI/M,IAAI,CAAC,CAAD,CAAJ,CAAQ,QAAR,CAAJ,EAAuB;AAC5B,oBAAMgN,QAAQ,GAAchN,IAA5B;AACAgN,wBAAQ,CAAC7G,OAAT,CAAkB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAArB;AACD,eAHM,MAGA;AACL,uBAAI,CAACiZ,YAAL,GAAuCrf,IAAvC;AACD;AACF,aAVH;AAYD;;;iBAED,qBAAYiN,MAAZ,EAAkB;AAChB,gBAAIA,MAAM,CAACC,OAAP,KAAmB,EAAvB,EAA4B;AAC1B,mBAAKC,MAAL;AACD;AACF;;;iBAED,gBAAG;AACD,iBAAKtI,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,UAAD,EAAa,GAAb,EAAkB;AAACb,oBAAM,EAAE;AAAT,aAAlB,CAArB;AACD;;;iBAED,iBAAQgT,WAAR,EAA2B;AACzB,iBAAK5T,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,UAAD,EAAamS,WAAb,EAA0B;AAAChT,oBAAM,EAAE;AAAT,aAA1B,CAArB;AACD;;;iBAED,gBAAOgT,WAAP,EAA0B;AACxB,iBAAK5T,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,UAAD,EAAamS,WAAb,EAA0B;AAAChT,oBAAM,EAAE;AAAT,aAA1B,CAArB;AACD;;;iBAED,iBAAOgT,WAAP,EAA0B;AACxB,iBAAKrL,mBAAL,GAA2BqL,WAA3B;AACA,iBAAK/L,wBAAL,GAAgC,IAAhC;AACD;;;iBAED,0BAAc;AACZ,iBAAKA,wBAAL,GAAgC,KAAhC;AACD;;;iBAED,2BAAe;AAAA;;AACb,gBAAMW,uBAAuB,GAAG,KAAKgS,YAAL,CAAkBvgB,IAAlB,CAC9B,UAAAwO,GAAG;AAAA,qBAAIA,GAAG,CAACqL,YAAJ,KAAqB,OAAI,CAACvL,mBAA9B;AAAA,aAD2B,EACwBG,aADxD;AAEA,iBAAK/N,eAAL,WAA4B6N,uBAA5B,EAAqDtN,SAArD,CAAgE,UAAAyN,QAAQ,EAAI;AAC1E,qBAAI,CAACd,wBAAL,GAAgC,KAAhC;;AACA,kBAAIc,QAAJ,EAAc;AACZ,oBAAMR,QAAQ,GAAcQ,QAA5B;AACAR,wBAAQ,CAAC7G,OAAT,CAAkB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAArB;AACD,eAHD,MAGO;AACL,uBAAI,CAAC+G,MAAL;AACD;AACF,aARD;AASD;;;;;;;yBA1EUrL,qB,EAAoB,+H,EAAA,+H,EAAA,oH;AAAA,O;;;cAApBA,qB;AAAoB,yC;AAAA,iB;AAAA,e;AAAA,y2D;AAAA;AAAA;ADXjC;;AACE;;AACE;;AACE;;AAA0D;;AAAa;;AACvE;;AAA6C;AAAA;AAAA,eAAyB,OAAzB,EAAyB;AAAA,qBACR,IAAA2L,WAAA,QADQ;AACW,aADpC;;AAA7C;;AAEF;;AACA;;AACE;;AAA0D;;AAAY;;AACtE;;AAA6C;AAAA;AAAA,eAAyB,OAAzB,EAAyB;AAAA,qBACR,IAAAA,WAAA,QADQ;AACW,aADpC;;AAA7C;;AAEF;;AACF;;AAEA;;AACE;;AAAkF;AAAA,qBAAS,IAAAN,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAAM;;AAC7G;;AACF;;AAEA;;AACE;;AACA;;AACE;;AAA4D;AAAA,qBAAS,YAAT;AAAc,aAAd;;AAC1D;;AAAkC;;AAAG;;AACzC;;AACA;;AACE;;AACA;;AACE;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAW;;AAC3B;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAM;;AACxB;;AACA;;AAEA;;AACA;;AAiBA;;AACF;;AAEA;;AAEE;;AACE;;AACE;;AACE;;AAA6C;;AAAgB;;AAC7D;;AAAoC;AAAA,qBAAS,IAAAO,cAAA,EAAT;AAAyB,aAAzB;;AAClC;;AAAyB;;AAAO;;AAClC;;AACF;;AACA;;AACE;;AAAG;;AAA6D;;AAClE;;AACA;;AACE;;AAAmE;AAAA,qBAAS,IAAAA,cAAA,EAAT;AAAyB,aAAzB;;AAA2B;;AAAM;;AACpG;;AAAkE;AAAA,qBAAS,IAAAC,eAAA,EAAT;AAA0B,aAA1B;;AAA4B;;AAAO;;AACvG;;AACF;;AACF;;AACF;;AAEF;;;;AA1EmD;;AAAA;;AAKA;;AAAA;;AA4BnB;;AAAA;;AAoBN;;AAAA;;AACnB;;AAUM;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AElET;;AACE;;AACQ;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACN;;AAAyB;;AAAO;;AAClC;;AACA;;AACE;;AAMA;;AAMA;;AACE;;AAEA;;AAAqD;;AAAO;;AAC9D;;AACA;;AAMA;;AAMA;;AAMF;;AACF;;;;;;;;AArC6B;;AAAA;;AAED;;AAAA,yHAA8C,WAA9C,EAA8C,kBAA9C,EAA8C,UAA9C,EAA8C,eAA9C,EAA8C,aAA9C,EAA8C,IAA9C;;AAMA;;AAAA,kIAAuD,WAAvD,EAAuD,kBAAvD,EAAuD,UAAvD,EAAuD,eAAvD,EAAuD,aAAvD,EAAuD,IAAvD;;AAMmB;;AAAA;;AAKnB;;AAAA,6HAAkD,WAAlD,EAAkD,kBAAlD,EAAkD,UAAlD,EAAkD,eAAlD,EAAkD,aAAlD,EAAkD,IAAlD;;AAMA;;AAAA,yHAA8C,WAA9C,EAA8C,kBAA9C,EAA8C,UAA9C,EAA8C,eAA9C,EAA8C,aAA9C,EAA8C,IAA9C;;AAMA;;AAAA,4HAAiD,WAAjD,EAAiD,kBAAjD,EAAiD,UAAjD,EAAiD,eAAjD,EAAiD,aAAjD,EAAiD,IAAjD;;;;UC7BnBxK,qB;AAOX,uCAAoBwB,EAApB,EACoBpG,uBADpB,EACsE;AAAA;;AADlD,eAAAoG,EAAA,GAAAA,EAAA;AACA,eAAApG,uBAAA,GAAAA,uBAAA;AAAqD;;;;iBAEzE,oBAAW;AACT,iBAAKghB,oBAAL,GAA4B,KAAKC,QAAL,CAAc9gB,GAAd,CAAkB,WAAlB,CAA5B;AACA,iBAAKC,SAAL,GAAiB,KAAKJ,uBAAL,CAA6BK,kBAA7B,CACf,KAAKC,aAAL,CAAmBC,IAAnB,CAAyB,UAAAC,YAAY;AAAA,qBAAIA,YAAY,CAACC,WAAb,KAA6B,WAAjC;AAAA,aAArC,EAAmFE,UADpE,CAAjB;AAED;;;iBAED,2BAAkBC,SAAlB,EAAmC;AACjC,mBAAO,KAAKR,SAAL,CAAeG,IAAf,CAAqB,UAAAM,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,KAAkBF,SAAtB;AAAA,aAA7B,CAAP;AACD;;;iBAED,sBAAa;AACX,gBAAMsgB,gBAAgB,GAAG,KAAK9a,EAAL,CAAQ+D,KAAR,CAAc;AACrCgX,wBAAU,EAAE,CAAC,EAAD,CADyB;AAErCtQ,kBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAzG,UAAA,SAAD,CAAL,CAF+B;AAGrCgX,2BAAa,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAhX,UAAA,SAAD,CAAL,CAHsB;AAIrCiX,sBAAQ,EAAE,CAAC,EAAD,CAJ2B;AAKrCC,kBAAI,EAAE,CAAC,EAAD,CAL+B;AAMrCC,qBAAO,EAAE,CAAC,EAAD,CAN4B;AAOrCC,qBAAO,EAAE;AAP4B,aAAd,CAAzB;;AASA,gBAAI,KAAKR,oBAAL,CAA0BtY,MAA1B,KAAqC,CAAzC,EAA4C;AAC1CwY,8BAAgB,CAAC/gB,GAAjB,CAAqB,SAArB,EAAgC6P,QAAhC,CAAyC,CAAzC;AACAkR,8BAAgB,CAAC/gB,GAAjB,CAAqB,SAArB,EAAgCsP,WAAhC;AACD;;AACD,iBAAKuR,oBAAL,CAA0BzV,IAA1B,CAA+B2V,gBAA/B;AACD;;;iBAED,uBAAc1R,KAAd,EAA6B;AAC3B,gBAAI,KAAKwR,oBAAL,CAA0BtY,MAA1B,GAAmC,CAAnC,IACA,KAAKsY,oBAAL,CAA0BpY,EAA1B,CAA6B4G,KAA7B,EAAoC1G,KAApC,CAA0C,SAA1C,CADJ,EAC0D;AACxD,kBAAM2Y,eAAe,GAAGjS,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkB,CAA1C;AACA,mBAAKwR,oBAAL,CAA0BpY,EAA1B,CAA6B6Y,eAA7B,EAA8CthB,GAA9C,CAAkD,SAAlD,EAA6D6P,QAA7D,CAAsE,CAAtE;AACA,mBAAKgR,oBAAL,CAA0BpY,EAA1B,CAA6B6Y,eAA7B,EAA8CthB,GAA9C,CAAkD,SAAlD,EAA6DsP,WAA7D;AACD;;AACD,iBAAKuR,oBAAL,CAA0BhY,QAA1B,CAAmCwG,KAAnC;AACA,iBAAKwR,oBAAL,CAA0BvR,WAA1B;AACD;;;;;;;yBA9CU7K,qB,EAAoB,wH,EAAA,iI;AAAA,O;;;cAApBA,qB;AAAoB,yC;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,w3B;AAAA;AAAA;ADTjC;;AACE;;AACE;;AA2CA;;AAAgG;AAAA,qBAAS,IAAA8c,UAAA,EAAT;AAAqB,aAArB;;AAAuB;;AAAG;;AAC5H;;AACF;;;;AA7CqC;;AAAA;;AA2CyC;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEpCjEld,mB;AAQX,qCAAoBxE,uBAApB,EAAsE;AAAA;;AAAlD,eAAAA,uBAAA,GAAAA,uBAAA;AAAqD;;;;iBAEzE,oBAAW;AACT,iBAAK2hB,kBAAL,GAA0B,KAAKV,QAAL,CAAc9gB,GAAd,CAAkB,iBAAlB,CAA1B;AACA,iBAAKyhB,qBAAL,GAA6B,KAAKX,QAAL,CAAc9gB,GAAd,CAAkB,oBAAlB,CAA7B;AACA,iBAAKC,SAAL,GAAiB,KAAKJ,uBAAL,CAA6BK,kBAA7B,CACf,KAAKC,aAAL,CAAmBC,IAAnB,CAAyB,UAAAC,YAAY;AAAA,qBAAIA,YAAY,CAACC,WAAb,KAA6B,YAAjC;AAAA,aAArC,EAAoFE,UADrE,CAAjB;AAEA,iBAAKP,SAAL,GAAiB,KAAKA,SAAL,CAAesd,MAAf,CAAsB,KAAK1d,uBAAL,CAA6BK,kBAA7B,CACrC,KAAKC,aAAL,CAAmBC,IAAnB,CAAyB,UAAAC,YAAY;AAAA,qBAAIA,YAAY,CAACC,WAAb,KAA6B,QAAjC;AAAA,aAArC,EAAgFE,UAD3C,CAAtB,CAAjB;AAED;;;iBAED,2BAAkBC,SAAlB,EAAmC;AACjC,mBAAO,KAAKR,SAAL,CAAeG,IAAf,CAAqB,UAAAM,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,KAAkBF,SAAtB;AAAA,aAA7B,CAAP;AACD;;;;;;;yBArBU4D,mB,EAAkB,iI;AAAA,O;;;cAAlBA,mB;AAAkB,uC;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,iB;AAAA,gB;AAAA,4M;AAAA;AAAA;ACT/B;;AACE;;AAAyB;;AAAI;;AAC7B;;AACE;;AACE;;AAMA;;AAMA;;AACA;;AAMA;;AAMA;;AAMF;;AACF;;AACF;;AAEA;;AACE;;AAAyB;;AAAQ;;AACjC;;AACE;;AACE;;AAMA;;AAMA;;AAMA;;AAMF;;AACF;;AACF;;;;AAhE8B;;AAAA,6HAAmD,WAAnD,EAAmD,sBAAnD,EAAmD,UAAnD,EAAmD,YAAnD,EAAmD,aAAnD,EAAmD,IAAnD;;AAMA;;AAAA,gIAAsD,WAAtD,EAAsD,sBAAtD,EAAsD,UAAtD,EAAsD,YAAtD,EAAsD,aAAtD,EAAsD,IAAtD;;AAOA;;AAAA,8HAAoD,WAApD,EAAoD,sBAApD,EAAoD,UAApD,EAAoD,YAApD,EAAoD,aAApD,EAAoD,IAApD;;AAMA;;AAAA,+HAAqD,WAArD,EAAqD,sBAArD,EAAqD,UAArD,EAAqD,YAArD,EAAqD,aAArD,EAAqD,IAArD;;AAMA;;AAAA,+HAAqD,WAArD,EAAqD,sBAArD,EAAqD,UAArD,EAAqD,YAArD,EAAqD,aAArD,EAAqD,IAArD;;AAcA;;AAAA,8HAAoD,WAApD,EAAoD,yBAApD,EAAoD,UAApD,EAAoD,YAApD,EAAoD,aAApD,EAAoD,IAApD;;AAMA;;AAAA,iIAAuD,WAAvD,EAAuD,yBAAvD,EAAuD,UAAvD,EAAuD,YAAvD,EAAuD,aAAvD,EAAuD,IAAvD;;AAMA;;AAAA,yHAA+C,WAA/C,EAA+C,yBAA/C,EAA+C,UAA/C,EAA+C,YAA/C,EAA+C,aAA/C,EAA+C,IAA/C;;AAMA;;AAAA,0HAAgD,WAAhD,EAAgD,yBAAhD,EAAgD,UAAhD,EAAgD,YAAhD,EAAgD,aAAhD,EAAgD,IAAhD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDxB;;AAA4C;;AAAI;;;;;;AAChD;;AAAgD;;AAAO;;;;;;AAuBrD;;AAA+D;;AAAM;;;;;;AACrE;;AAAoE;;AAAQ;;;;;;AAM5E;;AACE;;AAAkC;;AAAO;;AAC3C;;;;;;AACA;;AACE;;AAAkC;;AAAM;;AAC1C;;;;;;AACA;;AACE;;AAAkC;;AAAK;;AACzC;;;;;;AAwBJ;;;;;;AAAkC,gGAAqB,eAArB,EAAqB,oBAArB,EAAqB,UAArB,EAAqB,eAArB;;;;;;AAClC;;;;;;AAAkC,gGAAqB,eAArB,EAAqB,oBAArB,EAAqB,UAArB,EAAqB,eAArB;;;;;;AAClC;;;;;;AAAoC,iGAAqB,eAArB,EAAqB,qBAArB,EAAqB,UAArB,EAAqB,gBAArB;;;;;;AACpC;;;;;;AAA4C,iGAAqB,eAArB,EAAqB,qBAArB,EAAqB,UAArB,EAAqB,gBAArB;;;;;;AAC5C;;;;;;AAAiC,iGAAqB,UAArB,EAAqB,gBAArB;;;;;;;;AAtDrC;;AACE;;AACE;;AAMA;;AACE;;AAAiE;;AAAY;;AAC7E;;AACE;;AACA;;AACF;;AACF;;AACA;;AACE;;AAAqE;;AAAgB;;AACrF;;AACE;;AAGA;;AAGA;;AAGF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,0CAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAK;;AAChH;;AACA;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,0CAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAK;;AAChH;;AACA;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,0CAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAO;;AAClH;;AACA;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,0CAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAe;;AAC1H;;AACA;;AACE;;AAA6E;AAAA;;AAAA;;AAAA,0CAAwB,CAAxB;AAAyB,WAAzB;;AAA4B;;AAAI;;AAC/G;;AACF;;AAEA;;AACE;;AACA;;AACA;;AACA;;AACA;;AACF;;AACF;;;;;;AArD4B;;AAAA,4HAAiD,WAAjD,EAAiD,eAAjD,EAAiD,UAAjD,EAAiD,iBAAjD,EAAiD,aAAjD,EAAiD,IAAjD;;AAK2B;;AAAA;;AAGxC;;AAAA;;AACA;;AAAA;;AAGwC;;AAAA;;AAEK;;AAAA;;AAI9C;;AAAA;;AAGA;;AAAA;;AASY;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIN;;AAAA;;AACC;;AAAA;;AACA;;AAAA;;AACE;;AAAA;;AACQ;;AAAA;;AACX;;AAAA;;;;UCvDP5B,oB;AAyBX,sCAAoBwD,EAApB,EACoBC,KADpB,EAEoBC,MAFpB,EAGoBC,aAHpB,EAIoBtF,eAJpB,EAKoBjB,uBALpB,EAMoBgB,aANpB,EAOoBwF,eAPpB,EAQoBtF,cARpB,EAQoD;AAAA;;AARhC,eAAAkF,EAAA,GAAAA,EAAA;AACA,eAAAC,KAAA,GAAAA,KAAA;AACA,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,aAAA,GAAAA,aAAA;AACA,eAAAtF,eAAA,GAAAA,eAAA;AACA,eAAAjB,uBAAA,GAAAA,uBAAA;AACA,eAAAgB,aAAA,GAAAA,aAAA;AACA,eAAAwF,eAAA,GAAAA,eAAA;AACA,eAAAtF,cAAA,GAAAA,cAAA;AA7BpB,eAAAuF,QAAA,GAAW,IAAX;AACA,eAAAC,SAAA,GAAY,KAAZ;AAGA,eAAAmb,iBAAA,GAAoB,EAApB;AACA,eAAAC,WAAA,GAAc,EAAd;AACA,eAAAjb,QAAA,GAAW,CAAX;AAwBC;;;;eAtBD,eAAa;AACX,oBAAQ,KAAKoa,QAAL,CAAc9gB,GAAd,CAAkB,YAAlB,EAAgC2I,KAAxC;AACE,mBAAK,EAAL;AACE,uBAAO,SAAP;;AACF,mBAAK,CAAL;AACE,uBAAO,QAAP;;AACF,mBAAK,CAAL;AACE,uBAAO,aAAP;;AACF;AACE,uBAAO,SAAP;AARJ;AAUD;;;iBAaD,oBAAW;AAAA;;AACT,iBAAKzC,KAAL,CAAWS,QAAX,CAAoBC,IAApB,CACE,gDAAAC,SAAA,EAAU,UAACC,MAAD,EAAsB;AAC9B,qBAAI,CAACC,MAAL,GAAcD,MAAM,CAAC9G,GAAP,CAAW,QAAX,CAAd;;AACA,kBAAI,OAAI,CAAC+G,MAAL,KAAgB,KAApB,EAA2B;AACzB,uBAAI,CAACR,SAAL,GAAiB,IAAjB;AACA,uBAAO,uCAAAS,QAAA,EACL,CAAC,OAAI,CAACnG,aAAL,CAAmBoG,uBAAnB,CAA2C,QAA3C,CAAD,EAAuD,OAAI,CAAC2a,cAAL,EAAvD,CADK,CAAP;AAED,eAJD,MAIO;AACL,uBAAI,CAACrb,SAAL,GAAiB,KAAjB;AACA,uBAAO,uCAAAS,QAAA,EACL,CAAC,OAAI,CAACnG,aAAL,CAAmBoG,uBAAnB,CAA2C,QAA3C,CAAD,EACA,OAAI,CAACnG,eAAL,CAAqB+gB,aAArB,CAAmC/a,MAAM,CAAC9G,GAAP,CAAW,QAAX,CAAnC,CADA,CADK,CAAP;AAGD;AACF,aAZD,CADF,EAcEqB,SAdF,CAca,UAAAC,IAAI,EAAI;AACnB,qBAAI,CAACnB,aAAL,GAAqBmB,IAAI,CAAC,CAAD,CAAzB;AACA,qBAAI,CAACrB,SAAL,GAAiB,OAAI,CAACJ,uBAAL,CAA6BK,kBAA7B,CACf,OAAI,CAACC,aAAL,CAAmBC,IAAnB,CAAyB,UAAAC,YAAY;AAAA,uBAAIA,YAAY,CAACC,WAAb,KAA6B,QAAjC;AAAA,eAArC,EAAgFE,UADjE,CAAjB;;AAEA,kBAAI,eAAec,IAAI,CAAC,CAAD,CAAvB,EAA4B;AAC1B,uBAAI,CAAC8F,YAAL,GAAoB9F,IAAI,CAAC,CAAD,CAAJ,CAAQ,eAAR,CAApB;;AACA,uBAAI,CAACwgB,iBAAL,CAA+BxgB,IAAI,CAAC,CAAD,CAAnC;;AACA,oBAAI,OAAI,CAACiF,SAAL,IAAkB,OAAI,CAACQ,MAAL,KAAgB,QAAtC,EAAgD;AAC9C,yBAAI,CAACO,gBAAL;AACD,iBAFD,MAEO;AACL,yBAAI,CAACC,mBAAL;AACD;AACF,eARD,MAQO;AACL,oBAAMC,aAAa,GAAclG,IAAI,CAAC,CAAD,CAArC;AACAkG,6BAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAA1B;AACD;AACF,aA9BD;AA+BD;;;iBAED,uBAAW;AACT,iBAAKvB,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;;;iBAED,2BAAkBnH,SAAlB,EAAmC;AACjC,mBAAO,KAAKR,SAAL,CAAeG,IAAf,CAAqB,UAAAM,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,KAAkBF,SAAtB;AAAA,aAA7B,CAAP;AACD;;;iBAED,wBAAeoH,UAAf,EAAiC;AAC/B,iBAAKnB,QAAL,GAAgBmB,UAAhB;AACD;;;iBAED,6BAAiB;AAAA;;AACf,gBAAI,KAAKvB,QAAT,EAAoB;AAClB,mBAAKgB,gBAAL;AACD,aAFD,MAEO;AACL,kBAAI,KAAKwZ,QAAL,CAAchZ,KAAlB,EAAyB;AACvB,qBAAK1B,aAAL,CAAmB2B,OAAnB,CAA2B,kBAA3B,EAA+C1G,SAA/C,CAAyD,UAAA0G,OAAO,EAAI;AAClE,sBAAIA,OAAJ,EAAa;AACX,2BAAI,CAAC+Y,QAAL,CAAc9Y,KAAd,CAAoB,OAAI,CAAC0Z,iBAAzB;;AACA,2BAAI,CAACna,mBAAL;AACD;AACF,iBALD;AAMD,eAPD,MAOO;AACL,qBAAKA,mBAAL;AACD;AACF;;AACD,iBAAKxG,cAAL,CAAoBkH,aAApB;AACD;;;iBAED,+BAAmB;AACjB,iBAAK3B,QAAL,GAAgB,IAAhB;;AACA,iBAAK4B,iBAAL;;AAEA,gBAAM6Z,UAAU,GAAG,KAAKjB,QAAL,CAAc9gB,GAAd,CAAkB,SAAlB,CAAnB;AACA+hB,sBAAU,CAAC3Z,oBAAX;AACA,gBAAM4Z,YAAY,GAAG,KAAKlB,QAAL,CAAc9gB,GAAd,CAAkB,2BAAlB,CAArB;AACAgiB,wBAAY,CAAC5Z,oBAAb;AAEA,gBAAM6Z,UAAU,GAAG,KAAKnB,QAAL,CAAc9gB,GAAd,CAAkB,QAAlB,CAAnB;AACA,gBAAIsI,SAAS,GAAG2Z,UAAU,CAAC1Z,MAAX,GAAoB,CAApC;;AACA,mBAAOD,SAAS,IAAI,CAApB,EAAuB;AACrB,kBAAM4Z,cAAc,GAAGD,UAAU,CAACxZ,EAAX,CAAcH,SAAd,CAAvB;;AACA,kBAAI4Z,cAAc,CAACxZ,OAAf,IAA0B,CAACwZ,cAAc,CAACvZ,KAAf,CAAqBwZ,KAApD,EAA2D;AACzDF,0BAAU,CAACpZ,QAAX,CAAoBP,SAApB;AACD;;AACDA,uBAAS;AACV;;AAED,gBAAM8Z,YAAY,GAAG,KAAKtB,QAAL,CAAc9gB,GAAd,CAAkB,WAAlB,CAArB;AACAsI,qBAAS,GAAG8Z,YAAY,CAAC7Z,MAAb,GAAsB,CAAlC;;AACA,mBAAOD,SAAS,IAAI,CAApB,EAAuB;AACrB,kBAAMyY,gBAAgB,GAAGqB,YAAY,CAAC3Z,EAAb,CAAgBH,SAAhB,CAAzB;;AACA,kBAAIyY,gBAAgB,CAACrY,OAAjB,IAA4B,CAACqY,gBAAgB,CAACpY,KAAjB,CAAuBsY,aAAxD,EAAuE;AACrEmB,4BAAY,CAACvZ,QAAb,CAAsBP,SAAtB;AACD;;AACDA,uBAAS;AACV;;AAED,gBAAM+Z,SAAS,GAAG,KAAKvB,QAAL,CAAc9gB,GAAd,CAAkB,UAAlB,CAAlB;AACAsI,qBAAS,GAAG+Z,SAAS,CAAC9Z,MAAV,GAAmB,CAA/B;;AACA,mBAAOD,SAAS,IAAI,CAApB,EAAuB;AACrB,kBAAMga,aAAa,GAAGD,SAAS,CAAC5Z,EAAV,CAAaH,SAAb,CAAtB;;AACA,kBAAIga,aAAa,CAAC5Z,OAAd,IAAyB,CAAC4Z,aAAa,CAAC3Z,KAAd,CAAoBa,IAAlD,EAAwD;AACtD6Y,yBAAS,CAACxZ,QAAV,CAAmBP,SAAnB;AACD;;AACDA,uBAAS;AACV;;AAED,iBAAKwY,QAAL,CAAchY,cAAd,GAvCiB,CAwCjB;;AACAC,kBAAM,CAACC,OAAP,CAAeC,YAAf,CAA4B,EAA5B,EAAgC,EAAhC,mBAA8C8Y,UAAU,CAACpZ,KAAzD;AACD;;;iBAED,4BAAgB;AACd,iBAAKrC,QAAL,GAAgB,KAAhB;;AACA,iBAAK4B,iBAAL;;AAEA,gBAAM6Z,UAAU,GAAG,KAAKjB,QAAL,CAAc9gB,GAAd,CAAkB,SAAlB,CAAnB;;AACA,gBAAI,KAAKuG,SAAT,EAAoB;AAClBwb,wBAAU,CAAC7Y,kBAAX,CACE,mDAAA+I,uBAAA,EAAwB,KAAKnR,eAA7B,EAA8C,KAAKC,cAAnD,CADF;AAED;;AAED,gBAAMihB,YAAY,GAAG,KAAKlB,QAAL,CAAc9gB,GAAd,CAAkB,2BAAlB,CAArB;AACAgiB,wBAAY,CAAC9Y,kBAAb,CACE,mDAAAwI,yBAAA,EAA0B,KAAK5Q,eAA/B,EAAgD,KAAKC,cAArD,EAAqE,KAAK+f,QAAL,CAAc9gB,GAAd,CAAkB,SAAlB,EAA6B2I,KAAlG,CADF;AAGA,gBAAM0Z,SAAS,GAAG,KAAKvB,QAAL,CAAc9gB,GAAd,CAAkB,UAAlB,CAAlB;AACAqiB,qBAAS,CAACjX,IAAV,CAAgB,KAAKnF,EAAL,CAAQ+D,KAAR,CAAc;AAC5BR,kBAAI,EAAE,CAAC,EAAD,CADsB;AAE5B4H,yBAAW,EAAE,CAAC,EAAD,CAFe;AAG5BF,uCAAyB,EAAE,CAAC,EAAD,CAHC;AAI5B7F,wCAA0B,EAAE,CAAC,EAAD;AAJA,aAAd,CAAhB,EAfc,CAsBd;;AACA,gBAAI,KAAKtE,MAAL,KAAgB,SAApB,EAA+B;AAAC,mBAAKA,MAAL,GAAc,QAAd;AAAyB;;AACzDgC,kBAAM,CAACC,OAAP,CAAeC,YAAf,CAA4B,EAA5B,EAAgC,EAAhC,EAAoC,iBAAU8Y,UAAU,CAACpZ,KAArB,gBAAuC,KAAK5B,MAAhF;AACD;;;iBAED,0BAAc;AACZ,gBAAMwb,UAAU,GAAG,IAAI,0CAAAlZ,MAAJ,EAAnB;AACAkZ,sBAAU,CAAC,WAAD,CAAV,GAA0B,QAA1B;AACAA,sBAAU,CAAC,QAAD,CAAV,GAAuB,CACrB;AAAE9U,qBAAO,EAAE,EAAX;AAAe+U,kBAAI,EAAE,CAArB;AAAwBC,wBAAU,EAAE,EAApC;AAAwCtI,uBAAS,EAAE,EAAnD;AAAuDuI,0BAAY,EAAE,EAArE;AACEC,wBAAU,EAAE,EADd;AACkBC,yBAAW,EAAE,EAD/B;AACmCC,yBAAW,EAAE;AADhD,aADqB,CAAvB;AAIAN,sBAAU,CAAC,YAAD,CAAV,GAA2B,CACzB;AAACO,mBAAK,EAAE,EAAR;AAAYC,2BAAa,EAAE,EAA3B;AAA+BC,wBAAU,EAAE,EAA3C;AAA+CC,oBAAM,EAAE;AAAvD,aADyB,CAA3B;AAGAV,sBAAU,CAAC,SAAD,CAAV,GAAwB,EAAxB;AACAA,sBAAU,CAAC,mBAAD,CAAV,GAAkC,CAChC;AAAC9U,qBAAO,EAAE,EAAV;AAAc9L,sBAAQ,EAAE,EAAxB;AAA4BuhB,sBAAQ,EAAE,EAAtC;AAA0CC,4BAAc,EAAE,EAA1D;AAA8DC,yBAAW,EAAE;AAA3E,aADgC,CAAlC;AAGAb,sBAAU,CAAC,eAAD,CAAV,GAA8B,EAA9B;AACA,mBAAO,uCAAAxY,EAAA,EAAGwY,UAAH,CAAP;AACD;;;iBAED,2BAAkBjhB,IAAlB,EAA8B;AAAA;;AAC5B,iBAAKwf,QAAL,GAAgB,KAAK7a,EAAL,CAAQ+D,KAAR,CAAc;AAC5ByD,qBAAO,EAAE,CAACnM,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,SAAlB,CAAD,EAA+B,CAAC,6CAAA2I,UAAA,SAAD,CAA/B,CADmB;AAE5BuY,kBAAI,EAAE,CAAClhB,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,MAAlB,CAAD,CAFsB;AAG5BmhB,wBAAU,EAAE,CAACnhB,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,YAAlB,CAAD,CAHgB;AAI5B+hB,uBAAS,EAAE,KAAKpd,EAAL,CAAQ+D,KAAR,CAAc;AACvBsZ,qBAAK,EAAE,KAAKrd,EAAL,CAAQ+D,KAAR,CAAc;AACnBmQ,2BAAS,EAAE,CAAC7Y,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,WAAlB,CAAD,EAAiC,CAAC,6CAAA2I,UAAA,SAAD,CAAjC,CADQ;AAEnByY,8BAAY,EAAE,CAACphB,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,cAAlB,CAAD,EAAoC,CAAC,6CAAA2I,UAAA,SAAD,CAApC,CAFK;AAGnB0Y,4BAAU,EAAE,CAACrhB,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,YAAlB,CAAD,CAHO;AAInBshB,6BAAW,EAAE,CAACthB,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,aAAlB,CAAD,CAJM;AAKnBuhB,6BAAW,EAAE,CAACvhB,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,aAAlB,CAAD;AALM,iBAAd,CADgB;AAQvBiiB,wBAAQ,EAAE,KAAKtd,EAAL,CAAQ+D,KAAR,CAAc;AACtB8Y,uBAAK,EAAE,CAACxhB,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,OAAtB,CAAD,CADe;AAEtByhB,+BAAa,EAAE,CAACzhB,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,eAAtB,CAAD,CAFO;AAGtB0hB,4BAAU,EAAE,CAAC1hB,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,YAAtB,CAAD,EAAsC,CAAC,6CAAA2I,UAAA,SAAD,CAAtC,CAHU;AAItBgZ,wBAAM,EAAE,CAAC3hB,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,QAAtB,CAAD;AAJc,iBAAd;AARa,eAAd,CAJiB;AAmB5BkiB,oBAAM,EAAG,KAAKvd,EAAL,CAAQsE,KAAR,CAAc,EAAd,CAnBmB;AAoB5BkZ,uBAAS,EAAE,KAAKxd,EAAL,CAAQsE,KAAR,CAAc,EAAd,CApBiB;AAqB5BmZ,iCAAmB,EAAE,KAAKzd,EAAL,CAAQ+D,KAAR,CAAc;AACjCyD,uBAAO,EAAE,CAACnM,IAAI,CAAC,mBAAD,CAAJ,GAA4BA,IAAI,CAAC,mBAAD,CAAJ,CAA0B,CAA1B,EAA6B,SAA7B,CAA5B,GAAsE,EAAvE,CADwB;AAEjCK,wBAAQ,EAAE,CAACL,IAAI,CAAC,mBAAD,CAAJ,GAA4BA,IAAI,CAAC,mBAAD,CAAJ,CAA0B,CAA1B,EAA6B,UAA7B,CAA5B,GAAuE,EAAxE,CAFuB;AAGjC4hB,wBAAQ,EAAE,CAAC5hB,IAAI,CAAC,mBAAD,CAAJ,GAA4BA,IAAI,CAAC,mBAAD,CAAJ,CAA0B,CAA1B,EAA6B,UAA7B,CAA5B,GAAuE,EAAxE,CAHuB;AAIjC6hB,8BAAc,EAAE,CAAC7hB,IAAI,CAAC,mBAAD,CAAJ,GAA4BA,IAAI,CAAC,mBAAD,CAAJ,CAA0B,CAA1B,EAA6B,gBAA7B,CAA5B,GAA6E,EAA9E,CAJiB;AAKjC8hB,2BAAW,EAAE,CAAC9hB,IAAI,CAAC,mBAAD,CAAJ,GAA4BA,IAAI,CAAC,mBAAD,CAAJ,CAA0B,CAA1B,EAA6B,aAA7B,CAA5B,GAA0E,EAA3E;AALoB,eAAd,CArBO;AA4B5BqiB,sBAAQ,EAAE,KAAK1d,EAAL,CAAQsE,KAAR,CAAc,EAAd;AA5BkB,aAAd,CAAhB;AA+BA,gBAAM0X,UAAU,GAAG,KAAKnB,QAAL,CAAc9gB,GAAd,CAAkB,QAAlB,CAAnB;AACAsB,gBAAI,CAAC,SAAD,CAAJ,CAAgBmG,OAAhB,CAAyB,UAAAmc,KAAK,EAAI;AAChC3B,wBAAU,CAAC7W,IAAX,CACE,OAAI,CAACnF,EAAL,CAAQ+D,KAAR,CAAc;AACZmY,qBAAK,EAAE,CAACyB,KAAK,CAAC,OAAD,CAAN,EAAiB,CAAC,6CAAA3Z,UAAA,SAAD,CAAjB,CADK;AAEZyG,oBAAI,EAAE,CAACkT,KAAK,CAAC,MAAD,CAAN,EAAgB,CAAC,6CAAA3Z,UAAA,SAAD,CAAhB,CAFM;AAGZoX,uBAAO,EAAE,CAACuC,KAAK,CAAC,SAAD,CAAN;AAHG,eAAd,CADF;AAOD,aARD;AAUA,gBAAMxB,YAAY,GAAG,KAAKtB,QAAL,CAAc9gB,GAAd,CAAkB,WAAlB,CAArB;;AACA,gBAAIsB,IAAI,CAAC,WAAD,CAAR,EAAuB;AACrBA,kBAAI,CAAC,WAAD,CAAJ,CAAkBmG,OAAlB,CAA2B,UAAAoc,OAAO,EAAI;AACpCzB,4BAAY,CAAChX,IAAb,CACE,OAAI,CAACnF,EAAL,CAAQ+D,KAAR,CAAc;AACZgX,4BAAU,EAAE,CAAC6C,OAAO,CAAC,YAAD,CAAR,CADA;AAEZnT,sBAAI,EAAE,CAACmT,OAAO,CAAC,MAAD,CAAR,EAAkB,CAAC,6CAAA5Z,UAAA,SAAD,CAAlB,CAFM;AAGZgX,+BAAa,EAAE,CAAC4C,OAAO,CAAC,eAAD,CAAR,EAA2B,CAAC,6CAAA5Z,UAAA,SAAD,CAA3B,CAHH;AAIZiX,0BAAQ,EAAE,CAAC2C,OAAO,CAAC,UAAD,CAAR,CAJE;AAKZ1C,sBAAI,EAAE,CAAC0C,OAAO,CAAC,MAAD,CAAR,CALM;AAMZzC,yBAAO,EAAE,CAACyC,OAAO,CAAC,SAAD,CAAR,CANG;AAOZxC,yBAAO,EAAE,CAACwC,OAAO,CAAC,SAAD,CAAR;AAPG,iBAAd,CADF;AAWD,eAZD;AAaD;;AAED,gBAAMxB,SAAS,GAAG,KAAKvB,QAAL,CAAc9gB,GAAd,CAAkB,UAAlB,CAAlB;AACA,gBAAM8jB,oBAAoB,GAAGxiB,IAAI,CAAC,eAAD,CAAJ,CAAsB,CAAtB,CAA7B;;AACA,gBAAIwiB,oBAAJ,EAA0B;AACxBA,kCAAoB,CAAC3Y,MAArB,CAA4B1D,OAA5B,CAAqC,UAAAkB,KAAK,EAAI;AAC5C,oBAAMob,YAAY,GAAGpb,KAAK,CAACmW,iBAAN,CAAwB,CAAxB,CAArB;AACAuD,yBAAS,CAACjX,IAAV,CACE,OAAI,CAACnF,EAAL,CAAQ+D,KAAR,CAAc;AACZR,sBAAI,EAAE,CAACua,YAAY,CAAC,QAAD,CAAZ,CAAuB,CAAvB,EAA0B,MAA1B,CAAD,CADM;AAEZ3S,6BAAW,EAAE,CAAC2S,YAAY,CAAC,QAAD,CAAZ,CAAuB,CAAvB,EAA0B,aAA1B,CAAD,CAFD;AAGZ7S,2CAAyB,EAAE,CAAC6S,YAAY,CAAC,eAAD,CAAb,CAHf;AAIZ1Y,4CAA0B,EAAE,CAAC1C,KAAK,CAAC,4BAAD,CAAN;AAJhB,iBAAd,CADF;AAQD,eAVD;AAWD;;AAED,iBAAK+Y,iBAAL,GAAyB,KAAKZ,QAAL,CAAcjW,WAAd,EAAzB;AACD;;;iBAED,yBAAgBvJ,IAAhB,EAA4B;AAAA;;AAC1B,iBAAKogB,iBAAL,GAAyB;AACvBjU,qBAAO,EAAEnM,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,SAAlB,CADc;AAEvBkhB,kBAAI,EAAElhB,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,MAAlB,CAFiB;AAGvBmhB,wBAAU,EAAEnhB,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,YAAlB,CAHW;AAIvB+hB,uBAAS,EAAE;AACTC,qBAAK,EAAE;AACLnJ,2BAAS,EAAE7Y,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,WAAlB,CADN;AAELohB,8BAAY,EAAEphB,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,cAAlB,CAFT;AAGLqhB,4BAAU,EAAErhB,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,YAAlB,CAHP;AAILshB,6BAAW,EAAEthB,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,aAAlB,CAJR;AAKLuhB,6BAAW,EAAEvhB,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,aAAlB;AALR,iBADE;AAQTiiB,wBAAQ,EAAE;AACRT,uBAAK,EAAExhB,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,OAAtB,CADC;AAERyhB,+BAAa,EAAEzhB,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,eAAtB,CAFP;AAGR0hB,4BAAU,EAAE1hB,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,YAAtB,CAHJ;AAIR2hB,wBAAM,EAAE3hB,IAAI,CAAC,YAAD,CAAJ,CAAmB,CAAnB,EAAsB,QAAtB;AAJA;AARD,eAJY;AAmBvBkiB,oBAAM,EAAE,EAnBe;AAoBvBC,uBAAS,EAAE,EApBY;AAqBvBC,iCAAmB,EAAE;AACnBjW,uBAAO,EAAEnM,IAAI,CAAC,mBAAD,CAAJ,GAA4BA,IAAI,CAAC,mBAAD,CAAJ,CAA0B,CAA1B,EAA6B,SAA7B,CAA5B,GAAsE,EAD5D;AAEnBK,wBAAQ,EAAEL,IAAI,CAAC,mBAAD,CAAJ,GAA4BA,IAAI,CAAC,mBAAD,CAAJ,CAA0B,CAA1B,EAA6B,UAA7B,CAA5B,GAAuE,EAF9D;AAGnB4hB,wBAAQ,EAAE5hB,IAAI,CAAC,mBAAD,CAAJ,GAA4BA,IAAI,CAAC,mBAAD,CAAJ,CAA0B,CAA1B,EAA6B,UAA7B,CAA5B,GAAuE,EAH9D;AAInB6hB,8BAAc,EAAE7hB,IAAI,CAAC,mBAAD,CAAJ,GAA4BA,IAAI,CAAC,mBAAD,CAAJ,CAA0B,CAA1B,EAA6B,gBAA7B,CAA5B,GAA6E,EAJ1E;AAKnB8hB,2BAAW,EAAE9hB,IAAI,CAAC,mBAAD,CAAJ,GAA4BA,IAAI,CAAC,mBAAD,CAAJ,CAA0B,CAA1B,EAA6B,aAA7B,CAA5B,GAA0E;AALpE,eArBE;AA4BvBqiB,sBAAQ,EAAE;AA5Ba,aAAzB;AA+BAriB,gBAAI,CAAC,SAAD,CAAJ,CAAgBmG,OAAhB,CAAyB,UAAAmc,KAAK,EAAI;AAChC,qBAAI,CAAClC,iBAAL,CAAuB,QAAvB,EAAiCtW,IAAjC,CACE;AACE+W,qBAAK,EAAEyB,KAAK,CAAC,OAAD,CADd;AAEElT,oBAAI,EAAEkT,KAAK,CAAC,MAAD,CAFb;AAGEvC,uBAAO,EAAEuC,KAAK,CAAC,SAAD;AAHhB,eADF;AAOD,aARD;;AAUA,gBAAItiB,IAAI,CAAC,WAAD,CAAR,EAAuB;AACrBA,kBAAI,CAAC,WAAD,CAAJ,CAAkBmG,OAAlB,CAA2B,UAAAoc,OAAO,EAAI;AACpC,uBAAI,CAACnC,iBAAL,CAAuB,WAAvB,EAAoCtW,IAApC,CACE;AACE4V,4BAAU,EAAE6C,OAAO,CAAC,YAAD,CADrB;AAEEnT,sBAAI,EAAEmT,OAAO,CAAC,MAAD,CAFf;AAGE5C,+BAAa,EAAE4C,OAAO,CAAC,eAAD,CAHxB;AAIE3C,0BAAQ,EAAE2C,OAAO,CAAC,UAAD,CAJnB;AAKE1C,sBAAI,EAAE0C,OAAO,CAAC,MAAD,CALf;AAMEzC,yBAAO,EAAEyC,OAAO,CAAC,SAAD,CANlB;AAOExC,yBAAO,EAAEwC,OAAO,CAAC,SAAD;AAPlB,iBADF;AAWD,eAZD;AAaD;;AAED,gBAAMC,oBAAoB,GAAGxiB,IAAI,CAAC,eAAD,CAAJ,CAAsB,CAAtB,CAA7B;;AACA,gBAAIwiB,oBAAJ,EAA0B;AACxBA,kCAAoB,CAAC3Y,MAArB,CAA4B1D,OAA5B,CAAqC,UAAAkB,KAAK,EAAI;AAC5C,oBAAMob,YAAY,GAAGpb,KAAK,CAACmW,iBAAN,CAAwB,CAAxB,CAArB;;AACA,uBAAI,CAAC4C,iBAAL,CAAuB,UAAvB,EAAmCtW,IAAnC,CACE;AACE5B,sBAAI,EAAE,CAACua,YAAY,CAAC,QAAD,CAAZ,CAAuB,CAAvB,EAA0B,MAA1B,CAAD,CADR;AAEE3S,6BAAW,EAAE,CAAC2S,YAAY,CAAC,QAAD,CAAZ,CAAuB,CAAvB,EAA0B,aAA1B,CAAD,CAFf;AAGE7S,2CAAyB,EAAE,CAAC6S,YAAY,CAAC,eAAD,CAAb,CAH7B;AAIE1Y,4CAA0B,EAAE,CAAC1C,KAAK,CAAC,4BAAD,CAAN;AAJ9B,iBADF;AAQD,eAVD;AAWD;;AAED,iBAAKmY,QAAL,CAAc9Y,KAAd,CAAoB,KAAK0Z,iBAAzB;AACD;;;iBAED,6BAAoB;AAClB,gBAAMsC,kBAAkB,GAAG,KAAKlD,QAAL,CAAc9gB,GAAd,CAAkB,QAAlB,CAA3B;AACA,gBAAM6gB,oBAAoB,GAAG,KAAKC,QAAL,CAAc9gB,GAAd,CAAkB,WAAlB,CAA7B;AACA,gBAAMikB,gBAAgB,GAAG,KAAKnD,QAAL,CAAc9gB,GAAd,CAAkB,WAAlB,EAA+BA,GAA/B,CAAmC,UAAnC,CAAzB;AACA,gBAAMkkB,uBAAuB,GAAG,KAAKpD,QAAL,CAAc9gB,GAAd,CAAkB,qBAAlB,CAAhC;;AACA,gBAAI,KAAKsG,QAAT,EAAmB;AACjB0d,gCAAkB,CAAC7U,QAAnB,CAA4B1H,OAA5B,CAAqC,UAAA0c,aAAa,EAAI;AACpDA,6BAAa,CAACnkB,GAAd,CAAkB,SAAlB,EAA6BiN,OAA7B;AACAkX,6BAAa,CAACnkB,GAAd,CAAkB,MAAlB,EAA0BiN,OAA1B;AACD,eAHD;AAIA4T,kCAAoB,CAAC1R,QAArB,CAA8B1H,OAA9B,CAAuC,UAAA2c,eAAe,EAAI;AACxDA,+BAAe,CAACpkB,GAAhB,CAAoB,SAApB,EAA+BiN,OAA/B;AACAmX,+BAAe,CAACpkB,GAAhB,CAAoB,MAApB,EAA4BiN,OAA5B;AACD,eAHD;AAIAgX,8BAAgB,CAACjkB,GAAjB,CAAqB,QAArB,EAA+BiN,OAA/B;AACAiX,qCAAuB,CAAClkB,GAAxB,CAA4B,UAA5B,EAAwCiN,OAAxC;AACAiX,qCAAuB,CAAClkB,GAAxB,CAA4B,UAA5B,EAAwCiN,OAAxC;AACAiX,qCAAuB,CAAClkB,GAAxB,CAA4B,gBAA5B,EAA8CiN,OAA9C;AACAiX,qCAAuB,CAAClkB,GAAxB,CAA4B,aAA5B,EAA2CiN,OAA3C;AACD,aAdD,MAcO;AACL+W,gCAAkB,CAAC7U,QAAnB,CAA4B1H,OAA5B,CAAqC,UAAA0c,aAAa,EAAI;AACpDA,6BAAa,CAACnkB,GAAd,CAAkB,SAAlB,EAA6BkN,MAA7B;AACAiX,6BAAa,CAACnkB,GAAd,CAAkB,MAAlB,EAA0BkN,MAA1B;AACD,eAHD;AAIA2T,kCAAoB,CAAC1R,QAArB,CAA8B1H,OAA9B,CAAuC,UAAA2c,eAAe,EAAI;AACxDA,+BAAe,CAACpkB,GAAhB,CAAoB,SAApB,EAA+BkN,MAA/B;AACAkX,+BAAe,CAACpkB,GAAhB,CAAoB,MAApB,EAA4BkN,MAA5B;AACD,eAHD;AAIA+W,8BAAgB,CAACjkB,GAAjB,CAAqB,QAArB,EAA+BkN,MAA/B;AACAgX,qCAAuB,CAAClkB,GAAxB,CAA4B,UAA5B,EAAwCkN,MAAxC;AACAgX,qCAAuB,CAAClkB,GAAxB,CAA4B,UAA5B,EAAwCkN,MAAxC;AACAgX,qCAAuB,CAAClkB,GAAxB,CAA4B,gBAA5B,EAA8CkN,MAA9C;AACAgX,qCAAuB,CAAClkB,GAAxB,CAA4B,aAA5B,EAA2CkN,MAA3C;AACD;AACF;;;iBAED,gBAAO;AAAA;;AACL,iBAAKnM,cAAL,CAAoBkH,aAApB;;AACA,gBAAI,KAAKoc,qBAAL,EAAJ,EAAkC;AAChC,mBAAKvjB,eAAL,CAAqBsM,IAArB,CAAkC,KAAKuU,WAAvC,EAAoDtgB,SAApD,CAA+D,UAAAC,IAAI,EAAI;AACrE,uBAAI,CAACqgB,WAAL,GAAmB,EAAnB;;AACA,oBAAI,mBAAmBrgB,IAAvB,EAA6B;AAC3B,sBAAMqQ,MAAM,GAAGrQ,IAAI,CAAC,QAAD,CAAJ,CAAe,CAAf,EAAkB,SAAlB,CAAf;AACA,yBAAI,CAAC8F,YAAL,GAAoB9F,IAAI,CAAC,eAAD,CAAxB;AACA,yBAAI,CAACiF,SAAL,GAAiB,KAAjB;;AACA,yBAAI,CAACzF,eAAL,CAAqB+gB,aAArB,CAAmClQ,MAAnC,EAA2CtQ,SAA3C,CAAqD,UAAAijB,QAAQ,EAAI;AAC/D,wBAAI,eAAeA,QAAnB,EAA6B;AAC3B,6BAAI,CAAC/c,mBAAL;;AACA,6BAAI,CAACgd,eAAL,CAA6BD,QAA7B;AACD,qBAHD,MAGO;AACL,0BAAM9c,aAAa,GAAc8c,QAAjC;AACA9c,mCAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,+BAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,uBAA1B;AACD;AACF,mBARD;;AASA,yBAAI,CAAC3G,cAAL,CAAoByM,aAApB,CAAkC,MAAlC,EAA0C,YAA1C,EAAwD,GAAxD,EAA6DmE,MAA7D;AACD,iBAdD,MAcO;AACL,sBAAMnK,aAAa,GAAclG,IAAjC;AACAkG,+BAAa,CAACC,OAAd,CAAuB,UAAAC,GAAG;AAAA,2BAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,mBAA1B;AACD;AACF,eApBD;AAqBD;AACF;;;iBAED,iCAAwB;AACtB,gBAAI,KAAKoZ,QAAL,CAAcpY,OAAlB,EAA2B;AACzB,mBAAK3H,cAAL,CAAoByM,aAApB,CAAkC,MAAlC,EAA0C,SAA1C,EAAqD,GAArD;AACA,qBAAO,KAAP;AACD;;AAED,gBAAI,KAAKsT,QAAL,CAAchZ,KAAd,KAAwB,KAA5B,EAAmC;AACjC,mBAAK/G,cAAL,CAAoByM,aAApB,CAAkC,SAAlC,EAA6C,WAA7C,EAA0D,GAA1D;AACA,qBAAO,KAAP;AACD;;AAED,iBAAKmU,WAAL,CAAiB,WAAjB,IAAgC,QAAhC;AACA,iBAAKA,WAAL,CAAiB,eAAjB,IAAoC,KAAKva,YAAzC;;AACA,gBAAI,KAAKb,SAAT,EAAoB;AAClB,mBAAKob,WAAL,CAAiB,QAAjB,IAA6B;AAAC5a,sBAAM,EAAE,KAAT;AAAgB2J,oBAAI,EAAE,UAAtB;AAAkC8T,6BAAa,EAAE;AAAjD,eAA7B;AACD;;AAED,gBAAMC,kBAAkB,GAAG,KAAK3D,QAAL,CAAc9gB,GAAd,CAAkB,WAAlB,CAA3B;AACA,gBAAM2R,MAAM,GAAG,KAAKmP,QAAL,CAAc9gB,GAAd,CAAkB,SAAlB,EAA6B2I,KAA5C;;AACA,gBAAI8b,kBAAkB,CAAC3c,KAAvB,EAA8B;AAC5B,kBAAM4c,uBAAuB,GAAGD,kBAAkB,CAACzkB,GAAnB,CAAuB,OAAvB,CAAhC;AACA,mBAAK2hB,WAAL,CAAiB,QAAjB,IAA6B,KAAKtb,eAAL,CAAqBse,sBAArB,CAC3BD,uBAD2B,EACF;AAACjX,uBAAO,EAAEkE;AAAV,eADE,EACiB,KAAKpL,SADtB,CAA7B;AAGA,kBAAMqe,0BAA0B,GAAGH,kBAAkB,CAACzkB,GAAnB,CAAuB,UAAvB,CAAnC;AACA,mBAAK2hB,WAAL,CAAiB,YAAjB,IAAiC,KAAKtb,eAAL,CAAqBse,sBAArB,CAC/BC,0BAD+B,EACH;AAACnX,uBAAO,EAAEkE;AAAV,eADG,EACgB,KAAKpL,SADrB,CAAjC;AAED;;AAED,gBAAMyd,kBAAkB,GAAG,KAAKlD,QAAL,CAAc9gB,GAAd,CAAkB,QAAlB,CAA3B;AACA,iBAAK2hB,WAAL,CAAiB,SAAjB,IAA8B,KAAKtb,eAAL,CAAqBwe,2BAArB,CAC5Bb,kBAD4B,EACR,KAAKtC,iBAAL,CAAuB,QAAvB,CADQ,EAC0B;AAACS,mBAAK,EAAE;AAAR,aAD1B,CAA9B;AAGA,gBAAMtB,oBAAoB,GAAG,KAAKC,QAAL,CAAc9gB,GAAd,CAAkB,WAAlB,CAA7B;AACA,iBAAK2hB,WAAL,CAAiB,WAAjB,IAAgC,KAAKtb,eAAL,CAAqBwe,2BAArB,CAC9BhE,oBAD8B,EACR,KAAKa,iBAAL,CAAuB,WAAvB,CADQ,EAC6B;AAACV,wBAAU,EAAE;AAAb,aAD7B,CAAhC;AAGA,gBAAM8D,4BAA4B,GAAG,KAAKhE,QAAL,CAAc9gB,GAAd,CAAkB,qBAAlB,CAArC;AACA,iBAAK2hB,WAAL,CAAiB,mBAAjB,IAAwC,KAAKtb,eAAL,CAAqBse,sBAArB,CACtCG,4BADsC,EACR;AAACrX,qBAAO,EAAEkE;AAAV,aADQ,EACW,CAACmT,4BAA4B,CAAC9kB,GAA7B,CAAiC,SAAjC,EAA4C2I,KADxD,CAAxC;AAGA,gBAAMoc,iBAAiB,GAAG,KAAKjE,QAAL,CAAc9gB,GAAd,CAAkB,UAAlB,CAA1B;AACA,gBAAM+K,YAAY,GAAG,KAAK1E,eAAL,CAAqBiL,0BAArB,CACnB,cADmB,EAEnB,CAAC;AAAChI,uBAAS,EAAE,YAAZ;AAA0BiI,qBAAO,EAAE;AAAnC,aAAD,CAFmB,EAGnBwT,iBAHmB,EAGA,KAAKrD,iBAAL,CAAuB,UAAvB,CAHA,EAGoC,CAAC,MAAD,EAAS,aAAT,CAHpC,CAArB;;AAIA,gBAAI3W,YAAJ,EAAkB;AAAC,mBAAK4W,WAAL,CAAiB,eAAjB,IAAoC,CAAC5W,YAAD,CAApC;AAAqD;;AAExE,mBAAO,IAAP;AACD;;;iBAED,yBAAa;AACX,gBAAI,KAAKxE,SAAL,IAAmB,KAAKua,QAAL,IAAiB,KAAKA,QAAL,CAAchZ,KAAtD,EAA8D;AAC5D,qBAAO,KAAK1B,aAAL,CAAmB2B,OAAnB,CAA2B,kBAA3B,CAAP;AACD,aAFD,MAEO;AACL,qBAAO,IAAP;AACD;AACF;;;;;;;yBAhdUtF,oB,EAAmB,yH,EAAA,6H,EAAA,qH,EAAA,2H,EAAA,+H,EAAA,kI,EAAA,wH,EAAA,0H,EAAA,gI;AAAA,O;;;cAAnBA,oB;AAAmB,wC;AAAA,iB;AAAA,e;AAAA,kvD;AAAA;AAAA;ADvBhC;;AACE;;AACE;;AAAyC;;AAAoE;;AAC/G;;AAEA;;AACE;;AACQ;AAAA,qBAAS,IAAAoL,WAAA,EAAT;AAAsB,aAAtB;;AACN;;AAA8B;;AAAO;;AACvC;;AACA;;AAAwG;AAAA,qBAAS,IAAAC,iBAAA,EAAT;AAA4B,aAA5B;;AACtG;;AACA;;AACF;;AACA;;AAAyF;AAAA,qBAAS,IAAAV,IAAA,EAAT;AAAe,aAAf;;AACvF;;AAA2B;;AAAI;;AACjC;;AACF;;AACF;;AAEA;;AACE;;AACF;;AAEA;;;;AAtB6C;;AAAA;;AAShC;;AAAA;;AACA;;AAAA;;AAEiG;;AAAA;;AAUxG;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEtBF;;AACE;;AAAmG;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACjG;;AAAyB;;AAAO;;AAClC;;AACA;;AACE;;AAMA;;AAMA;;AACE;;AACA;;AAAmD;;AAAO;;AAC5D;;AACF;;AACF;;;;;;;;AAlB6B;;AAAA;;AAED;;AAAA,yHAA8C,WAA9C,EAA8C,gBAA9C,EAA8C,UAA9C,EAA8C,eAA9C,EAA8C,aAA9C,EAA8C,IAA9C;;AAMA;;AAAA,0HAA+C,WAA/C,EAA+C,gBAA/C,EAA+C,UAA/C,EAA+C,eAA/C,EAA+C,aAA/C,EAA+C,IAA/C;;AAMyC;;AAAA;;;;UCV5D5I,mB;AAOX,qCAAoByB,EAApB,EACoBlF,cADpB,EAEoBlB,uBAFpB,EAEsE;AAAA;;AAFlD,eAAAoG,EAAA,GAAAA,EAAA;AACA,eAAAlF,cAAA,GAAAA,cAAA;AACA,eAAAlB,uBAAA,GAAAA,uBAAA;AAAqD;;;;iBAEzE,oBAAW;AACT,iBAAKmkB,kBAAL,GAA0B,KAAKlD,QAAL,CAAc9gB,GAAd,CAAkB,QAAlB,CAA1B;AACA,iBAAKC,SAAL,GAAiB,KAAKJ,uBAAL,CAA6BK,kBAA7B,CACf,KAAKC,aAAL,CAAmBC,IAAnB,CAAyB,UAAAC,YAAY;AAAA,qBAAIA,YAAY,CAACC,WAAb,KAA6B,SAAjC;AAAA,aAArC,EAAiFE,UADlE,CAAjB;;AAEA,gBAAI,CAAC,KAAK8F,QAAN,IAAkB,KAAK0d,kBAAL,CAAwBzb,MAAxB,KAAmC,CAAzD,EAA4D;AAC1D,mBAAKyc,QAAL;AACD;AACF;;;iBAED,2BAAkBvkB,SAAlB,EAAmC;AACjC,mBAAO,KAAKR,SAAL,CAAeG,IAAf,CAAqB,UAAAM,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,KAAkBF,SAAtB;AAAA,aAA7B,CAAP;AACD;;;iBAED,oBAAW;AACT,gBAAMyhB,cAAc,GAAG,KAAKjc,EAAL,CAAQ+D,KAAR,CAAc;AACnCmY,mBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAlY,UAAA,SAAD,CAAL,CAD4B;AAEnCyG,kBAAI,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAzG,UAAA,SAAD,CAAL,CAF6B;AAGnCoX,qBAAO,EAAE,CAAC,EAAD;AAH0B,aAAd,CAAvB;;AAKA,gBAAI,KAAK2C,kBAAL,CAAwBzb,MAAxB,KAAmC,CAAvC,EAA0C;AACxC2Z,4BAAc,CAACliB,GAAf,CAAmB,SAAnB,EAA8B6P,QAA9B,CAAuC,CAAvC;AACAqS,4BAAc,CAACliB,GAAf,CAAmB,SAAnB,EAA8BsP,WAA9B;AACD;;AACD,iBAAK0U,kBAAL,CAAwB5Y,IAAxB,CAA6B8W,cAA7B;AACD;;;iBAED,qBAAY7S,KAAZ,EAA2B;AACzB,gBAAI,KAAK2U,kBAAL,CAAwBzb,MAAxB,KAAmC,CAAvC,EAA0C;AACxC,mBAAKxH,cAAL,CAAoByM,aAApB,CAAkC,MAAlC,EAA0C,oBAA1C,EAAgE,GAAhE;AACD,aAFD,MAEO;AACL,kBAAI,KAAKwW,kBAAL,CAAwBvb,EAAxB,CAA2B4G,KAA3B,EAAkC1G,KAAlC,CAAwC,SAAxC,CAAJ,EAAwD;AACtD,oBAAM2Y,eAAe,GAAGjS,KAAK,KAAK,CAAV,GAAc,CAAd,GAAkB,CAA1C;AACA,qBAAK2U,kBAAL,CAAwBvb,EAAxB,CAA2B6Y,eAA3B,EAA4CthB,GAA5C,CAAgD,SAAhD,EAA2D6P,QAA3D,CAAoE,CAApE;AACA,qBAAKmU,kBAAL,CAAwBvb,EAAxB,CAA2B6Y,eAA3B,EAA4CthB,GAA5C,CAAgD,SAAhD,EAA2DsP,WAA3D;AACD;;AACD,mBAAK0U,kBAAL,CAAwBnb,QAAxB,CAAiCwG,KAAjC;AACA,mBAAK2U,kBAAL,CAAwB1U,WAAxB;AACD;AACF;;;;;;;yBAjDU9K,mB,EAAkB,wH,EAAA,+H,EAAA,iI;AAAA,O;;;cAAlBA,mB;AAAkB,uC;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,e;AAAA,suB;AAAA;AAAA;ADV/B;;AACE;;AACE;;AAuBA;;AAAgG;AAAA,qBAAS,IAAAwgB,QAAA,EAAT;AAAmB,aAAnB;;AAAqB;;AAAG;;AAC1H;;AACF;;;;AAzBmC;;AAAA;;AAuB2C;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEhBjE1gB,6B;AAOX,+CAAoBzE,uBAApB,EAAsE;AAAA;;AAAlD,eAAAA,uBAAA,GAAAA,uBAAA;AAAqD;;;;iBAEzE,oBAAW;AACT,iBAAKqkB,uBAAL,GAA+B,KAAKpD,QAAL,CAAc9gB,GAAd,CAAkB,qBAAlB,CAA/B;AACA,iBAAKC,SAAL,GAAiB,KAAKJ,uBAAL,CAA6BK,kBAA7B,CACf,KAAKC,aAAL,CAAmBC,IAAnB,CAAyB,UAAAC,YAAY;AAAA,qBAAIA,YAAY,CAACC,WAAb,KAA6B,mBAAjC;AAAA,aAArC,EAA2FE,UAD5E,CAAjB;AAED;;;iBAED,2BAAkBC,SAAlB,EAAmC;AACjC,mBAAO,KAAKR,SAAL,CAAeG,IAAf,CAAqB,UAAAM,QAAQ;AAAA,qBAAIA,QAAQ,CAACC,IAAT,KAAkBF,SAAtB;AAAA,aAA7B,CAAP;AACD;;;;;;;yBAjBU6D,6B,EAA4B,iI;AAAA,O;;;cAA5BA,6B;AAA4B,iD;AAAA;AAAA;AAAA;AAAA;AAAA,S;AAAA,gB;AAAA,gB;AAAA,wI;AAAA;AAAA;ACTzC;;AACE;;AAMA;;AAMA;;AAMA;;AAMF;;;;AAvB0B;;AAAA,4HAAkD,WAAlD,EAAkD,2BAAlD,EAAkD,UAAlD,EAAkD,YAAlD,EAAkD,aAAlD,EAAkD,IAAlD;;AAMA;;AAAA,4HAAkD,WAAlD,EAAkD,2BAAlD,EAAkD,UAAlD,EAAkD,YAAlD,EAAkD,aAAlD,EAAkD,IAAlD;;AAMA;;AAAA,kIAAwD,WAAxD,EAAwD,2BAAxD,EAAwD,UAAxD,EAAwD,YAAxD,EAAwD,aAAxD,EAAwD,IAAxD;;AAMA;;AAAA,+HAAqD,WAArD,EAAqD,2BAArD,EAAqD,UAArD,EAAqD,YAArD,EAAqD,aAArD,EAAqD,IAArD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVtB;;AACE;;AACE;;AACE;;AAC0E;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAD1E;;AAEA;;AACE;;AACF;;AACA;;AACE;;AACA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AACE;;AACF;;AACF;;AACF;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AAA2E;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACzE;;AACF;;AACF;;AACF;;;;;;;;AAvBM;;AAAA;;AAGK;;AAAA;;AAEH;;AAAA;;AAUF;;AAAA;;AAImD;;AAAA;;;;UCpBhDC,kB;AAKX,oCAAoB0B,EAApB,EACoBnF,eADpB,EACsD;AAAA;;AADlC,eAAAmF,EAAA,GAAAA,EAAA;AACA,eAAAnF,eAAA,GAAAA,eAAA;AAAqC;;;;iBAKzD,oBAAW;AAAA;;AACT,iBAAKikB,iBAAL,GAAyB,KAAKjE,QAAL,CAAc9gB,GAAd,CAAkB,UAAlB,CAAzB,CADS,CAET;;AACA,gBAAI,CAAC,KAAKsG,QAAV,EAAoB;AAClB,mBAAKye,iBAAL,CAAuB5V,QAAvB,CAAgC1H,OAAhC,CAAyC,UAAC2H,IAAD,EAAOC,KAAP,EAAiB;AACxD,uBAAI,CAAC4V,cAAL,CAAoB5V,KAApB;AACD,eAFD;AAGD;AACF;;;iBAED,oBAAWA,KAAX,EAAwB;AACtB,gBAAIA,KAAK,KAAK,KAAK0V,iBAAL,CAAuBxc,MAAvB,GAAgC,CAA9C,EAAiD;AAC/C,mBAAKwc,iBAAL,CAAuBlc,QAAvB,CAAgCwG,KAAhC;AACA,mBAAK0V,iBAAL,CAAuBzV,WAAvB;AACD;AACF;;;iBAED,wBAAeD,KAAf,EAA4B;AAC1B,gBAAM6V,WAAW,GAAG,KAAKH,iBAAL,CAAuBtc,EAAvB,CAA0B4G,KAA1B,CAApB;;AACA,gBAAI,KAAK8V,OAAL,CAAaD,WAAb,CAAJ,EAA+B;AAC7BA,yBAAW,CAACllB,GAAZ,CAAgB,MAAhB,EAAwByP,SAAxB,CAAkC;AAACC,uBAAO,EAAE;AAAV,eAAlC;AACA;AACD;;AAED,gBAAIL,KAAK,KAAK,KAAK0V,iBAAL,CAAuBxc,MAAvB,GAAgC,CAA1C,IAA+C2c,WAAW,CAACvc,KAAZ,CAAkBa,IAAlB,CAAuB0E,IAAvB,OAAkC,EAArF,EAAyF;AACvF;AACA,mBAAK6W,iBAAL,CAAuB3Z,IAAvB,CACE,KAAKnF,EAAL,CAAQ+D,KAAR,CAAc;AACZR,oBAAI,EAAE,CAAC,EAAD,CADM;AAEZ4H,2BAAW,EAAE,CAAC,EAAD,CAFD;AAGZF,yCAAyB,EAAE,CAAC,EAAD,CAHf;AAIZ7F,0CAA0B,EAAE,CAAC,EAAD;AAJhB,eAAd,CADF;AAQD;;AAED,gBAAI6Z,WAAW,CAACvc,KAAZ,CAAkBa,IAAtB,EAA4B;AAC1B,mBAAK1I,eAAL,CAAqBskB,WAArB,CAAiCF,WAAW,CAACvc,KAAZ,CAAkBa,IAAnD,EAAyDnI,SAAzD,CAAmE,UAAAC,IAAI,EAAI;AACzE,oBAAIA,IAAI,CAAC,QAAD,CAAR,EAAoB;AAClB4jB,6BAAW,CAACllB,GAAZ,CAAgB,MAAhB,EAAwByP,SAAxB,CAAkC;AAACC,2BAAO,EAAEpO,IAAI,CAAC,cAAD;AAAd,mBAAlC;AACD,iBAFD,MAEO;AACL4jB,6BAAW,CAACllB,GAAZ,CAAgB,aAAhB,EAA+B6P,QAA/B,CAAwCvO,IAAI,CAAC,aAAD,CAA5C;AACA4jB,6BAAW,CAACllB,GAAZ,CAAgB,2BAAhB,EAA6C6P,QAA7C,CAAsDvO,IAAI,CAAC,eAAD,CAA1D;AACD;AACF,eAPD;AAQD;AACF;;;iBAED,iBAAQ+jB,YAAR,EAAqC;AACnC,gBAAMtV,UAAU,GAAG,KAAKgV,iBAAL,CAAuB5V,QAAvB,CAAgCnD,SAAhC,CACjB,UAAA6E,IAAI;AAAA,qBAAIA,IAAI,CAAClI,KAAL,CAAWa,IAAX,KAAoB6b,YAAY,CAAC1c,KAAb,CAAmBa,IAAvC,IAA+CqH,IAAI,CAACb,QAApD,IAAgEa,IAAI,CAAClI,KAAL,CAAWa,IAAX,KAAoB,EAAxF;AAAA,aADa,CAAnB;AAEA,mBAAOuG,UAAU,KAAK,CAAC,CAAvB;AACD;;;iBAED,sBAAaxK,KAAb,EAA4BC,YAA5B,EAAyD;AACvD,gBAAMC,aAAa,GAAG,UAAUC,OAAV,EAAwB4f,OAAxB,EAAyC;AAC7D,qBAAO;AAAA,uBAAM5f,OAAO,CAACuf,cAAR,CAAuBK,OAAvB,CAAN;AAAA,eAAP;AACD,aAFqB,CAEpB,IAFoB,EAEd/f,KAFc,EAEPM,IAFO,CAEF,IAFE,CAAtB;;AAIA,iBAAKC,mBAAL,CAAyBqK,+BAAzB,CAAyD,MAAzD,EAAiE,MAAjE,EAAyE,MAAzE,EACE3K,YADF,EACgB,KAAKc,QAAL,IAAiB,KAAK6e,OAAL,CAAa3f,YAAb,KAA8BA,YAAY,CAACyK,KAD5E,EACmFxK,aADnF;AAED;;;;;;;yBAxEUlB,kB,EAAiB,wH,EAAA,+H;AAAA,O;;;cAAjBA,kB;AAAiB,sC;AAAA;AAAA;sEAQjB,yCAAAyB,mB,EAAqB,C;;;;;;;;;;;;;;;;;;ADlBlC;;AACE;;AACE;;AACE;;AAAoB;;AAAI;;AACxB;;AAA2B;;AAAW;;AACtC;;AAAuB;;AAAM;;AAC/B;;AACF;;AAEA;;AACE;;AAyBF;;AACF;;AAEA;;;;AAtCgE;;AAU/B;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEgCzB;;;;;;AACA;;;;;;AAGA;;AACE;;AAAkC;;AAAO;;AAC3C;;;;;;AACA;;AACE;;AAAkC;;AAAM;;AAC1C;;;;;;AACA;;AACE;;AAAkC;;AAAK;;AACzC;;;;;;;;;;;;;;;;;;AAjBJ;;AACE;;AAAI;;AAAgE;;AAAgB;;AAAI;;AACxF;;AAAI;;AAAkB;;AACtB;;AAAI;;AAAqB;;AACzB;;AACE;;AACA;;AACF;;AACA;;AACE;;AAGA;;AAGA;;AAGF;;AACA;;AACE;;AAAsE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpE;;AACF;;AACA;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClE;;AACF;;AACA;;AAAoE;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAClE;;AACF;;AACF;;AACF;;;;;;AA7BS;;AAAA;;AAA6D;;AAAA;;AAChE;;AAAA;;AACA;;AAAA;;AAEK;;AAAA;;AACA;;AAAA;;AAEL;;AAAA;;AAII;;AAAA;;AAGA;;AAAA;;;;;;;;;;UCzCDxD,kB;AASX,oCAAoB1B,eAApB,EACoBC,cADpB,EAEoBoF,MAFpB,EAEoC;AAAA;;AAFhB,eAAArF,eAAA,GAAAA,eAAA;AACA,eAAAC,cAAA,GAAAA,cAAA;AACA,eAAAoF,MAAA,GAAAA,MAAA;AAPpB,eAAA6H,wBAAA,GAA2B,KAA3B;AAOuC;;;;eAJvC,eAAkC;AAAC,mBAAO,KAAKA,wBAAL,GAAgC,OAAhC,GAA0C,MAAjD;AAA0D;;;iBAM7F,oBAAW,CACV;;;iBAED,kBAAS;AAAA;;AACP,iBAAKjN,cAAL,CAAoBkH,aAApB;AACA,iBAAKqW,KAAL,GAAa,EAAb;AACA,iBAAK3M,MAAL,GAAc,KAAKA,MAAL,GAAc,KAAKA,MAAL,CAAYzD,IAAZ,EAAd,GAAmC,EAAjD;AACA,iBAAKgM,QAAL,GAAgB,KAAKA,QAAL,GAAgB,KAAKA,QAAL,CAAchM,IAAd,EAAhB,GAAuC,EAAvD;AACA,iBAAKpN,eAAL,CAAqBykB,WAArB,CAAiC,KAAK5T,MAAtC,EAA8C,KAAKuI,QAAnD,EAA6D7Y,SAA7D,CACE,UAAAC,IAAI,EAAI;AACN,kBAAI,CAACA,IAAI,CAAC,CAAD,CAAT,EAAc;AACZ,uBAAI,CAACP,cAAL,CAAoByM,aAApB,CAAkC,SAAlC,EAA6C,YAA7C,EAA2D,gDAAAa,WAAA,QAA3D;AACD,eAFD,MAEO,IAAI/M,IAAI,CAAC,CAAD,CAAJ,CAAQ,QAAR,CAAJ,EAAuB;AAC5B,oBAAMgN,QAAQ,GAAchN,IAA5B;AACAgN,wBAAQ,CAAC7G,OAAT,CAAkB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAArB;AACD,eAHM,MAGA;AACL,uBAAI,CAAC4W,KAAL,GAAyBhd,IAAzB;AACD;AACF,aAVH;AAYD;;;iBAED,qBAAYiN,MAAZ,EAAkB;AAChB,gBAAIA,MAAM,CAACC,OAAP,KAAmB,EAAvB,EAA4B;AACzB,mBAAKC,MAAL;AACF;AACF;;;iBAED,mBAAO;AACL,iBAAKtI,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,OAAD,EAAU,GAAV,EAAe;AAACb,oBAAM,EAAE;AAAT,aAAf,CAArB;AACD;;;iBAED,qBAAY4K,MAAZ,EAA0B;AACxB,iBAAKxL,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,OAAD,EAAU+J,MAAV,EAAkB;AAAC5K,oBAAM,EAAE;AAAT,aAAlB,CAArB;AACD;;;iBAED,oBAAW4K,MAAX,EAAyB;AACvB,iBAAKxL,MAAL,CAAYyB,QAAZ,CAAqB,CAAC,OAAD,EAAU+J,MAAV,EAAkB;AAAC5K,oBAAM,EAAE;AAAT,aAAlB,CAArB;AACD;;;iBAED,oBAAW4K,MAAX,EAAyB;AACvB,iBAAK6T,eAAL,GAAuB7T,MAAvB;AACA,iBAAK3D,wBAAL,GAAgC,IAAhC;AACD;;;iBAED,0BAAc;AACZ,iBAAKA,wBAAL,GAAgC,KAAhC;AACD;;;iBAED,2BAAe;AAAA;;AACb,gBAAMyX,mBAAmB,GAAG,KAAKnH,KAAL,CAAWle,IAAX,CAAiB,UAAAwO,GAAG;AAAA,qBAAIA,GAAG,CAACnB,OAAJ,KAAgB,OAAI,CAAC+X,eAAzB;AAAA,aAApB,EAA8D3W,aAA1F;AACA,iBAAK/N,eAAL,WAA4B2kB,mBAA5B,EAAiDpkB,SAAjD,CAA4D,UAAAyN,QAAQ,EAAI;AACtE,qBAAI,CAACd,wBAAL,GAAgC,KAAhC;;AACA,kBAAIc,QAAJ,EAAc;AACZ,oBAAMR,QAAQ,GAAcQ,QAA5B;AACAR,wBAAQ,CAAC7G,OAAT,CAAkB,UAAAC,GAAG;AAAA,yBAAI,OAAI,CAAC3G,cAAL,CAAoB4G,GAApB,CAAwBD,GAAxB,CAAJ;AAAA,iBAArB;AACD,eAHD,MAGO;AACL,uBAAI,CAAC+G,MAAL;AACD;AACF,aARD;AASD;;;;;;;yBAzEUjM,kB,EAAiB,+H,EAAA,+H,EAAA,oH;AAAA,O;;;cAAjBA,kB;AAAiB,sC;AAAA,iB;AAAA,e;AAAA,guE;AAAA;AAAA;ADX9B;;AACE;;AACE;;AACE;;AAAuE;;AAAQ;;AAC/E;;AAAmC;AAAA;AAAA,eAAoB,OAApB,EAAoB;AAAA,qBACO,IAAAuM,WAAA,QADP;AAC0B,aAD9C;;AAAnC;;AAEF;;AACA;;AACE;;AAAyE;;AAAU;;AACnF;;AAAuC;AAAA;AAAA,eAAsB,OAAtB,EAAsB;AAAA,qBACC,IAAAA,WAAA,QADD;AACoB,aAD1C;;AAAvC;;AAEF;;AACF;;AAEA;;AACE;;AAAkF;AAAA,qBAAS,IAAAN,MAAA,EAAT;AAAiB,aAAjB;;AAAmB;;AAAM;;AAC7G;;AACF;;AAEA;;AACE;;AACA;;AACE;;AAA4D;AAAA,qBAAS,IAAAiX,OAAA,EAAT;AAAkB,aAAlB;;AAAoB;;AAAkC;;AAAG;;AACvH;;AACA;;AACE;;AACA;;AACE;;AAAI;;AAAO;;AACX;;AAAI;;AAAS;;AACb;;AAAI;;AAAY;;AAChB;;AAAoB;;AAAO;;AAC3B;;AAA+B;;AAAc;;AAC7C;;AAAuB;;AAAM;;AAC/B;;AACA;;AAEA;;AACA;;AA+BA;;AACF;;AAEA;;AAEE;;AACE;;AACE;;AACE;;AAA6C;;AAAgB;;AAC7D;;AAAoC;AAAA,qBAAS,IAAA1W,cAAA,EAAT;AAAyB,aAAzB;;AAClC;;AAAyB;;AAAO;;AAClC;;AACF;;AACA;;AACE;;AAAG;;AAAsD;;AAC3D;;AACA;;AACE;;AAAmE;AAAA,qBAAS,IAAAA,cAAA,EAAT;AAAyB,aAAzB;;AAA2B;;AAAM;;AACpG;;AAAkE;AAAA,qBAAS,IAAAC,eAAA,EAAT;AAA0B,aAA1B;;AAA4B;;AAAO;;AACvG;;AACF;;AACF;;AACF;;AAEF;;;;AAxFyC;;AAAA;;AAKI;;AAAA;;AA4BpB;;AAAA;;AAkCJ;;AAAA;;AACd;;AAUM;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEvEAtM,oB;;;;;;;iBAEX,uBAAcb,SAAd,EACc6jB,YADd,EAEcC,YAFd,EAGcC,SAHd,EAG6C;AAC3C,mBAAO/jB,SAAS,CAACY,aAAV,GAA0BZ,SAAS,CAACY,aAAV,EAA1B,GAAsD,IAA7D;AACD;;;;;;;yBAPUC,oB;AAAmB,O;;;eAAnBA,oB;AAAmB,iBAAnBA,oBAAmB,K;AAAA,oBAFlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCTd;AACA;AACA;;;AAEO,UAAMzB,YAAW,GAAG;AACzB4kB,kBAAU,EAAE,KADa;AAEzB1jB,oBAAY,EAAE,EAFW;AAGzBC,mBAAW,EAAE,UAHY;AAIzB+V,oBAAY,EAAE;AAJW,OAApB;AAOP;;;;;;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXA,UAAI,uDAAAlX,WAAA,WAAJ,EAA4B;AAC1B,uDAAA6kB,cAAA;AACD;;AAED,6DAAAC,eAAA,GAAyBC,eAAzB,CAAyC,6CAAAziB,SAAzC,WACS,UAAA0iB,GAAG;AAAA,eAAI3K,OAAO,CAAC4D,GAAR,CAAY+G,GAAZ,CAAJ;AAAA,OADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = 8255;\nmodule.exports = webpackEmptyAsyncContext;","import {Component, Input, OnInit} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {AttributeBase, AttributeControlService, RelationMeta} from 'jor-angular';\n\n@Component({\n  selector: 'app-admin-info',\n  templateUrl: './admin-info.component.html',\n  styleUrls: ['./admin-info.component.css']\n})\nexport class AdminInfoComponent implements OnInit {\n  @Input() mainForm: FormGroup;\n  @Input() relationMetas: RelationMeta[];\n  @Input() adminRelation: string;\n  private attrCtrls: AttributeBase[];\n  adminForm: FormGroup;\n\n  constructor(private attributeControlService: AttributeControlService) { }\n\n  ngOnInit() {\n    this.adminForm = this.mainForm.get('admin') as FormGroup;\n    this.attrCtrls = this.attributeControlService.toAttributeControl(\n      this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === this.adminRelation).ATTRIBUTES);\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n}\n","<form class=\"mt-4 ml-2 row\">\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4 dk-form-label\"\n                          [attributeControl]=\"getAttrCtrlFromID('CREATED_BY')\"\n                          [formGroup]=\"adminForm\"\n                          [isSmallSize] = \"true\"\n                          [readonly]=\"true\">\n  </dk-app-attribute-form2>\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4 dk-form-label\"\n                          [attributeControl]=\"getAttrCtrlFromID('CREATE_TIME')\"\n                          [formGroup]=\"adminForm\"\n                          [isSmallSize] = \"true\"\n                          [readonly]=\"true\">\n  </dk-app-attribute-form2>\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4 dk-form-label\"\n                          [attributeControl]=\"getAttrCtrlFromID('CHANGED_BY')\"\n                          [formGroup]=\"adminForm\"\n                          [isSmallSize] = \"true\"\n                          [readonly]=\"true\">\n  </dk-app-attribute-form2>\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4 dk-form-label\"\n                          [attributeControl]=\"getAttrCtrlFromID('CHANGE_TIME')\"\n                          [formGroup]=\"adminForm\"\n                          [isSmallSize] = \"true\"\n                          [readonly]=\"true\">\n  </dk-app-attribute-form2>\n</form>\n","import { Component } from '@angular/core';\nimport { EntityService } from 'jor-angular';\nimport {environment} from '../environments/environment';\nimport {LogonService} from 'ui-logon-angular';\nimport {IdentityService} from './identity.service';\nimport {msgStore} from './msgStore';\nimport {MessageService} from 'ui-message-angular';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor(private entityService: EntityService,\n              private identityService: IdentityService,\n              private messageService: MessageService,\n              private logonService: LogonService) {\n    this.entityService.setOriginalHost(environment.originalHost);\n    this.logonService.setHost(environment.originalHost);\n    this.logonService.try_get_session().subscribe( data => {\n      this.identityService.setSession( data );\n      this.messageService.setMessageStore(msgStore, this.identityService.Session.LANGUAGE);\n    });\n  }\n}\n","<div class=\"dk-logon-view\">\n  <router-outlet></router-outlet>\n</div>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport {RouteReuseStrategy, RouterModule, Routes} from '@angular/router';\nimport {LogonComponent, LandingPageComponent} from 'ui-logon-angular';\nimport {LogonModule} from 'ui-logon-angular';\nimport {environment} from '../environments/environment';\nimport { PermissionListComponent } from './permission/permission-list/permission-list.component';\nimport { PermissionDetailComponent } from './permission/permission-detail/permission-detail.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {MessageModule} from 'ui-message-angular';\nimport {WorkProtectionGuard} from './work-protection.guard';\nimport {JorAngularModule} from 'jor-angular';\nimport { AppListComponent } from './app/app-list/app-list.component';\nimport { AppDetailComponent } from './app/app-detail/app-detail.component';\nimport { AppTargetComponent } from './app/app-detail/app-target/app-target.component';\nimport { AppCategoriesComponent } from './app/app-detail/app-categories/app-categories.component';\nimport { AuthObjectListComponent } from './auth_object/auth-object-list/auth-object-list.component';\nimport { AuthObjectDetailComponent } from './auth_object/auth-object-detail/auth-object-detail.component';\nimport { AuthObjectFieldComponent } from './auth_object/auth-object-detail/auth-object-field/auth-object-field.component';\nimport { AdminInfoComponent } from './admin-info/admin-info.component';\nimport { AuthorizationComponent } from './authorization/authorization.component';\nimport { AuthValueComponent } from './authorization/auth-value/auth-value.component';\nimport { AuthValueSinglesComponent } from './authorization/auth-value/auth-value-singles/auth-value-singles.component';\nimport { AuthValueSeloptsComponent } from './authorization/auth-value/auth-value-selopts/auth-value-selopts.component';\nimport { AppCategoryListComponent } from './app_category/app-category-list/app-category-list.component';\nimport { AppCategoryDetailComponent } from './app_category/app-category-detail/app-category-detail.component';\nimport { AppCategoryDetailAppComponent } from\n    './app_category/app-category-detail/app-category-detail-app/app-category-detail-app.component';\nimport { AppCategoryDetailRoleComponent } from\n    './app_category/app-category-detail/app-category-detail-role/app-category-detail-role.component';\nimport { ProfileListComponent } from './profile/profile-list/profile-list.component';\nimport { ProfileDetailComponent } from './profile/profile-detail/profile-detail.component';\nimport { PermissionDetailCategoryComponent } from './permission/permission-detail/permission-detail-category/permission-detail-category.component';\nimport { PermissionDetailProfileComponent } from './permission/permission-detail/permission-detail-profile/permission-detail-profile.component';\nimport { PermissionDetailUserComponent } from './permission/permission-detail/permission-detail-user/permission-detail-user.component';\nimport {UserListComponent} from './user/user-list/user-list.component';\nimport {UserDetailComponent} from './user/user-detail/user-detail.component';\nimport {UserBasicComponent} from './user/user-detail/user-basic/user-basic.component';\nimport {UserPersonalizationComponent} from './user/user-detail/user-personalization/user-personalization.component';\nimport {UserRoleComponent} from './user/user-detail/user-role/user-role.component';\nimport {UserEmailComponent} from './user/user-detail/user-email/user-email.component';\nimport {UserAddressComponent} from './user/user-detail/user-address/user-address.component';\nimport {CustomReuseStrategy} from './custom.reuse.strategy';\n\nconst appRoutes: Routes = [\n  {\n    path: 'logon', component: LogonComponent,\n    data: {\n      title: 'Logon Portal (DH001/Dark1234)', userLabel: 'User ID', pwdLabel: 'Password', btnLabel: 'Sign In',\n      redirectPath: environment.redirectPath, redirectUrl: environment.redirectUrl, host: environment.originalHost\n    }\n  },\n  { path: 'landing', component: LandingPageComponent },\n  { path: 'users', component: UserListComponent},\n  { path: 'users/:userID', component: UserDetailComponent, canDeactivate: [WorkProtectionGuard]},\n  { path: 'apps', component: AppListComponent },\n  { path: 'apps/:appID', component: AppDetailComponent, canDeactivate: [WorkProtectionGuard]},\n  { path: 'app-categories', component: AppCategoryListComponent },\n  { path: 'app-categories/:appCategory', component: AppCategoryDetailComponent, canDeactivate: [WorkProtectionGuard]},\n  { path: 'auth-objects', component: AuthObjectListComponent },\n  { path: 'auth-objects/:authObjName', component: AuthObjectDetailComponent, canDeactivate: [WorkProtectionGuard]},\n  { path: 'permissions', component: PermissionListComponent },\n  { path: 'permissions/:permissionName', component: PermissionDetailComponent, canDeactivate: [WorkProtectionGuard]},\n  { path: 'profiles', component: ProfileListComponent },\n  { path: 'profiles/:profileName', component: ProfileDetailComponent, canDeactivate: [WorkProtectionGuard]},\n  { path: '**', redirectTo: 'logon', pathMatch: 'full'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserListComponent,\n    UserDetailComponent,\n    UserBasicComponent,\n    UserPersonalizationComponent,\n    UserRoleComponent,\n    UserEmailComponent,\n    UserAddressComponent,\n    AppListComponent,\n    AppDetailComponent,\n    AppTargetComponent,\n    AppCategoriesComponent,\n    AuthObjectListComponent,\n    AuthObjectDetailComponent,\n    AuthObjectFieldComponent,\n    AdminInfoComponent,\n    AuthorizationComponent,\n    AuthValueComponent,\n    AuthValueSinglesComponent,\n    AuthValueSeloptsComponent,\n    AppCategoryListComponent,\n    AppCategoryDetailComponent,\n    AppCategoryDetailAppComponent,\n    AppCategoryDetailRoleComponent,\n    ProfileListComponent,\n    ProfileDetailComponent,\n    PermissionListComponent,\n    PermissionDetailComponent,\n    PermissionDetailCategoryComponent,\n    PermissionDetailProfileComponent,\n    PermissionDetailUserComponent\n  ],\n  imports: [\n    BrowserModule,\n    LogonModule,\n    RouterModule.forRoot(appRoutes, { relativeLinkResolution: 'legacy' }),\n    FormsModule,\n    ReactiveFormsModule,\n    MessageModule,\n    JorAngularModule\n  ],\n  providers: [\n    {provide: RouteReuseStrategy, useClass: CustomReuseStrategy}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<table class=\"table table-bordered table-sm dk-table ml-3 mt-4\" [formGroup]=\"mainForm\">\n  <thead class=\"thead-light\">\n  <tr>\n    <th class=\"dk-name\">Category</th>\n    <th class=\"dk-description\">Name</th>\n    <th class=\"dk-icon\">ICON</th>\n    <th class=\"dk-number\">Order</th>\n  </tr>\n  </thead>\n\n  <tbody formArrayName=\"appCategories\" class=\"mb-4\">\n  <tr *ngFor=\"let appCategoryForm of appCategoryFormArray.controls; let i = index\" >\n    <td [formGroup]=\"appCategoryForm\">\n      <div class=\"input-group dk-name\">\n        <input class=\"form-control form-control-sm\" type=\"text\" formControlName=\"ID\" readonly>\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-sm btn-outline-secondary btn-light\" type=\"button\" id=\"searchPermission\"\n                  (click)=\"onSearchHelp(i, appCategoryForm)\">\n            <span class=\"fas fa-search\"></span>\n          </button>\n        </div>\n      </div>\n    </td>\n    <td [formGroup]=\"appCategoryForm\" class=\"dk-description\">\n      <input type=\"text\" formControlName=\"NAME\" readonly class=\"form-control form-control-sm\">\n    </td>\n    <td>\n      <span [ngClass]=\"appCategoryForm.get('ICON').value\"></span>\n    </td>\n    <td [formGroup]=\"appCategoryForm\" class=\"dk-number\">\n      <input type=\"number\" formControlName=\"ORDER\" readonly class=\"form-control form-control-sm\">\n    </td>\n  </tr>\n  </tbody>\n</table>\n\n<dk-app-search-help></dk-app-search-help>\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormGroup} from '@angular/forms';\nimport {SearchHelpComponent} from 'jor-angular';\n\n@Component({\n  selector: 'app-app-categories',\n  templateUrl: './app-categories.component.html',\n  styleUrls: ['./app-categories.component.css']\n})\nexport class AppCategoriesComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() mainForm: FormGroup;\n  appCategoryFormArray: FormArray;\n\n  constructor() { }\n\n  @ViewChild(SearchHelpComponent, { static: true })\n  private searchHelpComponent: SearchHelpComponent;\n\n  ngOnInit() {\n    this.appCategoryFormArray = this.mainForm.get('appCategories') as FormArray;\n  }\n\n  onSearchHelp(rowID: number, exportObject: AbstractControl): void {\n    const afterExportFn = function (context: any, rowIDx: number) {\n      return () => context.onChangeKey(rowIDx);\n    }(this, rowID).bind(this);\n\n    this.searchHelpComponent.openSearchHelpModalByEntity('category', 'r_app_category',\n      exportObject, true, null, null, afterExportFn);\n  }\n}\n","<nav class=\"navbar dk-fixed-top navbar-light bg-light\">\n  <div>\n    <span class=\"font-weight-bold mb-0 mx-1\">{{isNewMode? 'New App' : readonly? 'Display App' : 'Change App'}}</span>\n  </div>\n\n  <div class=\"flex-row-reverse\">\n    <button class=\"btn btn-sm btn-outline-info mr-2\" type=\"button\" title=\"Return to List\" id=\"toList\"\n            (click)=\"return2List()\" >\n      <span class=\"fas fa-list-ul\"> To List</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Edit/Display\" id=\"editDisplay\" (click)=\"switchEditDisplay()\">\n      <span *ngIf=\"readonly\" class=\"fas fa-edit\"> Edit</span>\n      <span *ngIf=\"!readonly\" class=\"fas fa-glasses\"> Display</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Save\" id=\"save\" (click)=\"save()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-save\"> Save</span>\n    </button>\n  </div>\n</nav>\n\n<div class=\"mt-2 mb-2\">\n  <dk-message></dk-message>\n</div>\n\n<div *ngIf=\"mainForm\" class=\"ml-2\">\n  <div class=\"mt-2 ml-1 row\">\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('APP_ID')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"!isNewMode\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('NAME')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"readonly\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n  </div>\n\n  <ul class=\"nav nav-tabs mt-1\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===1\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(1)\">Target</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===2\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(2)\">Authorization</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===3\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(3)\">Categories</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===4\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(4)\">Admin</a>\n    </li>\n  </ul>\n\n  <div class=\"mt-2\" [ngSwitch]=\"tabStrip\">\n    <app-app-target *ngSwitchCase=\"1\" [mainForm]=\"mainForm\" [relationMetas]=\"relationMetas\" [readonly]=\"readonly\"></app-app-target>\n    <app-authorization *ngSwitchCase=\"2\" [mainForm]=\"mainForm\" [ctrlName]=\"'appAuthObjects'\"  [readonly]=\"readonly\"></app-authorization>\n    <app-app-categories *ngSwitchCase=\"3\" [mainForm]=\"mainForm\" [readonly]=\"readonly\"></app-app-categories>\n    <app-admin-info *ngSwitchCase=\"4\" [mainForm]=\"mainForm\" [relationMetas]=\"relationMetas\" [adminRelation]=\"'app'\"></app-admin-info>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AttributeBase, AttributeControlService, Entity, EntityService, RelationMeta, Relationship, UiMapperService} from 'jor-angular';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {DialogService} from '../../dialog.service';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {switchMap} from 'rxjs/operators';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {existingAppValidator} from '../../async-validators';\nimport {Authorization} from '../../identity';\n\n@Component({\n  selector: 'app-app-detail',\n  templateUrl: './app-detail.component.html',\n  styleUrls: ['./app-detail.component.css']\n})\nexport class AppDetailComponent implements OnInit {\n  mainForm: FormGroup;\n  relationMetas: RelationMeta[];\n  attrCtrls: AttributeBase[];\n  readonly = true;\n  isNewMode = false;\n  action: string;\n  instanceGUID: string;\n  originalValue = {};\n  changedValue = {};\n  tabStrip = 1;\n\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private dialogService: DialogService,\n              private identityService: IdentityService,\n              private attributeControlService: AttributeControlService,\n              private entityService: EntityService,\n              private uiMapperService: UiMapperService,\n              private messageService: MessageService) {\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        this.action = params.get('action');\n        if (this.action === 'new') {\n          this.isNewMode = true;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('app'),\n            this._createNewEntity()\n          ]);\n        } else {\n          this.isNewMode = false;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('app'),\n            this.identityService.getAppDetail(params.get('appID'))\n          ]);\n        }\n      })\n    ).subscribe( data => {\n      this.relationMetas = data[0] as RelationMeta[];\n      this.attrCtrls = this.attributeControlService.toAttributeControl(\n        this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'app').ATTRIBUTES);\n      if ('ENTITY_ID' in data[1]) {\n        this.instanceGUID = data[1]['INSTANCE_GUID'];\n        this._generateMainForm(<Entity>data[1]);\n        if (this.isNewMode || this.action === 'change') {\n          this._switch2EditMode();\n        } else {\n          this._switch2DisplayMode();\n        }\n      } else {\n        const errorMessages = <Message[]>data[1];\n        errorMessages.forEach( msg => this.messageService.add(msg));\n      }\n    });\n  }\n\n  return2List(): void {\n    this.router.navigate(['apps']);\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n  switchTabStrip(tabStripID: number): void {\n    this.tabStrip = tabStripID;\n  }\n\n  switchEditDisplay(): void {\n    if (this.readonly ) {\n      this._switch2EditMode();\n    } else {\n      if (this.mainForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) {\n            this.mainForm.reset(this.originalValue);\n            this._switch2DisplayMode();\n          }\n        });\n      } else {\n        this._switch2DisplayMode();\n      }\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this._setCheckBoxState();\n\n    const appIDCtrl = this.mainForm.get('APP_ID') as FormControl;\n    appIDCtrl.clearAsyncValidators();\n\n    const appCategoryArray = this.mainForm.get('appCategories') as FormArray;\n    let lastIndex = appCategoryArray.length - 1;\n    while (lastIndex >= 0) {\n      const appCategoryGroup = appCategoryArray.at(lastIndex);\n      if (appCategoryGroup.invalid || !appCategoryGroup.value.ID) {\n        appCategoryArray.removeAt(lastIndex);\n      }\n      lastIndex--;\n    }\n\n    this.mainForm.markAsPristine();\n    // Replace the URL from change to display\n    window.history.replaceState({}, '', `/apps/${appIDCtrl.value};action=display`);\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n    this._setCheckBoxState();\n\n    const appIDCtrl = this.mainForm.get('APP_ID') as FormControl;\n    if (this.isNewMode) {\n      appIDCtrl.setAsyncValidators(\n        existingAppValidator(this.identityService, this.messageService));\n    }\n\n    // Replace the URL from to display\n    if (this.action === 'display') {this.action = 'change'; }\n    window.history.replaceState({}, '', `/apps/${appIDCtrl.value};action=` + this.action);\n  }\n\n  _createNewEntity(): Observable<Entity> {\n    const appDetail = new Entity();\n    appDetail.ENTITY_ID = 'app';\n    appDetail['app'] = [\n      { APP_ID: '', NAME: '', ROUTE_LINK: '', IS_EXTERNAL: '', CREATED_BY: '', CREATE_TIME: '', CHANGED_BY: '', CHANGE_TIME: '' }\n    ];\n    appDetail['relationships'] = [];\n    return of(appDetail);\n  }\n\n  _generateMainForm(data: Entity): void {\n    this.mainForm = this.fb.group({\n      APP_ID: [data['app'][0]['APP_ID'], [Validators.required]],\n      NAME: [data['app'][0]['NAME']],\n      target: this.fb.group({\n        ROUTE_LINK: [data['app'][0]['ROUTE_LINK']],\n        IS_EXTERNAL: [data['app'][0]['IS_EXTERNAL']]\n      }),\n      admin: this.fb.group({\n        CREATED_BY: [data['app'][0]['CREATED_BY']],\n        CREATE_TIME: [data['app'][0]['CREATE_TIME']],\n        CHANGED_BY: [data['app'][0]['CHANGED_BY']],\n        CHANGE_TIME: [data['app'][0]['CHANGE_TIME']]\n      })\n    });\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.mainForm.addControl('appCategories',\n      this.fb.array(parsedRelationship.appCategories.map( appCategory => this.fb.group( appCategory))));\n    this.mainForm.addControl('appAuthObjects',\n      this.fb.array(parsedRelationship.appAuthObjects.map( appAuthObject => this.fb.group( appAuthObject))));\n    this.originalValue = this.mainForm.getRawValue();\n  }\n\n  _parseRelationships( relationships: Relationship[] ): any {\n    const parsedRelationship = {\n      appCategories: [],\n      appAuthObjects: []\n    };\n    if (!relationships) { return parsedRelationship; }\n    relationships.forEach( relationship => {\n      switch (relationship.RELATIONSHIP_ID) {\n        case 'rs_app_category':\n          __parseAppCategory(relationship);\n          break;\n        case 'rs_app_auth':\n          parsedRelationship.appAuthObjects = this.identityService.parseProfileAuthObject(relationship);\n          break;\n        default:\n        // Do nothing.\n      }\n    });\n    return parsedRelationship;\n\n    function __parseAppCategory( relationship: Relationship): void {\n      relationship.values.forEach( value => {\n        parsedRelationship.appCategories.push({\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          ORDER: value['ORDER'],\n          app_category_INSTANCE_GUID: value['PARTNER_INSTANCES'][0]['INSTANCE_GUID'],\n          ID: value['PARTNER_INSTANCES'][0]['r_app_category'][0]['ID'],\n          NAME: value['PARTNER_INSTANCES'][0]['r_app_category'][0]['NAME'],\n          ICON: value['PARTNER_INSTANCES'][0]['r_app_category'][0]['ICON']\n        });\n      });\n    }\n\n    function __parseAppAuthObject( relationship: Relationship): void {\n      relationship.values.forEach( value => {\n        const authorization = value['AUTH_VALUE'] ?\n          <Authorization>JSON.parse(value['AUTH_VALUE']) : null;\n        const status = authorization ?\n          Object.values(authorization.AuthFieldValue).findIndex( authValue => !authValue ) !== -1 ?\n            'yellow' : 'green' : 'red';\n        parsedRelationship.appAuthObjects.push({\n          CHECKED: '',\n          COLLAPSED: false,\n          NODE_ID: value['RELATIONSHIP_INSTANCE_GUID'],\n          STATUS: status,\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          auth_object_INSTANCE_GUID: value['PARTNER_INSTANCES'][0]['INSTANCE_GUID'],\n          AUTH_VALUE: value['AUTH_VALUE'],\n          OBJ_NAME: value['PARTNER_INSTANCES'][0]['authObject'][0]['OBJ_NAME'],\n          DESC: value['PARTNER_INSTANCES'][0]['authObject'][0]['DESC'],\n          ROW_TYPE: 'OBJECT',\n          FIELD_NAME: '',\n          DATA_ELEMENT: '',\n        });\n\n        const authObjectFields = value['PARTNER_INSTANCES'][0]['relationships'][0];\n        authObjectFields.values.forEach( value2 => {\n          const authFieldName = value2['PARTNER_INSTANCES'][0]['authField'][0]['FIELD_NAME'];\n          parsedRelationship.appAuthObjects.push({\n            CHECKED: '',\n            COLLAPSED: false,\n            NODE_ID: value['RELATIONSHIP_INSTANCE_GUID'],\n            STATUS: authorization.AuthFieldValue[authFieldName] ?\n              authorization.AuthFieldValue[authFieldName].length > 0 ? 'green' : 'red' : 'red',\n            RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n            auth_object_INSTANCE_GUID: '',\n            AUTH_VALUE: authorization && authorization.AuthFieldValue[authFieldName]\n              && JSON.stringify(authorization.AuthFieldValue[authFieldName], null, ' '),\n            OBJ_NAME: value['PARTNER_INSTANCES'][0]['authObject'][0]['OBJ_NAME'],\n            DESC: '',\n            ROW_TYPE: 'FIELD',\n            FIELD_NAME: authFieldName,\n            DATA_ELEMENT: value2['PARTNER_INSTANCES'][0]['authField'][0]['DATA_ELEMENT'],\n          });\n        });\n      });\n    }\n  }\n\n  _resetValue(data: Entity): void {\n    this.originalValue = {\n      APP_ID: data['app'][0]['APP_ID'],\n      NAME: data['app'][0]['NAME'],\n      target: {\n        ROUTE_LINK: data['app'][0]['ROUTE_LINK'],\n        IS_EXTERNAL: data['app'][0]['IS_EXTERNAL']\n      },\n      admin: {\n        CREATED_BY: data['app'][0]['CREATED_BY'],\n        CREATE_TIME: data['app'][0]['CREATE_TIME'],\n        CHANGED_BY: data['app'][0]['CHANGED_BY'],\n        CHANGE_TIME: data['app'][0]['CHANGE_TIME']\n      }\n    };\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.originalValue['appCategories'] = parsedRelationship.appCategories;\n    this.originalValue['appAuthObjects'] = parsedRelationship.appAuthObjects;\n    this.mainForm.reset(this.originalValue);\n  }\n\n  _setCheckBoxState() {\n    if (this.readonly) {\n      this.mainForm.get('target.IS_EXTERNAL').disable();\n    } else {\n      this.mainForm.get('target.IS_EXTERNAL').enable();\n    }\n  }\n\n  save() {\n    this.messageService.clearMessages();\n    if (this._composeChanges()) {\n      this.identityService.save(<Entity>this.changedValue).subscribe( data => {\n        this.changedValue = {};\n        if ('INSTANCE_GUID' in data) {\n          const appID = data['app'][0]['APP_ID'];\n          this.instanceGUID = data['INSTANCE_GUID'];\n          this.isNewMode = false;\n          this.identityService.getAppDetail(appID).subscribe(instance => {\n            if ('ENTITY_ID' in instance) {\n              this._switch2DisplayMode();\n              this._resetValue(<Entity>instance);\n            } else {\n              const errorMessages = <Message[]>instance;\n              errorMessages.forEach( msg => this.messageService.add(msg));\n            }\n          });\n          this.messageService.reportMessage('APP', 'SAVED', 'S', appID);\n        } else {\n          const errorMessages = <Message[]>data;\n          errorMessages.forEach( msg => this.messageService.add(msg));\n        }\n      });\n    }\n  }\n\n  _composeChanges() {\n    if (this.mainForm.invalid) {\n      this.messageService.reportMessage('PERMISSION', 'INVALID', 'E');\n      return false;\n    }\n\n    if (this.mainForm.dirty === false) {\n      this.messageService.reportMessage('GENERAL', 'NO_CHANGE', 'W');\n      return false;\n    }\n\n    this.changedValue['ENTITY_ID'] = 'app';\n    this.changedValue['INSTANCE_GUID'] = this.instanceGUID;\n\n    if (this.isNewMode) {\n      this.changedValue['app'] = {\n        action: 'add', APP_ID: this.mainForm.get('APP_ID').value,\n        CREATED_BY: this.identityService.Session.USER_ID, CREATE_TIME: this.identityService.CurrentTime,\n        CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n    } else {\n      this.changedValue['app'] = {\n        action: 'update', CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n    }\n\n    if (this.mainForm.get('NAME').dirty) {\n      this.changedValue['app']['NAME'] = this.mainForm.get('NAME').value;\n    }\n    if (this.mainForm.get('target.ROUTE_LINK').dirty) {\n      this.changedValue['app']['ROUTE_LINK'] = this.mainForm.get('target.ROUTE_LINK').value;\n    }\n    if (this.mainForm.get('target.IS_EXTERNAL').dirty) {\n      this.changedValue['app']['IS_EXTERNAL'] = this.mainForm.get('target.IS_EXTERNAL').value;\n    }\n\n    const appAuthObjFormArray = this.mainForm.get('appAuthObjects') as FormArray;\n    const relationship = this.identityService.composeAuthChanges(appAuthObjFormArray,\n      this.originalValue['appAuthObjects'], 'rs_app_auth');\n    if (relationship) { this.changedValue['relationships'] = [relationship]; }\n\n    return true;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (this.mainForm && this.mainForm.dirty)) {\n      return this.dialogService.confirm('Discard changes?');\n    } else {\n      return true;\n    }\n  }\n\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormGroup} from '@angular/forms';\nimport {AttributeBase, AttributeControlService, RelationMeta} from 'jor-angular';\n\n@Component({\n  selector: 'app-app-target',\n  templateUrl: './app-target.component.html',\n  styleUrls: ['./app-target.component.css']\n})\nexport class AppTargetComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() mainForm: FormGroup;\n  @Input() relationMetas: RelationMeta[];\n  private attrCtrls: AttributeBase[];\n  appTargetForm: FormGroup;\n\n  constructor(private attributeControlService: AttributeControlService) { }\n\n  ngOnInit() {\n    this.appTargetForm = this.mainForm.get('target') as FormGroup;\n    this.attrCtrls = this.attributeControlService.toAttributeControl(\n      this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'app').ATTRIBUTES);\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n}\n","<form class=\"mt-4 ml-2 row\">\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4 dk-form-label\"\n                          [attributeControl]=\"getAttrCtrlFromID('ROUTE_LINK')\"\n                          [formGroup]=\"appTargetForm\"\n                          [isSmallSize] = \"true\"\n                          [readonly]=\"readonly\">\n  </dk-app-attribute-form2>\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4 dk-form-label\"\n                          [attributeControl]=\"getAttrCtrlFromID('IS_EXTERNAL')\"\n                          [formGroup]=\"appTargetForm\"\n                          [isSmallSize] = \"true\"\n                          [readonly]=\"readonly\">\n  </dk-app-attribute-form2>\n</form>\n","<div class=\"card mb-3 pt-3\">\n  <div class=\"mt-2 pl-4 row\">\n    <div class=\"col-6 form-group row\">\n      <label for=\"app_id\" class=\"col-sm-3 col-form-label\">App ID:</label>\n      <input id=\"app_id\" name=\"app_id\" [(ngModel)]=\"appID\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\" autofocus>\n    </div>\n    <div class=\"col-6 form-group row\">\n      <label for=\"app_name\" class=\"col-sm-3 col-form-label\">App Name:</label>\n      <input id=\"app_name\" name=\"app_name\" [(ngModel)]=\"appName\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\">\n    </div>\n  </div>\n\n  <div class=\"mb-4\">\n    <button type=\"button\" id=\"search\" class=\"btn btn-primary btn-sm float-right mr-4\" (click)=\"search()\">Search</button>\n  </div>\n</div>\n\n<div class=\"mt-2 mb-4 mx-4\">\n  <dk-message></dk-message>\n  <div class=\"btn-toolbar justify-content-end my-2\" role=\"toolbar\">\n    <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"new()\">\n      <span class=\"fas fa-plus\"></span> New</button>\n  </div>\n  <table class=\"table table-bordered table-sm\">\n    <thead class=\"thead-light\">\n    <tr>\n      <th scope=\"col\">ID</th>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Link</th>\n      <th scope=\"col\">External?</th>\n<!--      <th scope=\"col\">Created By</th>-->\n<!--      <th scope=\"col\">Created At</th>-->\n      <th scope=\"col\">Changed By</th>\n      <th scope=\"col\">Changed At</th>\n      <th scope=\"col\">Action</th>\n    </tr>\n    </thead>\n\n    <tbody>\n    <tr *ngFor=\"let app of apps\">\n      <td><a [routerLink]=\"['/apps', app.APP_ID, {action: 'display'}]\">{{app.APP_ID}}</a></td>\n      <td>{{app.NAME}}</td>\n      <td>{{app.ROUTE_LINK}}</td>\n      <td> <input type=\"checkbox\" [(ngModel)]=\"app.IS_EXTERNAL\" disabled></td>\n<!--      <td>{{app.CREATED_BY}}</td>-->\n<!--      <td>{{app.CREATE_TIME}}</td>-->\n      <td>{{app.CHANGED_BY}}</td>\n      <td>{{app.CHANGE_TIME}}</td>\n      <td class=\"dk-actions\">\n        <button title=\"Display\" id=\"display\" class=\"btn btn-sm\" type=\"button\" (click)=\"display(app.APP_ID)\">\n          <span class=\"fas fa-search\"></span>\n        </button>\n        <button title=\"Change\" id=\"change\" class=\"btn btn-sm\" type=\"button\" (click)=\"change(app.APP_ID)\">\n          <span class=\"fas fa-pen\"></span>\n        </button>\n        <button title=\"Delete\" id=\"delete\" class=\"btn btn-sm\" type=\"button\" (click)=\"delete(app.APP_ID)\">\n          <span class=\"far fa-trash-alt\"></span>\n        </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"modal\" [class.show]=\"showDeletionConfirmation\"\n       [ngStyle]=\"{'display': displayDeletionConfirmation}\" id=\"deletionConfirmation\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"confirmDeletion\">Confirm Deletion</h5>\n          <button type=\"button\" class=\"close\" (click)=\"cancelDeletion()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <p>Are you sure to delete the App '{{toBeDeletedInstance}}'?</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" id=\"cancel\" class=\"btn btn-sm btn-secondary\" (click)=\"cancelDeletion()\">Cancel</button>\n          <button type=\"button\" id=\"confirm\" class=\"btn btn-sm btn-primary\" (click)=\"confirmDeletion()\">Confirm</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService, messageType} from 'ui-message-angular';\nimport {Router} from '@angular/router';\nimport {AppList} from '../../identity';\n\n@Component({\n  selector: 'app-app-list',\n  templateUrl: './app-list.component.html',\n  styleUrls: ['./app-list.component.css']\n})\nexport class AppListComponent implements OnInit {\n  appID: string;\n  appName: string;\n  apps: AppList[];\n  showDeletionConfirmation = false;\n  toBeDeletedInstance: string;\n\n  get displayDeletionConfirmation() {return this.showDeletionConfirmation ? 'block' : 'none'; }\n\n  constructor(private identityService: IdentityService,\n              private messageService: MessageService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  search() {\n    this.messageService.clearMessages();\n    this.apps = [];\n    this.appID = this.appID ? this.appID.trim() : '';\n    this.appName = this.appName ? this.appName.trim() : '';\n    this.identityService.searchApps(this.appID, this.appName).subscribe(\n      data => {\n        if (!data[0]) {\n          this.messageService.reportMessage('GENERAL', 'EMPTY_LIST', messageType.Warning);\n        } else if (data[0]['msgCat']) {\n          const messages = <Message[]>data;\n          messages.forEach( msg => this.messageService.add(msg));\n        } else {\n          this.apps = <AppList[]>data;\n        }\n      }\n    );\n  }\n\n  enterSearch($event): void {\n    if ($event.keyCode === 13 ) {\n      this.search();\n    }\n  }\n\n  new(): void {\n    this.router.navigate(['apps', '/', {action: 'new'}]);\n  }\n\n  display(appID: string): void {\n    this.router.navigate(['apps', appID, {action: 'display'}]);\n  }\n\n  change(appID: string): void {\n    this.router.navigate(['apps', appID, {action: 'change'}]);\n  }\n\n  delete(appID: string): void {\n    this.toBeDeletedInstance = appID;\n    this.showDeletionConfirmation = true;\n  }\n\n  cancelDeletion(): void {\n    this.showDeletionConfirmation = false;\n  }\n\n  confirmDeletion(): void {\n    const toBeDeletedInstanceGUID = this.apps.find(\n      ele => ele.APP_ID === this.toBeDeletedInstance).INSTANCE_GUID;\n    this.identityService.delete(toBeDeletedInstanceGUID).subscribe( errorMsg => {\n      this.showDeletionConfirmation = false;\n      if (errorMsg) {\n        const messages = <Message[]>errorMsg;\n        messages.forEach( msg => this.messageService.add(msg));\n      } else {\n        this.search();\n      }\n    });\n  }\n}\n","<table class=\"table table-bordered table-sm dk-table ml-3 mt-4\" [formGroup]=\"mainForm\">\n  <thead class=\"thead-light\">\n  <tr>\n    <th class=\"dk-name\">App ID</th>\n    <th class=\"dk-description\">App Name</th>\n    <th class=\"dk-number\">Order</th>\n    <th class=\"dk-actions\">Action</th>\n  </tr>\n  </thead>\n\n  <tbody formArrayName=\"apps\" class=\"mb-4\">\n  <tr *ngFor=\"let appForm of appFormArray.controls; let i = index\">\n    <td [formGroup]=\"appForm\">\n      <div class=\"input-group\">\n        <input class=\"form-control form-control-sm\" type=\"text\" formControlName=\"APP_ID\"\n               [readonly]=\"readonly || isExisting(appForm) && appForm.valid\" (change)=\"onChangeKey(i)\">\n        <div class=\"invalid-tooltip\">\n          {{appForm.get('APP_ID').errors?.message}}\n        </div>\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-sm btn-outline-secondary btn-light\" type=\"button\" id=\"searchApp\"\n                  (click)=\"onSearchHelp(i, appForm)\">\n            <span class=\"fas fa-search\"></span>\n          </button>\n        </div>\n      </div>\n    </td>\n    <td [formGroup]=\"appForm\">\n      <input type=\"text\" formControlName=\"NAME\" readonly class=\"form-control form-control-sm\">\n    </td>\n    <td [formGroup]=\"appForm\" >\n      <input type=\"number\" formControlName=\"ORDER\" [readonly]=\"readonly\" class=\"form-control form-control-sm\">\n    </td>\n    <td>\n      <button class=\"btn btn-sm\" type=\"button\" id=\"delete\" [disabled]=\"readonly\" (click)=\"delete(i)\" title=\"Delete\">\n        <span class=\"far fa-trash-alt\"></span>\n      </button>\n    </td>\n  </tr>\n  </tbody>\n</table>\n\n<dk-app-search-help></dk-app-search-help>\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {IdentityService} from '../../../identity.service';\nimport {SearchHelpComponent} from 'jor-angular';\n\n@Component({\n  selector: 'app-app-category-detail-app',\n  templateUrl: './app-category-detail-app.component.html',\n  styleUrls: ['./app-category-detail-app.component.css']\n})\nexport class AppCategoryDetailAppComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() mainForm: FormGroup;\n  appFormArray: FormArray;\n\n  constructor(private fb: FormBuilder,\n              private identityService: IdentityService) { }\n\n  @ViewChild(SearchHelpComponent, { static: true })\n  private searchHelpComponent: SearchHelpComponent;\n\n  ngOnInit() {\n    this.appFormArray = this.mainForm.get('apps') as FormArray;\n    // Recheck each role since every time the template is initialized, Angular clears the error status.\n    if (!this.readonly) {\n      this.appFormArray.controls.forEach( (ctrl, index) => {\n        this.onChangeKey(index);\n      });\n    }\n  }\n\n  delete(index: number): void {\n    if (index !== this.appFormArray.length - 1) {\n      this.appFormArray.removeAt(index);\n      this.appFormArray.markAsDirty();\n    }\n  }\n\n  onChangeKey(index: number): void {\n    const currentFormGroup = this.appFormArray.at(index);\n    if (this.isExisting(currentFormGroup)) {\n      currentFormGroup.get('APP_ID').setErrors({message: 'Duplicate Apps'});\n      return;\n    }\n\n    if (index === this.appFormArray.length - 1 && currentFormGroup.value.APP_ID.trim() !== '') {\n      // Only work if the last line is not new and empty\n      this.appFormArray.push(\n        this.fb.group({\n          APP_ID: [''],\n          NAME: [''],\n          ORDER: [0],\n          portal_app_INSTANCE_GUID: [''],\n          RELATIONSHIP_INSTANCE_GUID: ['']\n        })\n      );\n    }\n\n    if (currentFormGroup.value.APP_ID) {\n      this.identityService.getAppByID(currentFormGroup.value.APP_ID).subscribe(data => {\n        if (data[0] && data[0]['msgCat']) {\n          currentFormGroup.get('APP_ID').setErrors({message: data[0]['msgShortText']});\n        } else {\n          currentFormGroup.get('NAME').setValue(data['app'][0]['NAME']);\n          currentFormGroup.get('portal_app_INSTANCE_GUID').setValue(data['INSTANCE_GUID']);\n        }\n      });\n    }\n  }\n\n  isExisting(key: AbstractControl): boolean {\n    const existIndex = this.appFormArray.controls.findIndex(\n      ctrl => ctrl.value.APP_ID === key.value.APP_ID\n        && ctrl.get('APP_ID').pristine && ctrl.value.APP_ID !== '');\n    return existIndex !== -1 ;\n  }\n\n  onSearchHelp(rowID: number, exportObject: AbstractControl): void {\n    const afterExportFn = function (context: any, rowIDx: number) {\n      return () => context.onChangeKey(rowIDx);\n    }(this, rowID).bind(this);\n\n    this.searchHelpComponent.openSearchHelpModalByEntity('app', 'app', exportObject,\n      this.readonly || this.isExisting(exportObject) && exportObject.valid,\n      'APP_ID', 'APP_ID', afterExportFn);\n  }\n}\n","<table class=\"table table-bordered table-sm dk-table ml-3 mt-4\" [formGroup]=\"mainForm\">\n  <thead class=\"thead-light\">\n  <tr>\n    <th class=\"dk-name\">Role</th>\n    <th class=\"dk-description\">Description</th>\n    <th class=\"dk-number\">Order</th>\n  </tr>\n  </thead>\n\n  <tbody formArrayName=\"apps\" class=\"mb-4\">\n  <tr *ngFor=\"let roleForm of roleFormArray.controls; let i = index\">\n    <td [formGroup]=\"roleForm\">\n      <div class=\"input-group\">\n        <input class=\"form-control form-control-sm\" type=\"text\" formControlName=\"NAME\" readonly>\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-sm btn-outline-secondary btn-light\" type=\"button\" id=\"searchRole\"\n                  (click)=\"onSearchHelp(i, roleForm)\">\n            <span class=\"fas fa-search\"></span>\n          </button>\n        </div>\n      </div>\n    </td>\n    <td [formGroup]=\"roleForm\" class=\"dk-description\">\n      <input type=\"text\" formControlName=\"DESCRIPTION\" readonly class=\"form-control form-control-sm\">\n    </td>\n    <td [formGroup]=\"roleForm\" >\n      <input type=\"number\" formControlName=\"ORDER\" readonly class=\"form-control form-control-sm\">\n    </td>\n  </tr>\n  </tbody>\n</table>\n\n<dk-app-search-help></dk-app-search-help>\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {IdentityService} from '../../../identity.service';\nimport {SearchHelpComponent} from 'jor-angular';\n\n@Component({\n  selector: 'app-app-category-detail-role',\n  templateUrl: './app-category-detail-role.component.html',\n  styleUrls: ['./app-category-detail-role.component.css']\n})\nexport class AppCategoryDetailRoleComponent implements OnInit {\n  @Input() mainForm: FormGroup;\n  roleFormArray: FormArray;\n\n  constructor(private fb: FormBuilder,\n              private identityService: IdentityService) { }\n\n  @ViewChild(SearchHelpComponent, { static: true })\n  private searchHelpComponent: SearchHelpComponent;\n\n  ngOnInit() {\n    this.roleFormArray = this.mainForm.get('roles') as FormArray;\n  }\n\n  onSearchHelp(rowID: number, exportObject: AbstractControl): void {\n    this.searchHelpComponent.openSearchHelpModalBySearchHelp('ROLE', 'NAME',\n      'NAME', exportObject, true, null);\n  }\n}\n","<nav class=\"navbar dk-fixed-top navbar-light bg-light\">\n  <div>\n    <span class=\"font-weight-bold mb-0 mx-1\">{{isNewMode? 'New App Category' :\n      readonly? 'Display App Category' : 'Change App Category'}}</span>\n  </div>\n\n  <div class=\"flex-row-reverse\">\n    <button class=\"btn btn-sm btn-outline-info mr-2\" type=\"button\" title=\"Return to List\" id=\"toList\"\n            (click)=\"return2List()\" >\n      <span class=\"fas fa-list-ul\"> To List</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Edit/Display\" id=\"editDisplay\" (click)=\"switchEditDisplay()\">\n      <span *ngIf=\"readonly\" class=\"fas fa-edit\"> Edit</span>\n      <span *ngIf=\"!readonly\" class=\"fas fa-glasses\"> Display</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Save\" id=\"save\" (click)=\"save()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-save\"> Save</span>\n    </button>\n  </div>\n</nav>\n\n<div class=\"mt-2 mb-2\">\n  <dk-message></dk-message>\n</div>\n\n<div *ngIf=\"mainForm\" class=\"mx-2\">\n  <div class=\"mt-2 ml-1 row\">\n    <dk-app-attribute-form2 class=\"col-md-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('ID')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"!isNewMode\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n    <dk-app-attribute-form2 class=\"col-md-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('NAME')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"readonly\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n    <dk-app-attribute-form2 class=\"col-md-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('ICON')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"readonly\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n  </div>\n\n  <ul class=\"nav nav-tabs mt-1\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===1\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(1)\">Apps</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===2\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(2)\">Roles</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===3\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(3)\">Admin</a>\n    </li>\n  </ul>\n\n  <div class=\"mt-2\" [ngSwitch]=\"tabStrip\">\n    <app-app-category-detail-app *ngSwitchCase=\"1\" [mainForm]=\"mainForm\"  [readonly]=\"readonly\"></app-app-category-detail-app>\n    <app-app-category-detail-role *ngSwitchCase=\"2\" [mainForm]=\"mainForm\" ></app-app-category-detail-role>\n    <app-admin-info *ngSwitchCase=\"3\" [mainForm]=\"mainForm\" [relationMetas]=\"relationMetas\" [adminRelation]=\"'category'\"></app-admin-info>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AttributeBase, AttributeControlService, Entity, EntityService, RelationMeta, Relationship, UiMapperService} from 'jor-angular';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {DialogService} from '../../dialog.service';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {switchMap} from 'rxjs/operators';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {existingAppCategoryValidator} from '../../async-validators';\n\n@Component({\n  selector: 'app-app-category-detail',\n  templateUrl: './app-category-detail.component.html',\n  styleUrls: ['./app-category-detail.component.css']\n})\nexport class AppCategoryDetailComponent implements OnInit {\n  mainForm: FormGroup;\n  relationMetas: RelationMeta[];\n  attrCtrls: AttributeBase[];\n  readonly = true;\n  isNewMode = false;\n  action: string;\n  instanceGUID: string;\n  originalValue = {};\n  changedValue = {};\n  tabStrip = 1;\n\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private dialogService: DialogService,\n              private identityService: IdentityService,\n              private attributeControlService: AttributeControlService,\n              private entityService: EntityService,\n              private uiMapperService: UiMapperService,\n              private messageService: MessageService) {\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        this.action = params.get('action');\n        if (this.action === 'new') {\n          this.isNewMode = true;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('category'),\n            this._createNewEntity()\n          ]);\n        } else {\n          this.isNewMode = false;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('category'),\n            this.identityService.getAppCategoryDetail(params.get('appCategory'))\n          ]);\n        }\n      })\n    ).subscribe( data => {\n      this.relationMetas = data[0] as RelationMeta[];\n      this.attrCtrls = this.attributeControlService.toAttributeControl(\n        this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'r_app_category').ATTRIBUTES);\n      if ('ENTITY_ID' in data[1]) {\n        this.instanceGUID = data[1]['INSTANCE_GUID'];\n        this._generateMainForm(<Entity>data[1]);\n        if (this.isNewMode || this.action === 'change') {\n          this._switch2EditMode();\n        } else {\n          this._switch2DisplayMode();\n        }\n      } else {\n        const errorMessages = <Message[]>data[1];\n        errorMessages.forEach( msg => this.messageService.add(msg));\n      }\n    });\n  }\n\n  return2List(): void {\n    this.router.navigate(['app-categories']);\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n  switchTabStrip(tabStripID: number): void {\n    this.tabStrip = tabStripID;\n  }\n\n  switchEditDisplay(): void {\n    if (this.readonly ) {\n      this._switch2EditMode();\n    } else {\n      if (this.mainForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) {\n            this.mainForm.reset(this.originalValue);\n            this._switch2DisplayMode();\n          }\n        });\n      } else {\n        this._switch2DisplayMode();\n      }\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n\n    const appCategoryIDCtrl = this.mainForm.get('ID') as FormControl;\n    appCategoryIDCtrl.clearAsyncValidators();\n\n    const appArray = this.mainForm.get('apps') as FormArray;\n    let lastIndex = appArray.length - 1;\n    while (lastIndex >= 0) {\n      const appGroup = appArray.at(lastIndex);\n      if (appGroup.invalid || !appGroup.value.APP_ID) {\n        appArray.removeAt(lastIndex);\n      }\n      lastIndex--;\n    }\n\n    this.mainForm.markAsPristine();\n    // Replace the URL from change to display\n    window.history.replaceState({}, '', `/app-categories/${appCategoryIDCtrl.value};action=display`);\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n\n    const appCategoryIDCtrl = this.mainForm.get('ID') as FormControl;\n    if (this.isNewMode) {\n      appCategoryIDCtrl.setAsyncValidators(\n        existingAppCategoryValidator(this.identityService, this.messageService));\n    }\n\n    const appArray = this.mainForm.get('apps') as FormArray;\n    appArray.push( this.fb.group({\n      APP_ID: [''],\n      NAME: [''],\n      ORDER: [0],\n      portal_app_INSTANCE_GUID: [''],\n      RELATIONSHIP_INSTANCE_GUID: ['']\n    }));\n\n    // Replace the URL from to display\n    if (this.action === 'display') {this.action = 'change'; }\n    window.history.replaceState({}, '', `/app-categories/${appCategoryIDCtrl.value};action=` + this.action);\n  }\n\n  _createNewEntity(): Observable<Entity> {\n    const appCategoryDetail = new Entity();\n    appCategoryDetail.ENTITY_ID = 'category';\n    appCategoryDetail['category'] = [\n      { NAME: '', TYPE: 'APP', CREATED_BY: '', CREATE_TIME: '', CHANGED_BY: '', CHANGE_TIME: '' }\n    ];\n    appCategoryDetail['r_app_category'] = [\n      { ID: '', NAME: '', ICON: '' }\n    ];\n    appCategoryDetail['relationships'] = [];\n    return of(appCategoryDetail);\n  }\n\n  _generateMainForm(data: Entity): void {\n    this.mainForm = this.fb.group({\n      ID: [data['r_app_category'][0]['ID'], [Validators.required]],\n      NAME: [data['r_app_category'][0]['NAME']],\n      ICON: [data['r_app_category'][0]['ICON']],\n      admin: this.fb.group({\n        CREATED_BY: [data['category'][0]['CREATED_BY']],\n        CREATE_TIME: [data['category'][0]['CREATE_TIME']],\n        CHANGED_BY: [data['category'][0]['CHANGED_BY']],\n        CHANGE_TIME: [data['category'][0]['CHANGE_TIME']]\n      })\n    });\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.mainForm.addControl('apps',\n      this.fb.array(parsedRelationship.apps.map( app => this.fb.group( app ))));\n    this.mainForm.addControl('roles',\n      this.fb.array(parsedRelationship.roles.map( role => this.fb.group( role ))));\n    this.originalValue = this.mainForm.getRawValue();\n  }\n\n  _parseRelationships( relationships: Relationship[] ): any {\n    const parsedRelationship = {\n      apps : [],\n      roles: []\n    };\n    if (!relationships) { return parsedRelationship; }\n    relationships.forEach( relationship => {\n      switch (relationship.RELATIONSHIP_ID) {\n        case 'rs_app_category':\n          __parseApp(relationship);\n          break;\n        case 'rs_role_category_profile':\n          __parseSystemRole(relationship);\n          break;\n        default:\n        // Do nothing.\n      }\n    });\n    return parsedRelationship;\n\n    function __parseApp( relationship: Relationship): void {\n      relationship.values.forEach( value => {\n        parsedRelationship.apps.push({\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          portal_app_INSTANCE_GUID: value['PARTNER_INSTANCES'][0]['INSTANCE_GUID'],\n          APP_ID: value['PARTNER_INSTANCES'][0]['app'][0]['APP_ID'],\n          NAME: value['PARTNER_INSTANCES'][0]['app'][0]['NAME'],\n          ORDER: value['ORDER']\n        });\n      });\n    }\n\n    function __parseSystemRole( relationship: Relationship): void {\n      relationship.values.forEach( value => {\n        const permission = value['PARTNER_INSTANCES'].find( partner => partner.ENTITY_ID === 'permission');\n        parsedRelationship.roles.push({\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          system_role_INSTANCE_GUID: permission.INSTANCE_GUID,\n          NAME: permission.r_role[0].NAME,\n          DESCRIPTION: permission.r_role[0].DESCRIPTION,\n          ORDER: value['ORDER']\n        });\n      });\n    }\n  }\n\n  _resetValue(data: Entity): void {\n    this.originalValue = {\n      ID: data['r_app_category'][0]['ID'],\n      NAME: data['r_app_category'][0]['NAME'],\n      ICON: data['r_app_category'][0]['ICON'],\n      admin: {\n        CREATED_BY: data['category'][0]['CREATED_BY'],\n        CREATE_TIME: data['category'][0]['CREATE_TIME'],\n        CHANGED_BY: data['category'][0]['CHANGED_BY'],\n        CHANGE_TIME: data['category'][0]['CHANGE_TIME']\n      }\n    };\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.originalValue['apps'] = parsedRelationship.apps;\n    this.originalValue['roles'] = parsedRelationship.roles;\n    this.mainForm.reset(this.originalValue);\n  }\n\n  save() {\n    this.messageService.clearMessages();\n    if (this._composeChanges()) {\n      this.identityService.save(<Entity>this.changedValue).subscribe( data => {\n        this.changedValue = {};\n        if ('INSTANCE_GUID' in data) {\n          const appCategoryID = data['r_app_category'][0]['ID'];\n          this.instanceGUID = data['INSTANCE_GUID'];\n          this.isNewMode = false;\n          this.identityService.getAppCategoryDetail(appCategoryID).subscribe(instance => {\n            if ('ENTITY_ID' in instance) {\n              this._switch2DisplayMode();\n              this._resetValue(<Entity>instance);\n            } else {\n              const errorMessages = <Message[]>instance;\n              errorMessages.forEach( msg => this.messageService.add(msg));\n            }\n          });\n          this.messageService.reportMessage('APP_CATEGORY', 'SAVED', 'S', appCategoryID);\n        } else {\n          const errorMessages = <Message[]>data;\n          errorMessages.forEach( msg => this.messageService.add(msg));\n        }\n      });\n    }\n  }\n\n  _composeChanges() {\n    if (this.mainForm.invalid) {\n      this.messageService.reportMessage('APP_CATEGORY', 'INVALID', 'E');\n      return false;\n    }\n\n    if (this.mainForm.dirty === false) {\n      this.messageService.reportMessage('GENERAL', 'NO_CHANGE', 'W');\n      return false;\n    }\n\n    this.changedValue['ENTITY_ID'] = 'category';\n    this.changedValue['INSTANCE_GUID'] = this.instanceGUID;\n\n    if (this.isNewMode) {\n      this.changedValue['category'] = {\n        action: 'add', TYPE: 'APP',\n        CREATED_BY: this.identityService.Session.USER_ID, CREATE_TIME: this.identityService.CurrentTime,\n        CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime\n      };\n      this.changedValue['r_app_category'] = { action: 'add', ID: this.mainForm.get('ID').value };\n    } else {\n      this.changedValue['category'] = {\n        action: 'update', CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n      this.changedValue['r_app_category'] = { action: 'update', ID: this.mainForm.get('ID').value};\n    }\n\n    if (this.mainForm.get('NAME').dirty) {\n      this.changedValue['category']['NAME'] = this.mainForm.get('NAME').value;\n      this.changedValue['r_app_category']['NAME'] = this.mainForm.get('NAME').value;\n    }\n\n    if (this.mainForm.get('ICON').dirty) {\n      this.changedValue['r_app_category']['ICON'] = this.mainForm.get('ICON').value;\n    }\n\n    const appFormArray = this.mainForm.get('apps') as FormArray;\n    const relationship = this.uiMapperService.composeChangedRelationship(\n      'rs_app_category',\n      [{ENTITY_ID: 'app', ROLE_ID: 'portal_app'}],\n      appFormArray,\n      this.originalValue['apps'],\n      ['APP_ID', 'NAME']);\n\n    if (relationship) {this.changedValue['relationships'] = [relationship]; }\n\n    return true;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (this.mainForm && this.mainForm.dirty)) {\n      return this.dialogService.confirm('Discard changes?');\n    } else {\n      return true;\n    }\n  }\n}\n","<div class=\"card mb-3 pt-3\">\n  <div class=\"mt-2 pl-4 row\">\n    <div class=\"col-6 form-group row\">\n      <label for=\"app_category_id\" class=\"col-sm-3 col-form-label\">Category ID:</label>\n      <input id=\"app_category_id\" name=\"app_category_id\" [(ngModel)]=\"appCategoryID\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\" autofocus>\n    </div>\n    <div class=\"col-6 form-group row\">\n      <label for=\"app_category_name\" class=\"col-sm-3 col-form-label\">Category Name:</label>\n      <input id=\"app_category_name\" name=\"app_category_name\" [(ngModel)]=\"appCategoryName\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\">\n    </div>\n  </div>\n\n  <div class=\"mb-4\">\n    <button type=\"button\" id=\"search\" class=\"btn btn-primary btn-sm float-right mr-4\" (click)=\"search()\">Search</button>\n  </div>\n</div>\n\n<div class=\"mt-2 mb-4 mx-4\">\n  <dk-message></dk-message>\n  <div class=\"btn-toolbar justify-content-end my-2\" role=\"toolbar\">\n    <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"new()\">\n      <span class=\"fas fa-plus\"></span> New</button>\n  </div>\n  <table class=\"table table-bordered table-sm\">\n    <thead class=\"thead-light\">\n    <tr>\n      <th scope=\"col\">ID</th>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Icon</th>\n      <th scope=\"col\">Changed By</th>\n      <th scope=\"col\">Changed At</th>\n      <th scope=\"col\">Action</th>\n    </tr>\n    </thead>\n\n    <tbody>\n    <tr *ngFor=\"let appCategory of appCategories\">\n      <td><a [routerLink]=\"['/app-categories', appCategory.ID, {action: 'display'}]\">{{appCategory.ID}}</a></td>\n      <td>{{appCategory.NAME}}</td>\n      <td><span [ngClass]=\"appCategory.ICON\"></span></td>\n      <td>{{appCategory.CHANGED_BY}}</td>\n      <td>{{appCategory.CHANGE_TIME}}</td>\n      <td class=\"dk-actions\">\n        <button title=\"Display\" id=\"display\" class=\"btn btn-sm\" type=\"button\" (click)=\"display(appCategory.ID)\">\n          <span class=\"fas fa-search\"></span>\n        </button>\n        <button title=\"Change\" id=\"change\" class=\"btn btn-sm\" type=\"button\" (click)=\"change(appCategory.ID)\">\n          <span class=\"fas fa-pen\"></span>\n        </button>\n        <button title=\"Delete\" id=\"delete\" class=\"btn btn-sm\" type=\"button\" (click)=\"delete(appCategory.ID)\">\n          <span class=\"far fa-trash-alt\"></span>\n        </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"modal fade\" [class.show]=\"showDeletionConfirmation\"\n       [ngStyle]=\"{'display': displayDeletionConfirmation}\" id=\"deletionConfirmation\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"confirmDeletion\">Confirm Deletion</h5>\n          <button type=\"button\" class=\"close\" (click)=\"cancelDeletion()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <p>Are you sure to delete the app category '{{toBeDeletedInstance}}'?</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" id=\"cancel\" class=\"btn btn-sm btn-secondary\" (click)=\"cancelDeletion()\">Cancel</button>\n          <button type=\"button\" id=\"confirm\" class=\"btn btn-sm btn-primary\" (click)=\"confirmDeletion()\">Confirm</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AppCategoryList, AuthObjList} from '../../identity';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService, messageType} from 'ui-message-angular';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-app-category-list',\n  templateUrl: './app-category-list.component.html',\n  styleUrls: ['./app-category-list.component.css']\n})\nexport class AppCategoryListComponent implements OnInit {\n  appCategoryID: string;\n  appCategoryName: string;\n  appCategories: AppCategoryList[];\n  showDeletionConfirmation = false;\n  toBeDeletedInstance: string;\n\n  get displayDeletionConfirmation() {return this.showDeletionConfirmation ? 'block' : 'none'; }\n\n  constructor(private identityService: IdentityService,\n              private messageService: MessageService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  search() {\n    this.messageService.clearMessages();\n    this.appCategories = [];\n    this.appCategoryID = this.appCategoryID ? this.appCategoryID.trim() : '';\n    this.appCategoryName = this.appCategoryName ? this.appCategoryName.trim() : '';\n    this.identityService.searchAppCategories(this.appCategoryID, this.appCategoryName).subscribe(\n      data => {\n        if (!data[0]) {\n          this.messageService.reportMessage('GENERAL', 'EMPTY_LIST', messageType.Warning);\n        } else if (data[0]['msgCat']) {\n          const messages = <Message[]>data;\n          messages.forEach( msg => this.messageService.add(msg));\n        } else {\n          this.appCategories = <AppCategoryList[]>data;\n        }\n      }\n    );\n  }\n\n  enterSearch($event): void {\n    if ($event.keyCode === 13 ) {\n      this.search();\n    }\n  }\n\n  new(): void {\n    this.router.navigate(['app-categories', '/', {action: 'new'}]);\n  }\n\n  display(appCategoryID: string): void {\n    this.router.navigate(['app-categories', appCategoryID, {action: 'display'}]);\n  }\n\n  change(appCategoryID: string): void {\n    this.router.navigate(['app-categories', appCategoryID, {action: 'change'}]);\n  }\n\n  delete(appCategoryID: string): void {\n    this.toBeDeletedInstance = appCategoryID;\n    this.showDeletionConfirmation = true;\n  }\n\n  cancelDeletion(): void {\n    this.showDeletionConfirmation = false;\n  }\n\n  confirmDeletion(): void {\n    const toBeDeletedInstanceGUID = this.appCategories.find(\n      ele => ele.ID === this.toBeDeletedInstance).INSTANCE_GUID;\n    this.identityService.delete(toBeDeletedInstanceGUID).subscribe( errorMsg => {\n      this.showDeletionConfirmation = false;\n      if (errorMsg) {\n        const messages = <Message[]>errorMsg;\n        messages.forEach( msg => this.messageService.add(msg));\n      } else {\n        this.search();\n      }\n    });\n  }\n\n}\n","import {IdentityService} from './identity.service';\nimport {AbstractControl, AsyncValidatorFn, ValidationErrors} from '@angular/forms';\nimport {Observable, timer} from 'rxjs';\nimport {map, switchMap} from 'rxjs/operators';\nimport {MessageService} from 'ui-message-angular';\n\nexport function existingUserNameValidator(identityService: IdentityService,\n                                          messageService: MessageService,\n                                          userID: string): AsyncValidatorFn {\n  return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    return timer(500).pipe(\n      switchMap( () => identityService.getUserByUserName(control.value).pipe(\n        map(data => {\n          if (data['r_user'] && data['r_user'][0]['USER_ID'] !== userID) {\n            return {message: messageService.generateMessage('USER', 'USER_NAME_EXISTS',\n                'E', control.value).msgShortText};\n          } else {\n            return null;\n          }\n        })\n      )));\n  };\n}\n\nexport function existingUserIDValidator(identityService: IdentityService,\n                                        messageService: MessageService): AsyncValidatorFn {\n  return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    return timer(500).pipe(\n      switchMap( () => identityService.getUserByUserID(control.value).pipe(\n        map(data => {\n          if (data['r_user'] && data['r_user'][0]['USER_ID'] === control.value) {\n            return {message: messageService.generateMessage('USER', 'USER_ID_EXISTS',\n                'E', control.value).msgShortText};\n          } else {\n            return null;\n          }\n        })\n      )));\n  };\n}\n\nexport function existingPermissionValidator(identityService: IdentityService,\n                                          messageService: MessageService): AsyncValidatorFn {\n  return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    return timer(500).pipe(\n      switchMap( () => identityService.getPermissionByName(control.value).pipe(\n        map(data => {\n          if (data['r_role'] && data['r_role'][0]['NAME'] === control.value) {\n            return {message: messageService.generateMessage('PERMISSION', 'PERMISSION_EXISTS',\n                'E', control.value).msgShortText};\n          } else {\n            return null;\n          }\n        })\n      )));\n  };\n}\n\nexport function existingAppValidator(identityService: IdentityService,\n                                            messageService: MessageService): AsyncValidatorFn {\n  return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    return timer(500).pipe(\n      switchMap( () => identityService.getAppByID(control.value).pipe(\n        map(data => {\n          if (data['app'] && data['app'][0]['APP_ID'] === control.value) {\n            return {message: messageService.generateMessage('APP', 'APP_EXISTS',\n                'E', control.value).msgShortText};\n          } else {\n            return null;\n          }\n        })\n      )));\n  };\n}\n\nexport function existingAuthObjectValidator(identityService: IdentityService,\n                                     messageService: MessageService): AsyncValidatorFn {\n  return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    return timer(500).pipe(\n      switchMap( () => identityService.getAuthObjectByName(control.value).pipe(\n        map(data => {\n          if (data['authObject'] && data['authObject'][0]['OBJ_NAME'] === control.value) {\n            return {message: messageService.generateMessage('AUTH_OBJECT', 'AUTH_OBJECT_EXISTS',\n                'E', control.value).msgShortText};\n          } else {\n            return null;\n          }\n        })\n      )));\n  };\n}\n\nexport function existingAppCategoryValidator(identityService: IdentityService,\n                                            messageService: MessageService): AsyncValidatorFn {\n  return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    return timer(500).pipe(\n      switchMap( () => identityService.getAppCategoryByID(control.value).pipe(\n        map(data => {\n          if (data['r_app_category'] && data['r_app_category'][0]['ID'] === control.value) {\n            return {message: messageService.generateMessage('APP_CATEGORY', 'APP_CATEGORY_EXISTS',\n                'E', control.value).msgShortText};\n          } else {\n            return null;\n          }\n        })\n      )));\n  };\n}\n\nexport function existingProfileValidator(identityService: IdentityService,\n                                             messageService: MessageService): AsyncValidatorFn {\n  return (control: AbstractControl): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> => {\n    return timer(500).pipe(\n      switchMap( () => identityService.getAuthProfileByName(control.value).pipe(\n        map(data => {\n          if (data['authProfile'] && data['authProfile'][0]['PROFILE_NAME'] === control.value) {\n            return {message: messageService.generateMessage('AUTH_PROFILE', 'AUTH_PROFILE_EXISTS',\n                'E', control.value).msgShortText};\n          } else {\n            return null;\n          }\n        })\n      )));\n  };\n}\n","<nav class=\"navbar dk-fixed-top navbar-light bg-light\">\n  <div>\n    <span class=\"font-weight-bold mb-0 mx-1\">{{isNewMode? 'New Authorization Object' :\n      readonly? 'Display Authorization Object' : 'Change Authorization Object'}}</span>\n  </div>\n\n  <div class=\"flex-row-reverse\">\n    <button class=\"btn btn-sm btn-outline-info mr-2\" type=\"button\" title=\"Return to List\" id=\"toList\"\n            (click)=\"return2List()\" >\n      <span class=\"fas fa-list-ul\"> To List</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Edit/Display\" id=\"editDisplay\" (click)=\"switchEditDisplay()\">\n      <span *ngIf=\"readonly\" class=\"fas fa-edit\"> Edit</span>\n      <span *ngIf=\"!readonly\" class=\"fas fa-glasses\"> Display</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Save\" id=\"save\" (click)=\"save()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-save\"> Save</span>\n    </button>\n  </div>\n</nav>\n\n<div class=\"mt-2 mb-2\">\n  <dk-message></dk-message>\n</div>\n\n<div *ngIf=\"mainForm\" class=\"ml-2\">\n  <div class=\"mt-2 ml-1 row\">\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('OBJ_NAME')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"!isNewMode\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('DESC')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"readonly\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n  </div>\n\n  <ul class=\"nav nav-tabs mt-1\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===1\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(1)\">Authorization Fields</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===2\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(2)\">Admin</a>\n    </li>\n  </ul>\n\n  <div class=\"mt-2\" [ngSwitch]=\"tabStrip\">\n    <app-auth-object-field *ngSwitchCase=\"1\" [mainForm]=\"mainForm\"  [readonly]=\"readonly\"></app-auth-object-field>\n    <app-admin-info *ngSwitchCase=\"2\" [mainForm]=\"mainForm\" [relationMetas]=\"relationMetas\" [adminRelation]=\"'authObject'\"></app-admin-info>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AttributeBase, AttributeControlService, Entity, EntityService, RelationMeta, Relationship, UiMapperService} from 'jor-angular';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {DialogService} from '../../dialog.service';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {switchMap} from 'rxjs/operators';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {existingAuthObjectValidator} from '../../async-validators';\n\n@Component({\n  selector: 'app-auth-object-detail',\n  templateUrl: './auth-object-detail.component.html',\n  styleUrls: ['./auth-object-detail.component.css']\n})\nexport class AuthObjectDetailComponent implements OnInit {\n  mainForm: FormGroup;\n  relationMetas: RelationMeta[];\n  attrCtrls: AttributeBase[];\n  readonly = true;\n  isNewMode = false;\n  action: string;\n  instanceGUID: string;\n  originalValue = {};\n  changedValue = {};\n  tabStrip = 1;\n\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private dialogService: DialogService,\n              private identityService: IdentityService,\n              private attributeControlService: AttributeControlService,\n              private entityService: EntityService,\n              private uiMapperService: UiMapperService,\n              private messageService: MessageService) {\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        this.action = params.get('action');\n        if (this.action === 'new') {\n          this.isNewMode = true;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('authObject'),\n            this._createNewEntity()\n          ]);\n        } else {\n          this.isNewMode = false;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('authObject'),\n            this.identityService.getAuthObjectDetail(params.get('authObjName'))\n          ]);\n        }\n      })\n    ).subscribe( data => {\n      this.relationMetas = data[0] as RelationMeta[];\n      this.attrCtrls = this.attributeControlService.toAttributeControl(\n        this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'authObject').ATTRIBUTES);\n      if ('ENTITY_ID' in data[1]) {\n        this.instanceGUID = data[1]['INSTANCE_GUID'];\n        this._generateMainForm(<Entity>data[1]);\n        if (this.isNewMode || this.action === 'change') {\n          this._switch2EditMode();\n        } else {\n          this._switch2DisplayMode();\n        }\n      } else {\n        const errorMessages = <Message[]>data[1];\n        errorMessages.forEach( msg => this.messageService.add(msg));\n      }\n    });\n  }\n\n  return2List(): void {\n    this.router.navigate(['auth-objects']);\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n  switchTabStrip(tabStripID: number): void {\n    this.tabStrip = tabStripID;\n  }\n\n  switchEditDisplay(): void {\n    if (this.readonly ) {\n      this._switch2EditMode();\n    } else {\n      if (this.mainForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) {\n            this.mainForm.reset(this.originalValue);\n            this._switch2DisplayMode();\n          }\n        });\n      } else {\n        this._switch2DisplayMode();\n      }\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n\n    const appIDCtrl = this.mainForm.get('OBJ_NAME') as FormControl;\n    appIDCtrl.clearAsyncValidators();\n\n    const authFieldArray = this.mainForm.get('authFields') as FormArray;\n    let lastIndex = authFieldArray.length - 1;\n    while (lastIndex >= 0) {\n      const authFieldGroup = authFieldArray.at(lastIndex);\n      if (authFieldGroup.invalid || !authFieldGroup.value.FIELD_NAME) {\n        authFieldArray.removeAt(lastIndex);\n      }\n      lastIndex--;\n    }\n\n    this.mainForm.markAsPristine();\n    // Replace the URL from change to display\n    window.history.replaceState({}, '', `/auth-objects/${appIDCtrl.value};action=display`);\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n\n    const authObjCtrl = this.mainForm.get('OBJ_NAME') as FormControl;\n    if (this.isNewMode) {\n      authObjCtrl.setAsyncValidators(\n        existingAuthObjectValidator(this.identityService, this.messageService));\n    }\n\n    const appCategoryArray = this.mainForm.get('authFields') as FormArray;\n    appCategoryArray.push( this.fb.group({\n      FIELD_NAME: [''],\n      DATA_ELEMENT: [''],\n      auth_field_INSTANCE_GUID: [''],\n      RELATIONSHIP_INSTANCE_GUID: ['']\n    }));\n\n    // Replace the URL from to display\n    if (this.action === 'display') {this.action = 'change'; }\n    window.history.replaceState({}, '', `/auth-objects/${authObjCtrl.value};action=` + this.action);\n  }\n\n  _createNewEntity(): Observable<Entity> {\n    const authObjectDetail = new Entity();\n    authObjectDetail.ENTITY_ID = 'authObject';\n    authObjectDetail['authObject'] = [\n      { OBJ_NAME: '', DESC: '', CREATED_BY: '', CREATE_TIME: '', CHANGED_BY: '', CHANGE_TIME: '' }\n    ];\n    authObjectDetail['relationships'] = [];\n    return of(authObjectDetail);\n  }\n\n  _generateMainForm(data: Entity): void {\n    this.mainForm = this.fb.group({\n      OBJ_NAME: [data['authObject'][0]['OBJ_NAME'], [Validators.required]],\n      DESC: [data['authObject'][0]['DESC']],\n      admin: this.fb.group({\n        CREATED_BY: [data['authObject'][0]['CREATED_BY']],\n        CREATE_TIME: [data['authObject'][0]['CREATE_TIME']],\n        CHANGED_BY: [data['authObject'][0]['CHANGED_BY']],\n        CHANGE_TIME: [data['authObject'][0]['CHANGE_TIME']]\n      })\n    });\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.mainForm.addControl('authFields',\n      this.fb.array(parsedRelationship.authFields.map( authField => this.fb.group( authField ))));\n    this.originalValue = this.mainForm.getRawValue();\n  }\n\n  _parseRelationships( relationships: Relationship[] ): any {\n    const parsedRelationship = {\n      authFields : []\n    };\n    if (!relationships) { return parsedRelationship; }\n    relationships.forEach( relationship => {\n      switch (relationship.RELATIONSHIP_ID) {\n        case 'rs_auth_object_field':\n          __parseAuthField(relationship);\n          break;\n        default:\n        // Do nothing.\n      }\n    });\n    return parsedRelationship;\n\n    function __parseAuthField( relationship: Relationship): void {\n      relationship.values.forEach( value => {\n        parsedRelationship.authFields.push({\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          auth_field_INSTANCE_GUID: value['PARTNER_INSTANCES'][0]['INSTANCE_GUID'],\n          FIELD_NAME: value['PARTNER_INSTANCES'][0]['authField'][0]['FIELD_NAME'],\n          DATA_ELEMENT: value['PARTNER_INSTANCES'][0]['authField'][0]['DATA_ELEMENT']\n        });\n      });\n    }\n  }\n\n  _resetValue(data: Entity): void {\n    this.originalValue = {\n      OBJ_NAME: data['authObject'][0]['OBJ_NAME'],\n      DESC: data['authObject'][0]['DESC'],\n      admin: {\n        CREATED_BY: data['authObject'][0]['CREATED_BY'],\n        CREATE_TIME: data['authObject'][0]['CREATE_TIME'],\n        CHANGED_BY: data['authObject'][0]['CHANGED_BY'],\n        CHANGE_TIME: data['authObject'][0]['CHANGE_TIME']\n      }\n    };\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.originalValue['authFields'] = parsedRelationship.authFields;\n    this.mainForm.reset(this.originalValue);\n  }\n\n  save() {\n    this.messageService.clearMessages();\n    if (this._composeChanges()) {\n      this.identityService.save(<Entity>this.changedValue).subscribe( data => {\n        this.changedValue = {};\n        if ('INSTANCE_GUID' in data) {\n          const authObjName = data['authObject'][0]['OBJ_NAME'];\n          this.instanceGUID = data['INSTANCE_GUID'];\n          this.isNewMode = false;\n          this.identityService.getAuthObjectDetail(authObjName).subscribe(instance => {\n            if ('ENTITY_ID' in instance) {\n              this._switch2DisplayMode();\n              this._resetValue(<Entity>instance);\n            } else {\n              const errorMessages = <Message[]>instance;\n              errorMessages.forEach( msg => this.messageService.add(msg));\n            }\n          });\n          this.messageService.reportMessage('AUTH_OBJECT', 'SAVED', 'S', authObjName);\n        } else {\n          const errorMessages = <Message[]>data;\n          errorMessages.forEach( msg => this.messageService.add(msg));\n        }\n      });\n    }\n  }\n\n  _composeChanges() {\n    if (this.mainForm.invalid) {\n      this.messageService.reportMessage('AUTH_OBJECT', 'INVALID', 'E');\n      return false;\n    }\n\n    if (this.mainForm.dirty === false) {\n      this.messageService.reportMessage('GENERAL', 'NO_CHANGE', 'W');\n      return false;\n    }\n\n    this.changedValue['ENTITY_ID'] = 'authObject';\n    this.changedValue['INSTANCE_GUID'] = this.instanceGUID;\n\n    if (this.isNewMode) {\n      this.changedValue['authObject'] = {\n        action: 'add', OBJ_NAME: this.mainForm.get('OBJ_NAME').value,\n        CREATED_BY: this.identityService.Session.USER_ID, CREATE_TIME: this.identityService.CurrentTime,\n        CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n    } else {\n      this.changedValue['authObject'] = {\n        action: 'update', CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n    }\n\n    if (this.mainForm.get('DESC').dirty) {\n      this.changedValue['authObject']['DESC'] = this.mainForm.get('DESC').value;\n    }\n\n    const authFieldFormArray = this.mainForm.get('authFields') as FormArray;\n    const relationship = this.uiMapperService.composeChangedRelationship(\n      'rs_auth_object_field',\n      [{ENTITY_ID: 'authField', ROLE_ID: 'auth_field'}],\n      authFieldFormArray,\n      this.originalValue['authFields'],\n      ['FIELD_NAME', 'DATA_ELEMENT']);\n\n    if (relationship) {this.changedValue['relationships'] = [relationship]; }\n\n    return true;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (this.mainForm && this.mainForm.dirty)) {\n      return this.dialogService.confirm('Discard changes?');\n    } else {\n      return true;\n    }\n  }\n\n}\n","<table class=\"table table-bordered table-sm dk-table ml-3 mt-4\" [formGroup]=\"mainForm\">\n  <thead class=\"thead-light\">\n  <tr>\n    <th scope=\"col\">Authorization Field</th>\n    <th scope=\"col\">Data Element</th>\n    <th scope=\"col\">Action</th>\n  </tr>\n  </thead>\n\n  <tbody formArrayName=\"authFields\" class=\"mb-4\">\n  <tr *ngFor=\"let authFieldForm of authFieldFormArray.controls; let i = index\">\n    <td [formGroup]=\"authFieldForm\">\n      <div class=\"input-group dk-name\">\n        <input class=\"form-control form-control-sm\" type=\"text\" formControlName=\"FIELD_NAME\"\n               [readonly]=\"readonly || isExisting(authFieldForm) && authFieldForm.valid\" (change)=\"onChangeKey(i)\">\n        <div class=\"invalid-tooltip\">\n          {{authFieldForm.get('FIELD_NAME').errors?.message}}\n        </div>\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-sm btn-outline-secondary btn-light\" type=\"button\" id=\"searchPermission\"\n                  (click)=\"onSearchHelp(i, authFieldForm)\">\n            <span class=\"fas fa-search\"></span>\n          </button>\n        </div>\n      </div>\n    </td>\n    <td [formGroup]=\"authFieldForm\" class=\"dk-description\">\n      <input type=\"text\" formControlName=\"DATA_ELEMENT\" readonly class=\"form-control form-control-sm\">\n    </td>\n    <td class=\"dk-actions\">\n      <button class=\"btn btn-sm\" type=\"button\" id=\"delete\" [disabled]=\"readonly\" (click)=\"delete(i)\" title=\"Delete\">\n        <span class=\"far fa-trash-alt\"></span>\n      </button>\n    </td>\n  </tr>\n  </tbody>\n</table>\n\n<dk-app-search-help></dk-app-search-help>\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {IdentityService} from '../../../identity.service';\nimport {SearchHelpComponent} from 'jor-angular';\n\n@Component({\n  selector: 'app-auth-object-field',\n  templateUrl: './auth-object-field.component.html',\n  styleUrls: ['./auth-object-field.component.css']\n})\nexport class AuthObjectFieldComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() mainForm: FormGroup;\n  authFieldFormArray: FormArray;\n\n  constructor(private fb: FormBuilder,\n              private identityService: IdentityService) { }\n\n  @ViewChild(SearchHelpComponent, { static: true })\n  private searchHelpComponent: SearchHelpComponent;\n\n  ngOnInit() {\n    this.authFieldFormArray = this.mainForm.get('authFields') as FormArray;\n    // Recheck each role since every time the template is initialized, Angular clears the error status.\n    if (!this.readonly) {\n      this.authFieldFormArray.controls.forEach( (ctrl, index) => {\n        this.onChangeKey(index);\n      });\n    }\n  }\n\n  delete(index: number): void {\n    if (index !== this.authFieldFormArray.length - 1) {\n      this.authFieldFormArray.removeAt(index);\n      this.authFieldFormArray.markAsDirty();\n    }\n  }\n\n  onChangeKey(index: number): void {\n    const currentFormGroup = this.authFieldFormArray.at(index);\n    if (this.isExisting(currentFormGroup)) {\n      currentFormGroup.get('FIELD_NAME').setErrors({message: 'Duplicate Authorization Field'});\n      return;\n    }\n\n    if (index === this.authFieldFormArray.length - 1 && currentFormGroup.value.FIELD_NAME.trim() !== '') {\n      // Only work if the last line is not new and empty\n      this.authFieldFormArray.push(\n        this.fb.group({\n          FIELD_NAME: [''],\n          DATA_ELEMENT: [''],\n          auth_field_INSTANCE_GUID: [''],\n          RELATIONSHIP_INSTANCE_GUID: ['']\n        })\n      );\n    }\n\n    if (currentFormGroup.value.FIELD_NAME) {\n      this.identityService.getAuthFieldInfo(currentFormGroup.value.FIELD_NAME).subscribe(data => {\n        if (data['msgCat']) {\n          currentFormGroup.get('FIELD_NAME').setErrors({message: data['msgShortText']});\n        } else {\n          currentFormGroup.get('DATA_ELEMENT').setValue(data['DATA_ELEMENT']);\n          currentFormGroup.get('auth_field_INSTANCE_GUID').setValue(data['INSTANCE_GUID']);\n        }\n      });\n    }\n  }\n\n  isExisting(key: AbstractControl): boolean {\n    const existIndex = this.authFieldFormArray.controls.findIndex(\n      ctrl => ctrl.value.FIELD_NAME === key.value.FIELD_NAME\n        && ctrl.pristine && ctrl.value.FIELD_NAME !== '');\n    return existIndex !== -1 ;\n  }\n\n  onSearchHelp(rowID: number, exportObject: AbstractControl): void {\n    const afterExportFn = function (context: any, rowIDx: number) {\n      return () => context.onChangeKey(rowIDx);\n    }(this, rowID).bind(this);\n\n    this.searchHelpComponent.openSearchHelpModalByEntity('authField', 'authField', exportObject,\n      this.readonly || this.isExisting(exportObject) && exportObject.valid, null, null, afterExportFn);\n  }\n\n}\n","<div class=\"card mb-3 pt-3\">\n  <div class=\"mt-2 pl-4 row\">\n    <div class=\"col-6 form-group row\">\n      <label for=\"auth_obj_name\" class=\"col-sm-3 col-form-label\">Object Name:</label>\n      <input id=\"auth_obj_name\" name=\"auth_obj_name\" [(ngModel)]=\"authObjName\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\" autofocus>\n    </div>\n    <div class=\"col-6 form-group row\">\n      <label for=\"auth_obj_desc\" class=\"col-sm-3 col-form-label\">Description:</label>\n      <input id=\"auth_obj_desc\" name=\"auth_obj_desc\" [(ngModel)]=\"authObjDesc\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\">\n    </div>\n  </div>\n\n  <div class=\"mb-4\">\n    <button type=\"button\" id=\"search\" class=\"btn btn-primary btn-sm float-right mr-4\" (click)=\"search()\">Search</button>\n  </div>\n</div>\n\n<div class=\"mt-2 mb-4 mx-4\">\n  <dk-message></dk-message>\n  <div class=\"btn-toolbar justify-content-end my-2\" role=\"toolbar\">\n    <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"new()\">\n      <span class=\"fas fa-plus\"></span> New</button>\n  </div>\n  <table class=\"table table-bordered table-sm\">\n    <thead class=\"thead-light\">\n    <tr>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Desc</th>\n      <th scope=\"col\">Changed By</th>\n      <th scope=\"col\">Changed At</th>\n      <th scope=\"col\">Action</th>\n    </tr>\n    </thead>\n\n    <tbody>\n    <tr *ngFor=\"let authObj of authObjects\">\n      <td><a [routerLink]=\"['/auth-objects', authObj.OBJ_NAME, {action: 'display'}]\">{{authObj.OBJ_NAME}}</a></td>\n      <td>{{authObj.DESC}}</td>\n      <td>{{authObj.CHANGED_BY}}</td>\n      <td>{{authObj.CHANGE_TIME}}</td>\n      <td class=\"dk-actions\">\n        <button title=\"Display\" id=\"display\" class=\"btn btn-sm\" type=\"button\" (click)=\"display(authObj.OBJ_NAME)\">\n          <span class=\"fas fa-search\"></span>\n        </button>\n        <button title=\"Change\" id=\"change\" class=\"btn btn-sm\" type=\"button\" (click)=\"change(authObj.OBJ_NAME)\">\n          <span class=\"fas fa-pen\"></span>\n        </button>\n        <button title=\"Delete\" id=\"delete\" class=\"btn btn-sm\" type=\"button\" (click)=\"delete(authObj.OBJ_NAME)\">\n          <span class=\"far fa-trash-alt\"></span>\n        </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"modal\" [class.show]=\"showDeletionConfirmation\"\n       [ngStyle]=\"{'display': displayDeletionConfirmation}\" id=\"deletionConfirmation\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"confirmDeletion\">Confirm Deletion</h5>\n          <button type=\"button\" class=\"close\" (click)=\"cancelDeletion()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <p>Are you sure to delete the authorization object '{{toBeDeletedInstance}}'?</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" id=\"cancel\" class=\"btn btn-sm btn-secondary\" (click)=\"cancelDeletion()\">Cancel</button>\n          <button type=\"button\" id=\"confirm\" class=\"btn btn-sm btn-primary\" (click)=\"confirmDeletion()\">Confirm</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AppList, AuthObjList} from '../../identity';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService, messageType} from 'ui-message-angular';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-auth-object-list',\n  templateUrl: './auth-object-list.component.html',\n  styleUrls: ['./auth-object-list.component.css']\n})\nexport class AuthObjectListComponent implements OnInit {\n  authObjName: string;\n  authObjDesc: string;\n  authObjects: AuthObjList[];\n  showDeletionConfirmation = false;\n  toBeDeletedInstance: string;\n\n  get displayDeletionConfirmation() {return this.showDeletionConfirmation ? 'block' : 'none'; }\n\n  constructor(private identityService: IdentityService,\n              private messageService: MessageService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  search() {\n    this.messageService.clearMessages();\n    this.authObjects = [];\n    this.authObjName = this.authObjName ? this.authObjName.trim() : '';\n    this.authObjDesc = this.authObjDesc ? this.authObjDesc.trim() : '';\n    this.identityService.searchAuthObjects(this.authObjName, this.authObjDesc).subscribe(\n      data => {\n        if (!data[0]) {\n          this.messageService.reportMessage('GENERAL', 'EMPTY_LIST', messageType.Warning);\n        } else if (data[0]['msgCat']) {\n          const messages = <Message[]>data;\n          messages.forEach( msg => this.messageService.add(msg));\n        } else {\n          this.authObjects = <AuthObjList[]>data;\n        }\n      }\n    );\n  }\n\n  enterSearch($event): void {\n    if ($event.keyCode === 13 ) {\n      this.search();\n    }\n  }\n\n  new(): void {\n    this.router.navigate(['auth-objects', '/', {action: 'new'}]);\n  }\n\n  display(authObjName: string): void {\n    this.router.navigate(['auth-objects', authObjName, {action: 'display'}]);\n  }\n\n  change(authObjName: string): void {\n    this.router.navigate(['auth-objects', authObjName, {action: 'change'}]);\n  }\n\n  delete(authObjName: string): void {\n    this.toBeDeletedInstance = authObjName;\n    this.showDeletionConfirmation = true;\n  }\n\n  cancelDeletion(): void {\n    this.showDeletionConfirmation = false;\n  }\n\n  confirmDeletion(): void {\n    const toBeDeletedInstanceGUID = this.authObjects.find(\n      ele => ele.OBJ_NAME === this.toBeDeletedInstance).INSTANCE_GUID;\n    this.identityService.delete(toBeDeletedInstanceGUID).subscribe( errorMsg => {\n      this.showDeletionConfirmation = false;\n      if (errorMsg) {\n        const messages = <Message[]>errorMsg;\n        messages.forEach( msg => this.messageService.add(msg));\n      } else {\n        this.search();\n      }\n    });\n  }\n}\n","<table class=\"table table-bordered table-sm\">\n  <thead class=\"thead-light\">\n  <tr>\n    <th scope=\"col\">Operator</th>\n    <th scope=\"col\">Option</th>\n    <th scope=\"col\">{{attrCtrl.label}} (Low)</th>\n    <th scope=\"col\">{{attrCtrl.label}} (High)</th>\n    <th scope=\"col\">Actions</th>\n  </tr>\n  </thead>\n\n  <tbody>\n  <tr *ngFor=\"let selectOptionForm of selectOptionArray.controls; let i = index\">\n    <td [formGroup]=\"selectOptionForm\" >\n      <select name=\"operator\" class=\"form-control form-control-sm\" required\n              formControlName=\"Operator\" (change)=\"onChangeOperator(i)\">\n        <option *ngFor=\"let operator of operatorEnum\" [value]=\"operator\">{{operator}}</option>\n      </select>\n    </td>\n    <td [formGroup]=\"selectOptionForm\" >\n      <select name=\"operator\" class=\"form-control form-control-sm\" required formControlName=\"Option\">\n        <option *ngFor=\"let option of optionEnum\" [value]=\"option\">{{option}}</option>\n      </select>\n    </td>\n    <td>\n      <dk-app-attribute [attributeControl]=\"attrCtrl\"\n                        [formGroup]=\"selectOptionForm\"\n                        [isSmallSize] = \"true\"\n                        [readonly]=\"readonly\">\n      </dk-app-attribute>\n    </td>\n    <td>\n      <dk-app-attribute [attributeControl]=\"highAttrCtrl\"\n                        [formGroup]=\"selectOptionForm\"\n                        [isSmallSize] = \"true\"\n                        [readonly]=\"readonly\">\n      </dk-app-attribute>\n    </td>\n    <td class=\"dk-actions\">\n      <button class=\"btn btn-sm\" type=\"button\" id=\"add\" [disabled]=\"readonly\" (click)=\"insertValue(i)\" title=\"Insert\">\n        <span class=\"fas fa-plus\"></span>\n      </button>\n      <button class=\"btn btn-sm\" type=\"button\" id=\"delete\" [disabled]=\"readonly\" (click)=\"deleteValue(i)\" title=\"Delete\">\n        <span class=\"far fa-trash-alt\"></span>\n      </button>\n    </td>\n  </tr>\n  </tbody>\n</table>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder} from '@angular/forms';\nimport {AttributeBase} from 'jor-angular';\nimport {Operator, Option} from '../../../identity';\n\n@Component({\n  selector: 'app-auth-value-selopts',\n  templateUrl: './auth-value-selopts.component.html',\n  styleUrls: ['./auth-value-selopts.component.css']\n})\nexport class AuthValueSeloptsComponent implements OnInit {\n  @Input() selectOptionArray: FormArray;\n  @Input() attrCtrl: AttributeBase;\n  @Input() highAttrCtrl: AttributeBase;\n  @Input() readonly;\n  operatorEnum;\n  optionEnum;\n\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n    this.operatorEnum = Object.values(Operator);\n    this.optionEnum = Object.values(Option);\n  }\n\n  onChangeOperator(idx: number): void {\n    const selectOptionCtrl = this.selectOptionArray.at(idx);\n    if ( selectOptionCtrl.get('Operator').value === Operator.Between ) {\n      selectOptionCtrl.get('High').enable();\n    } else {\n      selectOptionCtrl.get('High').setValue('');\n      selectOptionCtrl.get('High').disable();\n    }\n  }\n\n  insertValue(idx: number): void {\n    this.selectOptionArray.insert(idx, this.fb.group({\n      Operator: Operator.Between,\n      Option: Option.Include,\n      Low: '',\n      High: ''\n    }));\n  }\n\n  deleteValue(idx: number): void {\n    if (this.selectOptionArray.length === 1) {\n      this.selectOptionArray.at(idx).get('Low').setValue('');\n      this.selectOptionArray.at(idx).get('High').setValue('');\n    } else {\n      this.selectOptionArray.removeAt(idx);\n    }\n    this.selectOptionArray.markAsDirty();\n  }\n}\n","<table class=\"table table-bordered table-sm\">\n  <thead class=\"thead-light\">\n  <tr>\n    <th scope=\"col\">{{attrCtrl.label}}</th>\n    <th scope=\"col\">Actions</th>\n  </tr>\n  </thead>\n\n  <tbody>\n  <tr *ngFor=\"let singleValueForm of singleValueArray.controls; let i = index\">\n    <td>\n      <dk-app-attribute [attributeControl]=\"attrCtrl\"\n                        [formGroup]=\"singleValueForm\"\n                        [isSmallSize] = \"true\"\n                        [readonly]=\"readonly\">\n      </dk-app-attribute>\n    </td>\n    <td class=\"dk-actions\">\n      <button class=\"btn btn-sm\" type=\"button\" id=\"add\" [disabled]=\"readonly\" (click)=\"insertValue(i)\" title=\"Insert\">\n        <span class=\"fas fa-plus\"></span>\n      </button>\n      <button class=\"btn btn-sm\" type=\"button\" id=\"delete\" [disabled]=\"readonly\" (click)=\"deleteValue(i)\" title=\"Delete\">\n        <span class=\"far fa-trash-alt\"></span>\n      </button>\n    </td>\n  </tr>\n  </tbody>\n</table>\n","import {Component, Input, OnInit, Output} from '@angular/core';\nimport {FormArray, FormBuilder} from '@angular/forms';\nimport {AttributeBase} from 'jor-angular';\n\n@Component({\n  selector: 'app-auth-value-singles',\n  templateUrl: './auth-value-singles.component.html',\n  styleUrls: ['./auth-value-singles.component.css']\n})\nexport class AuthValueSinglesComponent implements OnInit {\n  @Input() singleValueArray: FormArray;\n  @Input() attrCtrl: AttributeBase;\n  @Input() readonly;\n  constructor(private fb: FormBuilder) { }\n\n  ngOnInit(): void {\n  }\n\n  insertValue(idx: number): void {\n    this.singleValueArray.insert(idx, this.fb.group({\n      Low: ['']\n    }));\n  }\n\n  deleteValue(idx: number): void {\n    if (this.singleValueArray.length === 1 ) {\n      this.singleValueArray.at(idx).get('Low').setValue('');\n    } else {\n      this.singleValueArray.removeAt(idx);\n    }\n    this.singleValueArray.markAsDirty();\n  }\n}\n","<div class=\"btn-toolbar\" role=\"toolbar\">\n  <div class=\"custom-control custom-checkbox\">\n    <input type=\"checkbox\" class=\"custom-control-input\" id=\"fullPermission\"\n           [(ngModel)]=\"fullPermission\" [disabled]=\"readonly\" (click)=\"checkFullPermission()\">\n    <label class=\"custom-control-label\" for=\"fullPermission\">Enable Full Permission</label>\n  </div>\n  <span *ngIf=\"authFieldValueForm\"\n        [ngClass]=\"{'green-light': authFieldValueForm.get('STATUS').value === 'green',\n                       'red-light': authFieldValueForm.get('STATUS').value  === 'red'}\"\n        class=\"ml-4 mt-1 traffic-light\"></span>\n</div>\n\n<ul class=\"nav nav-tabs mt-1\">\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" [class.active]=\"tabStrip===1\" href=\"javascript:void(0);\"\n       (click)=\"switchTabStrip(1)\">Single Values</a>\n  </li>\n  <li class=\"nav-item\">\n    <a class=\"nav-link\" [class.active]=\"tabStrip===2\" href=\"javascript:void(0);\"\n       (click)=\"switchTabStrip(2)\">Select Options</a>\n  </li>\n</ul>\n<div *ngIf=\"attrCtrl\" class=\"mt-2\" [ngSwitch]=\"tabStrip\">\n  <app-auth-value-singles *ngSwitchCase=\"1\"\n                          [singleValueArray]=\"singleValueArray\"\n                          [attrCtrl]=\"attrCtrl\"\n                          [readonly]=\"readonly\">\n  </app-auth-value-singles>\n  <app-auth-value-selopts *ngSwitchCase=\"2\"\n                          [selectOptionArray]=\"selectOptionArray\"\n                          [attrCtrl]=\"attrCtrl\"\n                          [highAttrCtrl]=\"highAttrCtrl\"\n                          [readonly]=\"readonly\">\n  </app-auth-value-selopts>\n</div>\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {Operator, Option, SelectOption} from '../../identity';\nimport {FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {Attribute, AttributeBase, AttributeControlService, EntityService} from 'jor-angular';\n\n@Component({\n  selector: 'app-auth-value',\n  templateUrl: './auth-value.component.html',\n  styleUrls: ['./auth-value.component.css']\n})\nexport class AuthValueComponent implements OnInit, OnChanges {\n  @Input() authFieldValueForm: FormGroup;\n  @Input() readonly: boolean;\n  tabStrip = 1;\n  fieldName: string;\n  singleValueArray: FormArray;\n  selectOptionArray: FormArray;\n  attrCtrl: AttributeBase;\n  highAttrCtrl: AttributeBase;\n  fullPermission: boolean;\n\n  constructor(private fb: FormBuilder,\n              private entityService: EntityService,\n              private attributeControlService: AttributeControlService) { }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(): void {\n    if (!this.authFieldValueForm) { return; }\n    if (this.singleValueArray) { this.singleValueArray.clear(); }\n    if (this.selectOptionArray) { this.selectOptionArray.clear(); }\n    this.fullPermission = false;\n    this.attrCtrl = null;\n    this.tabStrip = 1;\n    const authValues = this.authFieldValueForm.get('AUTH_VALUE').value;\n    this.entityService.getElementMeta(this.authFieldValueForm.get('DATA_ELEMENT').value)\n      .subscribe( attrCtrl => {\n        const attribute = <Attribute>attrCtrl;\n        attribute.ATTR_GUID = attrCtrl.ELEMENT_ID;\n        attribute.ATTR_NAME = attrCtrl.ELEMENT_ID;\n        attribute.DATA_ELEMENT = attrCtrl.ELEMENT_ID;\n        this.attrCtrl = this.attributeControlService.toSingleAttributeControl(attribute);\n        this.attrCtrl.name = 'Low';\n        this.highAttrCtrl = this.attributeControlService.toSingleAttributeControl(attribute);\n        this.highAttrCtrl.name = 'High';\n      } );\n\n    this.fieldName = this.authFieldValueForm.get('FIELD_NAME').value;\n    if (!authValues || !JSON.parse(authValues)) {\n        this.singleValueArray = this.fb.array([this.fb.group({Low: ''})]);\n        this.selectOptionArray = this.fb.array([this.fb.group({\n          Operator: [{value: Operator.Between, disabled: this.readonly}],\n          Option: [{value: Option.Include, disabled: this.readonly}], Low: '', High: ''})]);\n    } else {\n      const authValueArray = JSON.parse(authValues);\n      if (authValueArray === '*') {\n        this._setFullPermission(true);\n      } else {\n        const singleValues = [];\n        const selectOptions = [];\n        authValueArray.forEach(authValue => {\n          if (typeof authValue === 'string') {\n            singleValues.push(this.fb.group({Low: authValue}));\n          } else {\n            selectOptions.push(this.fb.group({\n              Operator: [{value: authValue['Operator'], disabled: this.readonly}],\n              Option: [{value: authValue['Option'], disabled: this.readonly}],\n              Low: authValue['Low'],\n              High: authValue['High']\n            }));\n          }\n        });\n        if (singleValues.length > 0 ) {\n          this.singleValueArray = this.fb.array(singleValues);\n          this.tabStrip = 1;\n        } else {\n          this.singleValueArray = this.fb.array([this.fb.group({Low: ''})]);\n          this.tabStrip = 2;\n        }\n\n        if (selectOptions.length > 0) {\n          this.selectOptionArray = this.fb.array(selectOptions);\n        } else {\n          this.selectOptionArray = this.fb.array([this.fb.group({\n            Operator: [{value: Operator.Between, disabled: this.readonly}],\n            Option: [{value: Option.Include, disabled: this.readonly}], Low: '', High: ''})]);\n          this.tabStrip = 1;\n        }\n      }\n    }\n  }\n\n  switchTabStrip(tabStripID: number): void {\n    this.tabStrip = tabStripID;\n  }\n\n  generateAuthValue(): boolean {\n    if (!this.singleValueArray.dirty && !this.selectOptionArray.dirty) { return true; }\n    if (this.fullPermission) { return true; }\n    const authValues = [];\n    let hasErrors = false;\n    this.singleValueArray.controls.forEach( singleValueCtrl => {\n      const singleValue = singleValueCtrl.get('Low').value;\n      if (singleValue && authValues.findIndex( value => value === singleValue) === -1) {\n        authValues.push(singleValue);\n      }\n    });\n    this.selectOptionArray.controls.forEach( selectOptionCtrl => {\n      const selectOption = <SelectOption>selectOptionCtrl.value;\n      if (selectOption.Low) {\n        if (selectOption.Operator === Operator.Between &&\n          selectOption.Low >= selectOption.High) {\n          selectOptionCtrl.get('Low').setErrors({message: 'Low value is larger or equal to high value'});\n          hasErrors = true;\n        } else {\n          authValues.push(selectOption);\n        }\n      }\n    });\n    if (hasErrors) { return false; }\n\n    if (authValues.length === 0) {\n      this.authFieldValueForm.get('AUTH_VALUE').setValue('');\n      this.authFieldValueForm.get('STATUS').setValue('red');\n    } else {\n      this.authFieldValueForm.get('AUTH_VALUE').setValue(JSON.stringify(authValues, null, ' '));\n      this.authFieldValueForm.get('STATUS').setValue('green');\n    }\n    this.authFieldValueForm.get('AUTH_VALUE').markAsDirty();\n    return true;\n  }\n\n  checkFullPermission(): void {\n    this._setFullPermission(!this.fullPermission);\n    this.authFieldValueForm.get('AUTH_VALUE').markAsDirty();\n  }\n\n  _setFullPermission(isFull: boolean): void {\n    this.fullPermission = isFull;\n    this.authFieldValueForm.get('STATUS').setValue(isFull ? 'green' : 'red');\n    this.authFieldValueForm.get('AUTH_VALUE').setValue(isFull ? '\"*\"' : '');\n    if (isFull) {\n      this.singleValueArray = this.fb.array([]);\n      this.selectOptionArray = this.fb.array([]);\n    } else {\n      this.singleValueArray = this.fb.array([this.fb.group({Low: ''})]);\n      this.selectOptionArray = this.fb.array([this.fb.group({\n        Operator: Operator.Between, Option: Option.Include,\n        Low: '', High: ''})]);\n    }\n  }\n}\n","<div class=\"dk-auth-main mx-3\">\n<div class=\"btn-toolbar justify-content-end\" role=\"toolbar\">\n  <button type=\"button\" id=\"remove-object\" class=\"btn btn-light btn-sm\" (click)=\"delete()\" [disabled]=\"readonly\">\n    <span class=\"fas fa-minus\"></span> Remove</button>\n  <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"add()\" [disabled]=\"readonly\">\n    <span class=\"fas fa-plus\"></span> Add</button>\n</div>\n<table *ngIf=\"mainForm\"\n  class=\"table table-bordered table-sm dk-table\" [formGroup]=\"mainForm\">\n  <thead class=\"thead-light\">\n  <tr>\n    <th class=\"dk-checkbox\"><input name=\"btSelectAll\" type=\"checkbox\" (click)=\"checkAll()\"></th>\n    <th class=\"dk-auth-object\">Authorization Object / Field</th>\n    <th class=\"dk-auth-status\">Status</th>\n    <th class=\"dk-auth-value\">Description / Authorization Value</th>\n  </tr>\n  </thead>\n\n  <tbody>\n  <tr *ngFor=\"let authObjForm of authObjFormArray.controls; let i = index\" class=\"treegrid-expanded\"\n      [class.collapsed]=\"authObjForm.get('ROW_TYPE').value === 'FIELD' && authObjForm.get('COLLAPSED').value\">\n    <td class=\"dk-checkbox\" [formGroup]=\"authObjForm\">\n      <input class=\"form-control form-control-sm\" type=\"checkbox\" formControlName=\"CHECKED\" (click)=\"checkAuthObject(i)\">\n    </td>\n    <td *ngIf=\"authObjForm.get('ROW_TYPE').value === 'OBJECT'\" >\n      <span [ngClass]=\"{'treegrid-expander-expanded': !authObjForm.get('COLLAPSED').value,\n            'treegrid-expander-collapsed': authObjForm.get('COLLAPSED').value}\"\n            class=\"treegrid-expander\" (click)=\"expendCollapse(i)\">\n      </span>{{authObjForm.get('OBJ_NAME').value}}\n    </td>\n    <td *ngIf=\"authObjForm.get('ROW_TYPE').value === 'FIELD'\" >\n      <span class=\"treegrid-indent\"></span>\n      <span class=\"treegrid-expander\"></span>\n      {{authObjForm.get('FIELD_NAME').value}}\n    </td>\n\n    <td>\n      <button class=\"btn btn-sm\" type=\"button\" id=\"add\" [disabled]=\"readonly\" (click)=\"setFullPermission(i)\" title=\"Full Permission\">\n        <span [ngClass]=\"{'green-light': authObjForm.get('STATUS').value === 'green',\n                          'yellow-light': authObjForm.get('STATUS').value  === 'yellow',\n                          'red-light': authObjForm.get('STATUS').value  === 'red'}\"\n          class=\"traffic-light\"></span>\n      </button>\n    </td>\n\n    <td *ngIf=\"authObjForm.get('ROW_TYPE').value === 'OBJECT'\">{{authObjForm.get('DESC').value}}</td>\n    <td *ngIf=\"authObjForm.get('ROW_TYPE').value === 'FIELD'\">\n      <a class=\"nav-link\" href=\"javascript:void(0);\" (click)=\"openAuthValueModal(i)\">\n        {{authObjForm.get('AUTH_VALUE').value? authObjForm.get('AUTH_VALUE').value\n        : 'Click to maintain'}}</a>\n    </td>\n  </tr>\n  </tbody>\n</table>\n</div>\n\n<div class=\"modal fade\" id=\"maintainAuthValueDialog\" tabindex=\"-1\" role=\"dialog\"\n     [ngClass]=\"{'show': isAuthValueModalShown}\"\n     [ngStyle]=\"{'display': displayAuthValueModal}\">\n  <div class=\"modal-dialog modal-lg\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"maintainAuthValueDialogTitle\">Maintain Authorization Value</h5>\n      </div>\n      <div class=\"modal-body\">\n        <dk-message></dk-message>\n        <app-auth-value [authFieldValueForm]=\"currentAuthFieldValueForm\" [readonly]=\"readonly\" ></app-auth-value>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"addAuthValue()\">OK</button>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal fade\" id=\"addAuthObject\" tabindex=\"-1\" role=\"dialog\"\n     [ngClass]=\"{'show': isAuthObjectModalShown}\"\n     [ngStyle]=\"{'display': displayAuthObjectModal}\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"addAuthObjectTitle\">Add Authorization Object</h5>\n        <button type=\"button\" class=\"close\" (click)=\"closeAuthObjectModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <dk-app-attribute-form2 *ngIf = \"newAuthFieldValueForm && authObjAttr\"\n                                [attributeControl]=\"authObjAttr\"\n                                [formGroup]=\"newAuthFieldValueForm\"\n                                [isSmallSize] = \"true\"\n                                [readonly]=\"false\">\n        </dk-app-attribute-form2>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"closeAuthObjectModal()\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"addAuthObject()\">Confirm</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnChanges, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {Attribute, AttributeBase, AttributeControlService, EntityService, SearchHelpComponent} from 'jor-angular';\nimport {AuthValueComponent} from './auth-value/auth-value.component';\nimport {IdentityService} from '../identity.service';\nimport {Message, MessageService} from 'ui-message-angular';\n\n@Component({\n  selector: 'app-authorization',\n  templateUrl: './authorization.component.html',\n  styleUrls: ['./authorization.component.css']\n})\nexport class AuthorizationComponent implements OnInit, OnChanges {\n  @Input() readonly: boolean;\n  @Input() mainForm: FormGroup;\n  @Input() ctrlName: string;\n  authObjFormArray: FormArray;\n  currentAuthFieldValueForm: FormGroup;\n  newAuthFieldValueForm: FormGroup;\n  isAuthValueModalShown = false;\n  isAuthObjectModalShown = false;\n  selectAll = false;\n  nodeID = 0;\n  authObjAttr: AttributeBase;\n  get displayAuthValueModal() {return this.isAuthValueModalShown ? 'block' : 'none'; }\n  get displayAuthObjectModal() {return this.isAuthObjectModalShown ? 'block' : 'none'; }\n\n  constructor( private fb: FormBuilder,\n               private identityService: IdentityService,\n               private entityService: EntityService,\n               private messageService: MessageService,\n               private attributeControlService: AttributeControlService ) { }\n\n  @ViewChild(SearchHelpComponent, { static: true })\n  private searchHelpComponent: SearchHelpComponent;\n  @ViewChild(AuthValueComponent, { static: true})\n  private authValueComponent: AuthValueComponent;\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    if (!this.mainForm) { return; }\n    this.authObjFormArray = <FormArray>this.mainForm.get(this.ctrlName);\n    this.authObjFormArray.controls.forEach( ctrl => {\n      if (ctrl.get('ROW_TYPE').value === 'FIELD') { ctrl.get('CHECKED').disable(); }\n    });\n  }\n\n  checkAll(): void {\n    this.authObjFormArray.controls.forEach( authObjCtrl => authObjCtrl.get('CHECKED').setValue(!this.selectAll));\n    this.selectAll = !this.selectAll;\n  }\n\n  checkAuthObject(idx: number): void {\n    const currentAuthObjCtrl = this.authObjFormArray.at(idx);\n    this.authObjFormArray.controls.forEach( (authObjCtrl, index) => {\n      if (index <= idx) { return; }\n      if (authObjCtrl.get('NODE_ID').value === currentAuthObjCtrl.get('NODE_ID').value) {\n        authObjCtrl.get('CHECKED').setValue(!currentAuthObjCtrl.get('CHECKED').value);\n      }\n    });\n  }\n\n  add(): void {\n    this.newAuthFieldValueForm = this.fb.group({\n      CHECKED: '',\n      COLLAPSED: false,\n      NODE_ID: ++this.nodeID,\n      STATUS: 'red',\n      RELATIONSHIP_INSTANCE_GUID: '',\n      auth_object_INSTANCE_GUID: '',\n      AUTH_VALUE: '',\n      OBJ_NAME: '',\n      DESC: '',\n      ROW_TYPE: 'OBJECT',\n      FIELD_NAME: '',\n      DATA_ELEMENT: ''\n    });\n    if (!this.authObjAttr) {\n      this.entityService.getElementMeta('AUTH_OBJ_NAME')\n        .subscribe(elementMeta => {\n          const attribute = <Attribute>elementMeta;\n          attribute.ATTR_GUID = elementMeta.ELEMENT_ID;\n          attribute.ATTR_NAME = elementMeta.ELEMENT_ID;\n          attribute.DATA_ELEMENT = elementMeta.ELEMENT_ID;\n          this.authObjAttr = this.attributeControlService.toSingleAttributeControl(attribute);\n          this.authObjAttr.name = 'OBJ_NAME';\n        });\n    }\n    this.isAuthObjectModalShown = true;\n  }\n\n  closeAuthObjectModal(): void {\n    this.isAuthObjectModalShown = false;\n  }\n\n  addAuthObject(): void {\n    const authObjName = this.newAuthFieldValueForm.get('OBJ_NAME').value;\n    this.identityService.getAuthObjectDetail(authObjName)\n      .subscribe( data => {\n        if ('ENTITY_ID' in data) {\n          this.newAuthFieldValueForm.get('auth_object_INSTANCE_GUID').setValue(data['INSTANCE_GUID']);\n          this.newAuthFieldValueForm.get('DESC').setValue(data['authObject'][0]['DESC']);\n          this.authObjFormArray.push(this.newAuthFieldValueForm);\n          data['relationships'][0].values.forEach( value => {\n            this.authObjFormArray.push(this.fb.group({\n              CHECKED: [{value: '', disabled: true}],\n              COLLAPSED: false,\n              NODE_ID: this.nodeID,\n              STATUS: 'red',\n              RELATIONSHIP_INSTANCE_GUID: '',\n              auth_object_INSTANCE_GUID: value['PARTNER_INSTANCES'][0]['INSTANCE_GUID'],\n              AUTH_VALUE: '',\n              OBJ_NAME: authObjName,\n              DESC: this.newAuthFieldValueForm.get('DESC').value,\n              ROW_TYPE: 'FIELD',\n              FIELD_NAME: value['PARTNER_INSTANCES'][0]['authField'][0]['FIELD_NAME'],\n              DATA_ELEMENT: value['PARTNER_INSTANCES'][0]['authField'][0]['DATA_ELEMENT']\n            }));\n          });\n        } else {\n          const errorMessages = <Message[]>data;\n          errorMessages.forEach( msg => this.messageService.add(msg));\n        }\n        this.isAuthObjectModalShown = false;\n      });\n  }\n\n  delete(): void {\n    let index = this.authObjFormArray.controls.findIndex( authObjCtrl => authObjCtrl.get('CHECKED').value);\n    while ( index !== -1) {\n      this.authObjFormArray.removeAt(index);\n      this.authObjFormArray.markAsDirty();\n      index = this.authObjFormArray.controls.findIndex( authObjCtrl => authObjCtrl.get('CHECKED').value);\n    }\n  }\n\n  onSearchHelp(rowID: number, exportObject: AbstractControl): void {\n    const afterExportFn = function (context: any, rowIDx: number) {\n      return () => context.onChangeCategory(rowIDx);\n    }(this, rowID).bind(this);\n\n    this.searchHelpComponent.openSearchHelpModalByEntity('authObject', 'authObject',\n      exportObject, this.readonly, null, null, afterExportFn);\n  }\n\n  expendCollapse(idx: number): void {\n    const currentCtrl = this.authObjFormArray.at(idx);\n    const parentNode = currentCtrl.get('NODE_ID').value;\n    this.authObjFormArray.controls.forEach( appAuthObjCtrl => {\n      if (appAuthObjCtrl.get('NODE_ID').value === parentNode ) {\n        appAuthObjCtrl.get('COLLAPSED').setValue(!appAuthObjCtrl.get('COLLAPSED').value);\n      }\n    });\n  }\n\n  openAuthValueModal(idx: number): void {\n    this.isAuthValueModalShown = true;\n    this.currentAuthFieldValueForm = <FormGroup>this.authObjFormArray.at(idx);\n  }\n\n  addAuthValue(): void {\n    if ( this.authValueComponent.generateAuthValue() ) {\n      this._coordinateStatus(this.currentAuthFieldValueForm);\n      this.isAuthValueModalShown = false;\n    }\n  }\n\n  setFullPermission(idx: number): void {\n    const currentAuthObjForm = this.authObjFormArray.at(idx);\n    if (currentAuthObjForm.get('STATUS').value === 'green') { return; }\n\n    if (currentAuthObjForm.get('ROW_TYPE').value === 'OBJECT') {\n      currentAuthObjForm.get('STATUS').setValue('green');\n      this.authObjFormArray.controls.forEach( appAuthObjForm => {\n        if (appAuthObjForm.get('NODE_ID').value === currentAuthObjForm.get('NODE_ID').value &&\n            appAuthObjForm.get('ROW_TYPE').value === 'FIELD') {\n          appAuthObjForm.get('AUTH_VALUE').setValue('\"*\"');\n          appAuthObjForm.get('AUTH_VALUE').markAsDirty();\n          appAuthObjForm.get('STATUS').setValue('green');\n        }\n      });\n    } else { // Field\n      currentAuthObjForm.get('AUTH_VALUE').setValue('\"*\"');\n      currentAuthObjForm.get('AUTH_VALUE').markAsDirty();\n      currentAuthObjForm.get('STATUS').setValue('green');\n      this._coordinateStatus(currentAuthObjForm);\n    }\n  }\n\n  _coordinateStatus(appAuthObjForm: AbstractControl): void {\n    const parentAuthObjectCtrl = this.authObjFormArray.controls.find( ctrl =>\n      ctrl.get('ROW_TYPE').value === 'OBJECT' &&\n      ctrl.get('NODE_ID').value === appAuthObjForm.get('NODE_ID').value);\n    if (this.authObjFormArray.controls.findIndex( ctrl => ctrl.get('ROW_TYPE').value === 'FIELD' &&\n      ctrl.get('NODE_ID').value === appAuthObjForm.get('NODE_ID').value &&\n      ctrl.get('STATUS').value === 'red') === -1) {\n      parentAuthObjectCtrl.get('STATUS').setValue('green');\n    } else {\n      if (this.authObjFormArray.controls.findIndex( ctrl => ctrl.get('ROW_TYPE').value === 'FIELD' &&\n        ctrl.get('NODE_ID').value === appAuthObjForm.get('NODE_ID').value &&\n        ctrl.get('STATUS').value === 'green') === -1) {\n        parentAuthObjectCtrl.get('STATUS').setValue('red');\n      } else {\n        parentAuthObjectCtrl.get('STATUS').setValue('yellow');\n      }\n    }\n  }\n}\n","/**\n * The custom route reuse strategy inherits the \"RouteReuseStrategy\" to achieve a very usual case,\n * which by default, Angular doesn't support.\n * 1. Search for items based on filter conditions.\n * 2. Navigate to one of the item to the detail page(component).\n * 3. Navigate back to searched item list without re-initializing the search&list component again.\n * This requires the Angular route to save the search&list component, and restore it whenever back.\n * The detail solution is described in following thread:\n * https://stackoverflow.com/questions/41280471/how-to-implement-routereusestrategy-shoulddetach-for-specific-routes-in-angular\n */\nimport {ActivatedRouteSnapshot, DetachedRouteHandle, RouteReuseStrategy} from '@angular/router';\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class CustomReuseStrategy implements RouteReuseStrategy {\n  routesToCache: string[] = ['users', 'apps', 'app-categories', 'auth-objects', 'permissions', 'profiles' ];\n  storedRouteHandles = new Map<string, DetachedRouteHandle>();\n\n  /**\n   * When navigation from a reusable component, and if shouldReuseRoute return false,\n   * this method is invoked to decide whether the current route should be stored.\n   * @param route\n   */\n  shouldDetach(route: ActivatedRouteSnapshot): boolean {\n    // console.log('detaching', route);\n    return this.routesToCache.indexOf(route.routeConfig.path) > -1;\n  }\n\n  /**\n   * If the current route need to be stored, that is shouldDetach return true,\n   * then on this method, you can implement a way to store routes. Usually in a Map.\n   * @param route\n   * @param handle\n   */\n  store(route: ActivatedRouteSnapshot, handle: DetachedRouteHandle): void {\n    // console.log('store', route);\n    this.storedRouteHandles.set(route.routeConfig.path, handle);\n  }\n\n  /**\n   * When navigation to a reusable component, and if shouldReuseRoute return false,\n   * this method is invoked to decide whether the target component can be get from a reuse buffer.\n   * @param route\n   */\n  shouldAttach(route: ActivatedRouteSnapshot): boolean {\n    // console.log('shouldAttach', route);\n    return this.storedRouteHandles.has(route.routeConfig.path);\n  }\n\n  /**\n   * If shouldAttach return true, then this method is invoke to retrieve the component from the buffer.\n   * @param route\n   */\n  retrieve(route: ActivatedRouteSnapshot): DetachedRouteHandle {\n    return this.storedRouteHandles.get(route.routeConfig.path);\n  }\n\n  /**\n   * By default, Angular doesn't re-initializing the same component if the navigation is not to\n   * a different one. For example, you switch different entity ID in the same entity type detail page.\n   * In this way, shouldReuseRoute should return true to avoid executing other methods in this Class.\n   * However, if you navigate from search&list component to entity detail component, then the method should return false.\n   * So that other methods can be executed to decide whether the search&list component should be stored for future reuse.\n   * @param future\n   * @param curr\n   */\n  shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\n    // console.log('shouldReuseRoute, future:', future, 'current:', curr);\n    return future.routeConfig === curr.routeConfig;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable, of} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  /**\n   * Ask user to confirm an action. `message` explains the action and choices.\n   * Returns observable resolving to `true`=confirm or `false`=cancel\n   */\n  confirm(message?: string): Observable<boolean> {\n    const confirmation = window.confirm(message || 'Is it OK?');\n\n    return of(confirmation);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\nimport {Entity, QueryObject, Relationship, UiMapperService} from 'jor-angular';\nimport {Router} from '@angular/router';\nimport {environment} from '../environments/environment';\nimport {Message, MessageService, messageType} from 'ui-message-angular';\nimport {AppCategoryList, AppList, AuthObjList, Authorization, AuthProfileList, PermissionList, UserList} from './identity';\nimport {formatDate} from '@angular/common';\nimport {AbstractControl, FormArray} from '@angular/forms';\nimport {Session} from 'ui-logon-angular';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n};\n\n@Injectable({providedIn: 'root'})\nexport class IdentityService {\n  private originalHost = environment.originalHost;\n  private session: Session;\n  private pseudoNodeID = 0;\n\n  constructor(private http: HttpClient,\n              private messageService: MessageService,\n              private uiMapperService: UiMapperService,\n              private router: Router) {\n  }\n\n  setSession( data: any ) {\n    this.session = <Session>data;\n  }\n\n  get Session(): Session {\n    if (this.session) { return this. session; }\n    const defaultSession = new Session();\n    defaultSession.USER_ID = 'DH001';\n    defaultSession.LANGUAGE = 'EN';\n    return defaultSession;\n  }\n\n  get CurrentTime(): string {\n    return formatDate( new Date(), 'yyyy-MM-dd hh:mm:ss', 'en-US' );\n  }\n\n  searchPermissions(permissionID: string, permissionDesc: string): Observable<PermissionList[] | Message[]> {\n    const queryObject = new QueryObject();\n    queryObject.ENTITY_ID = 'permission';\n    queryObject.RELATION_ID = 'r_role';\n    queryObject.PROJECTION = ['NAME', 'DESCRIPTION',\n      {FIELD_NAME: 'CREATED_BY', RELATION_ID: 'permission'},\n      {FIELD_NAME: 'CREATE_TIME', RELATION_ID: 'permission'},\n      {FIELD_NAME: 'CHANGED_BY', RELATION_ID: 'permission'},\n      {FIELD_NAME: 'CHANGE_TIME', RELATION_ID: 'permission'}];\n    queryObject.FILTER = [];\n    if (permissionID) {\n      if (permissionID.includes('*') || permissionID.includes('%')) {\n        queryObject.FILTER.push({FIELD_NAME: 'NAME', OPERATOR: 'CN', LOW: permissionID});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'NAME', OPERATOR: 'EQ', LOW: permissionID});\n      }\n    }\n    if (permissionDesc) {\n      if (permissionDesc.includes('*')) {\n        permissionDesc = permissionDesc.replace(/\\*/gi, '%');\n        queryObject.FILTER.push({FIELD_NAME: 'DESCRIPTION', OPERATOR: 'CN', LOW: permissionDesc});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'DESCRIPTION', OPERATOR: 'EQ', LOW: permissionDesc});\n      }\n    }\n    queryObject.SORT = [{FIELD_NAME: 'CHANGE_TIME', RELATION_ID: 'permission', ORDER: 'DESC'}];\n    return this.http.post<any>(this.originalHost + `/api/query`, queryObject, httpOptions).pipe(\n      catchError(this.handleError<any>('searchObjects')));\n  }\n\n  getPermissionDetail(permissionName: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_role', NAME: permissionName},\n      piece: {RELATIONS: ['permission', 'r_role'],\n        RELATIONSHIPS: [\n          {\n            RELATIONSHIP_ID: 'rs_user_role',\n            PARTNER_ENTITY_PIECES: { RELATIONS: ['r_user'] }\n          },\n          {\n            RELATIONSHIP_ID: 'rs_role_category_profile',\n            PARTNER_ENTITY_PIECES: [\n              { ENTITY_ID: 'category',\n                piece: { RELATIONS: ['r_app_category'],\n                  RELATIONSHIPS: [{RELATIONSHIP_ID: 'rs_app_category',\n                    PARTNER_ENTITY_PIECES: { RELATIONS: ['app'] } }]}},\n              { ENTITY_ID: 'authProfile',\n                piece: { RELATIONS: ['authProfile'],\n                  RELATIONSHIPS: [{RELATIONSHIP_ID: 'rs_auth_profile_object',\n                    PARTNER_ENTITY_PIECES: { RELATIONS: ['authObject'],\n                      RELATIONSHIPS: [{ RELATIONSHIP_ID: 'rs_auth_object_field',\n                        PARTNER_ENTITY_PIECES: { RELATIONS: ['authField'] }}]}}]}}\n            ]\n          }\n        ]\n      }\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getPermissionDetail')));\n  }\n\n  getPermissionByName(permissionName: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_role', NAME: permissionName},\n      piece: {RELATIONS: ['r_role']}\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getPermissionByName')));\n  }\n\n  searchApps(appID: string, appName: string): Observable<AppList[] | Message[]> {\n    const queryObject = new QueryObject();\n    queryObject.ENTITY_ID = 'app';\n    queryObject.RELATION_ID = 'app';\n    queryObject.PROJECTION = ['APP_ID', 'NAME', 'ROUTE_LINK', 'IS_EXTERNAL', 'CREATED_BY', 'CREATE_TIME', 'CHANGED_BY', 'CHANGE_TIME'];\n    queryObject.FILTER = [];\n    if (appID) {\n      if (appID.includes('*') || appID.includes('%')) {\n        queryObject.FILTER.push({FIELD_NAME: 'APP_ID', OPERATOR: 'CN', LOW: appID});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'APP_ID', OPERATOR: 'EQ', LOW: appID});\n      }\n    }\n    if (appName) {\n      if (appName.includes('*')) {\n        appName = appName.replace(/\\*/gi, '%');\n        queryObject.FILTER.push({FIELD_NAME: 'NAME', OPERATOR: 'CN', LOW: appName});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'NAME', OPERATOR: 'EQ', LOW: appName});\n      }\n    }\n    queryObject.SORT = [{FIELD_NAME: 'CHANGE_TIME', ORDER: 'DESC'}];\n    return this.http.post<any>(this.originalHost + `/api/query`, queryObject, httpOptions).pipe(\n      catchError(this.handleError<any>('searchObjects')));\n  }\n\n  getAppDetail(appID: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'app', APP_ID: appID},\n      piece: {\n        RELATIONS: ['app'],\n        RELATIONSHIPS: [\n          {\n            RELATIONSHIP_ID: 'rs_app_category',\n            PARTNER_ENTITY_PIECES: { RELATIONS: ['r_app_category'] }\n          },\n          {\n            RELATIONSHIP_ID: 'rs_app_auth',\n            PARTNER_ENTITY_PIECES: {\n              RELATIONS: ['authObject'],\n              RELATIONSHIPS: [\n                {\n                  RELATIONSHIP_ID: 'rs_auth_object_field',\n                  PARTNER_ENTITY_PIECES: { RELATIONS: ['authField'] }\n                }\n              ]\n            }\n          }\n        ]\n      }\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getAppDetail')));\n  }\n\n  getAppByID(appID: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'app', APP_ID: appID},\n      piece: {RELATIONS: ['app']}\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getAppByID')));\n  }\n\n  getCategoryName(categoryID: string): Observable<{}> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_app_category', ID: categoryID},\n      piece: {RELATIONS: ['r_app_category']}\n    };\n    return this.http.post<{}>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      map(instance => {\n        return 'INSTANCE_GUID' in instance ?\n          {\n            INSTANCE_GUID: instance['INSTANCE_GUID'],\n            NAME: instance['r_app_category'] ? instance['r_app_category'][0]['NAME'] : '',\n            ICON: instance['r_app_category'] ? instance['r_app_category'][0]['ICON'] : ''\n          } : instance[0];\n      }),\n      catchError(this.handleError<any>('getCategoryName')));\n  }\n\n  searchAuthObjects(authObjName: string, authObjDesc: string): Observable<AuthObjList[] | Message[]> {\n    const queryObject = new QueryObject();\n    queryObject.ENTITY_ID = 'authObject';\n    queryObject.RELATION_ID = 'authObject';\n    queryObject.PROJECTION = ['OBJ_NAME', 'DESC', 'CREATED_BY', 'CREATE_TIME', 'CHANGED_BY', 'CHANGE_TIME'];\n    queryObject.FILTER = [];\n    if (authObjName) {\n      if (authObjName.includes('*') || authObjName.includes('%')) {\n        queryObject.FILTER.push({FIELD_NAME: 'OBJ_NAME', OPERATOR: 'CN', LOW: authObjName});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'OBJ_NAME', OPERATOR: 'EQ', LOW: authObjName});\n      }\n    }\n    if (authObjDesc) {\n      if (authObjDesc.includes('*')) {\n        authObjDesc = authObjDesc.replace(/\\*/gi, '%');\n        queryObject.FILTER.push({FIELD_NAME: 'DESC', OPERATOR: 'CN', LOW: authObjDesc});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'DESC', OPERATOR: 'EQ', LOW: authObjDesc});\n      }\n    }\n    queryObject.SORT = [{FIELD_NAME: 'CHANGE_TIME', ORDER: 'DESC'}];\n    return this.http.post<any>(this.originalHost + `/api/query`, queryObject, httpOptions).pipe(\n      catchError(this.handleError<any>('searchAuthObjects')));\n  }\n\n  getAuthObjectDetail(authObjName: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'authObject', OBJ_NAME: authObjName},\n      piece: {\n        RELATIONS: ['authObject'],\n        RELATIONSHIPS: [\n          {\n            RELATIONSHIP_ID: 'rs_auth_object_field',\n            PARTNER_ENTITY_PIECES: { RELATIONS: ['authField'] }\n          }\n        ]\n      }\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getAuthObjectDetail')));\n  }\n\n  getAuthObjectByName(authObjName: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'authObject', OBJ_NAME: authObjName},\n      piece: {RELATIONS: ['authObject']}\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getAuthObjectByName')));\n  }\n\n  getAuthFieldInfo(authFieldName: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'authField', FIELD_NAME: authFieldName},\n      piece: {RELATIONS: ['authField']}\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      map(instance => {\n        return 'INSTANCE_GUID' in instance ?\n          {\n            INSTANCE_GUID: instance['INSTANCE_GUID'],\n            NAME: instance['authField'] ? instance['authField'][0]['FIELD_NAME'] : '',\n            DATA_ELEMENT: instance['authField'] ? instance['authField'][0]['DATA_ELEMENT'] : ''\n          } : instance[0];\n      }),\n      catchError(this.handleError<any>('getAuthObjectByName')));\n  }\n\n  searchAppCategories(appCategoryID: string, appCategoryName: string): Observable<AppCategoryList[] | Message[]> {\n    const queryObject = new QueryObject();\n    queryObject.ENTITY_ID = 'category';\n    queryObject.RELATION_ID = 'r_app_category';\n    queryObject.PROJECTION = [ 'ID', 'NAME', 'ICON',\n      {FIELD_NAME: 'CREATED_BY', RELATION_ID: 'category'},\n      {FIELD_NAME: 'CREATE_TIME', RELATION_ID: 'category'},\n      {FIELD_NAME: 'CHANGED_BY', RELATION_ID: 'category'},\n      {FIELD_NAME: 'CHANGE_TIME', RELATION_ID: 'category'} ];\n    queryObject.FILTER = [];\n    if (appCategoryID) {\n      if (appCategoryID.includes('*') || appCategoryID.includes('%')) {\n        queryObject.FILTER.push({FIELD_NAME: 'ID', OPERATOR: 'CN', LOW: appCategoryID});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'ID', OPERATOR: 'EQ', LOW: appCategoryID});\n      }\n    }\n    if (appCategoryName) {\n      if (appCategoryName.includes('*')) {\n        appCategoryName = appCategoryName.replace(/\\*/gi, '%');\n        queryObject.FILTER.push({FIELD_NAME: 'NAME', OPERATOR: 'CN', LOW: appCategoryName});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'NAME', OPERATOR: 'EQ', LOW: appCategoryName});\n      }\n    }\n    queryObject.FILTER.push({RELATION_ID: 'category', FIELD_NAME: 'TYPE', OPERATOR: 'EQ', LOW: 'APP'});\n    queryObject.SORT = [{FIELD_NAME: 'CHANGE_TIME', RELATION_ID: 'category', ORDER: 'DESC'}];\n    return this.http.post<any>(this.originalHost + `/api/query`, queryObject, httpOptions).pipe(\n      catchError(this.handleError<any>('searchAppCategories')));\n  }\n\n  getAppCategoryDetail(appCategoryID: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_app_category', ID: appCategoryID},\n      piece: {\n        RELATIONS: ['category', 'r_app_category'],\n        RELATIONSHIPS: [\n          {\n            RELATIONSHIP_ID: 'rs_app_category',\n            PARTNER_ENTITY_PIECES: { RELATIONS: ['app'] }\n          },\n          {\n            RELATIONSHIP_ID: 'rs_role_category_profile',\n            PARTNER_ENTITY_PIECES: [\n              {\n                ENTITY_ID: 'permission',\n                piece: { RELATIONS: ['r_role']}\n              }\n            ]\n          }\n        ]\n      }\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getAppCategoryDetail')));\n  }\n\n  getAppCategoryByID(appCategoryID: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_app_category', ID: appCategoryID},\n      piece: {RELATIONS: ['r_app_category']}\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getAppCategoryByID')));\n  }\n\n  searchAuthProfiles(profileName: string, profileDesc: string): Observable<AuthProfileList[] | Message[]> {\n    const queryObject = new QueryObject();\n    queryObject.ENTITY_ID = 'authProfile';\n    queryObject.RELATION_ID = 'authProfile';\n    queryObject.PROJECTION = [ 'PROFILE_NAME', 'DESC', 'CREATED_BY', 'CREATE_TIME', 'CHANGED_BY', 'CHANGE_TIME'];\n    queryObject.FILTER = [];\n    if (profileName) {\n      if (profileName.includes('*') || profileName.includes('%')) {\n        queryObject.FILTER.push({FIELD_NAME: 'PROFILE_NAME', OPERATOR: 'CN', LOW: profileName});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'PROFILE_NAME', OPERATOR: 'EQ', LOW: profileName});\n      }\n    }\n    if (profileDesc) {\n      if (profileDesc.includes('*')) {\n        profileDesc = profileDesc.replace(/\\*/gi, '%');\n        queryObject.FILTER.push({FIELD_NAME: 'DESC', OPERATOR: 'CN', LOW: profileDesc});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'DESC', OPERATOR: 'EQ', LOW: profileDesc});\n      }\n    }\n    queryObject.SORT = [{FIELD_NAME: 'CHANGE_TIME', ORDER: 'DESC'}];\n    return this.http.post<any>(this.originalHost + `/api/query`, queryObject, httpOptions).pipe(\n      catchError(this.handleError<any>('searchAuthProfiles')));\n  }\n\n  getAuthProfileDetail(profileName: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'authProfile', PROFILE_NAME: profileName},\n      piece: {\n        RELATIONS: ['authProfile'],\n        RELATIONSHIPS: [\n          {\n            RELATIONSHIP_ID: 'rs_auth_profile_object',\n            PARTNER_ENTITY_PIECES: {\n              RELATIONS: ['authObject'],\n              RELATIONSHIPS: [\n                {\n                  RELATIONSHIP_ID: 'rs_auth_object_field',\n                  PARTNER_ENTITY_PIECES: { RELATIONS: ['authField'] }\n                }\n              ]\n            }\n          }\n        ]\n      }\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getAuthProfileDetail')));\n  }\n\n  getAuthProfileByName(profileName: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'authProfile', PROFILE_NAME: profileName},\n      piece: {RELATIONS: ['authProfile']}\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getAuthProfileByName')));\n  }\n\n  searchUsers(userID: string, userName: string): Observable<UserList[] | Message[]> {\n    const queryObject = new QueryObject();\n    queryObject.ENTITY_ID = 'person';\n    queryObject.RELATION_ID = 'r_user';\n    queryObject.PROJECTION = ['USER_ID', 'USER_NAME', 'DISPLAY_NAME', 'LOCK', 'PWD_STATE'];\n    queryObject.FILTER = [];\n    if (userID) {\n      if (userID.includes('*') || userID.includes('%')) {\n        queryObject.FILTER.push({FIELD_NAME: 'USER_ID', OPERATOR: 'CN', LOW: userID});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'USER_ID', OPERATOR: 'EQ', LOW: userID});\n      }\n    }\n    if (userName) {\n      if (userName.includes('*')) {\n        userName = userName.replace(/\\*/gi, '%');\n        queryObject.FILTER.push({FIELD_NAME: 'USER_NAME', OPERATOR: 'CN', LOW: userName});\n      } else {\n        queryObject.FILTER.push({FIELD_NAME: 'USER_NAME', OPERATOR: 'EQ', LOW: userName});\n      }\n    }\n    queryObject.SORT = ['USER_ID'];\n    return this.http.post<any>(this.originalHost + `/api/query`, queryObject, httpOptions).pipe(\n      catchError(this.handleError<any>('searchObjects')));\n  }\n\n  getUserDetail(userID: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_user', USER_ID: userID},\n      piece: {RELATIONS: ['r_user', 'r_employee', 'r_email', 'r_address', 'r_personalization'],\n        RELATIONSHIPS: [\n          {\n            RELATIONSHIP_ID: 'rs_user_role',\n            PARTNER_ENTITY_PIECES: { RELATIONS: ['r_role'] }\n          }]\n      }\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getUserDetail')));\n  }\n\n  getUserByUserID(userID: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_user', USER_ID: userID},\n      piece: {RELATIONS: ['r_user']}\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getUserByUserID')));\n  }\n\n  getUserByUserName(userName: string): Observable<Entity | Message[]> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_user', USER_NAME: userName},\n      piece: {RELATIONS: ['r_user']}\n    };\n    return this.http.post<Entity | Message[]>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      catchError(this.handleError<any>('getUserByUserName')));\n  }\n\n  getRoleDesc(roleID: string): Observable<{}> {\n    const pieceObject = {\n      ID: { RELATION_ID: 'r_role', NAME: roleID},\n      piece: {RELATIONS: ['r_role']}\n    };\n    return this.http.post<{}>(\n      this.originalHost + `/api/entity/instance/piece`, pieceObject, httpOptions).pipe(\n      map(instance => {\n        return 'INSTANCE_GUID' in instance ?\n          {\n            INSTANCE_GUID: instance['INSTANCE_GUID'],\n            DESCRIPTION: instance['r_role'] ? instance['r_role'][0]['DESCRIPTION'] : ''\n          } : instance[0];\n      }),\n      catchError(this.handleError<any>('getRoleDesc')));\n  }\n\n  orchestrate(operations: any): any {\n    return this.http.post<any>(\n      this.originalHost + `/api/entity/orchestrate`, operations, httpOptions).pipe(\n      catchError(this.handleError<any>('orchestrate')));\n  }\n\n  save(entity: Entity): Observable<Entity | Message[]> {\n    if (entity['INSTANCE_GUID']) {\n      return this.http.put<Entity | Message[]>(\n        this.originalHost + `/api/entity`, entity, httpOptions).pipe(\n        catchError(this.handleError<any>('saveUser')));\n    } else {\n      return this.http.post<Entity | Message[]>(\n        this.originalHost + `/api/entity`, entity, httpOptions).pipe(\n        catchError(this.handleError<any>('save')));\n    }\n  }\n\n  delete(entityGUID: string): Observable<null | Message[]> {\n    return this.http.delete<null | Message[]>(this.originalHost + `/api/entity/instance/` + entityGUID, httpOptions).pipe(\n      catchError(this.handleError<any>('delete'))\n    );\n  }\n\n  parseProfileAuthObject(relationship: Relationship): any {\n    const authorizations = [];\n    if (!relationship) { return authorizations; }\n    relationship.values.forEach( value => {\n      const authorization = value['AUTH_VALUE'] ?\n        <Authorization>JSON.parse(value['AUTH_VALUE']) : null;\n      const status = authorization ?\n        Object.values(authorization.AuthFieldValue).findIndex( authValue => !authValue ) !== -1 ?\n          'yellow' : 'green' : 'red';\n      authorizations.push({\n        CHECKED: '',\n        COLLAPSED: false,\n        NODE_ID: value['RELATIONSHIP_INSTANCE_GUID'] || ++this.pseudoNodeID,\n        STATUS: status,\n        RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n        auth_object_INSTANCE_GUID: value['PARTNER_INSTANCES'][0]['INSTANCE_GUID'],\n        AUTH_VALUE: value['AUTH_VALUE'],\n        OBJ_NAME: value['PARTNER_INSTANCES'][0]['authObject'][0]['OBJ_NAME'],\n        DESC: value['PARTNER_INSTANCES'][0]['authObject'][0]['DESC'],\n        ROW_TYPE: 'OBJECT',\n        FIELD_NAME: '',\n        DATA_ELEMENT: '',\n      });\n\n      const authObjectFields = value['PARTNER_INSTANCES'][0]['relationships'][0];\n      authObjectFields.values.forEach( value2 => {\n        const authFieldName = value2['PARTNER_INSTANCES'][0]['authField'][0]['FIELD_NAME'];\n        authorizations.push({\n          CHECKED: '',\n          COLLAPSED: false,\n          NODE_ID: value['RELATIONSHIP_INSTANCE_GUID'] || this.pseudoNodeID,\n          STATUS: authorization.AuthFieldValue[authFieldName] ?\n            authorization.AuthFieldValue[authFieldName].length > 0 ? 'green' : 'red' : 'red',\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          auth_object_INSTANCE_GUID: '',\n          AUTH_VALUE: authorization && authorization.AuthFieldValue[authFieldName]\n            && JSON.stringify(authorization.AuthFieldValue[authFieldName], null, ' '),\n          OBJ_NAME: value['PARTNER_INSTANCES'][0]['authObject'][0]['OBJ_NAME'],\n          DESC: '',\n          ROW_TYPE: 'FIELD',\n          FIELD_NAME: authFieldName,\n          DATA_ELEMENT: value2['PARTNER_INSTANCES'][0]['authField'][0]['DATA_ELEMENT'],\n        });\n      });\n    });\n    return authorizations;\n  }\n\n  composeAuthChanges( formArray: FormArray, originalValue: any, relationshipID: string): any {\n    let authorization;\n    let currentAuthObjectCtrl: AbstractControl;\n    let isAuthorizationChanged = false;\n    formArray.controls.forEach( control => {\n      const rowType = control.get('ROW_TYPE').value;\n      if (rowType === 'OBJECT') {\n        if (currentAuthObjectCtrl && isAuthorizationChanged) {\n          currentAuthObjectCtrl.get('AUTH_VALUE').setValue(JSON.stringify(authorization, null, ' '));\n          currentAuthObjectCtrl.get('AUTH_VALUE').markAsDirty();\n        }\n        currentAuthObjectCtrl = control;\n        authorization = new Authorization();\n        authorization.AuthObject = control.get('OBJ_NAME').value;\n        authorization.AuthFieldValue = {};\n        isAuthorizationChanged = false;\n      } else { // Field\n        if (control.dirty) {\n          isAuthorizationChanged = true;\n          control.markAsPristine();\n        }\n        authorization.AuthFieldValue[control.get('FIELD_NAME').value] =\n          control.get('AUTH_VALUE').value ? JSON.parse(control.get('AUTH_VALUE').value) : null;\n      }\n    });\n    if (currentAuthObjectCtrl && isAuthorizationChanged) {\n      currentAuthObjectCtrl.get('AUTH_VALUE').setValue(JSON.stringify(authorization, null, ' '));\n      currentAuthObjectCtrl.get('AUTH_VALUE').markAsDirty();\n    }\n    const originalAuthObjValue = [];\n    if ( originalValue ) {\n      originalValue.forEach( authObj => {\n        if (authObj.ROW_TYPE === 'OBJECT') { originalAuthObjValue.push( authObj ); }\n      });\n    }\n\n    return this.uiMapperService.composeChangedRelationship(\n      relationshipID, [{ENTITY_ID: 'authObject', ROLE_ID: 'auth_object'}],\n      formArray, originalAuthObjValue,\n      ['CHECKED', 'COLLAPSED', 'NODE_ID', 'OBJ_NAME', 'DESC', 'ROW_TYPE', 'FIELD_NAME', 'DATA_ELEMENT']);\n  }\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n      if (error.status === 401) {\n        this.messageService.addMessage('EXCEPTION', 'NOT_AUTHENTICATED_OR_SESSION_EXPIRED', messageType.Exception);\n      } else {\n        this.messageService.addMessage('EXCEPTION', 'GENERIC', messageType.Exception, operation, error.message);\n      }\n\n      this.router.navigate(['errors']);\n      console.error(operation, error); // log to console instead\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","export class PermissionList {\n  NAME: string;\n  DESCRIPTION: string;\n  CREATED_BY: string;\n  CREATE_TIME: string;\n  CHANGED_BY: string;\n  CHANGE_TIME: string;\n  INSTANCE_GUID: string;\n}\n\nexport class UserList {\n  USER_ID: string;\n  USER_NAME: string;\n  DISPLAY_NAME: string;\n  LOCK: boolean;\n  PWD_STATE: string;\n  INSTANCE_GUID: string;\n}\n\nexport class AppList {\n  APP_ID: string;\n  NAME: string;\n  ROUTE_LINK: string;\n  IS_EXTERNAL: boolean;\n  CREATED_BY: string;\n  CREATE_TIME: string;\n  CHANGED_BY: string;\n  CHANGE_TIME: string;\n  INSTANCE_GUID: string;\n}\n\nexport class AuthObjList {\n  OBJ_NAME: string;\n  DESC: string;\n  CREATED_BY: string;\n  CREATE_TIME: string;\n  CHANGED_BY: string;\n  CHANGE_TIME: string;\n  INSTANCE_GUID: string;\n}\n\nexport class AuthProfileList {\n  PROFILE_NAME: string;\n  DESC: string;\n  CREATED_BY: string;\n  CREATE_TIME: string;\n  CHANGED_BY: string;\n  CHANGE_TIME: string;\n  INSTANCE_GUID: string;\n}\n\nexport class AppCategoryList {\n  ID: string;\n  ICON: string;\n  NAME: string;\n  TYPE: string;\n  CREATED_BY: string;\n  CREATE_TIME: string;\n  CHANGED_BY: string;\n  CHANGE_TIME: string;\n  INSTANCE_GUID: string;\n}\n\nexport class Authorization {\n  AuthObject: string;\n  AuthFieldValue: AuthFieldValue;\n}\n\nexport class AuthFieldValue {\n  [key: string]: Array<string | SelectOption>;\n}\n\nexport class SelectOption {\n  Operator: Operator;\n  Option: Option;\n  Low: string | number;\n  High: string | number;\n}\n\nexport enum Operator {\n  Between = 'Between',\n  GreaterThan = 'GreaterThan',\n  LessThan = 'LessThan',\n  GreaterEqual = 'GreaterEqual',\n  LessEqual = 'LessEqual',\n  Equal = 'Equal',\n  NotEqual = 'NotEqual',\n  StartsWith = 'StartsWith',\n  EndsWith = 'EndsWith',\n  Contains = 'Contains',\n  Matches = 'Matches'\n}\n\nexport enum Option {\n  Include = 'Include',\n  Exclude = 'Exclude'\n}\n","export const msgStore = [\n  { msgCat: 'EXCEPTION',\n    msgName: 'GENERIC',\n    msgText: {\n      EN: {shortText: 'Exception Occurs in Operation: \\'%s\\'',\n           longText: '%s1'}\n    }\n  },\n  { msgCat: 'EXCEPTION',\n    msgName: 'NOT_AUTHENTICATED_OR_SESSION_EXPIRED',\n    msgText: {\n      EN: {shortText: 'You are not authenticated or your session is expired!',\n        longText: 'You are not authenticated or your session is expired, please <a href=\\'/logon\\'>re-logon</a>.'}\n    }\n  },\n  { msgCat: 'GENERAL',\n    msgName: 'EMPTY_LIST',\n    msgText: {\n      EN: {shortText: 'No result is found',\n        longText: 'The system cannot find any items meet the search criteria.'}\n    }\n  },\n  { msgCat: 'GENERAL',\n    msgName: 'UNSAVED_CHANGES',\n    msgText: {\n      EN: {\n        shortText: 'There are unsaved changes. Do you want to save the changes?',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'GENERAL',\n    msgName: 'NO_CHANGE',\n    msgText: {\n      EN: {\n        shortText: 'No change is made, saving is not necessary.',\n        longText: 'The data is not changed, thus there is no need to save changes'\n      }\n    }\n  },\n  { msgCat: 'USER',\n    msgName: 'INVALID',\n    msgText: {\n      EN: {shortText: 'Data is invalid, please check.',\n        longText: 'The data still contains some errors, please make sure all mandatory fields are filled!'}\n    }\n  },\n  { msgCat: 'USER',\n    msgName: 'USER_NAME_EXISTS',\n    msgText: {\n      EN: {shortText: 'User name: \\'%s\\' already exists!',\n        longText: ''}\n    }\n  },\n  { msgCat: 'USER',\n    msgName: 'USER_ID_EXISTS',\n    msgText: {\n      EN: {shortText: 'User ID: \\'%s\\' already exists!',\n        longText: ''}\n    }\n  },\n  { msgCat: 'USER',\n    msgName: 'AT_LEAST_ONE_EMAIL',\n    msgText: {\n      EN: {\n        shortText: 'At least one email needs to be maintained!',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'USER',\n    msgName: 'USER_SAVED',\n    msgText: {\n      EN: {\n        shortText: 'User \\'%s\\' is saved!',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'PERMISSION',\n    msgName: 'PERMISSION_EXISTS',\n    msgText: {\n      EN: {\n        shortText: 'The permission %s exists.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'PERMISSION',\n    msgName: 'INVALID',\n    msgText: {\n      EN: {\n        shortText: 'The permission contains invalid inputs, please check.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'PERMISSION',\n    msgName: 'SAVED',\n    msgText: {\n      EN: {\n        shortText: 'The permission is saved.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'APP',\n    msgName: 'APP_EXISTS',\n    msgText: {\n      EN: {\n        shortText: 'The App %s exists.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'APP',\n    msgName: 'INVALID',\n    msgText: {\n      EN: {\n        shortText: 'The App contains invalid inputs, please check.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'APP',\n    msgName: 'SAVED',\n    msgText: {\n      EN: {\n        shortText: 'The App is saved.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'AUTH_OBJECT',\n    msgName: 'AUTH_OBJECT_EXISTS',\n    msgText: {\n      EN: {\n        shortText: 'The authorization object %s exists.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'AUTH_OBJECT',\n    msgName: 'INVALID',\n    msgText: {\n      EN: {\n        shortText: 'The authorization object contains invalid inputs, please check.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'AUTH_OBJECT',\n    msgName: 'SAVED',\n    msgText: {\n      EN: {\n        shortText: 'The authorization object is saved.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'APP_CATEGORY',\n    msgName: 'APP_CATEGORY_EXISTS',\n    msgText: {\n      EN: {\n        shortText: 'The application category %s exists.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'APP_CATEGORY',\n    msgName: 'INVALID',\n    msgText: {\n      EN: {\n        shortText: 'The application category contains invalid inputs, please check.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'APP_CATEGORY',\n    msgName: 'SAVED',\n    msgText: {\n      EN: {\n        shortText: 'The application category is saved.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'AUTH_PROFILE',\n    msgName: 'AUTH_PROFILE_EXISTS',\n    msgText: {\n      EN: {\n        shortText: 'The authorization profile %s exists.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'AUTH_PROFILE',\n    msgName: 'INVALID',\n    msgText: {\n      EN: {\n        shortText: 'The authorization profile contains invalid inputs, please check.',\n        longText: ''\n      }\n    }\n  },\n  { msgCat: 'AUTH_PROFILE',\n    msgName: 'SAVED',\n    msgText: {\n      EN: {\n        shortText: 'The authorization profile is saved.',\n        longText: ''\n      }\n    }\n  }\n];\n","<div class=\"dk-auth-main mx-3\">\n  <div class=\"btn-toolbar justify-content-end\" role=\"toolbar\">\n    <button type=\"button\" id=\"remove-object\" class=\"btn btn-light btn-sm\" (click)=\"delete()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-minus\"></span> Remove</button>\n    <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"add()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-plus\"></span> Add</button>\n  </div>\n  <table class=\"table table-bordered table-sm dk-table\" [formGroup]=\"mainForm\">\n    <thead class=\"thead-light\">\n    <tr>\n      <th class=\"dk-checkbox\"><input name=\"btSelectAll\" type=\"checkbox\" (click)=\"checkAll()\"></th>\n      <th class=\"dk-auth-object\">Category / App Name</th>\n      <th class=\"dk-auth-order\">Order</th>\n      <th class=\"dk-auth-value\">Description</th>\n    </tr>\n    </thead>\n\n    <tbody>\n    <tr *ngFor=\"let categoryForm of categoryFormArray.controls; let i = index\" class=\"treegrid-expanded\"\n        [class.collapsed]=\"categoryForm.get('ROW_TYPE').value === 'app' && categoryForm.get('COLLAPSED').value\">\n      <td class=\"dk-checkbox\" [formGroup]=\"categoryForm\">\n        <input class=\"form-control form-control-sm\" type=\"checkbox\" formControlName=\"CHECKED\" (click)=\"checkCategory(i)\">\n      </td>\n      <td *ngIf=\"categoryForm.get('ROW_TYPE').value === 'category'\" >\n      <span [ngClass]=\"{'treegrid-expander-expanded': !categoryForm.get('COLLAPSED').value,\n            'treegrid-expander-collapsed': categoryForm.get('COLLAPSED').value}\"\n            class=\"treegrid-expander\" (click)=\"expendCollapse(i)\">\n      </span>\n        <span [ngClass]=\"categoryForm.get('category.ICON').value\"></span>\n        {{categoryForm.get('category.ID').value}}\n      </td>\n      <td *ngIf=\"categoryForm.get('ROW_TYPE').value === 'app'\" >\n        <span class=\"treegrid-indent\"></span>\n        <span class=\"treegrid-expander\"></span>\n        {{categoryForm.get('app.APP_ID').value}}\n      </td>\n      <td [formGroup]=\"categoryForm\">\n        <input class=\"form-control form-control-sm\" type=\"number\" formControlName=\"ORDER\"\n               [readOnly]=\"categoryForm.get('ROW_TYPE').value === 'app' || readonly\">\n      </td>\n      <td *ngIf=\"categoryForm.get('ROW_TYPE').value === 'category'\" >{{categoryForm.get('category.NAME').value}}</td>\n      <td *ngIf=\"categoryForm.get('ROW_TYPE').value === 'app'\" >{{categoryForm.get('app.NAME').value}}</td>\n    </tr>\n    </tbody>\n  </table>\n</div>\n\n<div class=\"modal fade\" id=\"addAppCategory\" tabindex=\"-1\" role=\"dialog\"\n     [ngClass]=\"{'show': isCategoryModalShown}\"\n     [ngStyle]=\"{'display': displayCategoryModal}\">\n  <div class=\"modal-dialog\" role=\"document\">\n    <div class=\"modal-content\">\n      <div class=\"modal-header\">\n        <h5 class=\"modal-title\" id=\"addAuthObjectTitle\">Add App Category</h5>\n        <button type=\"button\" class=\"close\" (click)=\"closeCategoryModal()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <div class=\"modal-body\">\n        <dk-app-attribute-form2 *ngIf = \"newCategoryForm && categoryAttr\"\n                                [attributeControl]=\"categoryAttr\"\n                                [formGroup]=\"newCategoryForm.get('category')\"\n                                [isSmallSize] = \"true\"\n                                [readonly]=\"false\"\n                                (keyup)=\"enterConfirm($event)\">\n        </dk-app-attribute-form2>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"button\" class=\"btn btn-sm btn-secondary\" (click)=\"closeCategoryModal()\">Cancel</button>\n        <button type=\"button\" class=\"btn btn-sm btn-primary\" (click)=\"confirm()\">Confirm</button>\n      </div>\n    </div>\n  </div>\n</div>\n","import {Component, Input, OnChanges, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {IdentityService} from '../../../identity.service';\nimport {Attribute, AttributeBase, AttributeControlService, EntityService, SearchHelpComponent} from 'jor-angular';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {AuthValueComponent} from '../../../authorization/auth-value/auth-value.component';\nimport { v4 as uuid } from 'uuid';\n\n@Component({\n  selector: 'app-permission-detail-category',\n  templateUrl: './permission-detail-category.component.html',\n  styleUrls: ['./permission-detail-category.component.css']\n})\nexport class PermissionDetailCategoryComponent implements OnInit, OnChanges {\n  @Input() readonly: boolean;\n  @Input() mainForm: FormGroup;\n  categoryFormArray: FormArray;\n  newCategoryForm: FormGroup;\n  isCategoryModalShown = false;\n  selectAll = false;\n  categoryAttr: AttributeBase;\n\n  get displayCategoryModal() {return this.isCategoryModalShown ? 'block' : 'none'; }\n\n  constructor( private fb: FormBuilder,\n               private identityService: IdentityService,\n               private entityService: EntityService,\n               private messageService: MessageService,\n               private attributeControlService: AttributeControlService ) { }\n\n  @ViewChild(SearchHelpComponent, { static: true })\n  private searchHelpComponent: SearchHelpComponent;\n  @ViewChild(AuthValueComponent, { static: true})\n  private authValueComponent: AuthValueComponent;\n\n  ngOnChanges() {\n    this.categoryFormArray = <FormArray>this.mainForm.get('categories');\n    this.categoryFormArray.controls.forEach( ctrl => {\n      if ( ctrl.get('ROW_TYPE').value === 'app') { ctrl.get('CHECKED').disable(); }\n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n  checkAll(): void {\n    this.categoryFormArray.controls.forEach( appCategoryCtrl => appCategoryCtrl.get('CHECKED').setValue(!this.selectAll));\n    this.selectAll = !this.selectAll;\n  }\n\n  checkCategory(idx: number): void {\n    const currentCategoryCtrl = this.categoryFormArray.at(idx);\n    this.categoryFormArray.controls.forEach( (categoryCtrl, index) => {\n      if (index <= idx) { return; }\n      if (categoryCtrl.get('category.ID').value === currentCategoryCtrl.get('category.ID').value) {\n        categoryCtrl.get('CHECKED').setValue(!currentCategoryCtrl.get('CHECKED').value);\n      }\n    });\n  }\n\n  add(): void {\n    this.newCategoryForm = this.fb.group({\n      CHECKED: '',\n      COLLAPSED: false,\n      ROW_TYPE: 'category',\n      RELATIONSHIP_INSTANCE_GUID: '',\n      app_category_INSTANCE_GUID: '',\n      auth_profile_INSTANCE_GUID: '',\n      ORDER: '',\n      category: this.fb.group({\n        ID: '',\n        NAME: '',\n        ICON: ''\n      })\n    });\n    if (!this.categoryAttr) {\n      this.entityService.getElementMeta('CATEGORY_ID')\n        .subscribe(elementMeta => {\n          const attribute = <Attribute>elementMeta;\n          attribute.ATTR_GUID = elementMeta.ELEMENT_ID;\n          attribute.ATTR_NAME = elementMeta.ELEMENT_ID;\n          attribute.DATA_ELEMENT = elementMeta.ELEMENT_ID;\n          this.categoryAttr = this.attributeControlService.toSingleAttributeControl(attribute);\n          this.categoryAttr.name = 'ID';\n        });\n    }\n    this.isCategoryModalShown = true;\n  }\n\n  closeCategoryModal(): void {\n    this.isCategoryModalShown = false;\n  }\n\n  confirm(): void {\n    const categoryID = this.newCategoryForm.get('category.ID').value;\n    this.identityService.getAppCategoryDetail(categoryID)\n      .subscribe( data => {\n        if ('ENTITY_ID' in data) {\n          this.newCategoryForm.get('app_category_INSTANCE_GUID').setValue(data['INSTANCE_GUID']);\n          this.newCategoryForm.get('category.ID').setValue(data['r_app_category'][0]['ID']);\n          this.newCategoryForm.get('category.NAME').setValue(data['r_app_category'][0]['NAME']);\n          this.newCategoryForm.get('category.ICON').setValue(data['r_app_category'][0]['ICON']);\n          this.newCategoryForm.markAsDirty();\n          this.categoryFormArray.push(this.newCategoryForm);\n          const appRelationship = data['relationships'].find(relationship => relationship.RELATIONSHIP_ID === 'rs_app_category');\n          const appGUIDs = [];\n          appRelationship.values.forEach( value => {\n            this.categoryFormArray.push(this.fb.group({\n              CHECKED: [{value: '', disabled: true}],\n              COLLAPSED: false,\n              ROW_TYPE: 'app',\n              RELATIONSHIP_INSTANCE_GUID: '',\n              app_category_INSTANCE_GUID: '',\n              auth_profile_INSTANCE_GUID: '',\n              ORDER: value['ORDER'],\n              category: this.fb.group({\n                ID: data['r_app_category'][0]['ID'],\n                NAME: value['PARTNER_INSTANCES'][0]['app'][0]['NAME'],\n                ICON: data['r_app_category'][0]['ICON']\n              }),\n              app: this.fb.group({\n                APP_ID: value['PARTNER_INSTANCES'][0]['app'][0]['APP_ID'],\n                NAME: value['PARTNER_INSTANCES'][0]['app'][0]['NAME']\n              })\n            }));\n            appGUIDs.push(value['PARTNER_INSTANCES'][0]['INSTANCE_GUID']);\n          });\n          this._generateProfile(appGUIDs);\n        } else {\n          const errorMessages = <Message[]>data;\n          errorMessages.forEach( msg => this.messageService.add(msg));\n          this.newCategoryForm.setErrors({message: 'Category contains errors'});\n        }\n        this.isCategoryModalShown = false;\n      });\n  }\n\n  _generateProfile(appGUIDs: Array<string>): void {\n    const profileCtrl = this.fb.group({\n      PROFILE_NAME: uuid().toUpperCase().replace(/-/g, ''),\n      DESC: this.mainForm.get('NAME').value + ` / ` + this.newCategoryForm.get('category.ID').value,\n      CHANGE_TIME: 'just now'\n    });\n    this.newCategoryForm.addControl('profile', profileCtrl);\n    const operations = appGUIDs.map( appGUID => {\n      return {\n        action: 'getInstancePieceByGUID',\n        instance: {INSTANCE_GUID: appGUID,\n          RELATIONSHIPS: [{ RELATIONSHIP_ID: 'rs_app_auth',\n            PARTNER_ENTITY_PIECES: {\n              RELATIONS: ['authObject'],\n              RELATIONSHIPS: [{RELATIONSHIP_ID: 'rs_auth_object_field',\n                PARTNER_ENTITY_PIECES: {RELATIONS: ['authField']}}]}}]}\n      };\n    });\n    this.identityService.orchestrate(operations).subscribe( data => {\n      let authorizations = [];\n      data.forEach( operation => {\n        if (operation.errs) {\n          const errorMessages = <Message[]>data;\n          errorMessages.forEach( msg => this.messageService.add(msg));\n          profileCtrl.setErrors({message: 'Profile contains errors'});\n        } else {\n          const rsAuthorization = operation.result.instance.relationships[0];\n          if (rsAuthorization) {\n            rsAuthorization.values.forEach( value => value.RELATIONSHIP_INSTANCE_GUID = '');\n            authorizations = authorizations.concat(\n              this.identityService.parseProfileAuthObject(rsAuthorization));\n          }\n        }\n      });\n      if (!profileCtrl.hasError('message')) {\n        const authFormArray = this.fb.array(authorizations.map(authorization => this.fb.group(authorization)));\n        authFormArray.controls.forEach( ctrl => ctrl.markAsDirty());\n        profileCtrl.addControl('authorizations', authFormArray);\n      }\n    });\n  }\n\n  delete(): void {\n    let index = this.categoryFormArray.controls.findIndex( appCategoryCtrl => appCategoryCtrl.get('CHECKED').value);\n    while ( index !== -1) {\n      this.categoryFormArray.removeAt(index);\n      this.categoryFormArray.markAsDirty();\n      index = this.categoryFormArray.controls.findIndex( appCategoryCtrl => appCategoryCtrl.get('CHECKED').value);\n    }\n  }\n\n  enterConfirm($event): void {\n    if ($event.keyCode === 13 ) {\n      this.confirm();\n    }\n  }\n  onSearchHelp(rowID: number, exportObject: AbstractControl): void {\n    const afterExportFn = function (context: any, rowIDx: number) {\n      return () => context.onChangeCategory(rowIDx);\n    }(this, rowID).bind(this);\n\n    this.searchHelpComponent.openSearchHelpModalByEntity('category', 'r_app_category',\n      exportObject, this.readonly, null, null, afterExportFn);\n  }\n\n  expendCollapse(idx: number): void {\n    const currentCtrl = this.categoryFormArray.at(idx);\n    const parentNode = currentCtrl.get('category.ID').value;\n    this.categoryFormArray.controls.forEach( categoryCtrl => {\n      if (categoryCtrl.get('category.ID').value === parentNode ) {\n        categoryCtrl.get('COLLAPSED').setValue(!categoryCtrl.get('COLLAPSED').value);\n      }\n    });\n  }\n}\n","<div class=\"row ml-1\">\n  <div class=\"col-3\">\n    <div class=\"btn-toolbar justify-content-end mt-3\" role=\"toolbar\">\n      <button type=\"button\" id=\"remove-object\" class=\"btn btn-light btn-sm\"></button>\n    </div>\n    <div class=\"list-group\">\n      <div *ngFor=\"let profileCtrl of profileFormArray.controls\" >\n        <a *ngIf=\"profileCtrl.get('ROW_TYPE').value === 'category'\" (click)=\"onSelect(profileCtrl)\"\n         class=\"list-group-item list-group-item-action flex-column align-items-start\"\n         [class.active]=\"profileCtrl.get('profile.PROFILE_NAME').value === currentProfileFormGroup.get('profile.PROFILE_NAME').value\">\n        <div class=\"d-flex w-100 justify-content-between\">\n          <h5 class=\"mb-1 dk-text\">{{profileCtrl.get('profile.DESC').value}}</h5>\n        </div>\n        <p class=\"mb-1 dk-text\">{{profileCtrl.get('profile.PROFILE_NAME').value}}</p>\n        <small>changed at: {{profileCtrl.get('profile.CHANGE_TIME').value}}</small>\n      </a>\n      </div>\n    </div>\n  </div>\n  <div class=\"col-9\">\n    <app-authorization [mainForm]=\"currentProfileFormGroup?.get('profile')\" [ctrlName]=\"'authorizations'\"\n                       [readonly]=\"readonly\"></app-authorization>\n  </div>\n</div>\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {AbstractControl, Form, FormArray, FormGroup} from '@angular/forms';\n\n@Component({\n  selector: 'app-permission-detail-profile',\n  templateUrl: './permission-detail-profile.component.html',\n  styleUrls: ['./permission-detail-profile.component.css']\n})\nexport class PermissionDetailProfileComponent implements OnInit, OnChanges {\n  @Input() readonly: boolean;\n  @Input() mainForm: FormGroup;\n  profileFormArray: FormArray;\n  currentProfileFormGroup: FormGroup;\n\n  constructor() { }\n\n  ngOnChanges(): void {\n    this.profileFormArray = <FormArray>this.mainForm.get('categories');\n    this.onSelect(this.profileFormArray.at(0));\n  }\n\n  ngOnInit(): void {\n  }\n\n  onSelect(ctrl: AbstractControl): void {\n    this.currentProfileFormGroup = <FormGroup>ctrl;\n  }\n}\n","<table class=\"table table-bordered table-sm dk-table ml-3 mt-4\" [formGroup]=\"mainForm\">\n  <thead class=\"thead-light\">\n  <tr>\n    <th class=\"dk-name\">User ID</th>\n    <th class=\"dk-name\">User Name</th>\n    <th class=\"dk-icon\">Synced</th>\n  </tr>\n  </thead>\n\n  <tbody formArrayName=\"users\" class=\"mb-4\">\n  <tr *ngFor=\"let userForm of userFormArray.controls; let i = index\" >\n    <td [formGroup]=\"userForm\">\n      <div class=\"input-group\">\n        <input class=\"form-control form-control-sm\" type=\"text\" formControlName=\"USER_ID\" readonly>\n        <div class=\"input-group-append\">\n          <button class=\"btn btn-sm btn-outline-secondary btn-light\" type=\"button\" id=\"searchPermission\"\n                  (click)=\"onSearchHelp(i, userForm)\">\n            <span class=\"fas fa-search\"></span>\n          </button>\n        </div>\n      </div>\n    </td>\n    <td [formGroup]=\"userForm\">\n      <input type=\"text\" formControlName=\"USER_NAME\" readonly class=\"form-control form-control-sm\">\n    </td>\n    <td [formGroup]=\"userForm\">\n      <input type=\"text\" formControlName=\"SYNCED\" readonly class=\"form-control form-control-sm\">\n    </td>\n  </tr>\n  </tbody>\n</table>\n\n<dk-app-search-help></dk-app-search-help>\n","import {Component, Input, OnChanges, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormGroup} from '@angular/forms';\nimport {SearchHelpComponent} from 'jor-angular';\n\n@Component({\n  selector: 'app-permission-detail-user',\n  templateUrl: './permission-detail-user.component.html',\n  styleUrls: ['./permission-detail-user.component.css']\n})\nexport class PermissionDetailUserComponent implements OnInit, OnChanges {\n  @Input() readonly: boolean;\n  @Input() mainForm: FormGroup;\n  userFormArray: FormArray;\n\n  constructor() { }\n\n  @ViewChild(SearchHelpComponent, { static: true })\n  private searchHelpComponent: SearchHelpComponent;\n\n  ngOnChanges(): void {\n    this.userFormArray = this.mainForm.get('users') as FormArray;\n  }\n\n  ngOnInit() {\n\n  }\n\n  onSearchHelp(rowID: number, exportObject: AbstractControl): void {\n    const afterExportFn = function (context: any, rowIDx: number) {\n      return () => context.onChangeKey(rowIDx);\n    }(this, rowID).bind(this);\n\n    this.searchHelpComponent.openSearchHelpModalBySearchHelp('USER', 'USER_ID',\n      'USER_ID', exportObject, this.readonly, afterExportFn);\n  }\n}\n","<nav class=\"navbar dk-fixed-top navbar-light bg-light\">\n  <div>\n    <span class=\"font-weight-bold mb-0 mx-1\">{{isNewMode? 'New Permission' : readonly? 'Display Permission' : 'Change Permission'}}</span>\n  </div>\n\n  <div class=\"flex-row-reverse\">\n    <button class=\"btn btn-sm btn-outline-info mr-2\" type=\"button\" title=\"Return to List\" id=\"toList\"\n            (click)=\"return2List()\" >\n      <span class=\"fas fa-list-ul\"> To List</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Edit/Display\" id=\"editDisplay\" (click)=\"switchEditDisplay()\">\n      <span *ngIf=\"readonly\" class=\"fas fa-edit\"> Edit</span>\n      <span *ngIf=\"!readonly\" class=\"fas fa-glasses\"> Display</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Save\" id=\"save\" (click)=\"save()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-save\"> Save</span>\n    </button>\n  </div>\n</nav>\n\n<div class=\"mt-2 mb-2\">\n  <dk-message></dk-message>\n</div>\n\n<div *ngIf=\"mainForm\" class=\"ml-2\">\n  <div class=\"mt-2 ml-1 row\">\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('NAME')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"!isNewMode\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('DESCRIPTION')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"!isNewMode\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n  </div>\n\n  <ul class=\"nav nav-tabs mt-1\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===1\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(1)\">APP Category</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===2\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(2)\">Profile</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===3\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(3)\">User</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===4\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(4)\">Admin</a>\n    </li>\n  </ul>\n\n  <div class=\"mt-2\" [ngSwitch]=\"tabStrip\">\n    <app-permission-detail-category *ngSwitchCase=\"1\" [mainForm]=\"mainForm\" [readonly]=\"readonly\">\n    </app-permission-detail-category>\n    <app-permission-detail-profile *ngSwitchCase=\"2\" [mainForm]=\"mainForm\"  [readonly]=\"readonly\">\n    </app-permission-detail-profile>\n    <app-permission-detail-user *ngSwitchCase=\"3\" [mainForm]=\"mainForm\" [readonly]=\"readonly\">\n    </app-permission-detail-user>\n    <app-admin-info *ngSwitchCase=\"4\" [mainForm]=\"mainForm\" [relationMetas]=\"relationMetas\" [adminRelation]=\"'permission'\">\n    </app-admin-info>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AttributeBase, AttributeControlService, Entity, EntityService, RelationMeta, Relationship, UiMapperService} from 'jor-angular';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {switchMap} from 'rxjs/operators';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {DialogService} from '../../dialog.service';\nimport {existingPermissionValidator} from '../../async-validators';\n\n@Component({\n  selector: 'app-permission-detail',\n  templateUrl: './permission-detail.component.html',\n  styleUrls: ['./permission-detail.component.css']\n})\nexport class PermissionDetailComponent implements OnInit {\n  mainForm: FormGroup;\n  relationMetas: RelationMeta[];\n  attrCtrls: AttributeBase[];\n  readonly = true;\n  isNewMode = false;\n  action: string;\n  instanceGUID: string;\n  originalValue = {};\n  operations = [];\n  tabStrip = 1;\n\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private dialogService: DialogService,\n              private identityService: IdentityService,\n              private attributeControlService: AttributeControlService,\n              private entityService: EntityService,\n              private uiMapperService: UiMapperService,\n              private messageService: MessageService) {\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        this.action = params.get('action');\n        if (this.action === 'new') {\n          this.isNewMode = true;\n          return forkJoin([\n              this.entityService.getRelationMetaOfEntity('permission'),\n              this._createNewEntity()\n            ]);\n        } else {\n          this.isNewMode = false;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('permission'),\n            this.identityService.getPermissionDetail(params.get('permissionName'))\n          ]);\n        }\n      })\n    ).subscribe( data => {\n      this.relationMetas = data[0] as RelationMeta[];\n      this.attrCtrls = this.attributeControlService.toAttributeControl(\n        this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'r_role').ATTRIBUTES);\n      if ('ENTITY_ID' in data[1]) {\n        this.instanceGUID = data[1]['INSTANCE_GUID'];\n        this._generateMainForm(<Entity>data[1]);\n        if (this.isNewMode || this.action === 'change') {\n          this._switch2EditMode();\n        } else {\n          this._switch2DisplayMode();\n        }\n      } else {\n        const errorMessages = <Message[]>data[1];\n        errorMessages.forEach( msg => this.messageService.add(msg));\n      }\n    });\n  }\n\n  return2List(): void {\n    this.router.navigate(['permissions']);\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n  switchTabStrip(tabStripID: number): void {\n    this.tabStrip = tabStripID;\n  }\n\n  switchEditDisplay(): void {\n    if (this.readonly ) {\n      this._switch2EditMode();\n    } else {\n      if (this.mainForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) {\n            this.mainForm.reset(this.originalValue);\n            this._switch2DisplayMode();\n          }\n        });\n      } else {\n        this._switch2DisplayMode();\n      }\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n\n    const permissionNameCtrl = this.mainForm.get('NAME') as FormControl;\n    permissionNameCtrl.clearAsyncValidators();\n\n    this.mainForm.markAsPristine();\n    // Replace the URL from change to display\n    window.history.replaceState({}, '', `/permissions/${permissionNameCtrl.value};action=display`);\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n\n    const permissionNameCtrl = this.mainForm.get('NAME') as FormControl;\n    if (this.isNewMode) {\n      permissionNameCtrl.setAsyncValidators(\n        existingPermissionValidator(this.identityService, this.messageService));\n    }\n\n    // Replace the URL from to display\n    if (this.action === 'display') {this.action = 'change'; }\n    window.history.replaceState({}, '', `/permissions/${permissionNameCtrl.value};action=` + this.action);\n  }\n\n  _createNewEntity(): Observable<Entity> {\n    const permissionDetail = new Entity();\n    permissionDetail.ENTITY_ID = 'permission';\n    permissionDetail['permission'] = [\n      { DESCR: '', CREATED_BY: '', CREATE_TIME: '', CHANGED_BY: '', CHANGE_TIME: '' }\n    ];\n    permissionDetail['r_role'] = [\n      { NAME: '', DESCRIPTION: '' }\n    ];\n    permissionDetail['relationships'] = [];\n    return of(permissionDetail);\n  }\n\n  _generateMainForm(data: Entity): void {\n    this.mainForm = this.fb.group({\n      NAME: [data['r_role'][0]['NAME'], [Validators.required]],\n      DESCRIPTION: [data['r_role'][0]['DESCRIPTION']],\n      admin: this.fb.group({\n        CREATED_BY: [data['permission'][0]['CREATED_BY']],\n        CREATE_TIME: [data['permission'][0]['CREATE_TIME']],\n        CHANGED_BY: [data['permission'][0]['CHANGED_BY']],\n        CHANGE_TIME: [data['permission'][0]['CHANGE_TIME']]\n      })\n    });\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.mainForm.addControl('categories', this.fb.array(\n      parsedRelationship.categories.map( category => {\n        const categoryCtrl =  this.fb.group({\n          CHECKED: category.CHECKED,\n          COLLAPSED: category.COLLAPSED,\n          ROW_TYPE: category.ROW_TYPE,\n          RELATIONSHIP_INSTANCE_GUID: category.RELATIONSHIP_INSTANCE_GUID,\n          app_category_INSTANCE_GUID: category.app_category_INSTANCE_GUID,\n          auth_profile_INSTANCE_GUID: category.auth_profile_INSTANCE_GUID,\n          ORDER: category.ORDER\n        });\n\n        categoryCtrl.addControl('category', this.fb.group({\n          ID: category.category.ID,\n          NAME: category.category.NAME,\n          ICON: category.category.ICON\n          }));\n\n        if (category.profile) {\n          categoryCtrl.addControl('profile', this.fb.group({\n            PROFILE_NAME: category.profile.PROFILE_NAME,\n            DESC: category.profile.DESC,\n            CHANGE_TIME: category.profile.CHANGE_TIME,\n            authorizations: category.profile.authorizations ?\n              this.fb.array(category.profile.authorizations.map( authorization => this.fb.group(authorization) )) : ''\n          }));\n        }\n\n        if (category.app) {\n          categoryCtrl.addControl('app', this.fb.group({\n            APP_ID: category.app.APP_ID,\n            NAME: category.app.NAME\n          }));\n        }\n\n        return categoryCtrl;\n      })));\n    this.mainForm.addControl('users', this.fb.array(\n      parsedRelationship.users.map( user => this.fb.group(user))));\n    this.originalValue = this.mainForm.getRawValue();\n  }\n\n  _parseRelationships( relationships: Relationship[] ): any {\n    const parsedRelationship = {\n      users: [],\n      categories: []\n    };\n    if (!relationships) { return parsedRelationship; }\n    relationships.forEach( relationship => {\n      switch (relationship.RELATIONSHIP_ID) {\n        case 'rs_role_category_profile':\n          __parseRoleCategoryProfile(relationship, this);\n          break;\n        case 'rs_user_role':\n          __parseRoleUsers(relationship);\n          break;\n        default:\n        // Do nothing.\n      }\n    });\n    return parsedRelationship;\n\n    function __parseRoleCategoryProfile( relationship: Relationship, context: any): void {\n      const categories = relationship.values.sort( (a, b) => a.ORDER - b.ORDER);\n      categories.forEach( value => {\n        const appCategoryInstance = value.PARTNER_INSTANCES.find(\n          partnerInstance => partnerInstance.ROLE_ID === 'app_category');\n        const authProfileInstance = value.PARTNER_INSTANCES.find(\n          partnerInstance => partnerInstance.ROLE_ID === 'auth_profile');\n        parsedRelationship.categories.push({\n          CHECKED: '',\n          COLLAPSED: false,\n          ROW_TYPE: 'category',\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          app_category_INSTANCE_GUID: appCategoryInstance.INSTANCE_GUID,\n          auth_profile_INSTANCE_GUID: authProfileInstance.INSTANCE_GUID,\n          ORDER: value['ORDER'],\n          category: {\n            ID: appCategoryInstance['r_app_category'][0]['ID'],\n            NAME: appCategoryInstance['r_app_category'][0]['NAME'],\n            ICON: appCategoryInstance['r_app_category'][0]['ICON']\n          },\n          profile: {\n            PROFILE_NAME: authProfileInstance['authProfile'][0]['PROFILE_NAME'],\n            DESC: authProfileInstance['authProfile'][0]['DESC'],\n            CHANGE_TIME: authProfileInstance['authProfile'][0]['CHANGE_TIME'],\n            authorizations: context.identityService.parseProfileAuthObject(authProfileInstance.relationships[0])\n          }\n        });\n        const rsAppCategory = appCategoryInstance['relationships'][0];\n        rsAppCategory.values.forEach( value2 => {\n          parsedRelationship.categories.push({\n            CHECKED: '',\n            COLLAPSED: false,\n            ROW_TYPE: 'app',\n            RELATIONSHIP_INSTANCE_GUID: value2['RELATIONSHIP_INSTANCE_GUID'],\n            app_category_INSTANCE_GUID: '',\n            auth_profile_INSTANCE_GUID: '',\n            ORDER: value2['ORDER'],\n            category: {\n              ID: appCategoryInstance['r_app_category'][0]['ID'],\n              NAME: appCategoryInstance['r_app_category'][0]['NAME'],\n              ICON: appCategoryInstance['r_app_category'][0]['ICON']\n            },\n            app: {\n              APP_ID: value2['PARTNER_INSTANCES'][0]['app'][0]['APP_ID'],\n              NAME: value2['PARTNER_INSTANCES'][0]['app'][0]['NAME'],\n            }\n          });\n        });\n      });\n    }\n\n    function __parseRoleUsers( relationship: Relationship): void {\n      relationship.values.forEach( value => {\n        parsedRelationship.users.push( {\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          SYNCED: value['SYNCED'],\n          INSTANCE_GUID: value['PARTNER_INSTANCES'][0]['INSTANCE_GUID'],\n          USER_ID: value['PARTNER_INSTANCES'][0]['r_user'][0]['USER_ID'],\n          USER_NAME: value['PARTNER_INSTANCES'][0]['r_user'][0]['USER_NAME']\n        });\n      });\n    }\n  }\n\n  _resetValue(data: Entity): void {\n    this.originalValue = {\n      NAME: data['r_role'][0]['NAME'],\n      DESCRIPTION: data['r_role'][0]['DESCRIPTION'],\n      admin: {\n        CREATED_BY: data['permission'][0]['CREATED_BY'],\n        CREATE_TIME: data['permission'][0]['CREATE_TIME'],\n        CHANGED_BY: data['permission'][0]['CHANGED_BY'],\n        CHANGE_TIME: data['permission'][0]['CHANGE_TIME']\n      }\n    };\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.originalValue['categories'] = parsedRelationship.categories;\n    this.originalValue['users'] = parsedRelationship.users;\n    this.mainForm.reset(this.originalValue);\n  }\n\n  save() {\n    this.messageService.clearMessages();\n    if (this._composeChanges()) {\n      console.log(this.operations);\n      this.identityService.orchestrate(this.operations).subscribe( results => {\n        this.operations = [];\n        results.forEach( result => {\n          if (result.msgType) {\n            this.messageService.add(<Message>result);\n          } else if (result.instance && result.instance.ENTITY_ID === 'permission') {\n            this.instanceGUID = result.instance.INSTANCE_GUID;\n            this.isNewMode = false;\n            const permissionName = this.mainForm.get('NAME').value;\n            this.identityService.getPermissionDetail(permissionName).subscribe(instance => {\n              if ('ENTITY_ID' in instance) {\n                this._switch2DisplayMode();\n                // this._resetValue(<Entity>instance);\n                this._generateMainForm(<Entity>instance);\n              } else {\n                const errorMessages = <Message[]>instance;\n                errorMessages.forEach( msg => this.messageService.add(msg));\n              }\n            });\n            this.messageService.reportMessage('PERMISSION', 'SAVED', 'S', permissionName);\n          }\n        });\n      });\n    }\n  }\n\n  _composeChanges() {\n    if (this.mainForm.invalid) {\n      this.messageService.reportMessage('PERMISSION', 'INVALID', 'E');\n      return false;\n    }\n\n    if (this.mainForm.dirty === false) {\n      this.messageService.reportMessage('GENERAL', 'NO_CHANGE', 'W');\n      return false;\n    }\n\n    const changedValue = {};\n    changedValue['ENTITY_ID'] = 'permission';\n    changedValue['INSTANCE_GUID'] = this.instanceGUID;\n    if (this.isNewMode) {\n      changedValue['permission'] = {\n        action: 'add', DESCR: this.mainForm.get('DESCRIPTION'),\n        CREATED_BY: this.identityService.Session.USER_ID, CREATE_TIME: this.identityService.CurrentTime,\n        CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n      changedValue['r_role'] = {\n        action: 'add', NAME: this.mainForm.get('NAME'),\n        DESCRIPTION: this.mainForm.get('DESCRIPTION')\n      };\n    }\n\n    changedValue['permission'] = {\n      action: 'update', CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n\n    if (this.mainForm.get('DESCRIPTION').dirty) {\n      changedValue['permission']['DESCR'] = this.mainForm.get('DESCRIPTION');\n      changedValue['r_role'] = {\n        action: 'update',  DESCRIPTION: this.mainForm.get('DESCRIPTION') };\n    }\n\n    const categoryFormArray = this.mainForm.get('categories') as FormArray;\n    categoryFormArray.controls.forEach( ctrl => {\n      if (ctrl.get('ROW_TYPE').value === 'category') {\n        if (ctrl.get('RELATIONSHIP_INSTANCE_GUID').value) { // Change an existing profile\n          if (ctrl.get('profile.authorizations').pristine) { return; }\n          const originalProfile = this.originalValue['categories'].find(\n            category => category.RELATIONSHIP_INSTANCE_GUID === ctrl.get('RELATIONSHIP_INSTANCE_GUID').value);\n          this.operations.push({\n            action: 'changeInstance', noCommit: true,\n            instance: {\n              ENTITY_ID: 'authProfile',\n              INSTANCE_GUID: ctrl.get('auth_profile_INSTANCE_GUID').value,\n              authProfile: {action: 'update', CHANGED_BY: this.identityService.Session.USER_ID,\n                CHANGE_TIME: this.identityService.CurrentTime},\n              relationships: [\n                this.identityService.composeAuthChanges(<FormArray>ctrl.get('profile.authorizations'),\n                  originalProfile.authorizations, 'rs_auth_profile_object')\n              ]}\n          });\n        } else { // Add a new profile\n          this.operations.push({\n            action: 'createInstance', noCommit: true,\n            instance: {\n              ENTITY_ID: 'authProfile',\n              INSTANCE_GUID: ctrl.get('auth_profile_INSTANCE_GUID').value,\n              authProfile: {action: 'add', PROFILE_NAME: ctrl.get('profile.PROFILE_NAME').value,\n                DESC: ctrl.get('profile.DESC').value,\n                CREATED_BY: this.identityService.Session.USER_ID, CREATE_TIME: this.identityService.CurrentTime,\n                CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime},\n              relationships: [\n                this.identityService.composeAuthChanges(<FormArray>ctrl.get('profile.authorizations'),\n                  [], 'rs_auth_profile_object')\n              ]\n            }\n          });\n        }\n      } else { // ROW_TYPE = app\n        ctrl.markAsPristine({onlySelf: true});\n      }\n    });\n\n    changedValue['relationships'] = [];\n    const rsCategory = this.uiMapperService.composeChangedRelationship(\n      'rs_role_category_profile',\n      [\n        {ENTITY_ID: 'category', ROLE_ID: 'app_category'},\n        {ENTITY_ID: 'authProfile', ROLE_ID: 'auth_profile'}],\n      categoryFormArray,\n      this.originalValue['categories'].filter( category => category.ROW_TYPE === 'category'),\n      ['CHECKED', 'COLLAPSED', 'ROW_TYPE', 'category', 'profile', 'app']);\n\n    const newCategoryIndex = [];\n    if (rsCategory) {\n      rsCategory['values'].forEach( (value, index) => {\n        if (value.PARTNER_INSTANCES) {\n          value.PARTNER_INSTANCES[1].NO_EXISTING_CHECK = true;\n          newCategoryIndex.push(index);\n        }\n      });\n      changedValue['relationships'].push(rsCategory);\n    }\n\n    const newProfilesIndex = [];\n    this.operations.forEach( (operation, index) => {\n      if (operation.action === 'createInstance') { newProfilesIndex.push(index); }\n    });\n    this.operations.push({\n      action: this.isNewMode ? 'createInstance' : 'changeInstance', noCommit: true,\n      replacements: newProfilesIndex.map( (idx, index) => {\n        return {\n          movePath: [idx, 'result', 'instance', 'INSTANCE_GUID'],\n            toPath: ['relationships', 0, 'values', newCategoryIndex[index], 'PARTNER_INSTANCES', 1, 'INSTANCE_GUID']\n        };\n      }),\n      instance: changedValue\n    });\n\n    // Find the deleted categories, and also trigger the deletion of the corresponding profiles\n    this.originalValue['categories'].forEach( category => {\n      if (category.ROW_TYPE === 'app') { return; }\n      const idx = categoryFormArray.controls.findIndex(\n        ctrl => ctrl.get('RELATIONSHIP_INSTANCE_GUID').value === category.RELATIONSHIP_INSTANCE_GUID);\n      if (idx === -1) {\n        this.operations.push({\n          action: 'softDeleteInstanceByGUID',\n          instance: {INSTANCE_GUID: category.auth_profile_INSTANCE_GUID}\n        });\n        this.operations.push({\n          action: 'hardDeleteByGUID',\n          instance: {INSTANCE_GUID: category.auth_profile_INSTANCE_GUID}\n        });\n      }\n    });\n\n    return true;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (this.mainForm && this.mainForm.dirty)) {\n      return this.dialogService.confirm('Discard changes?');\n    } else {\n      return true;\n    }\n  }\n}\n","<div class=\"card mb-3 pt-3\">\n  <div class=\"mt-2 pl-4 row\">\n    <div class=\"col-6 form-group row\">\n      <label for=\"permission_name\" class=\"col-sm-3 col-form-label\">Permission:</label>\n      <input id=\"permission_name\" name=\"user_id\" [(ngModel)]=\"permissionName\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\" autofocus>\n    </div>\n    <div class=\"col-6 form-group row\">\n      <label for=\"permission_desc\" class=\"col-sm-3 col-form-label\">Description:</label>\n      <input id=\"permission_desc\" name=\"user_name\" [(ngModel)]=\"permissionDesc\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\">\n    </div>\n  </div>\n\n  <div class=\"mb-4\">\n    <button type=\"button\" id=\"search\" class=\"btn btn-primary btn-sm float-right mr-4\" (click)=\"search()\">Search</button>\n  </div>\n</div>\n\n<div class=\"mt-2 mb-4 mx-4\">\n  <dk-message></dk-message>\n  <div class=\"btn-toolbar justify-content-end my-2\" role=\"toolbar\">\n    <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"new()\">\n      <span class=\"fas fa-plus\"></span> New</button>\n  </div>\n  <table class=\"table table-bordered table-sm\">\n    <thead class=\"thead-light\">\n    <tr>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Description</th>\n      <th scope=\"col\">Created By</th>\n      <th scope=\"col\">Created At</th>\n      <th scope=\"col\">Changed By</th>\n      <th scope=\"col\">Changed At</th>\n      <th scope=\"col\">Action</th>\n    </tr>\n    </thead>\n\n    <tbody>\n    <tr *ngFor=\"let permission of permissions\">\n      <td><a [routerLink]=\"['/permissions', permission.NAME, {action: 'display'}]\">{{permission.NAME}}</a></td>\n      <td>{{permission.DESCRIPTION}}</td>\n      <td>{{permission.CREATED_BY}}</td>\n      <td>{{permission.CREATE_TIME}}</td>\n      <td>{{permission.CHANGED_BY}}</td>\n      <td>{{permission.CHANGE_TIME}}</td>\n      <td class=\"dk-actions\">\n        <button title=\"Display\" id=\"display\" class=\"btn btn-sm\" type=\"button\" (click)=\"display(permission.NAME)\">\n          <span class=\"fas fa-search\"></span>\n        </button>\n        <button title=\"Change\" id=\"change\" class=\"btn btn-sm\" type=\"button\" (click)=\"change(permission.NAME)\">\n          <span class=\"fas fa-pen\"></span>\n        </button>\n        <button title=\"Delete\" id=\"delete\" class=\"btn btn-sm\" type=\"button\" (click)=\"delete(permission.NAME)\">\n          <span class=\"far fa-trash-alt\"></span>\n        </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"modal fade\" [class.show]=\"showDeletionConfirmation\"\n       [ngStyle]=\"{'display': displayDeletionConfirmation}\" id=\"deletionConfirmation\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"confirmDeletion\">Confirm Deletion</h5>\n          <button type=\"button\" class=\"close\" (click)=\"cancelDeletion()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <p>Are you sure to delete the permission '{{toBeDeletedInstance}}'?</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" id=\"cancel\" class=\"btn btn-sm btn-secondary\" (click)=\"cancelDeletion()\">Cancel</button>\n          <button type=\"button\" id=\"confirm\" class=\"btn btn-sm btn-primary\" (click)=\"confirmDeletion()\">Confirm</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n\n","import { Component, OnInit } from '@angular/core';\nimport {PermissionList} from '../../identity';\nimport {Message, MessageService, messageType} from 'ui-message-angular';\nimport {IdentityService} from '../../identity.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-permission-list',\n  templateUrl: './permission-list.component.html',\n  styleUrls: ['./permission-list.component.css']\n})\nexport class PermissionListComponent implements OnInit {\n  permissionName: string;\n  permissionDesc: string;\n  permissions: PermissionList[];\n  showDeletionConfirmation = false;\n  toBeDeletedInstance: string;\n\n  get displayDeletionConfirmation() {return this.showDeletionConfirmation ? 'block' : 'none'; }\n\n  constructor(private identityService: IdentityService,\n              private messageService: MessageService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  search() {\n    this.messageService.clearMessages();\n    this.permissions = [];\n    this.permissionName = this.permissionName ? this.permissionName.trim() : '';\n    this.permissionDesc = this.permissionDesc ? this.permissionDesc.trim() : '';\n    this.identityService.searchPermissions(this.permissionName, this.permissionDesc).subscribe(\n      data => {\n        if (!data[0]) {\n          this.messageService.reportMessage('GENERAL', 'EMPTY_LIST', messageType.Warning);\n        } else if (data[0]['msgCat']) {\n          const messages = <Message[]>data;\n          messages.forEach( msg => this.messageService.add(msg));\n        } else {\n          this.permissions = <PermissionList[]>data;\n        }\n      }\n    );\n  }\n\n  enterSearch($event): void {\n    if ($event.keyCode === 13 ) {\n      this.search();\n    }\n  }\n\n  new(): void {\n    this.router.navigate(['permissions', '/', {action: 'new'}]);\n  }\n\n  display(permissionName: string): void {\n    this.router.navigate(['permissions', permissionName, {action: 'display'}]);\n  }\n\n  change(permissionName: string): void {\n    this.router.navigate(['permissions', permissionName, {action: 'change'}]);\n  }\n\n  delete(permissionName: string): void {\n    this.toBeDeletedInstance = permissionName;\n    this.showDeletionConfirmation = true;\n  }\n\n  cancelDeletion(): void {\n    this.showDeletionConfirmation = false;\n  }\n\n  confirmDeletion(): void {\n    const toBeDeletedPermissionGUID = this.permissions.find(\n      ele => ele.NAME === this.toBeDeletedInstance).INSTANCE_GUID;\n    this.identityService.delete(toBeDeletedPermissionGUID).subscribe( errorMsg => {\n      this.showDeletionConfirmation = false;\n      if (errorMsg) {\n        const messages = <Message[]>errorMsg;\n        messages.forEach( msg => this.messageService.add(msg));\n      } else {\n        this.search();\n      }\n    });\n  }\n\n}\n","<nav class=\"navbar dk-fixed-top navbar-light bg-light\">\n  <div>\n    <span class=\"font-weight-bold mb-0 mx-1\">{{isNewMode? 'New Profile' : readonly? 'Display Profile' : 'Change Profile'}}</span>\n  </div>\n\n  <div class=\"flex-row-reverse\">\n    <button class=\"btn btn-sm btn-outline-info mr-2\" type=\"button\" title=\"Return to List\" id=\"toList\"\n            (click)=\"return2List()\" >\n      <span class=\"fas fa-list-ul\"> To List</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Edit/Display\" id=\"editDisplay\" (click)=\"switchEditDisplay()\">\n      <span *ngIf=\"readonly\" class=\"fas fa-edit\"> Edit</span>\n      <span *ngIf=\"!readonly\" class=\"fas fa-glasses\"> Display</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Save\" id=\"save\" (click)=\"save()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-save\"> Save</span>\n    </button>\n  </div>\n</nav>\n\n<div class=\"mt-2 mb-2\">\n  <dk-message></dk-message>\n</div>\n\n<div *ngIf=\"mainForm\" class=\"ml-2\">\n  <div class=\"mt-2 ml-1 row\">\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('PROFILE_NAME')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"!isNewMode\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('DESC')\"\n                            [formGroup]=\"mainForm\"\n                            [readonly]=\"readonly\"\n                            [isSmallSize] = \"true\">\n    </dk-app-attribute-form2>\n  </div>\n\n  <ul class=\"nav nav-tabs mt-1\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===1\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(1)\">Authorization</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===3\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(3)\">Admin</a>\n    </li>\n  </ul>\n\n  <div class=\"mt-2\" [ngSwitch]=\"tabStrip\">\n    <app-authorization *ngSwitchCase=\"1\" [mainForm]=\"mainForm\" [ctrlName]=\"'authObjects'\"  [readonly]=\"readonly\"></app-authorization>\n    <app-admin-info *ngSwitchCase=\"3\" [mainForm]=\"mainForm\" [relationMetas]=\"relationMetas\" [adminRelation]=\"'authProfile'\"></app-admin-info>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AttributeBase, AttributeControlService, Entity, EntityService, RelationMeta, Relationship, UiMapperService} from 'jor-angular';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {DialogService} from '../../dialog.service';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {switchMap} from 'rxjs/operators';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {existingProfileValidator} from '../../async-validators';\nimport {Authorization} from '../../identity';\n\n@Component({\n  selector: 'app-profile-detail',\n  templateUrl: './profile-detail.component.html',\n  styleUrls: ['./profile-detail.component.css']\n})\nexport class ProfileDetailComponent implements OnInit {\n  mainForm: FormGroup;\n  relationMetas: RelationMeta[];\n  attrCtrls: AttributeBase[];\n  readonly = true;\n  isNewMode = false;\n  action: string;\n  instanceGUID: string;\n  originalValue = {};\n  changedValue = {};\n  tabStrip = 1;\n\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private dialogService: DialogService,\n              private identityService: IdentityService,\n              private attributeControlService: AttributeControlService,\n              private entityService: EntityService,\n              private uiMapperService: UiMapperService,\n              private messageService: MessageService) {\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        this.action = params.get('action');\n        if (this.action === 'new') {\n          this.isNewMode = true;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('authProfile'),\n            this._createNewEntity()\n          ]);\n        } else {\n          this.isNewMode = false;\n          return forkJoin([\n            this.entityService.getRelationMetaOfEntity('authProfile'),\n            this.identityService.getAuthProfileDetail(params.get('profileName'))\n          ]);\n        }\n      })\n    ).subscribe( data => {\n      this.relationMetas = data[0] as RelationMeta[];\n      this.attrCtrls = this.attributeControlService.toAttributeControl(\n        this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'authProfile').ATTRIBUTES);\n      if ('ENTITY_ID' in data[1]) {\n        this.instanceGUID = data[1]['INSTANCE_GUID'];\n        this._generateMainForm(<Entity>data[1]);\n        if (this.isNewMode || this.action === 'change') {\n          this._switch2EditMode();\n        } else {\n          this._switch2DisplayMode();\n        }\n      } else {\n        const errorMessages = <Message[]>data[1];\n        errorMessages.forEach( msg => this.messageService.add(msg));\n      }\n    });\n  }\n\n  return2List(): void {\n    this.router.navigate(['profiles']);\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n  switchTabStrip(tabStripID: number): void {\n    this.tabStrip = tabStripID;\n  }\n\n  switchEditDisplay(): void {\n    if (this.readonly ) {\n      this._switch2EditMode();\n    } else {\n      if (this.mainForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) {\n            this.mainForm.reset(this.originalValue);\n            this._switch2DisplayMode();\n          }\n        });\n      } else {\n        this._switch2DisplayMode();\n      }\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n\n    const profileNameCtrl = this.mainForm.get('PROFILE_NAME') as FormControl;\n    profileNameCtrl.clearAsyncValidators();\n\n    this.mainForm.markAsPristine();\n    // Replace the URL from change to display\n    window.history.replaceState({}, '', `/profiles/${profileNameCtrl.value};action=display`);\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n\n    const profileNameCtrl = this.mainForm.get('PROFILE_NAME') as FormControl;\n    if (this.isNewMode) {\n      profileNameCtrl.setAsyncValidators(\n        existingProfileValidator(this.identityService, this.messageService));\n    }\n\n    // Replace the URL from to display\n    if (this.action === 'display') {this.action = 'change'; }\n    window.history.replaceState({}, '', `/profiles/${profileNameCtrl.value};action=` + this.action);\n  }\n\n  _createNewEntity(): Observable<Entity> {\n    const profileDetail = new Entity();\n    profileDetail.ENTITY_ID = 'authProfile';\n    profileDetail['authProfile'] = [\n      { PROFILE_NAME: '', DESC: '', CREATED_BY: '', CREATE_TIME: '', CHANGED_BY: '', CHANGE_TIME: '' }\n    ];\n    profileDetail['relationships'] = [];\n    return of(profileDetail);\n  }\n\n  _generateMainForm(data: Entity): void {\n    this.mainForm = this.fb.group({\n      PROFILE_NAME: [data['authProfile'][0]['PROFILE_NAME'], [Validators.required]],\n      DESC: [data['authProfile'][0]['DESC']],\n      admin: this.fb.group({\n        CREATED_BY: [data['authProfile'][0]['CREATED_BY']],\n        CREATE_TIME: [data['authProfile'][0]['CREATE_TIME']],\n        CHANGED_BY: [data['authProfile'][0]['CHANGED_BY']],\n        CHANGE_TIME: [data['authProfile'][0]['CHANGE_TIME']]\n      })\n    });\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.mainForm.addControl('authObjects',\n      this.fb.array(parsedRelationship.authObjects.map( authObject => this.fb.group( authObject ))));\n    this.originalValue = this.mainForm.getRawValue();\n  }\n\n  _parseRelationships( relationships: Relationship[] ): any {\n    const parsedRelationship = {\n      authObjects : []\n    };\n    if (!relationships) { return parsedRelationship; }\n    relationships.forEach( relationship => {\n      switch (relationship.RELATIONSHIP_ID) {\n        case 'rs_auth_profile_object':\n          __parseAuthObjects(relationship);\n          break;\n        default:\n        // Do nothing.\n      }\n    });\n    return parsedRelationship;\n\n    function __parseAuthObjects(relationship: Relationship): void {\n      relationship.values.forEach(value => {\n        const authorization = value['AUTH_VALUE'] ? <Authorization>JSON.parse(value['AUTH_VALUE']) : null;\n        const status = authorization ?\n          Object.values(authorization.AuthFieldValue).findIndex(authValue => !authValue) !== -1 ?\n            'yellow' : 'green' : 'red';\n        parsedRelationship.authObjects.push({\n          CHECKED: '',\n          COLLAPSED: false,\n          NODE_ID: value['RELATIONSHIP_INSTANCE_GUID'],\n          STATUS: status,\n          RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n          auth_object_INSTANCE_GUID: value['PARTNER_INSTANCES'][0]['INSTANCE_GUID'],\n          AUTH_VALUE: value['AUTH_VALUE'],\n          OBJ_NAME: value['PARTNER_INSTANCES'][0]['authObject'][0]['OBJ_NAME'],\n          DESC: value['PARTNER_INSTANCES'][0]['authObject'][0]['DESC'],\n          ROW_TYPE: 'OBJECT',\n          FIELD_NAME: '',\n          DATA_ELEMENT: '',\n        });\n\n        const authObjectFields = value['PARTNER_INSTANCES'][0]['relationships'][0];\n        authObjectFields.values.forEach(value2 => {\n          const authFieldName = value2['PARTNER_INSTANCES'][0]['authField'][0]['FIELD_NAME'];\n          parsedRelationship.authObjects.push({\n            CHECKED: '',\n            COLLAPSED: false,\n            NODE_ID: value['RELATIONSHIP_INSTANCE_GUID'],\n            STATUS: authorization && authorization.AuthFieldValue && authorization.AuthFieldValue[authFieldName] ?\n              authorization.AuthFieldValue[authFieldName].length > 0 ? 'green' : 'red' : 'red',\n            RELATIONSHIP_INSTANCE_GUID: value['RELATIONSHIP_INSTANCE_GUID'],\n            auth_object_INSTANCE_GUID: '',\n            AUTH_VALUE: authorization && authorization.AuthFieldValue[authFieldName]\n              && JSON.stringify(authorization.AuthFieldValue[authFieldName], null, ' '),\n            OBJ_NAME: value['PARTNER_INSTANCES'][0]['authObject'][0]['OBJ_NAME'],\n            DESC: '',\n            ROW_TYPE: 'FIELD',\n            FIELD_NAME: authFieldName,\n            DATA_ELEMENT: value2['PARTNER_INSTANCES'][0]['authField'][0]['DATA_ELEMENT'],\n          });\n        });\n      });\n    }\n  }\n\n  _resetValue(data: Entity): void {\n    this.originalValue = {\n      PROFILE_NAME: data['authProfile'][0]['PROFILE_NAME'],\n      DESC: data['authProfile'][0]['DESC'],\n      admin: {\n        CREATED_BY: data['authProfile'][0]['CREATED_BY'],\n        CREATE_TIME: data['authProfile'][0]['CREATE_TIME'],\n        CHANGED_BY: data['authProfile'][0]['CHANGED_BY'],\n        CHANGE_TIME: data['authProfile'][0]['CHANGE_TIME']\n      }\n    };\n    const parsedRelationship = this._parseRelationships( data['relationships'] );\n    this.originalValue['authObjects'] = parsedRelationship.authObjects;\n    this.originalValue['roles'] = parsedRelationship.roles;\n    this.mainForm.reset(this.originalValue);\n  }\n\n  save() {\n    this.messageService.clearMessages();\n    if (this._composeChanges()) {\n      this.identityService.save(<Entity>this.changedValue).subscribe( data => {\n        this.changedValue = {};\n        if ('INSTANCE_GUID' in data) {\n          const profileName = data['authProfile'][0]['PROFILE_NAME'];\n          this.instanceGUID = data['INSTANCE_GUID'];\n          this.isNewMode = false;\n          this.identityService.getAuthProfileDetail(profileName).subscribe(instance => {\n            if ('ENTITY_ID' in instance) {\n              this._switch2DisplayMode();\n              this._resetValue(<Entity>instance);\n            } else {\n              const errorMessages = <Message[]>instance;\n              errorMessages.forEach( msg => this.messageService.add(msg));\n            }\n          });\n          this.messageService.reportMessage('AUTH_PROFILE', 'SAVED', 'S', profileName);\n        } else {\n          const errorMessages = <Message[]>data;\n          errorMessages.forEach( msg => this.messageService.add(msg));\n        }\n      });\n    }\n  }\n\n  _composeChanges() {\n    if (this.mainForm.invalid) {\n      this.messageService.reportMessage('AUTH_PROFILE', 'INVALID', 'E');\n      return false;\n    }\n\n    if (this.mainForm.dirty === false) {\n      this.messageService.reportMessage('GENERAL', 'NO_CHANGE', 'W');\n      return false;\n    }\n\n    this.changedValue['ENTITY_ID'] = 'authProfile';\n    this.changedValue['INSTANCE_GUID'] = this.instanceGUID;\n\n    if (this.isNewMode) {\n      this.changedValue['authProfile'] = {\n        action: 'add', PROFILE_NAME: this.mainForm.get('PROFILE_NAME').value,\n        CREATED_BY: this.identityService.Session.USER_ID, CREATE_TIME: this.identityService.CurrentTime,\n        CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n    } else {\n      this.changedValue['authProfile'] = {\n        action: 'update', CHANGED_BY: this.identityService.Session.USER_ID, CHANGE_TIME: this.identityService.CurrentTime};\n    }\n\n    if (this.mainForm.get('DESC').dirty) {\n      this.changedValue['authProfile']['DESC'] = this.mainForm.get('DESC').value;\n    }\n\n    const authObjectFormArray = this.mainForm.get('authObjects') as FormArray;\n    const relationship = this.identityService.composeAuthChanges(authObjectFormArray,\n      this.originalValue['appAuthObjects'], 'rs_auth_profile_object');\n    if (relationship) { this.changedValue['relationships'] = [relationship]; }\n\n    return true;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (this.mainForm && this.mainForm.dirty)) {\n      return this.dialogService.confirm('Discard changes?');\n    } else {\n      return true;\n    }\n  }\n}\n","<div class=\"card mb-3 pt-3\">\n  <div class=\"mt-2 pl-4 row\">\n    <div class=\"col-6 form-group row\">\n      <label for=\"profile_name\" class=\"col-sm-3 col-form-label\">Profile Name:</label>\n      <input id=\"profile_name\" name=\"profile_name\" [(ngModel)]=\"profileName\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\" autofocus>\n    </div>\n    <div class=\"col-6 form-group row\">\n      <label for=\"profile_desc\" class=\"col-sm-3 col-form-label\">Description:</label>\n      <input id=\"profile_desc\" name=\"profile_desc\" [(ngModel)]=\"profileDesc\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\">\n    </div>\n  </div>\n\n  <div class=\"mb-4\">\n    <button type=\"button\" id=\"search\" class=\"btn btn-primary btn-sm float-right mr-4\" (click)=\"search()\">Search</button>\n  </div>\n</div>\n\n<div class=\"mt-2 mb-4 mx-4\">\n  <dk-message></dk-message>\n  <div class=\"btn-toolbar justify-content-end my-2\" role=\"toolbar\">\n    <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"new()\">\n      <span class=\"fas fa-plus\"></span> New</button>\n  </div>\n  <table class=\"table table-bordered table-sm\">\n    <thead class=\"thead-light\">\n    <tr>\n      <th scope=\"col\">Name</th>\n      <th scope=\"col\">Description</th>\n      <th scope=\"col\">Changed By</th>\n      <th scope=\"col\">Changed At</th>\n      <th scope=\"col\">Action</th>\n    </tr>\n    </thead>\n\n    <tbody>\n    <tr *ngFor=\"let authProfile of authProfiles\">\n      <td><a [routerLink]=\"['/profiles', authProfile.PROFILE_NAME, {action: 'display'}]\">{{authProfile.PROFILE_NAME}}</a></td>\n      <td>{{authProfile.DESC}}</td>\n      <td>{{authProfile.CHANGED_BY}}</td>\n      <td>{{authProfile.CHANGE_TIME}}</td>\n      <td class=\"dk-actions\">\n        <button title=\"Display\" id=\"display\" class=\"btn btn-sm\" type=\"button\" (click)=\"display(authProfile.PROFILE_NAME)\">\n          <span class=\"fas fa-search\"></span>\n        </button>\n        <button title=\"Change\" id=\"change\" class=\"btn btn-sm\" type=\"button\" (click)=\"change(authProfile.PROFILE_NAME)\">\n          <span class=\"fas fa-pen\"></span>\n        </button>\n        <button title=\"Delete\" id=\"delete\" class=\"btn btn-sm\" type=\"button\" (click)=\"delete(authProfile.PROFILE_NAME)\">\n          <span class=\"far fa-trash-alt\"></span>\n        </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"modal fade\" [class.show]=\"showDeletionConfirmation\"\n       [ngStyle]=\"{'display': displayDeletionConfirmation}\" id=\"deletionConfirmation\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"confirmDeletion\">Confirm Deletion</h5>\n          <button type=\"button\" class=\"close\" (click)=\"cancelDeletion()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <p>Are you sure to delete the profile '{{toBeDeletedInstance}}'?</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" id=\"cancel\" class=\"btn btn-sm btn-secondary\" (click)=\"cancelDeletion()\">Cancel</button>\n          <button type=\"button\" id=\"confirm\" class=\"btn btn-sm btn-primary\" (click)=\"confirmDeletion()\">Confirm</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {AuthProfileList} from '../../identity';\nimport {IdentityService} from '../../identity.service';\nimport {Message, MessageService, messageType} from 'ui-message-angular';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-profile-list',\n  templateUrl: './profile-list.component.html',\n  styleUrls: ['./profile-list.component.css']\n})\nexport class ProfileListComponent implements OnInit {\n  profileName: string;\n  profileDesc: string;\n  authProfiles: AuthProfileList[];\n  showDeletionConfirmation = false;\n  toBeDeletedInstance: string;\n\n  get displayDeletionConfirmation() {return this.showDeletionConfirmation ? 'block' : 'none'; }\n\n  constructor(private identityService: IdentityService,\n              private messageService: MessageService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  search() {\n    this.messageService.clearMessages();\n    this.authProfiles = [];\n    this.profileName = this.profileName ? this.profileName.trim() : '';\n    this.profileDesc = this.profileDesc ? this.profileDesc.trim() : '';\n    this.identityService.searchAuthProfiles(this.profileName, this.profileDesc).subscribe(\n      data => {\n        if (!data[0]) {\n          this.messageService.reportMessage('GENERAL', 'EMPTY_LIST', messageType.Warning);\n        } else if (data[0]['msgCat']) {\n          const messages = <Message[]>data;\n          messages.forEach( msg => this.messageService.add(msg));\n        } else {\n          this.authProfiles = <AuthProfileList[]>data;\n        }\n      }\n    );\n  }\n\n  enterSearch($event): void {\n    if ($event.keyCode === 13 ) {\n      this.search();\n    }\n  }\n\n  new(): void {\n    this.router.navigate(['profiles', '/', {action: 'new'}]);\n  }\n\n  display(profileName: string): void {\n    this.router.navigate(['profiles', profileName, {action: 'display'}]);\n  }\n\n  change(profileName: string): void {\n    this.router.navigate(['profiles', profileName, {action: 'change'}]);\n  }\n\n  delete(profileName: string): void {\n    this.toBeDeletedInstance = profileName;\n    this.showDeletionConfirmation = true;\n  }\n\n  cancelDeletion(): void {\n    this.showDeletionConfirmation = false;\n  }\n\n  confirmDeletion(): void {\n    const toBeDeletedInstanceGUID = this.authProfiles.find(\n      ele => ele.PROFILE_NAME === this.toBeDeletedInstance).INSTANCE_GUID;\n    this.identityService.delete(toBeDeletedInstanceGUID).subscribe( errorMsg => {\n      this.showDeletionConfirmation = false;\n      if (errorMsg) {\n        const messages = <Message[]>errorMsg;\n        messages.forEach( msg => this.messageService.add(msg));\n      } else {\n        this.search();\n      }\n    });\n  }\n}\n","<div class=\"card mt-4\">\n  <div class=\"card-body\">\n    <div *ngFor=\"let userAddressForm of userAddressFormArray.controls; let i = index\" class=\"card mb-4\">\n      <button type=\"button\" id=\"remove\" class=\"close d-flex justify-content-end mr-2\" aria-label=\"Close\"\n              (click)=\"deleteAddress(i)\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n      <div class=\"card-body row\" [formGroup]=\"userAddressForm\">\n        <dk-app-attribute-form2 class=\"col-3\"\n                                [attributeControl]=\"getAttrCtrlFromID('TYPE')\"\n                                [formGroup]=\"userAddressForm\"\n                                [readonly]=\"readonly\"\n                                [isSmallSize]=\"true\">\n        </dk-app-attribute-form2>\n        <dk-app-attribute-form2 class=\"col-6\"\n                                [attributeControl]=\"getAttrCtrlFromID('ADDRESS_VALUE')\"\n                                [formGroup]=\"userAddressForm\"\n                                [readonly]=\"readonly\"\n                                [isSmallSize]=\"true\">\n        </dk-app-attribute-form2>\n        <div class=\"col-1 row form-group mr-2 form-check\">\n          <input type=\"radio\"  id=\"primaryAddress\" [value]=\"1\" class=\"form-check-input\"\n                 name=\"PRIMARY\" formControlName=\"PRIMARY\">\n          <label for=\"primaryAddress\" class=\"form-check-label\">Primary</label>\n        </div>\n        <dk-app-attribute-form2 class=\"col-md-3\"\n                                [attributeControl]=\"getAttrCtrlFromID('POSTCODE')\"\n                                [formGroup]=\"userAddressForm\"\n                                [readonly]=\"readonly\"\n                                [isSmallSize]=\"true\">\n        </dk-app-attribute-form2>\n        <dk-app-attribute-form2 class=\"col-md-3\"\n                                [attributeControl]=\"getAttrCtrlFromID('CITY')\"\n                                [formGroup]=\"userAddressForm\"\n                                [readonly]=\"readonly\"\n                                [isSmallSize]=\"true\">\n        </dk-app-attribute-form2>\n        <dk-app-attribute-form2 class=\"col-md-3\"\n                                [attributeControl]=\"getAttrCtrlFromID('COUNTRY')\"\n                                [formGroup]=\"userAddressForm\"\n                                [readonly]=\"readonly\"\n                                [isSmallSize]=\"true\">\n        </dk-app-attribute-form2>\n      </div>\n    </div>\n    <button type=\"button\" id=\"add\" class=\"btn btn-sm btn-primary float-right\" [disabled]=\"readonly\" (click)=\"addAddress()\">Add</button>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {AttributeBase, AttributeControlService, RelationMeta} from \"jor-angular\";\n\n@Component({\n  selector: 'app-user-address',\n  templateUrl: './user-address.component.html',\n  styleUrls: ['./user-address.component.css']\n})\nexport class UserAddressComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() userForm: FormGroup;\n  @Input() relationMetas: RelationMeta[];\n  private attrCtrls: AttributeBase[];\n  userAddressFormArray: FormArray;\n\n  constructor(private fb: FormBuilder,\n              private attributeControlService: AttributeControlService) { }\n\n  ngOnInit() {\n    this.userAddressFormArray = this.userForm.get('addresses') as FormArray;\n    this.attrCtrls = this.attributeControlService.toAttributeControl(\n      this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'r_address').ATTRIBUTES);\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n  addAddress() {\n    const addressFormGroup = this.fb.group({\n      ADDRESS_ID: [''],\n      TYPE: ['', [Validators.required]],\n      ADDRESS_VALUE: ['', [Validators.required]],\n      POSTCODE: [''],\n      CITY: [''],\n      COUNTRY: [''],\n      PRIMARY: []\n    });\n    if (this.userAddressFormArray.length === 0) {\n      addressFormGroup.get('PRIMARY').setValue(1);\n      addressFormGroup.get('PRIMARY').markAsDirty();\n    }\n    this.userAddressFormArray.push(addressFormGroup);\n  }\n\n  deleteAddress(index: number) {\n    if (this.userAddressFormArray.length > 1 &&\n        this.userAddressFormArray.at(index).value['PRIMARY']) {\n      const newPrimaryIndex = index === 0 ? 1 : 0;\n      this.userAddressFormArray.at(newPrimaryIndex).get('PRIMARY').setValue(1);\n      this.userAddressFormArray.at(newPrimaryIndex).get('PRIMARY').markAsDirty();\n    }\n    this.userAddressFormArray.removeAt(index);\n    this.userAddressFormArray.markAsDirty();\n  }\n}\n","import {Component, Input, OnInit } from '@angular/core';\nimport {FormGroup} from \"@angular/forms\";\nimport {AttributeBase, AttributeControlService, RelationMeta} from \"jor-angular\";\n\n@Component({\n  selector: 'app-user-basic',\n  templateUrl: './user-basic.component.html',\n  styleUrls: ['./user-basic.component.css']\n})\nexport class UserBasicComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() userForm: FormGroup;\n  @Input() relationMetas: RelationMeta[];\n  private attrCtrls: AttributeBase[];\n  userBasicNamesForm: FormGroup;\n  userBasicEmployeeForm: FormGroup;\n\n  constructor(private attributeControlService: AttributeControlService) { }\n\n  ngOnInit() {\n    this.userBasicNamesForm = this.userForm.get('userBasic.names') as FormGroup;\n    this.userBasicEmployeeForm = this.userForm.get('userBasic.employee') as FormGroup;\n    this.attrCtrls = this.attributeControlService.toAttributeControl(\n      this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'r_employee').ATTRIBUTES);\n    this.attrCtrls = this.attrCtrls.concat(this.attributeControlService.toAttributeControl(\n      this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'r_user').ATTRIBUTES));\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n}\n","<div class=\"card mt-4\">\n  <div class=\"card-header\">Name</div>\n  <div class=\"card-body\">\n    <form class=\"mt-2 row\">\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('USER_NAME')\"\n                              [formGroup]=\"userBasicNamesForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('DISPLAY_NAME')\"\n                              [formGroup]=\"userBasicNamesForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n      <div class=\"col-md-4\"></div>\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('GIVEN_NAME')\"\n                              [formGroup]=\"userBasicNamesForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('MIDDLE_NAME')\"\n                              [formGroup]=\"userBasicNamesForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('FAMILY_NAME')\"\n                              [formGroup]=\"userBasicNamesForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n    </form>\n  </div>\n</div>\n\n<div class=\"card mt-4\">\n  <div class=\"card-header\">Employee</div>\n  <div class=\"card-body\">\n    <form class=\"mt-2 row\">\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('COMPANY_ID')\"\n                              [formGroup]=\"userBasicEmployeeForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('DEPARTMENT_ID')\"\n                              [formGroup]=\"userBasicEmployeeForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('TITLE')\"\n                              [formGroup]=\"userBasicEmployeeForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n      <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                              [attributeControl]=\"getAttrCtrlFromID('GENDER')\"\n                              [formGroup]=\"userBasicEmployeeForm\"\n                              [readonly]=\"readonly\"\n                              [isSmallSize]=\"true\">\n      </dk-app-attribute-form2>\n    </form>\n  </div>\n</div>\n","<nav class=\"navbar dk-fixed-top navbar-light bg-light\">\n  <div>\n    <span class=\"font-weight-bold mb-0 mx-1\">{{isNewMode? 'New User' : readonly? 'Display User' : 'Change User'}}</span>\n  </div>\n\n  <div class=\"flex-row-reverse\">\n    <button class=\"btn btn-sm btn-outline-info mr-2\" type=\"button\" title=\"Return to List\" id=\"toList\"\n            (click)=\"return2List()\" >\n      <span class=\"fas fa-list-ul\"> To List</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Edit/Display\" id=\"editDisplay\" (click)=\"switchEditDisplay()\">\n      <span *ngIf=\"readonly\" class=\"fas fa-edit\"> Edit</span>\n      <span *ngIf=\"!readonly\" class=\"fas fa-glasses\"> Display</span>\n    </button>\n    <button class=\"btn btn-sm btn-outline-primary mr-2\" type=\"button\" title=\"Save\" id=\"save\" (click)=\"save()\" [disabled]=\"readonly\">\n      <span class=\"fas fa-save\"> Save</span>\n    </button>\n  </div>\n</nav>\n\n<div class=\"mt-2 mb-2\">\n  <dk-message></dk-message>\n</div>\n\n<div *ngIf=\"userForm\" class=\"ml-2\">\n  <div class=\"mt-2 ml-1 row\">\n    <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                            [attributeControl]=\"getAttrCtrlFromID('USER_ID')\"\n                            [formGroup]=\"userForm\"\n                            [readonly]=\"!isNewMode\"\n                            [isSmallSize]=\"true\">\n    </dk-app-attribute-form2>\n    <div class=\"col-md-6 col-lg-4 row form-group mr-2\" [formGroup]=\"userForm\">\n      <label for=\"lockStatus\" class=\"col-form-label col-form-label-sm\">Lock Status:</label>\n      <div id=\"lockStatus\" class=\"form-control dk-icon\">\n        <span *ngIf=\"userForm.get('LOCK').value\" class=\"fas fa-lock\" > Locked</span>\n        <span *ngIf=\"!userForm.get('LOCK').value\" class=\"fas fa-lock-open\"> Unlocked</span>\n      </div>\n    </div>\n    <div class=\"col-md-6 col-lg-4 row form-group mr-2\" [formGroup]=\"userForm\">\n      <label for=\"passwordStatus\" class=\"col-form-label col-form-label-sm\">Password Status:</label>\n      <div id=\"passwordStatus\" class=\"form-control dk-icon\" [ngSwitch]=\"userForm.get('PWD_STATUS').value\">\n        <div *ngSwitchCase=\"\">\n          <span class=\"badge badge-primary\">Initial</span>\n        </div>\n        <div *ngSwitchCase=\"1\">\n          <span class=\"badge badge-success\">Active</span>\n        </div>\n        <div *ngSwitchCase=\"2\">\n          <span class=\"badge badge-warning\">Renew</span>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <ul class=\"nav nav-tabs mt-1\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===1\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(1)\">Basic</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===2\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(2)\">Email</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===3\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(3)\">Address</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===4\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(4)\">Personalization</a>\n    </li>\n    <li class=\"nav-item\">\n      <a class=\"nav-link\" [class.active]=\"tabStrip===5\" href=\"javascript:void(0);\" (click)=\"switchTabStrip(5)\">Role</a>\n    </li>\n  </ul>\n\n  <div class=\"mt-2\" [ngSwitch]=\"tabStrip\">\n    <app-user-basic *ngSwitchCase=\"1\" [userForm]=\"userForm\" [relationMetas]=\"relationMetas\" [readonly]=\"readonly\"></app-user-basic>\n    <app-user-email *ngSwitchCase=\"2\" [userForm]=\"userForm\" [relationMetas]=\"relationMetas\" [readonly]=\"readonly\"></app-user-email>\n    <app-user-address *ngSwitchCase=\"3\" [userForm]=\"userForm\" [relationMetas]=\"relationMetas\"  [readonly]=\"readonly\"></app-user-address>\n    <app-user-personalization *ngSwitchCase=\"4\" [userForm]=\"userForm\" [relationMetas]=\"relationMetas\" [readonly]=\"readonly\"></app-user-personalization>\n    <app-user-role *ngSwitchCase=\"5\" [userForm]=\"userForm\" [readonly]=\"readonly\"></app-user-role>\n  </div>\n</div>\n","import {Component, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {switchMap} from 'rxjs/operators';\nimport {IdentityService} from '../../identity.service';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {\n  AttributeBase,\n  AttributeControlService,\n  Entity,\n  EntityService,\n  RelationMeta,\n  UiMapperService\n} from 'jor-angular';\nimport {existingUserIDValidator, existingUserNameValidator} from '../../async-validators';\nimport {DialogService} from '../../dialog.service';\n\n@Component({\n  selector: 'app-user-detail',\n  templateUrl: './user-detail.component.html',\n  styleUrls: ['./user-detail.component.css']\n})\nexport class UserDetailComponent implements OnInit {\n  userForm: FormGroup;\n  relationMetas: RelationMeta[];\n  attrCtrls: AttributeBase[];\n  readonly = true;\n  isNewMode = false;\n  action: string;\n  instanceGUID: string;\n  originalUserValue = {};\n  changedUser = {};\n  tabStrip = 1;\n\n  get pwdStatus(): string {\n    switch (this.userForm.get('PWD_STATUS').value) {\n      case '':\n        return 'Initial';\n      case 1:\n        return 'Active';\n      case 3:\n        return 'Need Change';\n      default:\n        return 'Initial';\n    }\n  }\n\n  constructor(private fb: FormBuilder,\n              private route: ActivatedRoute,\n              private router: Router,\n              private dialogService: DialogService,\n              private identityService: IdentityService,\n              private attributeControlService: AttributeControlService,\n              private entityService: EntityService,\n              private uiMapperService: UiMapperService,\n              private messageService: MessageService) {\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        this.action = params.get('action');\n        if (this.action === 'new') {\n          this.isNewMode = true;\n          return forkJoin(\n            [this.entityService.getRelationMetaOfEntity('person'), this._createNewUser()]);\n        } else {\n          this.isNewMode = false;\n          return forkJoin(\n            [this.entityService.getRelationMetaOfEntity('person'),\n            this.identityService.getUserDetail(params.get('userID'))]);\n        }\n      })\n    ).subscribe( data => {\n      this.relationMetas = data[0] as RelationMeta[];\n      this.attrCtrls = this.attributeControlService.toAttributeControl(\n        this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'r_user').ATTRIBUTES);\n      if ('ENTITY_ID' in data[1]) {\n        this.instanceGUID = data[1]['INSTANCE_GUID'];\n        this._generateUserForm(<Entity>data[1]);\n        if (this.isNewMode || this.action === 'change') {\n          this._switch2EditMode();\n        } else {\n          this._switch2DisplayMode();\n        }\n      } else {\n        const errorMessages = <Message[]>data[1];\n        errorMessages.forEach( msg => this.messageService.add(msg));\n      }\n    });\n  }\n\n  return2List(): void {\n    this.router.navigate(['users']);\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n  switchTabStrip(tabStripID: number): void {\n    this.tabStrip = tabStripID;\n  }\n\n  switchEditDisplay(): void {\n    if (this.readonly ) {\n      this._switch2EditMode();\n    } else {\n      if (this.userForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) {\n            this.userForm.reset(this.originalUserValue);\n            this._switch2DisplayMode();\n          }\n        });\n      } else {\n        this._switch2DisplayMode();\n      }\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this._setCheckBoxState();\n\n    const userIDCtrl = this.userForm.get('USER_ID') as FormControl;\n    userIDCtrl.clearAsyncValidators();\n    const userNameCtrl = this.userForm.get('userBasic.names.USER_NAME') as FormControl;\n    userNameCtrl.clearAsyncValidators();\n\n    const emailArray = this.userForm.get('emails') as FormArray;\n    let lastIndex = emailArray.length - 1;\n    while (lastIndex >= 0) {\n      const emailFormGroup = emailArray.at(lastIndex);\n      if (emailFormGroup.invalid || !emailFormGroup.value.EMAIL) {\n        emailArray.removeAt(lastIndex);\n      }\n      lastIndex--;\n    }\n\n    const addressArray = this.userForm.get('addresses') as FormArray;\n    lastIndex = addressArray.length - 1;\n    while (lastIndex >= 0) {\n      const addressFormGroup = addressArray.at(lastIndex);\n      if (addressFormGroup.invalid || !addressFormGroup.value.ADDRESS_VALUE) {\n        addressArray.removeAt(lastIndex);\n      }\n      lastIndex--;\n    }\n\n    const roleArray = this.userForm.get('userRole') as FormArray;\n    lastIndex = roleArray.length - 1;\n    while (lastIndex >= 0) {\n      const roleFormGroup = roleArray.at(lastIndex);\n      if (roleFormGroup.invalid || !roleFormGroup.value.NAME) {\n        roleArray.removeAt(lastIndex);\n      }\n      lastIndex--;\n    }\n\n    this.userForm.markAsPristine();\n    // Replace the URL from change to display\n    window.history.replaceState({}, '', `/users/${userIDCtrl.value};action=display`);\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n    this._setCheckBoxState();\n\n    const userIDCtrl = this.userForm.get('USER_ID') as FormControl;\n    if (this.isNewMode) {\n      userIDCtrl.setAsyncValidators(\n        existingUserIDValidator(this.identityService, this.messageService));\n    }\n\n    const userNameCtrl = this.userForm.get('userBasic.names.USER_NAME') as FormControl;\n    userNameCtrl.setAsyncValidators(\n      existingUserNameValidator(this.identityService, this.messageService, this.userForm.get('USER_ID').value));\n\n    const roleArray = this.userForm.get('userRole') as FormArray;\n    roleArray.push( this.fb.group({\n      NAME: [''],\n      DESCRIPTION: [''],\n      system_role_INSTANCE_GUID: [''],\n      RELATIONSHIP_INSTANCE_GUID: [''],\n    }));\n\n    // Replace the URL from to display\n    if (this.action === 'display') {this.action = 'change'; }\n    window.history.replaceState({}, '', `/users/${userIDCtrl.value};action=` + this.action);\n  }\n\n  _createNewUser(): Observable<Entity> {\n    const userDetail = new Entity();\n    userDetail['ENTITY_ID'] = 'person';\n    userDetail['r_user'] = [\n      { USER_ID: '', LOCK: 0, PWD_STATUS: '', USER_NAME: '', DISPLAY_NAME: '',\n        GIVEN_NAME: '', MIDDLE_NAME: '', FAMILY_NAME: ''}\n    ];\n    userDetail['r_employee'] = [\n      {TITLE: '', DEPARTMENT_ID: '', COMPANY_ID: '', GENDER: ''}\n    ];\n    userDetail['r_email'] = [];\n    userDetail['r_personalization'] = [\n      {USER_ID: '', LANGUAGE: '', TIMEZONE: '', DECIMAL_FORMAT: '', DATE_FORMAT: ''}\n    ];\n    userDetail['relationships'] = [];\n    return of(userDetail);\n  }\n\n  _generateUserForm(data: Entity): void {\n    this.userForm = this.fb.group({\n      USER_ID: [data['r_user'][0]['USER_ID'], [Validators.required]],\n      LOCK: [data['r_user'][0]['LOCK']],\n      PWD_STATUS: [data['r_user'][0]['PWD_STATUS']],\n      userBasic: this.fb.group({\n        names: this.fb.group({\n          USER_NAME: [data['r_user'][0]['USER_NAME'], [Validators.required]],\n          DISPLAY_NAME: [data['r_user'][0]['DISPLAY_NAME'], [Validators.required]],\n          GIVEN_NAME: [data['r_user'][0]['GIVEN_NAME']],\n          MIDDLE_NAME: [data['r_user'][0]['MIDDLE_NAME']],\n          FAMILY_NAME: [data['r_user'][0]['FAMILY_NAME']]\n        }),\n        employee: this.fb.group({\n          TITLE: [data['r_employee'][0]['TITLE']],\n          DEPARTMENT_ID: [data['r_employee'][0]['DEPARTMENT_ID']],\n          COMPANY_ID: [data['r_employee'][0]['COMPANY_ID'], [Validators.required]],\n          GENDER: [data['r_employee'][0]['GENDER']]\n        })\n      }),\n      emails:  this.fb.array([]),\n      addresses: this.fb.array([]),\n      userPersonalization: this.fb.group({\n        USER_ID: [data['r_personalization'] ? data['r_personalization'][0]['USER_ID'] : ''],\n        LANGUAGE: [data['r_personalization'] ? data['r_personalization'][0]['LANGUAGE'] : ''],\n        TIMEZONE: [data['r_personalization'] ? data['r_personalization'][0]['TIMEZONE'] : ''],\n        DECIMAL_FORMAT: [data['r_personalization'] ? data['r_personalization'][0]['DECIMAL_FORMAT'] : ''],\n        DATE_FORMAT: [data['r_personalization'] ? data['r_personalization'][0]['DATE_FORMAT'] : '']\n      }),\n      userRole: this.fb.array([])\n    });\n\n    const emailArray = this.userForm.get('emails') as FormArray;\n    data['r_email'].forEach( email => {\n      emailArray.push(\n        this.fb.group({\n          EMAIL: [email['EMAIL'], [Validators.required]],\n          TYPE: [email['TYPE'], [Validators.required]],\n          PRIMARY: [email['PRIMARY']]\n        })\n      );\n    });\n\n    const addressArray = this.userForm.get('addresses') as FormArray;\n    if (data['r_address']) {\n      data['r_address'].forEach( address => {\n        addressArray.push(\n          this.fb.group({\n            ADDRESS_ID: [address['ADDRESS_ID']],\n            TYPE: [address['TYPE'], [Validators.required]],\n            ADDRESS_VALUE: [address['ADDRESS_VALUE'], [Validators.required]],\n            POSTCODE: [address['POSTCODE']],\n            CITY: [address['CITY']],\n            COUNTRY: [address['COUNTRY']],\n            PRIMARY: [address['PRIMARY']]\n          })\n        );\n      });\n    }\n\n    const roleArray = this.userForm.get('userRole') as FormArray;\n    const userRoleRelationship = data['relationships'][0];\n    if (userRoleRelationship) {\n      userRoleRelationship.values.forEach( value => {\n        const roleInstance = value.PARTNER_INSTANCES[0];\n        roleArray.push(\n          this.fb.group({\n            NAME: [roleInstance['r_role'][0]['NAME']],\n            DESCRIPTION: [roleInstance['r_role'][0]['DESCRIPTION']],\n            system_role_INSTANCE_GUID: [roleInstance['INSTANCE_GUID']],\n            RELATIONSHIP_INSTANCE_GUID: [value['RELATIONSHIP_INSTANCE_GUID']]\n          })\n        );\n      });\n    }\n\n    this.originalUserValue = this.userForm.getRawValue();\n  }\n\n  _resetUserValue(data: Entity): void {\n    this.originalUserValue = {\n      USER_ID: data['r_user'][0]['USER_ID'],\n      LOCK: data['r_user'][0]['LOCK'],\n      PWD_STATUS: data['r_user'][0]['PWD_STATUS'],\n      userBasic: {\n        names: {\n          USER_NAME: data['r_user'][0]['USER_NAME'],\n          DISPLAY_NAME: data['r_user'][0]['DISPLAY_NAME'],\n          GIVEN_NAME: data['r_user'][0]['GIVEN_NAME'],\n          MIDDLE_NAME: data['r_user'][0]['MIDDLE_NAME'],\n          FAMILY_NAME: data['r_user'][0]['FAMILY_NAME']\n        },\n        employee: {\n          TITLE: data['r_employee'][0]['TITLE'],\n          DEPARTMENT_ID: data['r_employee'][0]['DEPARTMENT_ID'],\n          COMPANY_ID: data['r_employee'][0]['COMPANY_ID'],\n          GENDER: data['r_employee'][0]['GENDER']\n        }\n      },\n      emails: [],\n      addresses: [],\n      userPersonalization: {\n        USER_ID: data['r_personalization'] ? data['r_personalization'][0]['USER_ID'] : '',\n        LANGUAGE: data['r_personalization'] ? data['r_personalization'][0]['LANGUAGE'] : '',\n        TIMEZONE: data['r_personalization'] ? data['r_personalization'][0]['TIMEZONE'] : '',\n        DECIMAL_FORMAT: data['r_personalization'] ? data['r_personalization'][0]['DECIMAL_FORMAT'] : '',\n        DATE_FORMAT: data['r_personalization'] ? data['r_personalization'][0]['DATE_FORMAT'] : ''\n      },\n      userRole: []\n    };\n\n    data['r_email'].forEach( email => {\n      this.originalUserValue['emails'].push(\n        {\n          EMAIL: email['EMAIL'],\n          TYPE: email['TYPE'],\n          PRIMARY: email['PRIMARY']\n        }\n      );\n    });\n\n    if (data['r_address']) {\n      data['r_address'].forEach( address => {\n        this.originalUserValue['addresses'].push(\n          {\n            ADDRESS_ID: address['ADDRESS_ID'],\n            TYPE: address['TYPE'],\n            ADDRESS_VALUE: address['ADDRESS_VALUE'],\n            POSTCODE: address['POSTCODE'],\n            CITY: address['CITY'],\n            COUNTRY: address['COUNTRY'],\n            PRIMARY: address['PRIMARY']\n          }\n        );\n      });\n    }\n\n    const userRoleRelationship = data['relationships'][0];\n    if (userRoleRelationship) {\n      userRoleRelationship.values.forEach( value => {\n        const roleInstance = value.PARTNER_INSTANCES[0];\n        this.originalUserValue['userRole'].push(\n          {\n            NAME: [roleInstance['r_role'][0]['NAME']],\n            DESCRIPTION: [roleInstance['r_role'][0]['DESCRIPTION']],\n            system_role_INSTANCE_GUID: [roleInstance['INSTANCE_GUID']],\n            RELATIONSHIP_INSTANCE_GUID: [value['RELATIONSHIP_INSTANCE_GUID']]\n          }\n        );\n      });\n    }\n\n    this.userForm.reset(this.originalUserValue);\n  }\n\n  _setCheckBoxState() {\n    const userEmailFormArray = this.userForm.get('emails') as FormArray;\n    const userAddressFormArray = this.userForm.get('addresses') as FormArray;\n    const userEmployeeForm = this.userForm.get('userBasic').get('employee') as FormGroup;\n    const userPersonalizationForm = this.userForm.get('userPersonalization') as FormGroup;\n    if (this.readonly) {\n      userEmailFormArray.controls.forEach( userEmailForm => {\n        userEmailForm.get('PRIMARY').disable();\n        userEmailForm.get('TYPE').disable();\n      });\n      userAddressFormArray.controls.forEach( userAddressForm => {\n        userAddressForm.get('PRIMARY').disable();\n        userAddressForm.get('TYPE').disable();\n      });\n      userEmployeeForm.get('GENDER').disable();\n      userPersonalizationForm.get('LANGUAGE').disable();\n      userPersonalizationForm.get('TIMEZONE').disable();\n      userPersonalizationForm.get('DECIMAL_FORMAT').disable();\n      userPersonalizationForm.get('DATE_FORMAT').disable();\n    } else {\n      userEmailFormArray.controls.forEach( userEmailForm => {\n        userEmailForm.get('PRIMARY').enable();\n        userEmailForm.get('TYPE').enable();\n      });\n      userAddressFormArray.controls.forEach( userAddressForm => {\n        userAddressForm.get('PRIMARY').enable();\n        userAddressForm.get('TYPE').enable();\n      });\n      userEmployeeForm.get('GENDER').enable();\n      userPersonalizationForm.get('LANGUAGE').enable();\n      userPersonalizationForm.get('TIMEZONE').enable();\n      userPersonalizationForm.get('DECIMAL_FORMAT').enable();\n      userPersonalizationForm.get('DATE_FORMAT').enable();\n    }\n  }\n\n  save() {\n    this.messageService.clearMessages();\n    if (this._composeChangesToUser()) {\n      this.identityService.save(<Entity>this.changedUser).subscribe( data => {\n        this.changedUser = {};\n        if ('INSTANCE_GUID' in data) {\n          const userID = data['r_user'][0]['USER_ID'];\n          this.instanceGUID = data['INSTANCE_GUID'];\n          this.isNewMode = false;\n          this.identityService.getUserDetail(userID).subscribe(userData => {\n            if ('ENTITY_ID' in userData) {\n              this._switch2DisplayMode();\n              this._resetUserValue(<Entity>userData);\n            } else {\n              const errorMessages = <Message[]>userData;\n              errorMessages.forEach( msg => this.messageService.add(msg));\n            }\n          });\n          this.messageService.reportMessage('USER', 'USER_SAVED', 'S', userID);\n        } else {\n          const errorMessages = <Message[]>data;\n          errorMessages.forEach( msg => this.messageService.add(msg));\n        }\n      });\n    }\n  }\n\n  _composeChangesToUser() {\n    if (this.userForm.invalid) {\n      this.messageService.reportMessage('USER', 'INVALID', 'E');\n      return false;\n    }\n\n    if (this.userForm.dirty === false) {\n      this.messageService.reportMessage('GENERAL', 'NO_CHANGE', 'W');\n      return false;\n    }\n\n    this.changedUser['ENTITY_ID'] = 'person';\n    this.changedUser['INSTANCE_GUID'] = this.instanceGUID;\n    if (this.isNewMode) {\n      this.changedUser['person'] = {action: 'add', TYPE: 'employee', SYSTEM_ACCESS: 'PORTAL'};\n    }\n\n    const userBasicFormGroup = this.userForm.get('userBasic');\n    const userID = this.userForm.get('USER_ID').value;\n    if (userBasicFormGroup.dirty) {\n      const userBasicNamesFormGroup = userBasicFormGroup.get('names') as FormGroup;\n      this.changedUser['r_user'] = this.uiMapperService.composeChangedRelation(\n        userBasicNamesFormGroup, {USER_ID: userID}, this.isNewMode);\n\n      const userBasicEmployeeFormGroup = userBasicFormGroup.get('employee') as FormGroup;\n      this.changedUser['r_employee'] = this.uiMapperService.composeChangedRelation(\n        userBasicEmployeeFormGroup, {USER_ID: userID}, this.isNewMode);\n    }\n\n    const userEmailFormArray = this.userForm.get('emails') as FormArray;\n    this.changedUser['r_email'] = this.uiMapperService.composeChangedRelationArray(\n      userEmailFormArray, this.originalUserValue['emails'], {EMAIL: null});\n\n    const userAddressFormArray = this.userForm.get('addresses') as FormArray;\n    this.changedUser['r_address'] = this.uiMapperService.composeChangedRelationArray(\n      userAddressFormArray, this.originalUserValue['addresses'], {ADDRESS_ID: null});\n\n    const userPersonalizationFormGroup = this.userForm.get('userPersonalization') as FormGroup;\n    this.changedUser['r_personalization'] = this.uiMapperService.composeChangedRelation(\n      userPersonalizationFormGroup, {USER_ID: userID}, !userPersonalizationFormGroup.get('USER_ID').value);\n\n    const userRoleFormArray = this.userForm.get('userRole') as FormArray;\n    const relationship = this.uiMapperService.composeChangedRelationship(\n      'rs_user_role',\n      [{ENTITY_ID: 'permission', ROLE_ID: 'system_role'}],\n      userRoleFormArray, this.originalUserValue['userRole'], ['NAME', 'DESCRIPTION']);\n    if (relationship) {this.changedUser['relationships'] = [relationship]; }\n\n    return true;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (this.userForm && this.userForm.dirty)) {\n      return this.dialogService.confirm('Discard changes?');\n    } else {\n      return true;\n    }\n  }\n}\n\n","<div class=\"card mt-4\">\n  <div class=\"card-body\">\n    <div *ngFor=\"let userEmailForm of userEmailFormArray.controls; let i = index\" class=\"card mb-4\">\n      <button type=\"button\" id=\"remove\" class=\"close d-flex justify-content-end mr-2\" aria-label=\"Close\" (click)=\"deleteEmail(i)\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n      <div class=\"card-body row\" [formGroup]=\"userEmailForm\">\n        <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                                [attributeControl]=\"getAttrCtrlFromID('TYPE')\"\n                                [formGroup]=\"userEmailForm\"\n                                [readonly]=\"readonly\"\n                                [isSmallSize]=\"true\">\n        </dk-app-attribute-form2>\n        <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                                [attributeControl]=\"getAttrCtrlFromID('EMAIL')\"\n                                [formGroup]=\"userEmailForm\"\n                                [readonly]=\"readonly\"\n                                [isSmallSize]=\"true\">\n        </dk-app-attribute-form2>\n        <div class=\"col-1 row form-group mr-2 form-check\">\n          <input type=\"radio\" class=\"form-check-input\" id=\"primaryEmail\" [value]=\"1\" name=\"PRIMARY\" formControlName=\"PRIMARY\">\n          <label for=\"primaryEmail\" class=\"form-check-label\">Primary</label>\n        </div>\n      </div>\n    </div>\n    <button type=\"button\" id=\"add\" class=\"btn btn-sm btn-primary float-right\" [disabled]=\"readonly\" (click)=\"addEmail()\">Add</button>\n  </div>\n</div>\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {MessageService} from \"ui-message-angular\";\nimport {AttributeBase, AttributeControlService, RelationMeta} from \"jor-angular\";\n\n@Component({\n  selector: 'app-user-email',\n  templateUrl: './user-email.component.html',\n  styleUrls: ['./user-email.component.css']\n})\nexport class UserEmailComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() userForm: FormGroup;\n  @Input() relationMetas: RelationMeta[];\n  private attrCtrls: AttributeBase[];\n  userEmailFormArray: FormArray;\n\n  constructor(private fb: FormBuilder,\n              private messageService: MessageService,\n              private attributeControlService: AttributeControlService) { }\n\n  ngOnInit() {\n    this.userEmailFormArray = this.userForm.get('emails') as FormArray;\n    this.attrCtrls = this.attributeControlService.toAttributeControl(\n      this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'r_email').ATTRIBUTES);\n    if (!this.readonly && this.userEmailFormArray.length === 0) {\n      this.addEmail();\n    }\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n\n  addEmail() {\n    const emailFormGroup = this.fb.group({\n      EMAIL: ['', [Validators.required]],\n      TYPE: ['', [Validators.required]],\n      PRIMARY: ['']\n    });\n    if (this.userEmailFormArray.length === 0) {\n      emailFormGroup.get('PRIMARY').setValue(1);\n      emailFormGroup.get('PRIMARY').markAsDirty();\n    }\n    this.userEmailFormArray.push(emailFormGroup);\n  }\n\n  deleteEmail(index: number) {\n    if (this.userEmailFormArray.length === 1) {\n      this.messageService.reportMessage('USER', 'AT_LEAST_ONE_EMAIL', 'E');\n    } else {\n      if (this.userEmailFormArray.at(index).value['PRIMARY']) {\n        const newPrimaryIndex = index === 0 ? 1 : 0;\n        this.userEmailFormArray.at(newPrimaryIndex).get('PRIMARY').setValue(1);\n        this.userEmailFormArray.at(newPrimaryIndex).get('PRIMARY').markAsDirty();\n      }\n      this.userEmailFormArray.removeAt(index);\n      this.userEmailFormArray.markAsDirty();\n    }\n  }\n}\n","import {Component, Input, OnInit} from '@angular/core';\nimport {FormGroup} from \"@angular/forms\";\nimport {AttributeBase, AttributeControlService, RelationMeta} from \"jor-angular\";\n\n@Component({\n  selector: 'app-user-personalization',\n  templateUrl: './user-personalization.component.html',\n  styleUrls: ['./user-personalization.component.css']\n})\nexport class UserPersonalizationComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() userForm: FormGroup;\n  @Input() relationMetas: RelationMeta[];\n  private attrCtrls: AttributeBase[];\n  userPersonalizationForm: FormGroup;\n\n  constructor(private attributeControlService: AttributeControlService) { }\n\n  ngOnInit() {\n    this.userPersonalizationForm = this.userForm.get('userPersonalization') as FormGroup;\n    this.attrCtrls = this.attributeControlService.toAttributeControl(\n      this.relationMetas.find( relationMeta => relationMeta.RELATION_ID === 'r_personalization').ATTRIBUTES);\n  }\n\n  getAttrCtrlFromID(fieldName: string): AttributeBase {\n    return this.attrCtrls.find( attrCtrl => attrCtrl.name === fieldName);\n  }\n}\n","<form class=\"mt-4 ml-2 row\">\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                          [attributeControl]=\"getAttrCtrlFromID('LANGUAGE')\"\n                          [formGroup]=\"userPersonalizationForm\"\n                          [readonly]=\"readonly\"\n                          [isSmallSize]=\"true\">\n  </dk-app-attribute-form2>\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                          [attributeControl]=\"getAttrCtrlFromID('TIMEZONE')\"\n                          [formGroup]=\"userPersonalizationForm\"\n                          [readonly]=\"readonly\"\n                          [isSmallSize]=\"true\">\n  </dk-app-attribute-form2>\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                          [attributeControl]=\"getAttrCtrlFromID('DECIMAL_FORMAT')\"\n                          [formGroup]=\"userPersonalizationForm\"\n                          [readonly]=\"readonly\"\n                          [isSmallSize]=\"true\">\n  </dk-app-attribute-form2>\n  <dk-app-attribute-form2 class=\"col-md-6 col-lg-4\"\n                          [attributeControl]=\"getAttrCtrlFromID('DATE_FORMAT')\"\n                          [formGroup]=\"userPersonalizationForm\"\n                          [readonly]=\"readonly\"\n                          [isSmallSize]=\"true\">\n  </dk-app-attribute-form2>\n</form>\n","<table class=\"table table-sm table-bordered dk-table ml-3 mt-4\" [formGroup]=\"userForm\">\n  <thead class=\"thead-light dk-form-label\">\n    <tr>\n      <th class=\"dk-name\">Role</th>\n      <th class=\"dk-description\">Description</th>\n      <th class=\"dk-actions\">Action</th>\n    </tr>\n  </thead>\n\n  <tbody formArrayName=\"userRole\" class=\"mb-4\">\n    <tr *ngFor=\"let userRoleForm of userRoleFormArray.controls; let i = index\">\n      <td [formGroup]=\"userRoleForm\">\n        <div class=\"input-group\">\n          <input class=\"form-control form-control-sm\" type=\"text\" formControlName=\"NAME\" name=\"roleName\"\n               [readonly]=\"readonly || oldRole(userRoleForm) && userRoleForm.valid\" (change)=\"onChangeRoleID(i)\">\n          <div class=\"invalid-tooltip\">\n            {{userRoleForm.get('NAME').errors?.message}}\n          </div>\n          <div class=\"input-group-append\">\n            <button class=\"btn btn-sm btn-outline-secondary btn-light\" type=\"button\" id=\"searchPermission\"\n            (click)=\"onSearchHelp(i, userRoleForm)\">\n              <span class=\"fas fa-search\"></span>\n            </button>\n          </div>\n        </div>\n      </td>\n      <td [formGroup]=\"userRoleForm\" >\n        <input type=\"text\" formControlName=\"DESCRIPTION\" readonly class=\"form-control form-control-sm\">\n      </td>\n      <td>\n        <button class=\"btn btn-sm\" type=\"button\" id=\"delete\" [disabled]=\"readonly\" (click)=\"deleteRole(i)\" title=\"Delete\">\n          <span class=\"far fa-trash-alt\"></span>\n        </button>\n      </td>\n    </tr>\n  </tbody>\n</table>\n\n<dk-app-search-help></dk-app-search-help>\n","import {Component, Input, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {IdentityService} from '../../../identity.service';\nimport {SearchHelpComponent} from 'jor-angular';\n\n@Component({\n  selector: 'app-user-role',\n  templateUrl: './user-role.component.html',\n  styleUrls: ['./user-role.component.css']\n})\nexport class UserRoleComponent implements OnInit {\n  @Input() readonly: boolean;\n  @Input() userForm: FormGroup;\n  userRoleFormArray: FormArray;\n\n  constructor(private fb: FormBuilder,\n              private identityService: IdentityService) { }\n\n  @ViewChild(SearchHelpComponent, { static: true })\n  private searchHelpComponent: SearchHelpComponent;\n\n  ngOnInit() {\n    this.userRoleFormArray = this.userForm.get('userRole') as FormArray;\n    // Recheck each role since every time the template is initialized, Angular clears the error status.\n    if (!this.readonly) {\n      this.userRoleFormArray.controls.forEach( (ctrl, index) => {\n        this.onChangeRoleID(index);\n      });\n    }\n  }\n\n  deleteRole(index: number): void {\n    if (index !== this.userRoleFormArray.length - 1) {\n      this.userRoleFormArray.removeAt(index);\n      this.userRoleFormArray.markAsDirty();\n    }\n  }\n\n  onChangeRoleID(index: number): void {\n    const currentRole = this.userRoleFormArray.at(index);\n    if (this.oldRole(currentRole)) {\n      currentRole.get('NAME').setErrors({message: 'Duplicate Role'});\n      return;\n    }\n\n    if (index === this.userRoleFormArray.length - 1 && currentRole.value.NAME.trim() !== '') {\n      // Only work if the last line is not new and empty\n      this.userRoleFormArray.push(\n        this.fb.group({\n          NAME: [''],\n          DESCRIPTION: [''],\n          system_role_INSTANCE_GUID: [''],\n          RELATIONSHIP_INSTANCE_GUID: ['']\n        })\n      );\n    }\n\n    if (currentRole.value.NAME) {\n      this.identityService.getRoleDesc(currentRole.value.NAME).subscribe(data => {\n        if (data['msgCat']) {\n          currentRole.get('NAME').setErrors({message: data['msgShortText']});\n        } else {\n          currentRole.get('DESCRIPTION').setValue(data['DESCRIPTION']);\n          currentRole.get('system_role_INSTANCE_GUID').setValue(data['INSTANCE_GUID']);\n        }\n      });\n    }\n  }\n\n  oldRole(userRoleForm: AbstractControl): boolean {\n    const existIndex = this.userRoleFormArray.controls.findIndex(\n      role => role.value.NAME === userRoleForm.value.NAME && role.pristine && role.value.NAME !== '');\n    return existIndex !== -1 ;\n  }\n\n  onSearchHelp(rowID: number, exportObject: AbstractControl): void {\n    const afterExportFn = function (context: any, roleIdx: number) {\n      return () => context.onChangeRoleID(roleIdx);\n    }(this, rowID).bind(this);\n\n    this.searchHelpComponent.openSearchHelpModalBySearchHelp('ROLE', 'NAME', 'NAME',\n      exportObject, this.readonly || this.oldRole(exportObject) && exportObject.valid, afterExportFn);\n  }\n\n}\n","<div class=\"card mb-3 pt-3\">\n  <div class=\"mt-2 pl-4 row\">\n    <div class=\"col-6 form-group row\">\n      <label for=\"user_id\" class=\"col-sm-3 col-form-label col-form-label-sm\">User ID:</label>\n      <input id=\"user_id\" name=\"user_id\" [(ngModel)]=\"userID\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\" autofocus>\n    </div>\n    <div class=\"col-6 form-group row\">\n      <label for=\"user_name\" class=\"col-sm-3 col-form-label col-form-label-sm\">User Name:</label>\n      <input id=\"user_name\" name=\"user_name\" [(ngModel)]=\"userName\" type=\"text\"\n             class=\"col-sm-6 form-control form-control-sm\" (keyup)=\"enterSearch($event)\">\n    </div>\n  </div>\n\n  <div class=\"mb-4\">\n    <button type=\"button\" id=\"search\" class=\"btn btn-sm btn-primary float-right mr-4\" (click)=\"search()\">Search</button>\n  </div>\n</div>\n\n<div class=\"mt-2 mb-4 mx-4\">\n  <dk-message></dk-message>\n  <div class=\"btn-toolbar justify-content-end my-2\" role=\"toolbar\">\n    <button type=\"button\" id=\"new\" class=\"btn btn-light btn-sm\" (click)=\"newUser()\"><span class=\"fas fa-plus\"></span> New</button>\n  </div>\n  <table class=\"table table-bordered table-sm\">\n    <thead class=\"thead-light\">\n    <tr>\n      <th>User ID</th>\n      <th>User Name</th>\n      <th>Display Name</th>\n      <th class=\"dk-lock\">Locked?</th>\n      <th class=\"dk-password-state\" >Password State</th>\n      <th class=\"dk-actions\">Action</th>\n    </tr>\n    </thead>\n\n    <tbody>\n    <tr *ngFor=\"let user of users\">\n      <td><a [routerLink]=\"['/users', user.USER_ID, {action: 'display'}]\">{{user.USER_ID}}</a></td>\n      <td>{{user.USER_NAME}}</td>\n      <td>{{user.DISPLAY_NAME}}</td>\n      <td >\n        <span *ngIf=\"user.LOCK\" class=\"fas fa-lock\" title=\"Locked\"></span>\n        <span *ngIf=\"!user.LOCK\" class=\"fas fa-lock-open\" title=\"Unlocked\"></span>\n      </td>\n      <td [ngSwitch]=\"user.PWD_STATE\">\n        <div *ngSwitchCase=\"\">\n          <span class=\"badge badge-primary\">Initial</span>\n        </div>\n        <div *ngSwitchCase=\"1\">\n          <span class=\"badge badge-success\">Active</span>\n        </div>\n        <div *ngSwitchCase=\"2\">\n          <span class=\"badge badge-warning\">Renew</span>\n        </div>\n      </td>\n      <td>\n        <button title=\"Display\" id=\"display\" class=\"btn btn-sm\" type=\"button\" (click)=\"displayUser(user.USER_ID)\">\n          <span class=\"fas fa-search\"></span>\n        </button>\n        <button title=\"Change\" id=\"change\" class=\"btn btn-sm\" type=\"button\" (click)=\"changeUser(user.USER_ID)\">\n          <span class=\"fas fa-pen\"></span>\n        </button>\n        <button title=\"Delete\" id=\"delete\" class=\"btn btn-sm\" type=\"button\" (click)=\"deleteUser(user.USER_ID)\">\n          <span class=\"far fa-trash-alt\"></span>\n        </button>\n      </td>\n    </tr>\n    </tbody>\n  </table>\n\n  <div class=\"modal\" [class.show]=\"showDeletionConfirmation\"\n       [ngStyle]=\"{'display': displayDeletionConfirmation}\" id=\"deletionConfirmation\" tabindex=\"-1\" role=\"dialog\">\n    <div class=\"modal-dialog modal-sm modal-dialog-centered\" role=\"document\">\n      <div class=\"modal-content\">\n        <div class=\"modal-header\">\n          <h5 class=\"modal-title\" id=\"confirmDeletion\">Confirm Deletion</h5>\n          <button type=\"button\" class=\"close\" (click)=\"cancelDeletion()\">\n            <span aria-hidden=\"true\">&times;</span>\n          </button>\n        </div>\n        <div class=\"modal-body\">\n          <p>Are you sure to delete the user '{{toBeDeletedUser}}'?</p>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"button\" id=\"cancel\" class=\"btn btn-sm btn-secondary\" (click)=\"cancelDeletion()\">Cancel</button>\n          <button type=\"button\" id=\"confirm\" class=\"btn btn-sm btn-primary\" (click)=\"confirmDeletion()\">Confirm</button>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {Message, MessageService, messageType} from 'ui-message-angular';\nimport {Router} from '@angular/router';\nimport {IdentityService} from '../../identity.service';\nimport {UserList} from '../../identity';\n\n@Component({\n  selector: 'app-user-list',\n  templateUrl: './user-list.component.html',\n  styleUrls: ['./user-list.component.css']\n})\nexport class UserListComponent implements OnInit {\n  userID: string;\n  userName: string;\n  users: UserList[];\n  showDeletionConfirmation = false;\n  toBeDeletedUser: string;\n\n  get displayDeletionConfirmation() {return this.showDeletionConfirmation ? 'block' : 'none'; }\n\n  constructor(private identityService: IdentityService,\n              private messageService: MessageService,\n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  search() {\n    this.messageService.clearMessages();\n    this.users = [];\n    this.userID = this.userID ? this.userID.trim() : '';\n    this.userName = this.userName ? this.userName.trim() : '';\n    this.identityService.searchUsers(this.userID, this.userName).subscribe(\n      data => {\n        if (!data[0]) {\n          this.messageService.reportMessage('GENERAL', 'EMPTY_LIST', messageType.Warning);\n        } else if (data[0]['msgCat']) {\n          const messages = <Message[]>data;\n          messages.forEach( msg => this.messageService.add(msg));\n        } else {\n          this.users = <UserList[]>data;\n        }\n      }\n    );\n  }\n\n  enterSearch($event): void {\n    if ($event.keyCode === 13 ) {\n       this.search();\n    }\n  }\n\n  newUser(): void {\n    this.router.navigate(['users', '/', {action: 'new'}]);\n  }\n\n  displayUser(userID: string): void {\n    this.router.navigate(['users', userID, {action: 'display'}]);\n  }\n\n  changeUser(userID: string): void {\n    this.router.navigate(['users', userID, {action: 'change'}]);\n  }\n\n  deleteUser(userID: string): void {\n    this.toBeDeletedUser = userID;\n    this.showDeletionConfirmation = true;\n  }\n\n  cancelDeletion(): void {\n    this.showDeletionConfirmation = false;\n  }\n\n  confirmDeletion(): void {\n    const toBeDeletedUserGUID = this.users.find( ele => ele.USER_ID === this.toBeDeletedUser).INSTANCE_GUID;\n    this.identityService.delete(toBeDeletedUserGUID).subscribe( errorMsg => {\n      this.showDeletionConfirmation = false;\n      if (errorMsg) {\n        const messages = <Message[]>errorMsg;\n        messages.forEach( msg => this.messageService.add(msg));\n      } else {\n        this.search();\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkProtectionGuard implements CanDeactivate<CanComponentDeactivate>  {\n\n  canDeactivate(component: CanComponentDeactivate,\n                currentRoute: ActivatedRouteSnapshot,\n                currentState: RouterStateSnapshot,\n                nextState?: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  redirectPath: '',\n  redirectUrl: '/landing',\n  originalHost: 'http://localhost:3000'\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"]}