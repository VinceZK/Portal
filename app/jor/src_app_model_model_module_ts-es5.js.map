{"version":3,"sources":["webpack:///node_modules/rxjs/_esm2015/internal/operators/debounceTime.js","webpack:///src/app/model/attribute-meta/attribute-meta.component.ts","webpack:///src/app/model/data-domain/data-domain-detail/data-domain-detail.component.ts","webpack:///src/app/model/data-domain/data-domain.component.ts","webpack:///src/app/model/data-element/data-element-detail/data-element-detail.component.ts","webpack:///src/app/model/data-element/data-element.component.ts","webpack:///src/app/model/entity-type/entity-type-detail/entity-type-detail.component.ts","webpack:///src/app/model/entity-type/entity-type.component.ts","webpack:///src/app/model/model-routing.module.ts","webpack:///src/app/model/model-validators.ts","webpack:///src/app/model/model.component.ts","webpack:///src/app/model/model.module.ts","webpack:///src/app/model/model.service.ts","webpack:///src/app/model/relation/relation-detail/relation-detail.component.ts","webpack:///src/app/model/relation/relation.component.ts","webpack:///src/app/model/relationship/relationship-detail/relationship-detail.component.ts","webpack:///src/app/model/relationship/relationship.component.ts","webpack:///src/app/model/role/role-detail/role-detail.component.ts","webpack:///src/app/model/role/role.component.ts","webpack:///src/app/model/search-help/search-help-detail/search-help-detail.component.ts","webpack:///src/app/model/search-help/search-help.component.ts","webpack:///src/app/model/attribute-meta/attribute-meta.component.css","webpack:///src/app/model/data-domain/data-domain-detail/data-domain-detail.component.css","webpack:///src/app/model/data-domain/data-domain.component.css","webpack:///src/app/model/data-element/data-element-detail/data-element-detail.component.css","webpack:///src/app/model/data-element/data-element.component.css","webpack:///src/app/model/entity-type/entity-type-detail/entity-type-detail.component.css","webpack:///src/app/model/entity-type/entity-type.component.css","webpack:///src/app/model/model.component.css","webpack:///src/app/model/relation/relation-detail/relation-detail.component.css","webpack:///src/app/model/relation/relation.component.css","webpack:///src/app/model/relationship/relationship-detail/relationship-detail.component.css","webpack:///src/app/model/relationship/relationship.component.css","webpack:///src/app/model/role/role-detail/role-detail.component.css","webpack:///src/app/model/role/role.component.css","webpack:///src/app/model/search-help/search-help-detail/search-help-detail.component.css","webpack:///src/app/model/search-help/search-help.component.css","webpack:///src/app/model/attribute-meta/attribute-meta.component.html","webpack:///src/app/model/data-domain/data-domain-detail/data-domain-detail.component.html","webpack:///src/app/model/data-domain/data-domain.component.html","webpack:///src/app/model/data-element/data-element-detail/data-element-detail.component.html","webpack:///src/app/model/data-element/data-element.component.html","webpack:///src/app/model/entity-type/entity-type-detail/entity-type-detail.component.html","webpack:///src/app/model/entity-type/entity-type.component.html","webpack:///src/app/model/model.component.html","webpack:///src/app/model/relation/relation-detail/relation-detail.component.html","webpack:///src/app/model/relation/relation.component.html","webpack:///src/app/model/relationship/relationship-detail/relationship-detail.component.html","webpack:///src/app/model/relationship/relationship.component.html","webpack:///src/app/model/role/role-detail/role-detail.component.html","webpack:///src/app/model/role/role.component.html","webpack:///src/app/model/search-help/search-help-detail/search-help-detail.component.html","webpack:///src/app/model/search-help/search-help.component.html"],"names":["debounceTime","dueTime","scheduler","async","source","lift","DebounceTimeOperator","subscriber","subscribe","DebounceTimeSubscriber","destination","debouncedSubscription","lastValue","hasValue","value","clearDebounce","add","schedule","dispatchNext","debouncedNext","complete","next","remove","unsubscribe","Subscriber","AttributeMetaComponent","fb","router","entityService","messageService","modelService","dataTypes","deletedAttributes","setMessageStore","msgStore","generateFormArray","formArray","parentForm","get","control","rowID","dataElementSearchHelp","SearchHelp","OBJECT_NAME","METHOD","searchTerm","listDataElement","BEHAVIOUR","MULTI","FUZZY_SEARCH","FIELDS","FIELD_NAME","LIST_HEADER_TEXT","IE_FIELD_NAME","IMPORT","EXPORT","LIST_POSITION","FILTER_POSITION","READ_ONLY","readonly","disabled","afterExportFn","context","attrIdx","onChangeDataElement","bind","searchHelpComponent","openSearchHelpModal","index","length","push","ATTR_GUID","at","ATTR_NAME","removeAt","markAsDirty","insert","_createAnAttributeFormCtrl","group","RELATION_ID","ATTR_DESC","DATA_ELEMENT","DATA_TYPE","DATA_LENGTH","DECIMAL","ORDER","PRIMARY_KEY","AUTO_INCREMENT","currentAttributeFormCtrl","dataElementCtrl","enabled","_disableField","_enableField","setValue","enable","ctrl","disable","attrFormGroup","controls","attributeFormGroup","getDataElement","data","setErrors","message","Messages","findIndex","generateMessage","changedAttributes","changedAttribute","order","dirty","forEach","attribute","trim","Object","keys","key","formControl","action","attributes","isDataElementAttribute","isFieldGray","isNewMode","addControl","FormArray","lastIndex","relationID","substr","dataElementName","navigate","FormBuilder","Router","EntityService","MessageService","ModelService","Input","ViewChild","SearchHelpComponent","Component","selector","template","DataDomainDetailComponent","route","uniqueDataDomainValidator","dialogService","changedDataDomain","relationsOfEntity","bypassProtection","isSearchListShown","enableGeneralType","enableRegExpr","enableValueRelation","enableArrayOrInterval","dataDomainForm","paramMap","pipe","switchMap","params","domainID","dataDomain","DataDomainMeta","DOMAIN_ID","DOMAIN_DESC","DOMAIN_TYPE","of","getDataDomain","clearMessages","dataDomainMeta","report","history","state","_generateDataDomainForm","_getRelationsOfEntity","isSearchListShown$","showSearchList","markAsPristine","onlySelf","UNSIGNED","CAPITAL_ONLY","REG_EXPR","ENTITY_ID","clear","updateOn","_validateDataLength","_validateDecimal","DOMAIN_VALUES","array","_setNewModeState","domainValue","domainValueFormArray","LOW_VALUE","LOW_VALUE_TEXT","HIGH_VALUE","_setDomainType","_updateLengthAndDecimal","setValidators","_validateDataDomainID","setAsyncValidators","validate","clearValidators","clearAsyncValidators","updateValueAndValidity","c","toString","toLowerCase","confirm","_switch2DisplayMode","sendDialogAnswer","reset","_switch2EditMode","updateDataDomainID","updateDataDomainDesc","formGroup","entitySearchHelp","listEntityType","onChangeEntityID","setDefault","domainEntityID","getRelationMetaOfEntity","entityRelations","map","relationMeta","filter","relationId","_invalidField","_validateEntityID","_validateRelationID","_generateEmptyLines","num","existingLines","i","fieldCtrl","isArray","currentDomainValueCtrl","indexFound","valueIndex","dialogAnswer","reportMessage","invalid","saveDataDomain","_postActivityAfterSavingDataDomain","Array","err","ActivatedRoute","UniqueDataDomainValidator","DialogService","DataDomainComponent","identityService","dataDomainList","searchTerms","Subject","distinctUntilChanged","term","listDataDomain","snapshot","firstChild","_newDataDomain","onSelect","find","searchDataDomain","theSelectedDataDomain$","theSelectedDataDomain","dialogAnswer$","answer","CREATE_TIME","splice","hideSearchList","setSelectedDataDomain","VERSION_NO","LAST_CHANGE_BY","Session","USER_ID","LAST_CHANGE_TIME","CurrentTime","IdentityService","DataElementDetailComponent","uniqueDataElementValidator","changedDataElement","searchHelpExportField","elementID","dataElement","DataElementMeta","ELEMENT_ID","ELEMENT_DESC","dataElementMeta","dataElementForm","_generateDataElementForm","_getSearchHelpMeta","dataDomainSearchHelp","onChangeDataDomain","searchHelpSearchHelp","listSearchHelp","onChangeSearchHelp","searchHelpCtrl","getSearchHelp","searchHelpFields","field","LABEL_TEXT","SEARCH_HELP_ID","SEARCH_HELP_EXPORT_FIELD","PARAMETER_ID","USE_DOMAIN","Validators","_validateDataElementID","_setUseDomain","updateDataElementID","updateDataElementDesc","dataDomainCtrl","searchHelpID","saveDataElement","_postActivityAfterSavingDataElement","UniqueDataElementValidator","DataElementComponent","dataElementList","_newDataElement","dataEle","searchDataElement","theSelectedDataElement$","theSelectedDataElement","setSelectedDataElement","EntityTypeDetailComponent","uniqueEntityTypeValidator","changedEntityType","entityTypeForm","entityID","entityType","EntityMeta","ENTITY_DESC","ROLES","forkJoin","getEntityMeta","getRelationMeta","entityMeta","_generateEntityTypeForm","roleSearchHelp","listRole","oldRole","valid","ruleIdx","onChangeRoleID","FormControl","_validateEntityId","role","ROLE_ID","ROLE_DESC","CONDITIONAL_ATTR","CONDITIONAL_VALUE","attrComponent","switchEditDisplay","roleFormArray","roleFormGroup","updateEntityID","updateEntityDesc","isExportedFromSH","currentRoleFormGroup","roleCtrl","getRoleDesc","roleID","processChangedAttributes","_processChangedRoles","saveEntityType","_postActivityAfterSavingEntityType","changedRoles","existRole","changedRole","roleControl","deletedRole","ATTRIBUTES","UniqueEntityTypeValidator","EntityTypeComponent","entityTypeList","_newEntityType","searchEntityType","theSelectedEntityType$","theSelectedEntityType","setSelectedEntityType","EntityType","routes","path","component","ModelComponent","children","canDeactivate","WorkProtectionGuard","RoleComponent","RoleDetailComponent","RelationComponent","RelationDetailComponent","RelationshipComponent","RelationshipDetailComponent","SearchHelpDetailComponent","redirectTo","pathMatch","ModelRoutingModule","NgModule","imports","RouterModule","exports","UniqueSearchHelpValidator","getSearchHelpDesc","updateSearchHelpID","catchError","Injectable","providedIn","getDataDomainDesc","getDataElementDesc","UniqueRoleValidator","updateRoleID","UniqueRelationValidator","getRelationDesc","updateRelationID","UniqueRelationshipValidator","getRelationshipDesc","updateRelationshipID","getEntityTypeDesc","ModelModule","CommonModule","HttpClientModule","FormsModule","ReactiveFormsModule","MessageModule","NgbModule","JorAngularModule","declarations","asObservable","selectedEntityTypeSource","selectedRelationSource","theSelectedRelation$","selectedRelationshipSource","theSelectedRelationship$","selectedRoleSource","theSelectedRole$","selectedDataElementSource","selectedDataDomainSource","selectedSearchHelpSource","theSelectedSearchHelp$","entityDesc","theSelectedRelation","relationDesc","RELATION_DESC","relation","relationshipID","theSelectedRelationship","RELATIONSHIP_ID","relationshipDesc","RELATIONSHIP_DESC","relationship","theSelectedRole","roleDesc","elementDesc","element","domainDesc","domain","theSelectedSearchHelp","searchHelpDesc","SEARCH_HELP_DESC","searchHelp","uniqueRelationValidator","isFieldMapShown","changedRelation","relationForm","currentAssociationForm","RelationMeta","_generateRelationForm","fieldName","relationSearchHelp","listRelation","onChangeRightRelationID","_validateRelationId","ASSOCIATIONS","association","fieldsMapArray","FIELDS_MAPPING","fieldsMap","LEFT_FIELD","RIGHT_FIELD","ASSOCIATION_NAME","RIGHT_RELATION_ID","CARDINALITY","FOREIGN_KEY_CHECK","_appendEmptyAssociation","associationFormArray","associationFormGroup","updateRelationDesc","currentRightRelationMeta","fieldMapFormArray","currentAssociation","currentAssocFormGroup","assocCtrl","cardinality","currentFieldMapFormGroup","fieldMapCtrl","fieldMap","checkErrs","checkAttributes","errMsg","_processChangedAssociation","saveRelation","_postActivityAfterSavingRelation","changedAssociations","errMessages","associationControl","changedAssociation","associationMeta","fieldMapArray","oldFieldMap","errMessage","relationList","_newRelation","searchRelation","setSelectedRelation","Relation","uniqueRelationshipValidator","changedRelationship","relationshipForm","RelationshipMeta","VALID_PERIOD","SINGLETON","INVOLVES","getRelationship","relationshipMeta","_generateRelationshipForm","oldInvolve","removeControl","TIME_DEPENDENT","_validateValidPeriod","involve","DIRECTION","_validateRelationshipID","setControl","parent","involveFormArray","involveFormGroup","timeDependent","validPeriodCtrl","attrFormArray","validFromFormGroup","validToFormGroup","attributeValidFromIndex","attrCtrl","deleteAttribute","attributeValidToIndex","updateRelationshipDesc","currentRoleID","attributeInstanceGUIDIndex","attributeEntityIDIndex","currentInvolveFormGroup","involveCtrl","instanceGUIDFormGroup","entityIDFormGroup","_processChangedInvolves","saveRelationship","_postActivityAfterSavingRelationship","changedInvolves","involveControl","listRelationship","relationshipList","_newRelationship","searchRelationship","setSelectedRelationship","RelationshipH","uniqueRoleValidator","roleForm","RoleMeta","RELATIONS","getRole","roleMeta","_generateRoleForm","oldRelation","onChangeRelationID","_validateRoleID","relationFormArray","relationFormGroup","updateRoleDesc","currentRelationFormGroup","relationCtrl","_processChangedRelation","saveRole","_postActivityAfterSavingRole","changedRelations","relationControl","deletedRelation","roleList","_newRole","searchRole","setSelectedRole","RoleH","uniqueSearchHelpValidator","changedSearchHelp","behaviours","relationAttributesMap","searchHelpForm","SearchHelpMeta","searchHelpMeta","_generateSearchHelpForm","searchHelpFieldsFormArray","_getAttributesOfRelation","FIELD_DESC","FILTER_DISP_ONLY","DEFAULT_VALUE","_validateSearchHelpID","updateSearchHelpDesc","afterChanges","_afterChangeRelationID","onChangeField","currAttr","mainRelationID","firstAttribute","saveSearchHelp","_postActivityAfterSavingSearchHelp","searchHelpList","_newSearchHelp","searchSearchHelp","setSelectedSearchHelp"],"mappings":"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","file":"src_app_model_model_module_ts-es5.js","sourcesContent":["import { Subscriber } from '../Subscriber';\nimport { async } from '../scheduler/async';\nexport function debounceTime(dueTime, scheduler = async) {\n    return (source) => source.lift(new DebounceTimeOperator(dueTime, scheduler));\n}\nclass DebounceTimeOperator {\n    constructor(dueTime, scheduler) {\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n    }\n    call(subscriber, source) {\n        return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));\n    }\n}\nclass DebounceTimeSubscriber extends Subscriber {\n    constructor(destination, dueTime, scheduler) {\n        super(destination);\n        this.dueTime = dueTime;\n        this.scheduler = scheduler;\n        this.debouncedSubscription = null;\n        this.lastValue = null;\n        this.hasValue = false;\n    }\n    _next(value) {\n        this.clearDebounce();\n        this.lastValue = value;\n        this.hasValue = true;\n        this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));\n    }\n    _complete() {\n        this.debouncedNext();\n        this.destination.complete();\n    }\n    debouncedNext() {\n        this.clearDebounce();\n        if (this.hasValue) {\n            const { lastValue } = this;\n            this.lastValue = null;\n            this.hasValue = false;\n            this.destination.next(lastValue);\n        }\n    }\n    clearDebounce() {\n        const debouncedSubscription = this.debouncedSubscription;\n        if (debouncedSubscription !== null) {\n            this.remove(debouncedSubscription);\n            debouncedSubscription.unsubscribe();\n            this.debouncedSubscription = null;\n        }\n    }\n}\nfunction dispatchNext(subscriber) {\n    subscriber.debouncedNext();\n}\n//# sourceMappingURL=debounceTime.js.map","import {Component, Input, OnChanges, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {Attribute} from 'jor-angular';\nimport {ModelService} from '../model.service';\nimport {Observable} from 'rxjs';\nimport {SearchHelpMethod, SearchHelp, EntityService, SearchHelpComponent} from 'jor-angular';\nimport {MessageService, Message} from 'ui-message-angular';\nimport {msgStore} from '../../msgStore';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-attribute-meta',\n  templateUrl: './attribute-meta.component.html',\n  styleUrls: ['./attribute-meta.component.css']\n})\nexport class AttributeMetaComponent implements OnInit, OnChanges {\n  dataTypes = [];\n  formArray: FormArray;\n  deletedAttributes = [];\n  dataElementSearchHelp: SearchHelp;\n\n  constructor(private fb: FormBuilder,\n              private router: Router,\n              private entityService: EntityService,\n              private messageService: MessageService,\n              private modelService: ModelService) {\n    this.dataTypes = modelService.dataTypes;\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  @Input() parentForm: FormGroup;\n  @Input() attributes: Attribute[];\n  @Input() readonly: boolean;\n  @Input() relationID: string;\n  @Input() isNewMode: boolean;\n\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent !: SearchHelpComponent;\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.generateFormArray();\n    this.formArray = this.parentForm.get('ATTRIBUTES') as FormArray;\n  }\n\n  onSearchHelp(control: AbstractControl, rowID: number): void {\n    if (!this.dataElementSearchHelp) {\n      this.dataElementSearchHelp = new SearchHelp();\n      this.dataElementSearchHelp.OBJECT_NAME = 'Data Element';\n      this.dataElementSearchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listDataElement(searchTerm);\n      }(this.entityService);\n      this.dataElementSearchHelp.BEHAVIOUR = 'A';\n      this.dataElementSearchHelp.MULTI = false;\n      this.dataElementSearchHelp.FUZZY_SEARCH = true;\n      this.dataElementSearchHelp.FIELDS = [\n        {FIELD_NAME: 'ELEMENT_ID', LIST_HEADER_TEXT: 'Element ID', IE_FIELD_NAME: 'DATA_ELEMENT',\n          IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n        {FIELD_NAME: 'ELEMENT_DESC', LIST_HEADER_TEXT: 'Element Description', IE_FIELD_NAME: 'ATTR_DESC',\n          IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.dataElementSearchHelp.READ_ONLY = this.readonly || control.get('DATA_ELEMENT').disabled;\n    }\n    const afterExportFn = function (context: any, attrIdx: number) {\n      return () => context.onChangeDataElement(attrIdx);\n    }(this, rowID).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.dataElementSearchHelp, control, afterExportFn);\n  }\n\n  deleteAttribute(index: number): void {\n    if (index !== this.formArray.length - 1) {\n      this.deletedAttributes.push({\n        ATTR_GUID: this.formArray.at(index).get('ATTR_GUID').value,\n        ATTR_NAME: this.formArray.at(index).get('ATTR_NAME').value\n      });\n      this.formArray.removeAt(index);\n      this.formArray.markAsDirty();\n    }\n  }\n\n  insertAttribute(index: number): void {\n    this.formArray.insert(index, this._createAnAttributeFormCtrl());\n  }\n\n  _createAnAttributeFormCtrl(): FormGroup {\n    return this.fb.group({\n      ATTR_GUID: [''],\n      RELATION_ID: [''],\n      ATTR_NAME: [''],\n      ATTR_DESC: [{value: '', disabled: true}],\n      DATA_ELEMENT: [{value: '', disabled: false}],\n      DATA_TYPE: [{value: '', disabled: true}],\n      DATA_LENGTH: [{value: '', disabled: true}],\n      DECIMAL: [null],\n      ORDER: [null],\n      PRIMARY_KEY: [false],\n      AUTO_INCREMENT: [{value: false, disabled: true}]\n    });\n  }\n\n  switchBtwDEAndDT(index: number): void {\n    const currentAttributeFormCtrl = this.formArray.at(index);\n    const dataElementCtrl = currentAttributeFormCtrl.get('DATA_ELEMENT');\n    if (dataElementCtrl.enabled) {\n      this._disableField(dataElementCtrl);\n      this._enableField(currentAttributeFormCtrl.get('ATTR_DESC'));\n      this._enableField(currentAttributeFormCtrl.get('DATA_TYPE'));\n      this._enableField(currentAttributeFormCtrl.get('DATA_LENGTH'));\n      this._enableField(currentAttributeFormCtrl.get('DECIMAL'));\n      currentAttributeFormCtrl.get('DATA_TYPE').setValue(1);\n      currentAttributeFormCtrl.get('DATA_LENGTH').setValue(10);\n      this._disableField(currentAttributeFormCtrl.get('AUTO_INCREMENT'));\n    } else {\n      dataElementCtrl.enable();\n      this._enableField(dataElementCtrl);\n      this._disableField(currentAttributeFormCtrl.get('ATTR_DESC'));\n      this._disableField(currentAttributeFormCtrl.get('DATA_TYPE'));\n      this._disableField(currentAttributeFormCtrl.get('DATA_LENGTH'));\n      this._disableField(currentAttributeFormCtrl.get('DECIMAL'));\n      this._disableField(currentAttributeFormCtrl.get('AUTO_INCREMENT'));\n    }\n  }\n\n  _enableField(ctrl: AbstractControl) {\n    ctrl.setValue(null);\n    ctrl.enable();\n  }\n\n  _disableField(ctrl: AbstractControl) {\n    if (ctrl.value !== null && ctrl.value !== '') {\n      ctrl.setValue(null);\n      ctrl.markAsDirty();\n    }\n    ctrl.disable();\n  }\n\n  onChangeDataType(attrFormGroup: AbstractControl): void {\n    switch (attrFormGroup.get('DATA_TYPE').value) {\n      case '1': // char\n        attrFormGroup.get('DATA_LENGTH').setValue(10);\n        attrFormGroup.get('DECIMAL').setValue(null);\n        this._disableField(attrFormGroup.get('AUTO_INCREMENT'));\n        break;\n      case '2': // Integer\n        attrFormGroup.get('DATA_LENGTH').setValue(null);\n        attrFormGroup.get('DECIMAL').setValue(null);\n        this._enableField(attrFormGroup.get('AUTO_INCREMENT'));\n        break;\n      case '4': // decimal\n        attrFormGroup.get('DATA_LENGTH').setValue(23);\n        attrFormGroup.get('DECIMAL').setValue(2);\n        this._disableField(attrFormGroup.get('AUTO_INCREMENT'));\n        break;\n      default:\n        attrFormGroup.get('DATA_LENGTH').setValue(null);\n        attrFormGroup.get('DECIMAL').setValue(null);\n        this._disableField(attrFormGroup.get('AUTO_INCREMENT'));\n    }\n    attrFormGroup.get('DATA_LENGTH').markAsDirty();\n  }\n\n  onChangeAttributeName(index: number): void {\n    if (index === this.formArray.length - 1 && !this.formArray.controls[index].value.ATTR_GUID) {\n      // Only work for the last New line\n      this.formArray.push(this._createAnAttributeFormCtrl());\n    }\n  }\n\n  onChangeDataElement(index: number): void {\n    const attributeFormGroup = this.formArray.at(index);\n    const dataElementCtrl = attributeFormGroup.get('DATA_ELEMENT');\n    this.entityService.getDataElement(dataElementCtrl.value).subscribe(data => {\n      if (data['msgCat']) {\n        dataElementCtrl.setErrors({message: data['msgShortText']});\n      } else {\n        attributeFormGroup.get('ATTR_DESC').setValue(data['ELEMENT_DESC']);\n        attributeFormGroup.get('DATA_TYPE').setValue(data['DATA_TYPE']);\n        attributeFormGroup.get('DATA_LENGTH').setValue(data['DATA_LENGTH']);\n        attributeFormGroup.get('DECIMAL').setValue(data['DECIMAL']);\n        if (attributeFormGroup.get('DATA_TYPE').value === 2) {\n          this._enableField(attributeFormGroup.get('AUTO_INCREMENT'));\n        } else {\n          this._disableField(attributeFormGroup.get('AUTO_INCREMENT'));\n        }\n      }\n    });\n  }\n\n  checkAttributes(): Message[] {\n    const Messages: Message[] = [];\n    if ( this.formArray.controls.findIndex( control => control.get('PRIMARY_KEY').value ) === -1 ) {\n      Messages.push(this.messageService.generateMessage(\n        'MODEL', 'RELATION_PRIMARY_KEY_MISSING', 'E'));\n    }\n    return Messages;\n  }\n\n  processChangedAttributes(): any[] {\n    const changedAttributes = [];\n    let changedAttribute;\n    let order = 0;\n    if (this.formArray.dirty) {\n      this.formArray.controls.forEach((attribute, index) => {\n        if (attribute.get('ATTR_NAME').value.trim() === '') { return; }\n        order = index + 1;\n        if (order !== attribute.get('ORDER').value) {\n          attribute.get('ORDER').setValue(order);\n          attribute.get('ORDER').markAsDirty();\n        }\n        if (attribute.dirty) {\n          changedAttribute = {};\n          if (attribute.get('ATTR_GUID').value) { // Update Case\n            changedAttribute['action'] = 'update';\n            changedAttribute['ATTR_GUID'] = attribute.get('ATTR_GUID').value;\n            const attrFormGroup = attribute as FormGroup;\n            Object.keys(attrFormGroup.controls).forEach(key => {\n              const formControl = attrFormGroup.controls[key];\n              if (formControl.dirty) {\n                changedAttribute[key] = formControl.value;\n              }\n            });\n          } else { // New Add Case\n            changedAttribute['action'] = 'add';\n            const attrFormGroup = attribute as FormGroup;\n            Object.keys(attrFormGroup.controls).forEach(key => {\n              const formControl = attrFormGroup.controls[key];\n              changedAttribute[key] = formControl.value;\n            });\n          }\n        } else {\n          changedAttribute = null;\n        }\n        if (changedAttribute) {\n          changedAttributes.push(changedAttribute);\n        }\n      });\n\n      // Deletion Case\n      this.deletedAttributes.forEach(attribute => {\n        changedAttribute = {action: 'delete', ATTR_GUID: attribute.ATTR_GUID, ATTR_NAME: attribute.ATTR_NAME};\n        changedAttributes.push(changedAttribute);\n      });\n\n      return changedAttributes;\n    }\n  }\n\n  generateFormArray(): void {\n    const formArray = [];\n    if (this.attributes) {\n      this.attributes.forEach( attribute => {\n        const isDataElementAttribute = !!attribute.DATA_ELEMENT;\n        formArray.push(this.fb.group({\n          ATTR_GUID: [attribute.ATTR_GUID],\n          RELATION_ID: [attribute.RELATION_ID],\n          ATTR_NAME: [attribute.ATTR_NAME],\n          ATTR_DESC: [{value: attribute.ATTR_DESC, disabled: isDataElementAttribute}],\n          DATA_ELEMENT: [{value: attribute.DATA_ELEMENT, disabled: !isDataElementAttribute}],\n          DATA_TYPE: [{value: attribute.DATA_TYPE, disabled: this.readonly || this.isFieldGray(attribute) || isDataElementAttribute}],\n          DATA_LENGTH: [{value: attribute.DATA_LENGTH, disabled: isDataElementAttribute}],\n          DECIMAL: [{value: attribute.DECIMAL, disabled: isDataElementAttribute}],\n          ORDER: [attribute.ORDER],\n          PRIMARY_KEY: [{value: attribute.PRIMARY_KEY, disabled: this.readonly || this.isFieldGray(attribute)}],\n          AUTO_INCREMENT: [{\n            value: attribute.AUTO_INCREMENT,\n            disabled: this.readonly || this.isFieldGray(attribute) || attribute.DATA_TYPE !== 2}]\n        }));\n      });\n    }\n    if (this.isNewMode) {\n      formArray.push(this._createAnAttributeFormCtrl());\n    }\n    this.parentForm.addControl('ATTRIBUTES', new FormArray(formArray));\n  }\n\n  switchEditDisplay(readonly: boolean) {\n    if (!readonly) { // To Edit Mode\n      this.formArray.controls.forEach(attrFormGroup => {\n        if (!this.isFieldGray(attrFormGroup.value)) {\n          if (!attrFormGroup.get('DATA_ELEMENT').value) {\n            attrFormGroup.get('DATA_TYPE').enable();\n          }\n          attrFormGroup.get('PRIMARY_KEY').enable();\n          if (attrFormGroup.get('DATA_TYPE').value === 2) {\n            attrFormGroup.get('AUTO_INCREMENT').enable();\n          } else {\n            attrFormGroup.get('AUTO_INCREMENT').disable();\n          }\n        }\n      });\n      this.formArray.push(this._createAnAttributeFormCtrl());\n    } else { // To Display Mode\n      let lastIndex = this.formArray.length - 1;\n      while (lastIndex >= 0 && this.formArray.controls[lastIndex].get('ATTR_NAME').value.trim() === '') {\n        this.formArray.removeAt(lastIndex);\n        lastIndex--;\n      }\n      this.formArray.controls.forEach(attrFormGroup => {\n        attrFormGroup.get('DATA_TYPE').disable();\n        attrFormGroup.get('PRIMARY_KEY').disable();\n        attrFormGroup.get('AUTO_INCREMENT').disable();\n      });\n    }\n  }\n\n  isFieldGray(attribute: Attribute): boolean {\n    return this.relationID.substr(0, 3) === 'rs_' &&\n        attribute && attribute.ATTR_NAME &&\n       (attribute.ATTR_NAME === 'VALID_FROM' ||\n        attribute.ATTR_NAME === 'VALID_TO' ||\n        attribute.ATTR_NAME.substr(-14, 14) === '_INSTANCE_GUID' ||\n        attribute.ATTR_NAME.substr(-10, 10) === '_ENTITY_ID');\n  }\n\n  onGoToDataElement(dataElementName: string): void {\n    this.router.navigate(['/model/data-element', dataElementName]);\n  }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {UniqueDataDomainValidator} from '../../model-validators';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {DataDomainMeta, SearchHelpComponent, EntityService, SearchHelp, SearchHelpMethod} from 'jor-angular';\n\n@Component({\n  selector: 'app-data-domain-detail',\n  templateUrl: './data-domain-detail.component.html',\n  styleUrls: ['./data-domain-detail.component.css']\n})\nexport class DataDomainDetailComponent implements OnInit {\n\n  dataDomainMeta: DataDomainMeta;\n  readonly = true;\n  isNewMode = false;\n  dataDomainForm: FormGroup;\n  dataTypes = [];\n  changedDataDomain = {};\n  relationsOfEntity = [];\n  bypassProtection = false;\n  isSearchListShown = true;\n  enableGeneralType = false;\n  enableRegExpr = false;\n  enableValueRelation = false;\n  enableArrayOrInterval = false;\n  entitySearchHelp: SearchHelp;\n\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent !: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueDataDomainValidator: UniqueDataDomainValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.dataTypes = this.modelService.dataTypes;\n  }\n\n  get domainValueFormArray() {\n    return this.dataDomainForm.get('DOMAIN_VALUES') as FormArray;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const domainID = params.get('domainID');\n        if (domainID === 'new') {\n          const dataDomain = new DataDomainMeta();\n          dataDomain.DOMAIN_ID = '';\n          dataDomain.DOMAIN_DESC = '';\n          dataDomain.DATA_TYPE = 1; // Char by default\n          dataDomain.DATA_LENGTH = 10;\n          dataDomain.DOMAIN_TYPE = 0;\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return of(dataDomain);\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return this.entityService.getDataDomain(domainID);\n        }\n      })\n    ).subscribe(data => {\n      if ( 'msgName' in data) {\n        this.messageService.clearMessages();\n        this.dataDomainMeta = null;\n        this.dataDomainForm = null;\n        this.messageService.report(<Message>data);\n      } else {\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.dataDomainMeta = <DataDomainMeta>data;\n        this._generateDataDomainForm();\n        this._getRelationsOfEntity( this.dataDomainForm, false);\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  _generateDataDomainForm(): void {\n    if (this.dataDomainForm) {\n      this.dataDomainForm.markAsPristine({onlySelf: false});\n      this.dataDomainForm.get('DOMAIN_ID').setValue(this.dataDomainMeta.DOMAIN_ID);\n      this.dataDomainForm.get('DOMAIN_DESC').setValue(this.dataDomainMeta.DOMAIN_DESC);\n      this.dataDomainForm.get('DATA_TYPE').setValue(this.dataDomainMeta.DATA_TYPE);\n      this.dataDomainForm.get('DATA_LENGTH').setValue(this.dataDomainMeta.DATA_LENGTH);\n      this.dataDomainForm.get('DECIMAL').setValue(this.dataDomainMeta.DECIMAL);\n      this.dataDomainForm.get('DOMAIN_TYPE').setValue(this.dataDomainMeta.DOMAIN_TYPE);\n      this.dataDomainForm.get('UNSIGNED').setValue(this.dataDomainMeta.UNSIGNED);\n      this.dataDomainForm.get('CAPITAL_ONLY').setValue(this.dataDomainMeta.CAPITAL_ONLY);\n      this.dataDomainForm.get('REG_EXPR').setValue(this.dataDomainMeta.REG_EXPR);\n      this.dataDomainForm.get('ENTITY_ID').setValue(this.dataDomainMeta.ENTITY_ID);\n      this.dataDomainForm.get('RELATION_ID').setValue(this.dataDomainMeta.RELATION_ID);\n      (<FormArray>this.dataDomainForm.get('DOMAIN_VALUES')).clear();\n      if (this.readonly) {\n        this.dataDomainForm.get('DOMAIN_TYPE').disable();\n        this.dataDomainForm.get('DATA_TYPE').disable();\n      }\n    } else {\n      this.dataDomainForm = this.fb.group({\n        DOMAIN_ID: [this.dataDomainMeta.DOMAIN_ID, {updateOn: 'blur'}],\n        DOMAIN_DESC: [this.dataDomainMeta.DOMAIN_DESC],\n        DATA_TYPE: [{value: this.dataDomainMeta.DATA_TYPE, disabled: this.readonly}],\n        DATA_LENGTH: [this.dataDomainMeta.DATA_LENGTH, [this._validateDataLength]],\n        DECIMAL: [this.dataDomainMeta.DECIMAL, [this._validateDecimal]],\n        DOMAIN_TYPE: [{value: this.dataDomainMeta.DOMAIN_TYPE, disabled: this.readonly}],\n        UNSIGNED: [{value: this.dataDomainMeta.UNSIGNED, disabled: this.readonly}],\n        CAPITAL_ONLY: [{value: this.dataDomainMeta.CAPITAL_ONLY, disabled: this.readonly}],\n        REG_EXPR: [this.dataDomainMeta.REG_EXPR],\n        ENTITY_ID: [this.dataDomainMeta.ENTITY_ID],\n        RELATION_ID: [{value: this.dataDomainMeta.RELATION_ID, disabled: this.readonly}],\n        DOMAIN_VALUES: this.fb.array([])\n      });\n    }\n    this._setNewModeState();\n    if (this.dataDomainMeta.DOMAIN_TYPE >= 3 && this.dataDomainMeta.DOMAIN_VALUES) { // Value Array/Interval\n      this.dataDomainMeta.DOMAIN_VALUES.forEach( domainValue => {\n        this.domainValueFormArray.push(\n          this.fb.group({\n            LOW_VALUE: [domainValue.LOW_VALUE],\n            LOW_VALUE_TEXT: [domainValue.LOW_VALUE_TEXT],\n            HIGH_VALUE: [domainValue.HIGH_VALUE]\n          })\n        );\n      });\n    }\n    this._setDomainType(this.dataDomainForm, false);\n    this._updateLengthAndDecimal(this.dataDomainForm, false);\n  }\n\n  _setNewModeState() {\n    if (this.isNewMode) {\n      this.dataDomainForm.get('DOMAIN_ID').setValidators(this._validateDataDomainID);\n      this.dataDomainForm.get('DOMAIN_ID').setAsyncValidators(\n        this.uniqueDataDomainValidator.validate.bind(this.uniqueDataDomainValidator));\n      this.dataDomainForm.get('DATA_TYPE').enable();\n      this.dataDomainForm.get('DOMAIN_TYPE').enable();\n      this.dataDomainForm.get('DATA_TYPE').markAsDirty(); // Default value mark as dirty\n      this.dataDomainForm.get('DATA_LENGTH').markAsDirty(); // Default value mark as dirty\n      this.dataDomainForm.get('DOMAIN_TYPE').markAsDirty(); // Default value mark as dirty\n    } else {\n      this.dataDomainForm.get('DOMAIN_ID').clearValidators();\n      this.dataDomainForm.get('DOMAIN_ID').clearAsyncValidators();\n      this.dataDomainForm.get('DOMAIN_ID').updateValueAndValidity();\n    }\n  }\n\n  _validateDataDomainID(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Data Domain ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().length > 32) {\n      return {message: 'Data Domain ID must have length less than 32!'};\n    }\n    return null;\n  }\n\n  _validateDataLength(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give a Length'};\n    }\n    return null;\n  }\n\n  _validateDecimal(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give a decimal place'};\n    }\n    if (c.value < 1 || c.value > 37) {\n      return {message: 'Decimal place can only between 1 and 37'};\n    }\n    return null;\n  }\n  _validateEntityID(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give an entity'};\n    }\n    return null;\n  }\n  _validateRelationID(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give a relation'};\n    }\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Data Domain?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.dataDomainMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.dataDomainForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateDataDomainForm();\n            this.dataDomainForm.reset(this.dataDomainForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this._switch2EditMode();\n    }\n\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this.dataDomainForm.get('DOMAIN_TYPE').disable();\n    this.dataDomainForm.get('DATA_TYPE').disable();\n    this.dataDomainForm.get('UNSIGNED').disable();\n    this.dataDomainForm.get('CAPITAL_ONLY').disable();\n    this.dataDomainForm.get('RELATION_ID').disable();\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n    this.dataDomainForm.get('DOMAIN_TYPE').enable();\n    this.dataDomainForm.get('DATA_TYPE').enable();\n    this._setDomainType(this.dataDomainForm, false);\n    this._updateLengthAndDecimal(this.dataDomainForm, false);\n  }\n\n  onChangeDataDomainID(): void {\n    this.modelService.updateDataDomainID(this.dataDomainForm.get('DOMAIN_ID').value);\n  }\n\n  onChangeDataDomainDesc(): void {\n    this.modelService.updateDataDomainDesc(this.dataDomainForm.get('DOMAIN_DESC').value);\n  }\n\n  onChangeDomainType(formGroup: AbstractControl): void {\n    this._setDomainType(formGroup, true);\n  }\n\n  onEntitySearchHelp(control: AbstractControl): void {\n    if (!this.entitySearchHelp) {\n      this.entitySearchHelp = new SearchHelp();\n      this.entitySearchHelp.OBJECT_NAME = 'Entity ID';\n      this.entitySearchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listEntityType(searchTerm);\n      }(this.entityService);\n      this.entitySearchHelp.BEHAVIOUR = 'A';\n      this.entitySearchHelp.MULTI = false;\n      this.entitySearchHelp.FUZZY_SEARCH = true;\n      this.entitySearchHelp.FIELDS = [\n        {FIELD_NAME: 'ENTITY_ID', LIST_HEADER_TEXT: 'Entity', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n        {FIELD_NAME: 'ENTITY_DESC', LIST_HEADER_TEXT: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.entitySearchHelp.READ_ONLY = this.readonly || this.dataDomainForm.get('DOMAIN_TYPE').value !== 2;\n    }\n    const afterExportFn = function (context: any) {\n      return () => context.onChangeEntityID(control);\n    }(this).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.entitySearchHelp, control, afterExportFn);\n  }\n\n  onChangeEntityID(formGroup: AbstractControl): void {\n    this._getRelationsOfEntity(formGroup, true);\n  }\n\n  _getRelationsOfEntity(dataDomainForm: AbstractControl, setDefault: boolean): void {\n    const domainEntityID = dataDomainForm.get('ENTITY_ID').value;\n    if (!domainEntityID) { return; }\n    this.entityService.getRelationMetaOfEntity(domainEntityID)\n      .subscribe(entityRelations => {\n        if (entityRelations[0]['msgType'] === 'E') {\n          dataDomainForm.get('ENTITY_ID').setErrors({message: entityRelations[0]['msgShortText']});\n        } else {\n          this.relationsOfEntity = entityRelations.map(relationMeta => relationMeta.RELATION_ID )\n            .filter(relationId => relationId.substr(0, 2) !== 'rs' );\n          if (setDefault) {\n            dataDomainForm.get('RELATION_ID').setValue(this.relationsOfEntity[0]);\n            dataDomainForm.get('RELATION_ID').markAsDirty();\n          }\n        }\n      });\n  }\n\n  _setDomainType(formGroup: AbstractControl, markAsDirty: boolean): void {\n    if (markAsDirty) { formGroup.get('DOMAIN_TYPE').markAsDirty(); }\n    switch (+formGroup.get('DOMAIN_TYPE').value) {\n      case 0: // General Type\n        if (+formGroup.get('DATA_TYPE').value === 2) {\n          if (!this.readonly) { formGroup.get('UNSIGNED').enable(); }\n          this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        } else if (+formGroup.get('DATA_TYPE').value === 1) {\n          if (!this.readonly) { formGroup.get('CAPITAL_ONLY').enable(); }\n          this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        }\n        this._invalidField(formGroup.get('REG_EXPR'), markAsDirty);\n        this._invalidField(formGroup.get('ENTITY_ID'), markAsDirty);\n        this._invalidField(formGroup.get('RELATION_ID'), markAsDirty);\n        this._invalidField(formGroup.get('DOMAIN_VALUES'), markAsDirty, true);\n        break;\n      case 1: // Regular Expression\n        // formGroup.get('REG_EXPR').setValidators(this._validateRegExpr);\n        if (!this.readonly) { formGroup.get('REG_EXPR').enable(); }\n        this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        this._invalidField(formGroup.get('ENTITY_ID'), markAsDirty);\n        this._invalidField(formGroup.get('RELATION_ID'), markAsDirty);\n        this._invalidField(formGroup.get('DOMAIN_VALUES'), markAsDirty, true);\n        break;\n      case 2: // Value Relation\n        if (!this.readonly) {\n          formGroup.get('ENTITY_ID').enable();\n          formGroup.get('RELATION_ID').enable();\n          formGroup.get('ENTITY_ID').setValidators(this._validateEntityID);\n          formGroup.get('RELATION_ID').setValidators(this._validateRelationID);\n        }\n        this._invalidField(formGroup.get('REG_EXPR'), markAsDirty);\n        this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        this._invalidField(formGroup.get('DOMAIN_VALUES'), markAsDirty, true);\n        break;\n      case 3: // Value Array\n        if (!this.readonly) { formGroup.get('DOMAIN_VALUES').enable(); }\n        this._invalidField(formGroup.get('ENTITY_ID'), markAsDirty);\n        this._invalidField(formGroup.get('RELATION_ID'), markAsDirty);\n        this._invalidField(formGroup.get('REG_EXPR'), markAsDirty);\n        this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        this._generateEmptyLines(5);\n        break;\n      case 4: // Value Interval\n        if (!this.readonly) { formGroup.get('DOMAIN_VALUES').enable(); }\n        this._invalidField(formGroup.get('ENTITY_ID'), markAsDirty);\n        this._invalidField(formGroup.get('RELATION_ID'), markAsDirty);\n        this._invalidField(formGroup.get('REG_EXPR'), markAsDirty);\n        this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        this._generateEmptyLines(5);\n        break;\n      default:\n    }\n  }\n\n  _generateEmptyLines(num: number): void {\n    const existingLines = this.domainValueFormArray.length;\n    for (let i = 0; i < num - existingLines; i++) {\n      this.domainValueFormArray.push(\n        this.fb.group({\n          LOW_VALUE: [''],\n          LOW_VALUE_TEXT: [''],\n          HIGH_VALUE: ['']\n        }));\n    }\n  }\n\n  onChangeDataType(formGroup: AbstractControl): void {\n    switch (+formGroup.get('DATA_TYPE').value) {\n      case 1: // char\n        formGroup.get('DATA_LENGTH').setValue(10);\n        formGroup.get('DECIMAL').setValue(null);\n        break;\n      case 4: // decimal\n        formGroup.get('DATA_LENGTH').setValue(23);\n        formGroup.get('DECIMAL').setValue(2);\n        break;\n      default:\n        formGroup.get('DATA_LENGTH').setValue(null);\n        formGroup.get('DECIMAL').setValue(null);\n    }\n    formGroup.get('DATA_LENGTH').markAsDirty();\n    formGroup.get('DECIMAL').markAsDirty();\n    this._updateLengthAndDecimal(formGroup, true);\n  }\n\n  _updateLengthAndDecimal(formGroup: AbstractControl, markAsDirty: boolean): void {\n    switch (+formGroup.get('DATA_TYPE').value) {\n      case 1: // char\n        if (!this.readonly) {\n          formGroup.get('DATA_LENGTH').enable();\n          formGroup.get('DATA_LENGTH').setValidators(this._validateDataLength);\n        }\n        this._invalidField(formGroup.get('DECIMAL'));\n        if (+formGroup.get('DOMAIN_TYPE').value === 0) {\n          if (!this.readonly) { formGroup.get('CAPITAL_ONLY').enable(); }\n          this._invalidField(formGroup.get('UNSIGNED'));\n        }\n        this.enableGeneralType = true;\n        this.enableRegExpr = true;\n        this.enableValueRelation = true;\n        this.enableArrayOrInterval = true;\n        break;\n      case 2: // Integer\n        formGroup.get('DATA_LENGTH').disable();\n        this._invalidField(formGroup.get('DECIMAL'), markAsDirty);\n        if (+formGroup.get('DOMAIN_TYPE').value === 0) {\n          if (!this.readonly) { formGroup.get('UNSIGNED').enable(); }\n          this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        } else if (+formGroup.get('DOMAIN_TYPE').value === 1 || +formGroup.get('DOMAIN_TYPE').value === 2) {\n          if (!this.readonly) { formGroup.get('DOMAIN_TYPE').setValue(0); }\n          this._setDomainType(formGroup, markAsDirty);\n        }\n        this.enableGeneralType = true;\n        this.enableRegExpr = false;\n        this.enableValueRelation = false;\n        this.enableArrayOrInterval = true;\n        break;\n      case 4: // decimal\n        if (!this.readonly) {\n          formGroup.get('DATA_LENGTH').enable();\n          formGroup.get('DATA_LENGTH').setValidators(this._validateDataLength);\n          formGroup.get('DECIMAL').enable();\n          formGroup.get('DECIMAL').setValidators(this._validateDecimal);\n          formGroup.get('UNSIGNED').enable();\n        }\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        formGroup.get('DOMAIN_TYPE').setValue(0);\n        this._setDomainType(formGroup, markAsDirty);\n        this.enableGeneralType = true;\n        this.enableRegExpr = false;\n        this.enableValueRelation = false;\n        this.enableArrayOrInterval = false;\n        break;\n      case 5: // string\n        this._invalidField(formGroup.get('DATA_LENGTH'), markAsDirty);\n        this._invalidField(formGroup.get('DECIMAL'), markAsDirty);\n        formGroup.get('DOMAIN_TYPE').setValue(1);\n        this._setDomainType(formGroup, markAsDirty);\n        this.enableGeneralType = false;\n        this.enableRegExpr = true;\n        this.enableValueRelation = false;\n        this.enableArrayOrInterval = false;\n        break;\n      default:\n        this._invalidField(formGroup.get('DATA_LENGTH'), markAsDirty);\n        this._invalidField(formGroup.get('DECIMAL'), markAsDirty);\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        formGroup.get('DOMAIN_TYPE').setValue(0);\n        this._setDomainType(formGroup, markAsDirty);\n        this.enableGeneralType = true;\n        this.enableRegExpr = false;\n        this.enableValueRelation = false;\n        this.enableArrayOrInterval = false;\n    }\n  }\n\n  _invalidField(fieldCtrl: AbstractControl, markAsDirty: boolean = false, isArray: boolean = false): void {\n    fieldCtrl.clearValidators();\n    fieldCtrl.clearAsyncValidators();\n    fieldCtrl.disable();\n    if (markAsDirty) {\n      isArray ? (<FormArray>fieldCtrl).clear() : fieldCtrl.setValue(null);\n      fieldCtrl.markAsDirty();\n    }\n  }\n\n  onChangeDomainValue(index: number): void {\n    const currentDomainValueCtrl = this.domainValueFormArray.at(index);\n    if (!currentDomainValueCtrl.get('LOW_VALUE').value) { return; }\n    const indexFound = this.domainValueFormArray.controls.findIndex(\n      (ctrl, valueIndex) => index !== valueIndex && ctrl.value.LOW_VALUE === currentDomainValueCtrl.value.LOW_VALUE);\n    if (indexFound > -1) {\n      currentDomainValueCtrl.get('LOW_VALUE').setErrors({message: 'Value is duplicated!'});\n    } else {\n      currentDomainValueCtrl.get('LOW_VALUE').setErrors(null);\n    }\n\n    if (this.dataDomainForm.get('DOMAIN_TYPE').value === 4 && currentDomainValueCtrl.get('LOW_VALUE').value) {\n      if (!currentDomainValueCtrl.value.HIGH_VALUE ||\n        currentDomainValueCtrl.value.HIGH_VALUE <=  currentDomainValueCtrl.value.LOW_VALUE ) {\n        currentDomainValueCtrl.get('HIGH_VALUE').setErrors({message: 'High value must be greater!'});\n      } else {\n        currentDomainValueCtrl.get('HIGH_VALUE').setErrors(null);\n      }\n    }\n  }\n\n  insertDomainValue(index: number): void {\n    this.domainValueFormArray.insert(index, this.fb.group({\n        LOW_VALUE: [''],\n        LOW_VALUE_TEXT: [''],\n        HIGH_VALUE: ['']\n      }));\n  }\n\n  deleteDomainValue(index: number): void {\n    this.domainValueFormArray.removeAt(index);\n    this.domainValueFormArray.markAsDirty();\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.dataDomainForm && this.dataDomainForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.dataDomainForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (this.dataDomainForm.invalid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (+this.dataDomainForm.get('DOMAIN_TYPE').value >= 3 && this.domainValueFormArray.length === 0 ) {\n      return this.messageService.reportMessage('MODEL', 'MINIMUM_ONE_DOMAIN_VALUE', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedDataDomain['action'] = 'add';\n      this.changedDataDomain['DOMAIN_ID'] = this.dataDomainForm.get('DOMAIN_ID').value;\n    } else {\n      this.changedDataDomain['action'] = 'update';\n      this.changedDataDomain['DOMAIN_ID'] = this.dataDomainMeta.DOMAIN_ID;\n    }\n    if (this.dataDomainForm.get('DOMAIN_DESC').dirty) {\n      this.changedDataDomain['DOMAIN_DESC'] = this.dataDomainForm.get('DOMAIN_DESC').value;\n    }\n    if (this.dataDomainForm.get('DATA_TYPE').dirty) {\n      this.changedDataDomain['DATA_TYPE'] = this.dataDomainForm.get('DATA_TYPE').value;\n    }\n    if (this.dataDomainForm.get('DATA_LENGTH').dirty) {\n      this.changedDataDomain['DATA_LENGTH'] = this.dataDomainForm.get('DATA_LENGTH').value;\n    }\n    if (this.dataDomainForm.get('DECIMAL').dirty) {\n      this.changedDataDomain['DECIMAL'] = this.dataDomainForm.get('DECIMAL').value;\n    }\n    if (this.dataDomainForm.get('DOMAIN_TYPE').dirty) {\n      this.changedDataDomain['DOMAIN_TYPE'] = this.dataDomainForm.get('DOMAIN_TYPE').value;\n    }\n    if (this.dataDomainForm.get('UNSIGNED').dirty) {\n      this.changedDataDomain['UNSIGNED'] = this.dataDomainForm.get('UNSIGNED').value;\n    }\n    if (this.dataDomainForm.get('CAPITAL_ONLY').dirty) {\n      this.changedDataDomain['CAPITAL_ONLY'] = this.dataDomainForm.get('CAPITAL_ONLY').value;\n    }\n    if (this.dataDomainForm.get('REG_EXPR').dirty) {\n      this.changedDataDomain['REG_EXPR'] = this.dataDomainForm.get('REG_EXPR').value;\n    }\n    if (this.dataDomainForm.get('ENTITY_ID').dirty) {\n      this.changedDataDomain['ENTITY_ID'] = this.dataDomainForm.get('ENTITY_ID').value;\n    }\n    if (this.dataDomainForm.get('RELATION_ID').dirty) {\n      this.changedDataDomain['RELATION_ID'] = this.dataDomainForm.get('RELATION_ID').value;\n    }\n    if (this.dataDomainForm.get('DOMAIN_VALUES').dirty) {\n      this.changedDataDomain['DOMAIN_VALUES'] = [];\n      this.dataDomainForm.get('DOMAIN_VALUES').value.forEach( domainValue => {\n        if (domainValue.LOW_VALUE) {\n          this.changedDataDomain['DOMAIN_VALUES'].push(domainValue);\n        }\n      });\n    }\n    this.entityService.saveDataDomain(this.changedDataDomain)\n      .subscribe(data => this._postActivityAfterSavingDataDomain(data));\n  }\n\n  _postActivityAfterSavingDataDomain(data: any) {\n    this.changedDataDomain = {};\n    if (data['DOMAIN_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/data-domain/' + data['DOMAIN_ID']],\n          {state: {message: this.messageService.generateMessage(\n                'MODEL', 'DATA_DOMAIN_SAVED', 'S', data['DOMAIN_ID'])}});\n      } else {\n        this._switch2DisplayMode();\n        this.dataDomainMeta = data;\n        this._generateDataDomainForm();\n        this.messageService.reportMessage('MODEL', 'DATA_DOMAIN_SAVED', 'S', data['DOMAIN_ID']);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n\n\n","import { Component, OnInit } from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {DataDomainH, DataDomainMeta, EntityService} from 'jor-angular';\nimport {IdentityService} from '../../identity.service';\n\n@Component({\n  selector: 'app-data-domain',\n  templateUrl: './data-domain.component.html',\n  styleUrls: ['./data-domain.component.css']\n})\nexport class DataDomainComponent implements OnInit {\n  dataDomainList: DataDomainH[] = [];\n  isSearchListShown = true;\n  private searchTerms = new Subject<string>();\n  private theSelectedDataDomain: DataDomainH;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private identityService: IdentityService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listDataDomain(term)),\n    ).subscribe(data => {\n      this.dataDomainList = data;\n      let domainID;\n      if (this.route.snapshot.firstChild) {\n        domainID = this.route.snapshot.firstChild.paramMap.get('domainID');\n      }\n      if (domainID ) {\n        if (domainID === 'new') {\n          this._newDataDomain();\n        } else {\n          this.onSelect(this.dataDomainList.find(dataDomain => dataDomain.DOMAIN_ID === domainID));\n        }\n      }\n    });\n    this.searchDataDomain(''); // The initial list\n\n    this.modelService.theSelectedDataDomain$.subscribe( data => {\n      if (this.theSelectedDataDomain) {\n        this.theSelectedDataDomain.DOMAIN_ID = data['DOMAIN_ID'];\n        this.theSelectedDataDomain.DOMAIN_DESC = data['DOMAIN_DESC'];\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.dataDomainList[0] && !this.dataDomainList[0].CREATE_TIME) {\n        this.dataDomainList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const domainID = this.route.snapshot.firstChild.paramMap.get('domainID');\n        if (domainID) {\n          if (domainID === 'new') {\n            this.onSelect(this.dataDomainList[0]);\n          } else {\n            this.onSelect(this.dataDomainList.find(dataDomain => dataDomain.DOMAIN_ID === domainID));\n          }\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  onSelect(dataDomain: DataDomainH): void {\n    if (dataDomain) {\n      this.theSelectedDataDomain = dataDomain;\n      this.modelService.setSelectedDataDomain(dataDomain);\n    }\n  }\n\n  searchDataDomain(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  newDataDomian(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('domainID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newDataDomain();\n      this.router.navigate(['/model/data-domain/new']);\n    }\n  }\n\n  _newDataDomain(): void {\n    this.theSelectedDataDomain = new DataDomainMeta();\n    this.theSelectedDataDomain.DOMAIN_ID = 'new';\n    this.theSelectedDataDomain.DOMAIN_DESC = 'description';\n    this.theSelectedDataDomain.VERSION_NO = 1;\n    this.theSelectedDataDomain.LAST_CHANGE_BY = this.identityService.Session.USER_ID;\n    this.theSelectedDataDomain.LAST_CHANGE_TIME = this.identityService.CurrentTime;\n    this.modelService.setSelectedDataDomain(this.theSelectedDataDomain);\n    this.dataDomainList.splice(0, 0, this.theSelectedDataDomain);\n  }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {UniqueDataElementValidator} from '../../model-validators';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {msgStore} from '../../../msgStore';\nimport {switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {DataElementMeta, EntityService, SearchHelp, SearchHelpComponent, SearchHelpField, SearchHelpMethod} from 'jor-angular';\n\n@Component({\n  selector: 'app-data-element-detail',\n  templateUrl: './data-element-detail.component.html',\n  styleUrls: ['./data-element-detail.component.css']\n})\nexport class DataElementDetailComponent implements OnInit {\n  dataElementMeta: DataElementMeta;\n  readonly = true;\n  isNewMode = false;\n  dataElementForm: FormGroup;\n  dataTypes = [];\n  changedDataElement = {};\n  bypassProtection = false;\n  isSearchListShown = true;\n  searchHelpExportField = [];\n  dataDomainSearchHelp: SearchHelp;\n  searchHelpSearchHelp: SearchHelp;\n\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent !: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueDataElementValidator: UniqueDataElementValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n    this.dataTypes = this.modelService.dataTypes;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const elementID = params.get('elementID');\n        if (elementID === 'new') {\n          const dataElement = new DataElementMeta();\n          dataElement.ELEMENT_ID = '';\n          dataElement.ELEMENT_DESC = '';\n          dataElement.DATA_TYPE = 1;\n          dataElement.DATA_LENGTH = 10;\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return of(dataElement);\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return this.entityService.getDataElement(elementID);\n        }})\n    ).subscribe(data => {\n      if ( 'msgName' in data) {\n        this.messageService.clearMessages();\n        this.dataElementMeta = null;\n        this.dataElementForm = null;\n        this.messageService.report(<Message>data);\n      } else {\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.dataElementMeta = <DataElementMeta>data;\n        this._generateDataElementForm();\n        this._getSearchHelpMeta(this.dataElementForm, false);\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  onDataDomainSearchHelp(control: AbstractControl): void {\n    if (!this.dataDomainSearchHelp) {\n      this.dataDomainSearchHelp = new SearchHelp();\n      this.dataDomainSearchHelp.OBJECT_NAME = 'Data Domain';\n      this.dataDomainSearchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listDataDomain(searchTerm);\n      }(this.entityService);\n      this.dataDomainSearchHelp.BEHAVIOUR = 'A';\n      this.dataDomainSearchHelp.MULTI = false;\n      this.dataDomainSearchHelp.FUZZY_SEARCH = true;\n      this.dataDomainSearchHelp.FIELDS = [\n        {FIELD_NAME: 'DOMAIN_ID', LIST_HEADER_TEXT: 'Domain', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n        {FIELD_NAME: 'DOMAIN_DESC', LIST_HEADER_TEXT: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.dataDomainSearchHelp.READ_ONLY = this.readonly || !this.dataElementForm.get('USE_DOMAIN').value;\n    }\n    const afterExportFn = function (context: any) {\n      return () => context.onChangeDataDomain(control);\n    }(this).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.dataDomainSearchHelp, control, afterExportFn);\n  }\n\n  onSearchHelpSearchHelp(control: AbstractControl): void {\n    if (!this.searchHelpSearchHelp) {\n      this.searchHelpSearchHelp = new SearchHelp();\n      this.searchHelpSearchHelp.OBJECT_NAME = 'Search Help';\n      this.searchHelpSearchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listSearchHelp(searchTerm);\n      }(this.entityService);\n      this.searchHelpSearchHelp.BEHAVIOUR = 'A';\n      this.searchHelpSearchHelp.MULTI = false;\n      this.searchHelpSearchHelp.FUZZY_SEARCH = true;\n      this.searchHelpSearchHelp.FIELDS = [\n        {FIELD_NAME: 'SEARCH_HELP_ID', LIST_HEADER_TEXT: 'Search Help', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n        {FIELD_NAME: 'SEARCH_HELP_DESC', LIST_HEADER_TEXT: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.searchHelpSearchHelp.READ_ONLY = this.readonly;\n    }\n    const afterExportFn = function (context: any) {\n      return () => context.onChangeSearchHelp(control);\n    }(this).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.searchHelpSearchHelp, control, afterExportFn);\n  }\n\n  onChangeSearchHelp(formGroup: AbstractControl): void {\n    this._getSearchHelpMeta(formGroup, true);\n  }\n\n  _getSearchHelpMeta(formGroup: AbstractControl, setDefault: boolean): void {\n    const searchHelpCtrl = formGroup.get('SEARCH_HELP_ID');\n    if (!searchHelpCtrl.value) {\n      if (!this.readonly) {\n        formGroup.get('SEARCH_HELP_EXPORT_FIELD').setValue('');\n        formGroup.get('SEARCH_HELP_EXPORT_FIELD').markAsDirty();\n      }\n      return;\n    }\n    this.entityService.getSearchHelp(searchHelpCtrl.value).subscribe(data => {\n      if (data['msgCat']) {\n        searchHelpCtrl.setErrors({message: data['msgShortText']});\n        if (setDefault) {\n          formGroup.get('SEARCH_HELP_EXPORT_FIELD').setValue('');\n          formGroup.get('SEARCH_HELP_EXPORT_FIELD').markAsDirty();\n        }\n      } else {\n        this.searchHelpExportField = [];\n        const searchHelpFields = <SearchHelpField[]>data['FIELDS'];\n        searchHelpFields.forEach( field => {\n          if (field.EXPORT) {\n            this.searchHelpExportField.push( field.IE_FIELD_NAME || field.FIELD_NAME );\n          }\n        });\n        if (setDefault) {\n          formGroup.get('SEARCH_HELP_EXPORT_FIELD').setValue(this.searchHelpExportField[0]);\n          formGroup.get('SEARCH_HELP_EXPORT_FIELD').markAsDirty();\n        }\n      }\n    });\n  }\n\n  _generateDataElementForm(): void {\n    if (this.dataElementForm) {\n      this.dataElementForm.markAsPristine({onlySelf: false});\n      this.dataElementForm.get('ELEMENT_ID').setValue(this.dataElementMeta.ELEMENT_ID);\n      this.dataElementForm.get('ELEMENT_DESC').setValue(this.dataElementMeta.ELEMENT_DESC);\n      this.dataElementForm.get('LABEL_TEXT').setValue(this.dataElementMeta.LABEL_TEXT);\n      this.dataElementForm.get('LIST_HEADER_TEXT').setValue(this.dataElementMeta.LIST_HEADER_TEXT);\n      this.dataElementForm.get('DOMAIN_ID').setValue(this.dataElementMeta.DOMAIN_ID);\n      this.dataElementForm.get('DATA_TYPE').setValue(this.dataElementMeta.DATA_TYPE);\n      this.dataElementForm.get('DATA_LENGTH').setValue(this.dataElementMeta.DATA_LENGTH);\n      this.dataElementForm.get('DECIMAL').setValue(this.dataElementMeta.DECIMAL);\n      this.dataElementForm.get('SEARCH_HELP_ID').setValue(this.dataElementMeta.SEARCH_HELP_ID);\n      this.dataElementForm.get('SEARCH_HELP_EXPORT_FIELD').setValue(this.dataElementMeta.SEARCH_HELP_EXPORT_FIELD);\n      this.dataElementForm.get('PARAMETER_ID').setValue(this.dataElementMeta.PARAMETER_ID);\n      if (this.dataElementMeta.DOMAIN_ID) {\n        this.dataElementForm.get('USE_DOMAIN').setValue(1);\n        this.dataElementForm.get('DATA_TYPE').disable();\n      } else {\n        this.dataElementForm.get('USE_DOMAIN').setValue(0);\n        this.dataElementForm.get('DATA_TYPE').enable();\n      }\n      if (this.readonly) {\n        this.dataElementForm.get('USE_DOMAIN').disable();\n        this.dataElementForm.get('DOMAIN_ID').disable();\n        this.dataElementForm.get('DATA_TYPE').disable();\n        this.dataElementForm.get('SEARCH_HELP_EXPORT_FIELD').disable();\n      } else {\n        this.dataElementForm.get('SEARCH_HELP_EXPORT_FIELD').enable();\n      }\n    } else {\n      this.dataElementForm = this.fb.group({\n        ELEMENT_ID: [this.dataElementMeta.ELEMENT_ID, {updateOn: 'blur'}],\n        ELEMENT_DESC: [this.dataElementMeta.ELEMENT_DESC],\n        LABEL_TEXT: [this.dataElementMeta.LABEL_TEXT],\n        LIST_HEADER_TEXT: [this.dataElementMeta.LIST_HEADER_TEXT],\n        DOMAIN_ID: [this.dataElementMeta.DOMAIN_ID],\n        DATA_TYPE: [{value: this.dataElementMeta.DATA_TYPE, disabled: this.readonly}],\n        DATA_LENGTH: [this.dataElementMeta.DATA_LENGTH, [this._validateDataLength]],\n        DECIMAL: [this.dataElementMeta.DECIMAL, [this._validateDecimal]],\n        SEARCH_HELP_ID: [this.dataElementMeta.SEARCH_HELP_ID],\n        SEARCH_HELP_EXPORT_FIELD: [{value: this.dataElementMeta.SEARCH_HELP_EXPORT_FIELD, disabled: this.readonly}],\n        PARAMETER_ID: [this.dataElementMeta.PARAMETER_ID],\n        USE_DOMAIN: [{value: this.dataElementMeta.DOMAIN_ID ? 1 : 0, disabled: this.readonly}]\n      });\n    }\n    this._setNewModeState();\n    if (this.dataElementForm.get('USE_DOMAIN').value) {\n      this.dataElementForm.get('DOMAIN_ID').setValidators(Validators.required);\n      this.onChangeDataDomain(this.dataElementForm);\n    } else {\n      this.dataElementForm.get('DOMAIN_ID').setErrors(null);\n      this.dataElementForm.get('DOMAIN_ID').clearValidators();\n    }\n    this._updateLengthAndDecimal(this.dataElementForm);\n  }\n\n  _setNewModeState() {\n    if (this.isNewMode) {\n      this.dataElementForm.get('ELEMENT_ID').setValidators(this._validateDataElementID);\n      this.dataElementForm.get('ELEMENT_ID').setAsyncValidators(\n        this.uniqueDataElementValidator.validate.bind(this.uniqueDataElementValidator));\n      this.dataElementForm.get('USE_DOMAIN').enable();\n      this.dataElementForm.get('DATA_TYPE').enable();\n      this.dataElementForm.get('DATA_TYPE').markAsDirty(); // Default value mark as dirty\n      this.dataElementForm.get('DATA_LENGTH').markAsDirty(); // Default value mark as dirty\n    } else {\n      this.dataElementForm.get('ELEMENT_ID').clearValidators();\n      this.dataElementForm.get('ELEMENT_ID').clearAsyncValidators() ;\n      this.dataElementForm.get('ELEMENT_ID').updateValueAndValidity();\n    }\n  }\n\n  _validateDataElementID(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Data Element ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().length > 32) {\n      return {message: 'Data Element ID must have length less than 32!'};\n    }\n    return null;\n  }\n\n  _validateDataLength(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give a Length'};\n    }\n    return null;\n  }\n\n  _validateDecimal(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give a decimal place'};\n    }\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Data Element?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.dataElementMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.dataElementForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateDataElementForm();\n            this.dataElementForm.reset(this.dataElementForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this._switch2EditMode();\n    }\n\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this.dataElementForm.get('USE_DOMAIN').disable();\n    this.dataElementForm.get('DATA_TYPE').disable();\n    this.dataElementForm.get('SEARCH_HELP_EXPORT_FIELD').disable();\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n    this.dataElementForm.get('USE_DOMAIN').enable();\n    this.dataElementForm.get('SEARCH_HELP_EXPORT_FIELD').enable();\n    this._setUseDomain(this.dataElementForm);\n  }\n\n  onChangeDataElementID(): void {\n    this.modelService.updateDataElementID(this.dataElementForm.get('ELEMENT_ID').value);\n  }\n\n  onChangeDataElementDesc(): void {\n    this.modelService.updateDataElementDesc(this.dataElementForm.get('ELEMENT_DESC').value);\n  }\n\n  onChangeUseDomain(formGroup: AbstractControl): void {\n    this._setUseDomain(formGroup, true);\n  }\n\n  onChangeDataDomain(formGroup: AbstractControl): void {\n    const dataDomainCtrl = formGroup.get('DOMAIN_ID');\n    this.entityService.getDataDomain(dataDomainCtrl.value).subscribe(data => {\n      if (data['msgCat']) {\n        dataDomainCtrl.setErrors({message: data['msgShortText']});\n      } else {\n        formGroup.get('DATA_TYPE').setValue(data['DATA_TYPE']);\n        formGroup.get('DATA_LENGTH').setValue(data['DATA_LENGTH']);\n        formGroup.get('DECIMAL').setValue(data['DECIMAL']);\n      }\n    });\n  }\n\n  _setUseDomain(formGroup: AbstractControl, markAsDirty: boolean = false): void {\n    if (formGroup.get('USE_DOMAIN').value) {\n      formGroup.get('DOMAIN_ID').enable();\n      formGroup.get('DOMAIN_ID').setValidators(Validators.required);\n      this._invalidField(formGroup.get('DATA_TYPE'), markAsDirty);\n      this._invalidField(formGroup.get('DATA_LENGTH'), markAsDirty);\n      this._invalidField(formGroup.get('DECIMAL'), markAsDirty);\n    } else {\n      this._invalidField(formGroup.get('DOMAIN_ID'), markAsDirty);\n      formGroup.get('DATA_TYPE').enable();\n      formGroup.get('DATA_TYPE').markAsDirty();\n      formGroup.get('DATA_LENGTH').enable();\n      formGroup.get('DATA_LENGTH').markAsDirty();\n      formGroup.get('DECIMAL').enable();\n      formGroup.get('DECIMAL').markAsDirty();\n      if (!formGroup.get('DATA_TYPE').value) {\n        formGroup.get('DATA_TYPE').setValue(1);\n        if (!formGroup.get('DATA_LENGTH').value) {\n          formGroup.get('DATA_LENGTH').setValue(10);\n        }\n      }\n      this._updateLengthAndDecimal(formGroup);\n    }\n  }\n\n  _invalidField(fieldCtrl: AbstractControl, markAsDirty: boolean = false): void {\n    fieldCtrl.clearValidators();\n    fieldCtrl.clearAsyncValidators();\n    fieldCtrl.disable();\n    if (markAsDirty) {\n      fieldCtrl.setValue(null);\n      fieldCtrl.markAsDirty();\n    }\n  }\n\n  onChangeDataType(formGroup: AbstractControl): void {\n    switch (+formGroup.get('DATA_TYPE').value) {\n      case 1: // char\n        formGroup.get('DATA_LENGTH').setValue(10);\n        formGroup.get('DECIMAL').setValue(null);\n        break;\n      case 4: // decimal\n        formGroup.get('DATA_LENGTH').setValue(23);\n        formGroup.get('DECIMAL').setValue(2);\n        break;\n      default:\n        formGroup.get('DATA_LENGTH').setValue(null);\n        formGroup.get('DECIMAL').setValue(null);\n    }\n    formGroup.get('DATA_LENGTH').markAsDirty();\n    formGroup.get('DECIMAL').markAsDirty();\n    this._updateLengthAndDecimal(formGroup);\n  }\n\n  _updateLengthAndDecimal(formGroup: AbstractControl): void {\n    switch (+formGroup.get('DATA_TYPE').value) {\n      case 1: // char\n        formGroup.get('DATA_LENGTH').enable();\n        formGroup.get('DATA_LENGTH').setValidators(this._validateDataLength);\n        formGroup.get('DECIMAL').disable();\n        break;\n      case 4: // decimal\n        formGroup.get('DATA_LENGTH').enable();\n        formGroup.get('DATA_LENGTH').setValidators(this._validateDataLength);\n        formGroup.get('DECIMAL').enable();\n        formGroup.get('DATA_LENGTH').setValidators(this._validateDecimal);\n        break;\n      default:\n        formGroup.get('DATA_LENGTH').disable();\n        formGroup.get('DECIMAL').disable();\n    }\n  }\n\n  onGoToDataDomain(domainID: string): void {\n    this.router.navigate(['/model/data-domain', domainID]);\n  }\n\n  onGoToSearchHelp(searchHelpID: string): void {\n    this.router.navigate(['/model/search-help', searchHelpID]);\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.dataElementForm && this.dataElementForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.dataElementForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (this.dataElementForm.invalid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedDataElement['action'] = 'add';\n      this.changedDataElement['ELEMENT_ID'] = this.dataElementForm.get('ELEMENT_ID').value;\n    } else {\n      this.changedDataElement['action'] = 'update';\n      this.changedDataElement['ELEMENT_ID'] = this.dataElementMeta.ELEMENT_ID;\n    }\n    if (this.dataElementForm.get('ELEMENT_DESC').dirty) {\n      this.changedDataElement['ELEMENT_DESC'] = this.dataElementForm.get('ELEMENT_DESC').value;\n    }\n    if (this.dataElementForm.get('DOMAIN_ID').dirty) {\n      this.changedDataElement['DOMAIN_ID'] = this.dataElementForm.get('DOMAIN_ID').value;\n    }\n    if (this.dataElementForm.get('DATA_TYPE').dirty) {\n      this.changedDataElement['DATA_TYPE'] = this.dataElementForm.get('USE_DOMAIN').value ?\n        null : this.dataElementForm.get('DATA_TYPE').value;\n    }\n    if (this.dataElementForm.get('DATA_LENGTH').dirty) {\n      this.changedDataElement['DATA_LENGTH'] = this.dataElementForm.get('USE_DOMAIN').value ?\n        null : this.dataElementForm.get('DATA_LENGTH').value;\n    }\n    if (this.dataElementForm.get('DECIMAL').dirty) {\n      this.changedDataElement['DECIMAL'] = this.dataElementForm.get('USE_DOMAIN').value ?\n        null : this.dataElementForm.get('DECIMAL').value;\n    }\n    if (this.dataElementForm.get('LABEL_TEXT').dirty) {\n      this.changedDataElement['LABEL_TEXT'] = this.dataElementForm.get('LABEL_TEXT').value;\n    }\n    if (this.dataElementForm.get('LIST_HEADER_TEXT').dirty) {\n      this.changedDataElement['LIST_HEADER_TEXT'] = this.dataElementForm.get('LIST_HEADER_TEXT').value;\n    }\n    if (this.dataElementForm.get('SEARCH_HELP_ID').dirty) {\n      this.changedDataElement['SEARCH_HELP_ID'] = this.dataElementForm.get('SEARCH_HELP_ID').value;\n    }\n    if (this.dataElementForm.get('SEARCH_HELP_EXPORT_FIELD').dirty) {\n      this.changedDataElement['SEARCH_HELP_EXPORT_FIELD'] = this.dataElementForm.get('SEARCH_HELP_EXPORT_FIELD').value;\n    }\n    if (this.dataElementForm.get('PARAMETER_ID').dirty) {\n      this.changedDataElement['PARAMETER_ID'] = this.dataElementForm.get('PARAMETER_ID').value;\n    }\n    this.entityService.saveDataElement(this.changedDataElement)\n      .subscribe(data => this._postActivityAfterSavingDataElement(data));\n  }\n\n  _postActivityAfterSavingDataElement(data: any) {\n    this.changedDataElement = {};\n    if (data['ELEMENT_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/data-element/' + data['ELEMENT_ID']],\n          {state: {message: this.messageService.generateMessage(\n            'MODEL', 'DATA_ELEMENT_SAVED', 'S', data['ELEMENT_ID'])}});\n      } else {\n        this._switch2DisplayMode();\n        this.dataElementMeta = data;\n        this._generateDataElementForm();\n        this.messageService.reportMessage(\n          'MODEL', 'DATA_ELEMENT_SAVED', 'S', data['ELEMENT_ID']);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {DataElementH, EntityService, DataElementMeta} from 'jor-angular';\nimport {IdentityService} from '../../identity.service';\n\n@Component({\n  selector: 'app-data-element',\n  templateUrl: './data-element.component.html',\n  styleUrls: ['./data-element.component.css']\n})\nexport class DataElementComponent implements OnInit {\n  dataElementList: DataElementH[] = [];\n  isSearchListShown = true;\n  private searchTerms = new Subject<string>();\n  private theSelectedDataElement: DataElementH;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private identityService: IdentityService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listDataElement(term)),\n    ).subscribe(data => {\n      this.dataElementList = data;\n      let elementID;\n      if (this.route.snapshot.firstChild) {\n        elementID = this.route.snapshot.firstChild.paramMap.get('elementID');\n      }\n      if (elementID ) {\n        if (elementID === 'new') {\n          this._newDataElement();\n        } else {\n          this.onSelect(this.dataElementList.find(dataEle => dataEle.ELEMENT_ID === elementID));\n        }\n      }\n    });\n    this.searchDataElement(''); // The initial list\n\n    this.modelService.theSelectedDataElement$.subscribe( data => {\n      if (this.theSelectedDataElement) {\n        this.theSelectedDataElement.ELEMENT_ID = data['ELEMENT_ID'];\n        this.theSelectedDataElement.ELEMENT_DESC = data['ELEMENT_DESC'];\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.dataElementList[0] && !this.dataElementList[0].CREATE_TIME) {\n        this.dataElementList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const elementID = this.route.snapshot.firstChild.paramMap.get('elementID');\n        if (elementID) {\n          if (elementID === 'new') {\n            this.onSelect(this.dataElementList[0]);\n          } else {\n            this.onSelect(this.dataElementList.find(dataElement => dataElement.ELEMENT_ID === elementID));\n          }\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  onSelect(dataElement: DataElementH): void {\n    if (dataElement) {\n      this.theSelectedDataElement = dataElement;\n      this.modelService.setSelectedDataElement(dataElement);\n    }\n  }\n\n  searchDataElement(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  newDataElement(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('elementID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newDataElement();\n      this.router.navigate(['/model/data-element/new']);\n    }\n  }\n\n  _newDataElement(): void {\n    this.theSelectedDataElement = new DataElementMeta();\n    this.theSelectedDataElement.ELEMENT_ID = 'new';\n    this.theSelectedDataElement.ELEMENT_DESC = 'description';\n    this.theSelectedDataElement.VERSION_NO = 1;\n    this.theSelectedDataElement.LAST_CHANGE_BY = this.identityService.Session.USER_ID;\n    this.theSelectedDataElement.LAST_CHANGE_TIME = this.identityService.CurrentTime;\n    this.modelService.setSelectedDataElement(this.theSelectedDataElement);\n    this.dataElementList.splice(0, 0, this.theSelectedDataElement);\n  }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {switchMap} from 'rxjs/operators';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {msgStore} from '../../../msgStore';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {AttributeMetaComponent} from '../../attribute-meta/attribute-meta.component';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {UniqueEntityTypeValidator} from '../../model-validators';\nimport {SearchHelpMethod, SearchHelp, SearchHelpComponent, EntityService, Attribute, EntityMeta} from 'jor-angular';\n\n@Component({\n  selector: 'app-entity-type-detail',\n  templateUrl: './entity-type-detail.component.html',\n  styleUrls: ['./entity-type-detail.component.css']\n})\nexport class EntityTypeDetailComponent implements OnInit {\n  entityMeta: EntityMeta;\n  attributes: Attribute[];\n  readonly = true;\n  isNewMode = false;\n  entityTypeForm: FormGroup;\n  changedEntityType = {};\n  bypassProtection = false;\n  isSearchListShown = true;\n  roleSearchHelp: SearchHelp;\n\n  @ViewChild(AttributeMetaComponent, {static: false})\n  private attrComponent !: AttributeMetaComponent;\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent !: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueEntityTypeValidator: UniqueEntityTypeValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  get roleFormArray() {\n    return this.entityTypeForm.get('ROLES') as FormArray;\n  }\n\n  get attrFormArray() {\n    return this.entityTypeForm.get('ATTRIBUTES') as FormArray;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const entityID = params.get('entityID');\n        if (entityID === 'new') {\n          const entityType = new EntityMeta();\n          entityType.ENTITY_ID = '';\n          entityType.ENTITY_DESC = '';\n          entityType.ROLES = [];\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return forkJoin(of(entityType), of([]));\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return forkJoin(\n            this.entityService.getEntityMeta(entityID),\n            this.entityService.getRelationMeta(entityID));\n        }\n      })\n    ).subscribe(data => {\n      if ( 'ENTITY_ID' in data[0]) {\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.entityMeta = <EntityMeta>data[0];\n        this.attributes = 'RELATION_ID' in data[1] ? data[1]['ATTRIBUTES'] : [];\n        this._generateEntityTypeForm();\n      } else {\n        this.messageService.clearMessages();\n        this.entityMeta = null;\n        this.entityTypeForm = null;\n        if (data[0] instanceof Array) {\n          data[0].forEach(err => this.messageService.add(err) );\n        } else {\n          this.messageService.report(<Message>data[0]);\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  onSearchHelp(control: AbstractControl, rowID: number): void {\n    if (!this.roleSearchHelp) {\n      this.roleSearchHelp = new SearchHelp();\n      this.roleSearchHelp.OBJECT_NAME = 'Role';\n      this.roleSearchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listRole(searchTerm);\n      }(this.entityService);\n      this.roleSearchHelp.BEHAVIOUR = 'A';\n      this.roleSearchHelp.MULTI = false;\n      this.roleSearchHelp.FUZZY_SEARCH = true;\n      this.roleSearchHelp.FIELDS = [\n        {FIELD_NAME: 'ROLE_ID', LIST_HEADER_TEXT: 'Role', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n        {FIELD_NAME: 'ROLE_DESC', LIST_HEADER_TEXT: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.roleSearchHelp.READ_ONLY = this.readonly || this.oldRole(control) && control.valid;\n    }\n    const afterExportFn = function (context: any, ruleIdx: number) {\n      return () => context.onChangeRoleID(ruleIdx, true);\n    }(this, rowID).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.roleSearchHelp, control, afterExportFn);\n  }\n\n  _generateEntityTypeForm(): void {\n    this.entityTypeForm = this.fb.group({});\n    this.entityTypeForm.addControl('ENTITY_ID',\n      new FormControl(this.entityMeta.ENTITY_ID, {updateOn: 'blur'}));\n    if (this.isNewMode) {\n      this.entityTypeForm.get('ENTITY_ID').setValidators(this._validateEntityId);\n      this.entityTypeForm.get('ENTITY_ID').setAsyncValidators(\n        this.uniqueEntityTypeValidator.validate.bind(this.uniqueEntityTypeValidator));\n    }\n    this.entityTypeForm.addControl('ENTITY_DESC', new FormControl(this.entityMeta.ENTITY_DESC));\n\n    // Compose roles\n    const formArray = [];\n    this.entityMeta.ROLES.forEach( role => {\n      formArray.push(this.fb.group({\n        ROLE_ID: [role.ROLE_ID],\n        ROLE_DESC: [role.ROLE_DESC],\n        CONDITIONAL_ATTR: [{value: role.CONDITIONAL_ATTR, disabled: this.readonly}],\n        CONDITIONAL_VALUE: [role.CONDITIONAL_VALUE]\n      }));\n    });\n    if (this.isNewMode) {\n      formArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CONDITIONAL_ATTR: [''],\n          CONDITIONAL_VALUE: ['']\n        }));\n    }\n    this.entityTypeForm.addControl('ROLES', new FormArray(formArray));\n  }\n\n  _validateEntityId(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Entity ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().toLowerCase().substr(0, 2) === 'r_' ||\n        c.value.toString().toLowerCase().substr(0, 3) === 'rs_') {\n      return {message: 'Entity ID cannot be started with \"r_\" or \"rs_\"!'};\n    }\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Entity Type?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.entityMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.entityTypeForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateEntityTypeForm();\n            this.entityTypeForm.reset(this.entityTypeForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this.readonly = false;\n      this.attrComponent.switchEditDisplay(this.readonly);\n      this.roleFormArray.controls.forEach(roleFormGroup => roleFormGroup.get('CONDITIONAL_ATTR').enable());\n      this.roleFormArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CONDITIONAL_ATTR: [''],\n          CONDITIONAL_VALUE: ['']\n        })\n      );\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this.attrComponent.switchEditDisplay(this.readonly);\n    this.roleFormArray.controls.forEach(roleFormGroup => {\n      roleFormGroup.get('CONDITIONAL_ATTR').disable();\n    });\n    let lastIndex = this.roleFormArray.length - 1;\n    while (lastIndex >= 0 && this.roleFormArray.controls[lastIndex].get('ROLE_ID').value.trim() === '') {\n      this.roleFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n  }\n\n  onChangeEntityID(): void {\n    this.modelService.updateEntityID(this.entityTypeForm.get('ENTITY_ID').value);\n  }\n\n  onChangeEntityDesc(): void {\n    this.modelService.updateEntityDesc(this.entityTypeForm.get('ENTITY_DESC').value);\n  }\n\n  deleteRole(index: number): void {\n    if (index !== this.roleFormArray.length - 1) {\n      this.roleFormArray.removeAt(index);\n      this.roleFormArray.markAsDirty();\n    }\n  }\n\n  onChangeRoleID(index: number, isExportedFromSH?: boolean): void {\n    const currentRoleFormGroup = this.roleFormArray.controls[index];\n    if (this.roleFormArray.controls.findIndex((roleCtrl, i) =>\n      i !== index && roleCtrl.get('ROLE_ID').value === currentRoleFormGroup.get('ROLE_ID').value\n    ) !== -1) {\n      currentRoleFormGroup.get('ROLE_ID').setErrors({message: 'Duplicate roles'});\n      return;\n    }\n\n    if (index === this.roleFormArray.length - 1 && currentRoleFormGroup.value.ROLE_ID.trim() !== '') {\n      // Only work for the last New line\n      this.roleFormArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CONDITIONAL_ATTR: [''],\n          CONDITIONAL_VALUE: ['']\n        })\n      );\n    }\n\n    if (!isExportedFromSH) {\n      this.entityService.getRoleDesc(currentRoleFormGroup.value.ROLE_ID).subscribe(data => {\n        if (data['msgCat']) {\n          currentRoleFormGroup.get('ROLE_ID').setErrors({message: data['msgShortText']});\n        } else {\n          currentRoleFormGroup.get('ROLE_DESC').setValue(data);\n        }\n      });\n    }\n  }\n\n  oldRole(formGroup: AbstractControl): boolean {\n    return this.entityMeta.ROLES ?\n      this.entityMeta.ROLES.findIndex(\n        role => role.ROLE_ID === formGroup.get('ROLE_ID').value ) !== -1 :\n      false;\n  }\n\n  onGoToRole(roleID: string): void {\n    this.router.navigate(['/model/role', roleID]);\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.entityTypeForm && this.entityTypeForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.entityTypeForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (!this.entityTypeForm.valid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedEntityType['action'] = 'add';\n      this.changedEntityType['ENTITY_ID'] = this.entityTypeForm.controls['ENTITY_ID'].value;\n    } else {\n      this.changedEntityType['action'] = 'update';\n      this.changedEntityType['ENTITY_ID'] = this.entityMeta.ENTITY_ID;\n    }\n    if (this.entityTypeForm.controls['ENTITY_DESC'].dirty) {\n      this.changedEntityType['ENTITY_DESC'] = this.entityTypeForm.controls['ENTITY_DESC'].value;\n    }\n\n    this.changedEntityType['ATTRIBUTES'] = this.attrComponent.processChangedAttributes();\n    this._processChangedRoles();\n\n    this.entityService.saveEntityType(this.changedEntityType)\n      .subscribe(data => this._postActivityAfterSavingEntityType(data));\n  }\n\n  _processChangedRoles(): void {\n    const changedRoles = [];\n    if (this.roleFormArray.dirty) {\n      this.changedEntityType['ROLES'] = changedRoles;\n      let action;\n      // Add/Update Case\n      this.roleFormArray.controls.forEach(role => {\n        if (role.get('ROLE_ID').value.trim() === '') { return; }\n        const index = this.entityMeta.ROLES.findIndex(\n          existRole => role.value.ROLE_ID === existRole.ROLE_ID);\n        action = index === -1 ? 'add' : 'update';\n        if (role.dirty) {\n          const changedRole = { action: action, ROLE_ID: role.value.ROLE_ID };\n          if (role.get('CONDITIONAL_ATTR').dirty) {\n            changedRole['CONDITIONAL_ATTR'] = role.value.CONDITIONAL_ATTR;\n          }\n          if (role.get('CONDITIONAL_VALUE').dirty) {\n            changedRole['CONDITIONAL_VALUE'] = role.value.CONDITIONAL_VALUE;\n          }\n          changedRoles.push(changedRole);\n        }\n      });\n\n      // Deletion Case\n      this.entityMeta.ROLES.forEach(role => {\n        const index = this.roleFormArray.controls.findIndex(\n          roleControl => roleControl.get('ROLE_ID').value === role.ROLE_ID);\n        if (index === -1) {\n          const deletedRole = {action: 'delete', ROLE_ID: role.ROLE_ID};\n          changedRoles.push(deletedRole);\n        }\n      });\n    }\n  }\n\n  _postActivityAfterSavingEntityType(data: any) {\n    this.changedEntityType = {};\n    if (data[0] && data[0]['ENTITY_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/entity-type/' + data[0]['ENTITY_ID']],\n          {state: {message: this.messageService.generateMessage(\n                'MODEL', 'ENTITY_TYPE_SAVED', 'S', data[0]['ENTITY_ID'])}});\n      } else {\n        this.readonly = true;\n        this.entityMeta = data[0];\n        this.attributes = data[1].ATTRIBUTES;\n        this._generateEntityTypeForm();\n        this.messageService.reportMessage('MODEL', 'ENTITY_TYPE_SAVED', 'S',\n          this.entityMeta.ENTITY_ID);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {EntityService} from 'jor-angular';\nimport {EntityType} from 'jor-angular';\nimport { debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {IdentityService} from '../../identity.service';\n\n@Component({\n  selector: 'app-entity-type',\n  templateUrl: './entity-type.component.html',\n  styleUrls: ['./entity-type.component.css']\n})\nexport class EntityTypeComponent implements OnInit {\n  entityTypeList: EntityType[];\n  isSearchListShown = true;\n\n  private searchTerms = new Subject<string>();\n  private theSelectedEntityType: EntityType;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private identityService: IdentityService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listEntityType(term)),\n    ).subscribe(data => {\n      this.entityTypeList = data;\n      let entityID;\n      if (this.route.snapshot.firstChild) {\n        entityID = this.route.snapshot.firstChild.paramMap.get('entityID');\n      }\n      if (entityID ) {\n        if (entityID === 'new') {\n          this._newEntityType();\n        } else {\n          this.onSelect(this.entityTypeList.find(entityType => entityType.ENTITY_ID === entityID));\n        }\n      }\n    });\n    this.searchEntityType(''); // The initial list\n\n    this.modelService.theSelectedEntityType$.subscribe( data => {\n      if (this.theSelectedEntityType) {\n        this.theSelectedEntityType.ENTITY_ID = data.ENTITY_ID;\n        this.theSelectedEntityType.ENTITY_DESC = data.ENTITY_DESC;\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.entityTypeList[0] && !this.entityTypeList[0].CREATE_TIME) {\n        this.entityTypeList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const entityID = this.route.snapshot.firstChild.paramMap.get('entityID');\n        if (entityID) {\n          if (entityID === 'new') {\n            this.onSelect(this.entityTypeList[0]);\n          } else {\n            this.onSelect(this.entityTypeList.find(entityType => entityType.ENTITY_ID === entityID));\n          }\n        }\n      }\n    });\n  }\n\n  onSelect(entityType: EntityType): void {\n    if (entityType) {\n      this.theSelectedEntityType = entityType;\n      this.modelService.setSelectedEntityType(entityType);\n    }\n  }\n\n  searchEntityType(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  newEntityType(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('entityID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newEntityType();\n      this.router.navigate(['/model/entity-type/new']);\n    }\n  }\n\n  _newEntityType(): void {\n    this.theSelectedEntityType = new EntityType();\n    this.theSelectedEntityType.ENTITY_ID = 'new';\n    this.theSelectedEntityType.ENTITY_DESC = 'description';\n    this.theSelectedEntityType.VERSION_NO = 1;\n    this.theSelectedEntityType.LAST_CHANGE_BY = this.identityService.Session.USER_ID;\n    this.theSelectedEntityType.LAST_CHANGE_TIME = this.identityService.CurrentTime;\n    this.modelService.setSelectedEntityType(this.theSelectedEntityType);\n    this.entityTypeList.splice(0, 0, this.theSelectedEntityType);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ModelComponent} from './model.component';\nimport {EntityTypeComponent} from './entity-type/entity-type.component';\nimport {EntityTypeDetailComponent} from './entity-type/entity-type-detail/entity-type-detail.component';\nimport {RelationComponent} from './relation/relation.component';\nimport {RelationDetailComponent} from './relation/relation-detail/relation-detail.component';\nimport {WorkProtectionGuard} from '../work-protection.guard';\nimport {RelationshipComponent} from './relationship/relationship.component';\nimport {RelationshipDetailComponent} from './relationship/relationship-detail/relationship-detail.component';\nimport {RoleComponent} from './role/role.component';\nimport {RoleDetailComponent} from './role/role-detail/role-detail.component';\nimport {DataElementComponent} from './data-element/data-element.component';\nimport {DataDomainComponent} from './data-domain/data-domain.component';\nimport {DataDomainDetailComponent} from './data-domain/data-domain-detail/data-domain-detail.component';\nimport {DataElementDetailComponent} from './data-element/data-element-detail/data-element-detail.component';\nimport {SearchHelpComponent} from './search-help/search-help.component';\nimport {SearchHelpDetailComponent} from './search-help/search-help-detail/search-help-detail.component';\n\nconst routes: Routes = [\n  { path: '',\n    component: ModelComponent,\n    children: [\n      { path: 'entity-type', component: EntityTypeComponent,\n        children: [{ path: ':entityID', canDeactivate: [WorkProtectionGuard], component: EntityTypeDetailComponent }] },\n      { path: 'role', component: RoleComponent,\n        children: [{ path: ':roleID', canDeactivate: [WorkProtectionGuard], component: RoleDetailComponent }] },\n      { path: 'relation', component: RelationComponent,\n        children: [{ path: ':relationID', canDeactivate: [WorkProtectionGuard], component: RelationDetailComponent }] },\n      { path: 'relationship', component: RelationshipComponent,\n        children: [{ path: ':relationshipID', canDeactivate: [WorkProtectionGuard], component: RelationshipDetailComponent }] },\n      { path: 'data-element', component: DataElementComponent,\n        children: [{ path: ':elementID', canDeactivate: [WorkProtectionGuard], component: DataElementDetailComponent }] },\n      { path: 'data-domain', component: DataDomainComponent,\n        children: [{ path: ':domainID', canDeactivate: [WorkProtectionGuard], component: DataDomainDetailComponent }] },\n      { path: 'search-help', component: SearchHelpComponent,\n        children: [{ path: ':searchHelpID', canDeactivate: [WorkProtectionGuard], component: SearchHelpDetailComponent }] },\n      { path: '**', redirectTo: '/model/entity-type', pathMatch: 'full' },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [ RouterModule ]\n})\nexport class ModelRoutingModule { }\n","import { Injectable } from '@angular/core';\nimport {AbstractControl, AsyncValidator, ValidationErrors} from '@angular/forms';\nimport {EntityService} from 'jor-angular';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\nimport {ModelService} from './model.service';\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueSearchHelpValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return this.entityService.getSearchHelpDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'SEARCH_HELP_NOT_EXIST') {\n          this.modelService.updateSearchHelpID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueDataDomainValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return this.entityService.getDataDomainDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'DATA_DOMAIN_NOT_EXIST') {\n          this.modelService.updateDataDomainID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueDataElementValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return this.entityService.getDataElementDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'DATA_ELEMENT_NOT_EXIST') {\n          this.modelService.updateDataElementID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueRoleValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return this.entityService.getRoleDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'ROLE_NOT_EXIST') {\n          this.modelService.updateRoleID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueRelationValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    if (ctrl.value === 'r_') { return of(null); }\n    return this.entityService.getRelationDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'RELATION_NOT_EXIST') {\n          this.modelService.updateRelationID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueRelationshipValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    if (ctrl.value === 'rs_') { return of(null); }\n    return this.entityService.getRelationshipDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'RELATIONSHIP_NOT_EXIST') {\n          this.modelService.updateRelationshipID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueEntityTypeValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return this.entityService.getEntityTypeDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'ENTITY_TYPE_NOT_EXIST') {\n          this.modelService.updateEntityID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-model',\n  templateUrl: './model.component.html',\n  styleUrls: ['./model.component.css']\n})\nexport class ModelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModelComponent } from './model.component';\nimport { ModelRoutingModule } from './model-routing.module';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { EntityTypeComponent } from './entity-type/entity-type.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { EntityTypeDetailComponent } from './entity-type/entity-type-detail/entity-type-detail.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AttributeMetaComponent } from './attribute-meta/attribute-meta.component';\nimport {MessageModule} from 'ui-message-angular';\nimport { RelationComponent } from './relation/relation.component';\nimport {RelationDetailComponent} from './relation/relation-detail/relation-detail.component';\nimport { RelationshipComponent } from './relationship/relationship.component';\nimport { RelationshipDetailComponent } from './relationship/relationship-detail/relationship-detail.component';\nimport { RoleComponent } from './role/role.component';\nimport { RoleDetailComponent } from './role/role-detail/role-detail.component';\nimport { DataElementComponent } from './data-element/data-element.component';\nimport { DataDomainComponent } from './data-domain/data-domain.component';\nimport { DataDomainDetailComponent } from './data-domain/data-domain-detail/data-domain-detail.component';\nimport { DataElementDetailComponent } from './data-element/data-element-detail/data-element-detail.component';\nimport { SearchHelpComponent } from './search-help/search-help.component';\nimport { SearchHelpDetailComponent } from './search-help/search-help-detail/search-help-detail.component';\nimport {JorAngularModule} from 'jor-angular';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ModelRoutingModule,\n    MessageModule,\n    NgbModule,\n    JorAngularModule\n  ],\n  declarations: [\n    ModelComponent,\n    EntityTypeComponent,\n    EntityTypeDetailComponent,\n    AttributeMetaComponent,\n    RelationComponent,\n    RelationDetailComponent,\n    RelationshipComponent,\n    RelationshipDetailComponent,\n    RoleComponent,\n    RoleDetailComponent,\n    DataElementComponent,\n    DataElementDetailComponent,\n    DataDomainComponent,\n    DataDomainDetailComponent,\n    SearchHelpComponent,\n    SearchHelpDetailComponent\n  ]\n})\nexport class ModelModule { }\n","import { Injectable } from '@angular/core';\nimport {EntityType, Relation, RelationshipH, RoleH, DataDomainH, DataElementH, SearchHelpH} from 'jor-angular';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModelService {\n  dataTypes = [\n    {key: 1, value: 'Char'},\n    {key: 2, value: 'Integer'},\n    {key: 3, value: 'Boolean'},\n    {key: 4, value: 'Decimal'},\n    {key: 5, value: 'String'},\n    {key: 6, value: 'Binary'},\n    {key: 7, value: 'Date'},\n    {key: 8, value: 'Timestamp'}\n  ];\n\n  private dialogAnswer = new Subject<string>();\n  dialogAnswer$ = this.dialogAnswer.asObservable();\n\n  private isSearchListShown = new Subject<boolean>();\n  isSearchListShown$ = this.isSearchListShown.asObservable();\n\n  private theSelectedEntityType: EntityType;\n  private selectedEntityTypeSource = new Subject<EntityType>();\n  theSelectedEntityType$ = this.selectedEntityTypeSource.asObservable();\n\n  private theSelectedRelation: Relation;\n  private selectedRelationSource = new Subject<Relation>();\n  theSelectedRelation$ = this.selectedRelationSource.asObservable();\n\n  private theSelectedRelationship: RelationshipH;\n  private selectedRelationshipSource = new Subject<RelationshipH>();\n  theSelectedRelationship$ = this.selectedRelationshipSource.asObservable();\n\n  private theSelectedRole: RoleH;\n  private selectedRoleSource = new Subject<RoleH>();\n  theSelectedRole$ = this.selectedRoleSource.asObservable();\n\n  private theSelectedDataElement: DataElementH;\n  private selectedDataElementSource = new Subject<DataElementH>();\n  theSelectedDataElement$ = this.selectedDataElementSource.asObservable();\n\n  private theSelectedDataDomain: DataDomainH;\n  private selectedDataDomainSource = new Subject<DataDomainH>();\n  theSelectedDataDomain$ = this.selectedDataDomainSource.asObservable();\n\n  private theSelectedSearchHelp: SearchHelpH;\n  private selectedSearchHelpSource = new Subject<SearchHelpH>();\n  theSelectedSearchHelp$ = this.selectedSearchHelpSource.asObservable();\n\n  showSearchList(): void {\n    this.isSearchListShown.next(true);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown.next(false);\n  }\n  updateEntityID(entityID: string) {\n    this.theSelectedEntityType.ENTITY_ID = entityID;\n    this.selectedEntityTypeSource.next(this.theSelectedEntityType);\n  }\n\n  updateEntityDesc(entityDesc: string) {\n    this.theSelectedEntityType.ENTITY_DESC = entityDesc;\n    this.selectedEntityTypeSource.next(this.theSelectedEntityType);\n  }\n\n  setSelectedEntityType(entityType: EntityType): void {\n    this.theSelectedEntityType = entityType;\n  }\n\n  updateRelationID(relationID: string) {\n    this.theSelectedRelation.RELATION_ID = relationID;\n    this.selectedRelationSource.next(this.theSelectedRelation);\n  }\n\n  updateRelationDesc(relationDesc: string) {\n    this.theSelectedRelation.RELATION_DESC = relationDesc;\n    this.selectedRelationSource.next(this.theSelectedRelation);\n  }\n\n  setSelectedRelation(relation: Relation): void {\n    this.theSelectedRelation = relation;\n  }\n\n  updateRelationshipID(relationshipID: string) {\n    this.theSelectedRelationship.RELATIONSHIP_ID = relationshipID;\n    this.selectedRelationshipSource.next(this.theSelectedRelationship);\n  }\n\n  updateRelationshipDesc(relationshipDesc: string) {\n    this.theSelectedRelationship.RELATIONSHIP_DESC = relationshipDesc;\n    this.selectedRelationshipSource.next(this.theSelectedRelationship);\n  }\n\n  setSelectedRelationship(relationship: RelationshipH): void {\n    this.theSelectedRelationship = relationship;\n  }\n\n  updateRoleID(roleID: string) {\n    this.theSelectedRole.ROLE_ID = roleID;\n    this.selectedRoleSource.next(this.theSelectedRole);\n  }\n\n  updateRoleDesc(roleDesc: string) {\n    this.theSelectedRole.ROLE_DESC = roleDesc;\n    this.selectedRoleSource.next(this.theSelectedRole);\n  }\n\n  setSelectedRole(role: RoleH): void {\n    this.theSelectedRole = role;\n  }\n\n  updateDataElementID(elementID: string) {\n    this.theSelectedDataElement.ELEMENT_ID = elementID;\n    this.selectedDataElementSource.next(this.theSelectedDataElement);\n  }\n\n  updateDataElementDesc(elementDesc: string) {\n    this.theSelectedDataElement.ELEMENT_DESC = elementDesc;\n    this.selectedDataElementSource.next(this.theSelectedDataElement);\n  }\n\n  setSelectedDataElement(element: DataElementH): void {\n    this.theSelectedDataElement = element;\n  }\n\n  updateDataDomainID(domainID: string) {\n    this.theSelectedDataDomain.DOMAIN_ID = domainID;\n    this.selectedDataDomainSource.next(this.theSelectedDataDomain);\n  }\n\n  updateDataDomainDesc(domainDesc: string) {\n    this.theSelectedDataDomain.DOMAIN_DESC = domainDesc;\n    this.selectedDataDomainSource.next(this.theSelectedDataDomain);\n  }\n\n  setSelectedDataDomain(domain: DataDomainH): void {\n    this.theSelectedDataDomain = domain;\n  }\n\n  updateSearchHelpID(searchHelpID: string) {\n    this.theSelectedSearchHelp.SEARCH_HELP_ID = searchHelpID;\n    this.selectedSearchHelpSource.next(this.theSelectedSearchHelp);\n  }\n\n  updateSearchHelpDesc(searchHelpDesc: string) {\n    this.theSelectedSearchHelp.SEARCH_HELP_DESC = searchHelpDesc;\n    this.selectedSearchHelpSource.next(this.theSelectedSearchHelp);\n  }\n\n  setSelectedSearchHelp(searchHelp: SearchHelpH): void {\n    this.theSelectedSearchHelp = searchHelp;\n  }\n\n  sendDialogAnswer(answer: string): void {\n    this.dialogAnswer.next(answer);\n  }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Association, RelationMeta} from 'jor-angular';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {EntityService} from 'jor-angular';\nimport {msgStore} from '../../../msgStore';\nimport {switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {AttributeMetaComponent} from '../../attribute-meta/attribute-meta.component';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {UniqueRelationValidator} from '../../model-validators';\nimport {SearchHelpComponent} from 'jor-angular';\nimport {SearchHelp, SearchHelpMethod} from 'jor-angular';\n\n@Component({\n  selector: 'app-relation-detail',\n  templateUrl: './relation-detail.component.html',\n  styleUrls: ['./relation-detail.component.css']\n})\nexport class RelationDetailComponent implements OnInit {\n  relationMeta: RelationMeta;\n  readonly = true;\n  isNewMode = false;\n  isFieldMapShown = false;\n  relationForm: FormGroup;\n  currentAssociationForm: AbstractControl;\n  currentAssociation: Association;\n  currentRightRelationMeta: RelationMeta;\n  changedRelation = {};\n  bypassProtection = false;\n  isSearchListShown = true;\n  relationSearchHelp: SearchHelp;\n\n  @ViewChild(AttributeMetaComponent, {static: false})\n  private attrComponent!: AttributeMetaComponent;\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent!: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueRelationValidator: UniqueRelationValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  get associationFormArray() {\n    return this.relationForm.get('ASSOCIATIONS') as FormArray;\n  }\n  get fieldMapFormArray() {\n    if (this.currentAssociationForm) {\n      return this.currentAssociationForm.get('FIELDS_MAPPING') as FormArray;\n    } else {\n      return null;\n    }\n  }\n  get displayFieldMapModal() {\n    return this.isFieldMapShown ? 'block' : 'none';\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const relationID = params.get('relationID');\n        if (relationID === 'new') {\n          const relation = new RelationMeta();\n          relation.RELATION_ID = 'r_';\n          relation.RELATION_DESC = '';\n          relation.ATTRIBUTES = [];\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return of(relation);\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return this.entityService.getRelationMeta(params.get('relationID'));\n        }\n      })\n    ).subscribe(data => {\n      if ( 'RELATION_ID' in data) { // If the return data is a message\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.relationMeta = <RelationMeta>data;\n        this._generateRelationForm();\n      } else {\n        this.messageService.clearMessages();\n        this.relationMeta = null;\n        this.relationForm = null;\n        if (data instanceof Array) {\n          data.forEach(err => this.messageService.add(err));\n        } else {\n          this.messageService.report(<Message>data);\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  onSearchHelp(fieldName: string, control: AbstractControl, rowID: number): void {\n    if (!this.relationSearchHelp) {\n      this.relationSearchHelp = new SearchHelp();\n      this.relationSearchHelp.OBJECT_NAME = 'Relation';\n      this.relationSearchHelp.METHOD = function (entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listRelation(searchTerm);\n      }(this.entityService);\n      this.relationSearchHelp.BEHAVIOUR = 'A';\n      this.relationSearchHelp.MULTI = false;\n      this.relationSearchHelp.FUZZY_SEARCH = true;\n      this.relationSearchHelp.FIELDS = [\n        {\n          FIELD_NAME: 'RELATION_ID', LIST_HEADER_TEXT: 'Relation', IMPORT: true, EXPORT: true, IE_FIELD_NAME: fieldName,\n          LIST_POSITION: 1, FILTER_POSITION: 0\n        },\n        {FIELD_NAME: 'RELATION_DESC', LIST_HEADER_TEXT: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.relationSearchHelp.READ_ONLY = this.readonly;\n    }\n    const afterExportFn = function (context: any, ruleIdx: number) {\n      return () => context.onChangeRightRelationID(ruleIdx, true);\n    }(this, rowID).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.relationSearchHelp, control, afterExportFn);\n  }\n\n  _generateRelationForm(): void {\n    this.relationForm = this.fb.group({});\n    this.relationForm.addControl('RELATION_ID', new FormControl(this.relationMeta.RELATION_ID, {updateOn: 'blur'}));\n    if (this.isNewMode) {\n      this.relationForm.get('RELATION_ID').setValidators(this._validateRelationId);\n      this.relationForm.get('RELATION_ID').setAsyncValidators(this.uniqueRelationValidator.validate.bind(this.uniqueRelationValidator));\n    }\n    this.relationForm.addControl('RELATION_DESC', new FormControl(this.relationMeta.RELATION_DESC));\n\n    // Compose Associations\n    const formArray = [];\n    if (this.relationMeta.ASSOCIATIONS) {\n      this.relationMeta.ASSOCIATIONS.forEach( association => {\n        const fieldsMapArray = [];\n        association.FIELDS_MAPPING.forEach( fieldsMap => {\n          fieldsMapArray.push(this.fb.group({\n            LEFT_FIELD: [fieldsMap.LEFT_FIELD],\n            RIGHT_FIELD: [fieldsMap.RIGHT_FIELD]\n          }));\n        });\n        formArray.push(this.fb.group({\n          ASSOCIATION_NAME: [association.ASSOCIATION_NAME],\n          RIGHT_RELATION_ID: [association.RIGHT_RELATION_ID],\n          CARDINALITY: [{value: association.CARDINALITY, disabled: this.readonly}],\n          FOREIGN_KEY_CHECK: [{\n            value: association.FOREIGN_KEY_CHECK,\n            disabled: this.readonly || association.CARDINALITY === '[0..1]' || association.CARDINALITY === '[0..N]'}],\n          FIELDS_MAPPING: this.fb.array(fieldsMapArray)\n        }));\n      });\n    }\n\n    if (this.isNewMode) {\n      this._appendEmptyAssociation(formArray);\n    }\n    this.relationForm.addControl('ASSOCIATIONS', new FormArray(formArray));\n  }\n\n  _appendEmptyAssociation(formArray: any) {\n    formArray.push(\n      this.fb.group({\n        ASSOCIATION_NAME: [''],\n        RIGHT_RELATION_ID: [''],\n        CARDINALITY: ['[0..1]'],\n        FOREIGN_KEY_CHECK: [{value: 0, disabled: true}],\n        FIELDS_MAPPING: this.fb.array([])\n    }));\n  }\n\n  _validateRelationId(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Relation ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().toLowerCase().substr(0, 2) !== 'r_') {\n      return {message: 'Relation name must be started with \"r_\"!'};\n    }\n\n    if (c.value.toString().length < 3) {\n      return {message: 'Relation name must have length larger than 2!'};\n    }\n\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Entity Type?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.relationMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.relationForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateRelationForm();\n            this.relationForm.reset(this.relationForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this.readonly = false;\n      this.associationFormArray.controls.forEach(associationFormGroup => {\n        associationFormGroup.get('CARDINALITY').enable();\n        if ( associationFormGroup.get('CARDINALITY').value === '[1..1]' ||\n             associationFormGroup.get('CARDINALITY').value === '[1..N]' ) {\n          associationFormGroup.get('FOREIGN_KEY_CHECK').enable();\n        }\n      });\n      this._appendEmptyAssociation(this.associationFormArray);\n      this.attrComponent.switchEditDisplay(this.readonly);\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    let lastIndex = this.associationFormArray.length - 1;\n    while (lastIndex >= 0 && this.associationFormArray.controls[lastIndex].get('ASSOCIATION_NAME').value.trim() === '') {\n      this.associationFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n    this.associationFormArray.controls.forEach(associationFormGroup => {\n      associationFormGroup.get('CARDINALITY').disable();\n      associationFormGroup.get('FOREIGN_KEY_CHECK').disable();\n    });\n    this.attrComponent.switchEditDisplay(this.readonly);\n  }\n\n  onChangeRelationID(): void {\n    this.modelService.updateRelationID(this.relationForm.get('RELATION_ID').value);\n  }\n\n  onChangeRelationDesc(): void {\n    this.modelService.updateRelationDesc(this.relationForm.get('RELATION_DESC').value);\n  }\n\n  deleteAssociation(index: number): void {\n    if (index !== this.associationFormArray.length - 1) {\n      this.associationFormArray.removeAt(index);\n      this.associationFormArray.markAsDirty();\n    }\n  }\n\n  openFieldMapModal(index: number): void {\n    this.currentAssociationForm = this.associationFormArray.controls[index];\n    if (this.currentAssociationForm.get('RIGHT_RELATION_ID').value.trim() === '') {\n      return;\n    }\n\n    this.entityService.getRelationMeta(this.currentAssociationForm.get('RIGHT_RELATION_ID').value)\n      .subscribe( data => {\n        this.currentRightRelationMeta = <RelationMeta>data;\n      });\n\n    if (this.readonly === false) {\n      this.fieldMapFormArray.push(this.fb.group({LEFT_FIELD: [''], RIGHT_FIELD: ['']}));\n    }\n    this.currentAssociation = this.relationMeta.ASSOCIATIONS ? this.relationMeta.ASSOCIATIONS[index] : null;\n    this.isFieldMapShown = true;\n  }\n\n  closeFieldMapModal(): void {\n    // this.currentAssociationForm.setValue(this.currentAssociationForm.value); // Or the value won't be updated.\n    let lastIndex = this.fieldMapFormArray.length - 1;\n    while (lastIndex >= 0 && this.fieldMapFormArray.controls[lastIndex].get('RIGHT_FIELD').value.trim() === '') {\n      this.fieldMapFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n    this.isFieldMapShown = false;\n  }\n\n  deleteFieldMap(index: number): void {\n    if (index !== this.fieldMapFormArray.length - 1) {\n      this.fieldMapFormArray.removeAt(index);\n      this.fieldMapFormArray.markAsDirty();\n    }\n  }\n\n  onChangeAssociationName(index: number): void {\n    const currentAssocFormGroup = this.associationFormArray.at(index);\n    if (this.associationFormArray.controls.findIndex((assocCtrl, i) =>\n      i !== index && assocCtrl.get('ASSOCIATION_NAME').value === currentAssocFormGroup.get('ASSOCIATION_NAME').value\n    ) !== -1) {\n      currentAssocFormGroup.get('ASSOCIATION_NAME').setErrors({message: 'Duplicate association name!'});\n      return;\n    }\n\n    if (index === this.associationFormArray.length - 1 && currentAssocFormGroup.value.ASSOCIATION_NAME.trim() !== '') {\n      this._appendEmptyAssociation(this.associationFormArray);\n    }\n  }\n\n  onChangeRightRelationID(index: number, isExportedFromSH?: boolean): void {\n    const currentAssocFormGroup = this.associationFormArray.controls[index];\n\n    if (currentAssocFormGroup.get('RIGHT_RELATION_ID').value === this.relationMeta.RELATION_ID) {\n      currentAssocFormGroup.get('RIGHT_RELATION_ID').setErrors({message: 'Self association is not allowed'});\n      return;\n    }\n\n    if (!isExportedFromSH) {\n      this.entityService.getRelationDesc(currentAssocFormGroup.value.RIGHT_RELATION_ID)\n        .subscribe(data => {\n          if (data['msgCat']) {\n            currentAssocFormGroup.get('RIGHT_RELATION_ID').setErrors({message: data['msgShortText']});\n          }\n        });\n    }\n  }\n\n  onChangeCardinality(formGroup: AbstractControl): void {\n    const cardinality = formGroup.get('CARDINALITY');\n    if ( cardinality.value === '[1..1]' || cardinality.value === '[1..n]' ) {\n      formGroup.get('FOREIGN_KEY_CHECK').enable();\n    } else {\n      formGroup.get('FOREIGN_KEY_CHECK').setValue(0);\n      formGroup.get('FOREIGN_KEY_CHECK').markAsDirty();\n      formGroup.get('FOREIGN_KEY_CHECK').disable();\n    }\n  }\n\n  onChangeLeftField(index: number): void {\n    const currentFieldMapFormGroup = this.fieldMapFormArray.controls[index];\n    if (this.relationMeta.ATTRIBUTES.findIndex( attribute =>\n        attribute.ATTR_NAME === currentFieldMapFormGroup.get('LEFT_FIELD').value) === -1) {\n      currentFieldMapFormGroup.get('LEFT_FIELD').setErrors({message: 'Field Not Exist'});\n      return;\n    }\n\n    if (this.fieldMapFormArray.controls.findIndex((fieldMapCtrl, i) =>\n      i !== index && fieldMapCtrl.get('LEFT_FIELD') && fieldMapCtrl.get('RIGHT_FIELD') &&\n      fieldMapCtrl.get('LEFT_FIELD').value === currentFieldMapFormGroup.get('LEFT_FIELD').value &&\n      fieldMapCtrl.get('RIGHT_FIELD').value === currentFieldMapFormGroup.get('RIGHT_FIELD').value\n    ) !== -1) {\n      currentFieldMapFormGroup.get('LEFT_FIELD').setErrors({message: 'Duplicate Fields Mapping'});\n      return;\n    }\n\n    if (index === this.fieldMapFormArray.length - 1 && currentFieldMapFormGroup.value.LEFT_FIELD.trim() !== '') {\n      this.fieldMapFormArray.push(\n        this.fb.group( {LEFT_FIELD: [''], RIGHT_FIELD: ['']})\n      );\n    }\n  }\n\n  onChangeRightField(index: number): void {\n    const currentFieldMapFormGroup = this.fieldMapFormArray.controls[index];\n    if (this.currentRightRelationMeta &&\n        this.currentRightRelationMeta.ATTRIBUTES.findIndex( attribute =>\n          attribute.ATTR_NAME === currentFieldMapFormGroup.get('RIGHT_FIELD').value) === -1) {\n      currentFieldMapFormGroup.get('RIGHT_FIELD').setErrors({message: 'Field Not Exist'});\n      return;\n    }\n\n    if (this.fieldMapFormArray.controls.findIndex((fieldMapCtrl, i) =>\n      i !== index && fieldMapCtrl.get('LEFT_FIELD') && fieldMapCtrl.get('RIGHT_FIELD') &&\n      fieldMapCtrl.get('LEFT_FIELD').value === currentFieldMapFormGroup.get('LEFT_FIELD').value &&\n      fieldMapCtrl.get('RIGHT_FIELD').value === currentFieldMapFormGroup.get('RIGHT_FIELD').value\n    ) !== -1) {\n      currentFieldMapFormGroup.get('RIGHT_FIELD').setErrors({message: 'Duplicate Fields Mapping'});\n      return;\n    }\n\n    if (index === this.fieldMapFormArray.length - 1 && currentFieldMapFormGroup.value.RIGHT_FIELD.trim() !== '') {\n      this.fieldMapFormArray.push(\n        this.fb.group( {LEFT_FIELD: [''], RIGHT_FIELD: ['']})\n      );\n    }\n  }\n\n  oldAssociationName(formGroup: AbstractControl): boolean {\n    return this.relationMeta.ASSOCIATIONS ?\n      this.relationMeta.ASSOCIATIONS.findIndex(\n      association => association.ASSOCIATION_NAME === formGroup.get('ASSOCIATION_NAME').value ) !== -1 :\n      false;\n  }\n\n  oldFieldMap(formGroup: AbstractControl): boolean {\n    return this.currentAssociation ?\n      this.currentAssociation.FIELDS_MAPPING.findIndex(\n      fieldMap => fieldMap.LEFT_FIELD === formGroup.get('LEFT_FIELD').value &&\n                            fieldMap.RIGHT_FIELD === formGroup.get('RIGHT_FIELD').value ) !== -1 :\n      false;\n  }\n\n  onGoToRelation(relationID: string): void {\n    this.router.navigate(['/model/relation', relationID]);\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.relationForm && this.relationForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.relationForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (!this.relationForm.valid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedRelation['action'] = 'add';\n      this.changedRelation['RELATION_ID'] = this.relationForm.controls['RELATION_ID'].value;\n    } else {\n      this.changedRelation['action'] = 'update';\n      this.changedRelation['RELATION_ID'] = this.relationMeta.RELATION_ID;\n    }\n    if (this.relationForm.controls['RELATION_DESC'].dirty) {\n      this.changedRelation['RELATION_DESC'] = this.relationForm.controls['RELATION_DESC'].value;\n    }\n\n    const checkErrs = this.attrComponent.checkAttributes();\n    if (checkErrs.length > 0) {\n      checkErrs.forEach( errMsg => this.messageService.add( errMsg ) );\n      return;\n    }\n    this.changedRelation['ATTRIBUTES'] = this.attrComponent.processChangedAttributes();\n    if (!this._processChangedAssociation()) {\n      return;\n    }\n\n    this.entityService.saveRelation(this.changedRelation)\n      .subscribe(data => this._postActivityAfterSavingRelation(data));\n  }\n\n  _processChangedAssociation(): boolean {\n    const changedAssociations = [];\n    const errMessages = [];\n    if (!this.associationFormArray.dirty) { return true; }\n\n    this.changedRelation['ASSOCIATIONS'] = changedAssociations;\n\n    this.associationFormArray.controls.forEach(associationControl => {\n      if (!associationControl.get('ASSOCIATION_NAME').value ||\n          !associationControl.get('RIGHT_RELATION_ID').value) { return; }\n      const changedAssociation = {};\n      const associationMeta = this.relationMeta.ASSOCIATIONS.find(\n        association => associationControl.get('ASSOCIATION_NAME').value === association.ASSOCIATION_NAME);\n      if (!associationMeta) {// New Add Case\n        changedAssociation['action'] = 'add';\n        changedAssociation['ASSOCIATION_NAME'] = associationControl.get('ASSOCIATION_NAME').value;\n        changedAssociation['RIGHT_RELATION_ID'] = associationControl.get('RIGHT_RELATION_ID').value;\n        changedAssociation['CARDINALITY'] = associationControl.get('CARDINALITY').value;\n        changedAssociation['FOREIGN_KEY_CHECK'] = associationControl.get('FOREIGN_KEY_CHECK').value;\n        changedAssociation['FIELDS_MAPPING'] = [];\n        const fieldMapArray = associationControl.get('FIELDS_MAPPING') as FormArray;\n        if (fieldMapArray.length === 0) {\n          errMessages.push(this.messageService.generateMessage(\n            'MODEL', 'MISS_RELATION_ASSOCIATION_FIELD_MAPPING', 'E', changedAssociation['RIGHT_RELATION_ID']));\n          return;\n        }\n        fieldMapArray.controls.forEach(fieldMap => {\n          changedAssociation['FIELDS_MAPPING'].push(\n            {action: 'add', RIGHT_FIELD: fieldMap.get('RIGHT_FIELD').value, LEFT_FIELD: fieldMap.get('LEFT_FIELD').value});\n        });\n        changedAssociations.push(changedAssociation);\n      } else {\n        if (associationControl.dirty) {// Change Case\n          changedAssociation['action'] = 'update';\n          changedAssociation['ASSOCIATION_NAME'] = associationControl.get('ASSOCIATION_NAME').value;\n          if (associationControl.get('RIGHT_RELATION_ID').dirty) {\n            changedAssociation['RIGHT_RELATION_ID'] = associationControl.get('RIGHT_RELATION_ID').value;\n          }\n          if (associationControl.get('CARDINALITY').dirty) {\n            changedAssociation['CARDINALITY'] = associationControl.get('CARDINALITY').value;\n          }\n          if (associationControl.get('FOREIGN_KEY_CHECK').dirty) {\n            changedAssociation['FOREIGN_KEY_CHECK'] = associationControl.get('FOREIGN_KEY_CHECK').value;\n          }\n          if (associationControl.get('FIELDS_MAPPING').dirty) {\n            changedAssociation['FIELDS_MAPPING'] = [];\n            const fieldMapArray = associationControl.get('FIELDS_MAPPING') as FormArray;\n            if (fieldMapArray.length === 0) {\n              errMessages.push(this.messageService.generateMessage(\n                'MODEL', 'MISS_RELATION_ASSOCIATION_FIELD_MAPPING', 'E', changedAssociation['RIGHT_RELATION_ID']));\n              return;\n            }\n            fieldMapArray.controls.forEach(fieldMap => {\n              if (fieldMap.dirty) {\n                changedAssociation['FIELDS_MAPPING'].push(\n                  {action: 'add', RIGHT_FIELD: fieldMap.get('RIGHT_FIELD').value, LEFT_FIELD: fieldMap.get('LEFT_FIELD').value});\n              }\n            });\n            associationMeta.FIELDS_MAPPING.forEach( oldFieldMap => {\n              const index = fieldMapArray.controls.findIndex(fieldMap =>\n                fieldMap.get('LEFT_FIELD').value === oldFieldMap.LEFT_FIELD &&\n                fieldMap.get('RIGHT_FIELD').value === oldFieldMap.RIGHT_FIELD);\n              if (index === -1) {\n                changedAssociation['FIELDS_MAPPING'].push(\n                  {action: 'delete', RIGHT_FIELD: oldFieldMap.LEFT_FIELD, LEFT_FIELD: oldFieldMap.RIGHT_FIELD});\n              }\n            });\n          }\n          changedAssociations.push(changedAssociation);\n        }\n      }\n    });\n    if (errMessages.length > 0) {\n      errMessages.forEach( errMessage => this.messageService.add(errMessage));\n      return false;\n    }\n    // Deletion Case\n    this.relationMeta.ASSOCIATIONS.forEach(associationMeta => {\n      const index = this.associationFormArray.controls.findIndex(\n        associationControl => associationControl.get('ASSOCIATION_NAME').value === associationMeta.ASSOCIATION_NAME);\n      if (index === -1) { // The association must be deleted\n        changedAssociations.push({action: 'delete', ASSOCIATION_NAME: associationMeta.ASSOCIATION_NAME});\n      }\n    });\n    return true;\n  }\n\n  _postActivityAfterSavingRelation(data: any) {\n    this.changedRelation = {};\n    if (data['RELATION_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/relation/' + data['RELATION_ID']],\n          {state: {message: this.messageService.generateMessage(\n                'MODEL', 'RELATION_SAVED', 'S', data['RELATION_ID'])}});\n      } else {\n        this.readonly = true;\n        this.relationMeta = data;\n        this._generateRelationForm();\n        this.messageService.reportMessage('MODEL', 'RELATION_SAVED', 'S', data['RELATION_ID']);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Relation} from 'jor-angular';\nimport {Subject} from 'rxjs';\nimport {EntityService} from 'jor-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {IdentityService} from '../../identity.service';\n\n@Component({\n  selector: 'app-relation',\n  templateUrl: './relation.component.html',\n  styleUrls: ['./relation.component.css']\n})\nexport class RelationComponent implements OnInit {\n\n  relationList: Relation[];\n  isSearchListShown = true;\n  private searchTerms = new Subject<string>();\n  private theSelectedRelation: Relation;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private identityService: IdentityService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listRelation(term)),\n    ).subscribe(data => {\n      this.relationList = data;\n      let relationID;\n      if (this.route.snapshot.firstChild) {\n        relationID = this.route.snapshot.firstChild.paramMap.get('relationID');\n      }\n      if (relationID) {\n        if (relationID === 'new') {\n          this._newRelation();\n        } else {\n          this.onSelect(this.relationList.find(relation => relation.RELATION_ID === relationID));\n        }\n      }\n    });\n    this.searchRelation(''); // The initial list\n\n    this.modelService.theSelectedRelation$.subscribe( data => {\n      if (this.theSelectedRelation) {\n        this.theSelectedRelation.RELATION_ID = data.RELATION_ID;\n        this.theSelectedRelation.RELATION_DESC = data.RELATION_DESC;\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.relationList[0] && !this.relationList[0].CREATE_TIME) {\n        this.relationList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const relationID = this.route.snapshot.firstChild.paramMap.get('relationID');\n        if (relationID) {\n          if (relationID === 'new') {\n            this.onSelect(this.relationList[0]);\n          } else {\n            this.onSelect(this.relationList.find(relation => relation.RELATION_ID === relationID));\n          }\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  searchRelation(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  onSelect(relation: Relation): void {\n    if (relation) {\n      this.theSelectedRelation = relation;\n      this.modelService.setSelectedRelation(relation);\n    }\n  }\n\n  newRelation(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('relationID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newRelation();\n      this.router.navigate(['/model/relation/new']);\n    }\n  }\n\n  _newRelation(): void {\n    this.theSelectedRelation = new Relation();\n    this.theSelectedRelation.RELATION_ID = 'r_new';\n    this.theSelectedRelation.RELATION_DESC = 'description';\n    this.theSelectedRelation.VERSION_NO = 1;\n    this.theSelectedRelation.LAST_CHANGE_BY = this.identityService.Session.USER_ID;\n    this.theSelectedRelation.LAST_CHANGE_TIME = this.identityService.CurrentTime;\n    this.modelService.setSelectedRelation(this.theSelectedRelation);\n    this.relationList.splice(0, 0, this.theSelectedRelation);\n  }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Attribute, RelationshipMeta} from 'jor-angular';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {AttributeMetaComponent} from '../../attribute-meta/attribute-meta.component';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {EntityService} from 'jor-angular';\nimport {msgStore} from '../../../msgStore';\nimport {switchMap} from 'rxjs/operators';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {UniqueRelationshipValidator} from '../../model-validators';\nimport {SearchHelp, SearchHelpMethod} from 'jor-angular';\nimport {SearchHelpComponent} from 'jor-angular';\n\n@Component({\n  selector: 'app-relationship-detail',\n  templateUrl: './relationship-detail.component.html',\n  styleUrls: ['./relationship-detail.component.css']\n})\nexport class RelationshipDetailComponent implements OnInit {\n  relationshipMeta: RelationshipMeta;\n  attributes: Attribute[];\n  readonly = true;\n  isNewMode = false;\n  relationshipForm: FormGroup;\n  changedRelationship = {};\n  bypassProtection = false;\n  isSearchListShown = true;\n  roleSearchHelp: SearchHelp;\n\n  @ViewChild(AttributeMetaComponent, {static: false})\n  private attrComponent!: AttributeMetaComponent;\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent!: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueRelationshipValidator: UniqueRelationshipValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  get involveFormArray() {\n    return this.relationshipForm.get('INVOLVES') as FormArray;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const relationshipID = params.get('relationshipID');\n        if (relationshipID === 'new') {\n          const relationship = new RelationshipMeta();\n          relationship.RELATIONSHIP_ID = 'rs_';\n          relationship.RELATIONSHIP_DESC = '';\n          relationship.VALID_PERIOD = 0;\n          relationship.SINGLETON = false;\n          relationship.INVOLVES = [];\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return forkJoin(of(relationship), of([]));\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return forkJoin([\n            this.entityService.getRelationship(relationshipID),\n            this.entityService.getRelationMeta(relationshipID)\n          ]);\n        }\n      })\n    ).subscribe(data => {\n      if ( 'msgName' in data[0]) {\n        this.messageService.clearMessages();\n        this.relationshipMeta = null;\n        this.relationshipForm = null;\n        this.messageService.report(<Message>data[0]);\n      } else {\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.relationshipMeta = data[0];\n        this.attributes = 'msgName' in data[1] ? [] : data[1]['ATTRIBUTES'];\n        this._generateRelationshipForm();\n        if (this.readonly) {\n          this.relationshipForm.get('TIME_DEPENDENT').disable();\n          this.relationshipForm.get('SINGLETON').disable();\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  onSearchHelp(control: AbstractControl, rowID: number): void {\n    if (!this.roleSearchHelp) {\n      this.roleSearchHelp = new SearchHelp();\n      this.roleSearchHelp.OBJECT_NAME = 'Role';\n      this.roleSearchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listRole(searchTerm);\n      }(this.entityService);\n      this.roleSearchHelp.BEHAVIOUR = 'A';\n      this.roleSearchHelp.MULTI = false;\n      this.roleSearchHelp.FUZZY_SEARCH = true;\n      this.roleSearchHelp.FIELDS = [\n        {FIELD_NAME: 'ROLE_ID', LIST_HEADER_TEXT: 'Role', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n        {FIELD_NAME: 'ROLE_DESC', LIST_HEADER_TEXT: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.roleSearchHelp.READ_ONLY = this.readonly || this.oldInvolve(control) && control.valid;\n    }\n    const afterExportFn = function (context: any, ruleIdx: number) {\n      return () => context.onChangeRoleID(ruleIdx, true);\n    }(this, rowID).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.roleSearchHelp, control, afterExportFn);\n  }\n\n  _generateRelationshipForm(): void {\n    if (this.relationshipForm) {\n      this.relationshipForm.markAsPristine({onlySelf: false});\n      this.relationshipForm.get('RELATIONSHIP_ID').setValue(this.relationshipMeta.RELATIONSHIP_ID);\n      this.relationshipForm.get('RELATIONSHIP_DESC').setValue(this.relationshipMeta.RELATIONSHIP_DESC);\n      this.relationshipForm.get('TIME_DEPENDENT').setValue(this.relationshipMeta.VALID_PERIOD > 0);\n      this.relationshipForm.get('VALID_PERIOD').setValue(this.relationshipMeta.VALID_PERIOD);\n      this.relationshipForm.get('SINGLETON').setValue(this.relationshipMeta.SINGLETON);\n      this.relationshipForm.removeControl('ATTRIBUTES');\n    } else {\n      this.relationshipForm = this.fb.group({\n        RELATIONSHIP_ID: [this.relationshipMeta.RELATIONSHIP_ID, {updateOn: 'blur'}],\n        RELATIONSHIP_DESC: [this.relationshipMeta.RELATIONSHIP_DESC],\n        TIME_DEPENDENT: [this.relationshipMeta.VALID_PERIOD > 0],\n        VALID_PERIOD: [this.relationshipMeta.VALID_PERIOD, this._validateValidPeriod],\n        SINGLETON: [this.relationshipMeta.SINGLETON]\n      });\n    }\n\n    // Compose Involves\n    const formArray = [];\n    this.relationshipMeta.INVOLVES.forEach( involve => {\n      formArray.push(this.fb.group({\n        ROLE_ID: [involve.ROLE_ID],\n        ROLE_DESC: [involve.ROLE_DESC],\n        CARDINALITY: [{value: involve.CARDINALITY, disabled: this.readonly}],\n        DIRECTION: [involve.DIRECTION]\n      }));\n    });\n\n    if (this.isNewMode) {\n      this.relationshipForm.get('RELATIONSHIP_ID').setValidators(this._validateRelationshipID);\n      this.relationshipForm.get('RELATIONSHIP_ID').setAsyncValidators(\n        this.uniqueRelationshipValidator.validate.bind(this.uniqueRelationshipValidator));\n      this.relationshipForm.get('TIME_DEPENDENT').enable();\n      this.relationshipForm.get('VALID_PERIOD').disable(); // TIME_DEPENDENT by default is not checked\n      formArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CARDINALITY: ['[1..1]'],\n          DIRECTION: ['']\n        }));\n    } else {\n      this.relationshipForm.get('RELATIONSHIP_ID').clearValidators();\n      this.relationshipForm.get('RELATIONSHIP_ID').clearAsyncValidators();\n      this.relationshipForm.get('RELATIONSHIP_ID').updateValueAndValidity();\n    }\n\n    this.relationshipForm.setControl('INVOLVES', new FormArray(formArray));\n  }\n\n  _validateRelationshipID(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Relationship ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().toLowerCase().substr(0, 3) !== 'rs_') {\n      return {message: 'Relationship ID must be started with \"rs_\"!'};\n    }\n\n    if (c.value.toString().length < 4) {\n      return {message: 'Relationship ID must have length larger than 3!'};\n    }\n    if (c.value.toString().length > 32) {\n      return {message: 'Relationship ID must have length less than 32!'};\n    }\n    return null;\n  }\n\n  _validateValidPeriod(c: FormControl) {\n    if (c.parent && c.parent.value.TIME_DEPENDENT && c.value <= 0) {\n      return {message: 'must be larger than 0'};\n    }\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Relationship?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.relationshipMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.relationshipForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateRelationshipForm();\n            this.relationshipForm.reset(this.relationshipForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this.readonly = false;\n      this.relationshipForm.get('TIME_DEPENDENT').enable();\n      if (!this.relationshipForm.get('TIME_DEPENDENT').value) {\n        this.relationshipForm.get('VALID_PERIOD').disable();\n      }\n      this.relationshipForm.get('SINGLETON').enable();\n      this.attrComponent.switchEditDisplay(this.readonly);\n      this.involveFormArray.controls.forEach(involveFormGroup => {\n        involveFormGroup.get('CARDINALITY').enable();\n      });\n      this.involveFormArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CARDINALITY: ['[1..1]'],\n          DIRECTION: ['']\n        })\n      );\n    }\n\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this.relationshipForm.get('TIME_DEPENDENT').disable();\n    this.relationshipForm.get('SINGLETON').disable();\n    this.attrComponent.switchEditDisplay(this.readonly);\n    let lastIndex = this.involveFormArray.length - 1;\n    while (lastIndex >= 0 && this.involveFormArray.controls[lastIndex].get('ROLE_ID').value.trim() === '') {\n      this.involveFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n    this.involveFormArray.controls.forEach(involveFormGroup => {\n      involveFormGroup.get('CARDINALITY').disable();\n    });\n  }\n\n  onChangeRelationshipID(): void {\n    this.modelService.updateRelationshipID(this.relationshipForm.get('RELATIONSHIP_ID').value);\n  }\n\n  onChangeTimeDependency(): void {\n    const timeDependent = this.relationshipForm.get('TIME_DEPENDENT').value;\n    const validPeriodCtrl = this.relationshipForm.get('VALID_PERIOD');\n    const relationID = this.relationshipForm.get('RELATIONSHIP_ID').value;\n    const attrFormArray = this.relationshipForm.get('ATTRIBUTES') as FormArray;\n    if (timeDependent) {\n      validPeriodCtrl.setValue(31536000); // 3600 * 24 * 365\n      validPeriodCtrl.markAsDirty();\n      validPeriodCtrl.enable();\n      const validFromFormGroup = this.fb.group({\n        ATTR_GUID: [''],\n        RELATION_ID: [relationID],\n        ATTR_NAME: ['VALID_FROM'],\n        ATTR_DESC: ['Valid from'],\n        DATA_ELEMENT: [''],\n        DATA_TYPE: [{value: 8, disabled: true}],\n        DATA_LENGTH: [null],\n        DECIMAL: [null],\n        ORDER: [null],\n        PRIMARY_KEY: [false],\n        AUTO_INCREMENT: [false]\n      });\n      validFromFormGroup.markAsDirty();\n      attrFormArray.insert(attrFormArray.length - 1, validFromFormGroup);\n      const validToFormGroup = this.fb.group({\n        ATTR_GUID: [''],\n        RELATION_ID: [relationID],\n        ATTR_NAME: ['VALID_TO'],\n        ATTR_DESC: ['Valid to'],\n        DATA_ELEMENT: [''],\n        DATA_TYPE: [{value: 8, disabled: true}],\n        DATA_LENGTH: [null],\n        DECIMAL: [null],\n        ORDER: [null],\n        PRIMARY_KEY: [false],\n        AUTO_INCREMENT: [false]\n      });\n      validToFormGroup.markAsDirty();\n      attrFormArray.insert(attrFormArray.length - 1, validToFormGroup);\n    } else {\n      validPeriodCtrl.setValue(0);\n      validPeriodCtrl.disable();\n      validPeriodCtrl.markAsDirty();\n      const attributeValidFromIndex = attrFormArray.controls.findIndex(\n        attrCtrl => attrCtrl.get('ATTR_NAME').value === 'VALID_FROM');\n      if (attributeValidFromIndex >= 0) { this.attrComponent.deleteAttribute(attributeValidFromIndex); }\n      const attributeValidToIndex = attrFormArray.controls.findIndex(\n        attrCtrl => attrCtrl.get('ATTR_NAME').value === 'VALID_TO');\n      if (attributeValidToIndex >= 0) { this.attrComponent.deleteAttribute(attributeValidToIndex); }\n    }\n\n  }\n\n  onChangeRelationshipDesc(): void {\n    this.modelService.updateRelationshipDesc(this.relationshipForm.get('RELATIONSHIP_DESC').value);\n  }\n\n  deleteInvolve(index: number): void {\n    if (index !== this.involveFormArray.length - 1) {\n      const currentRoleID = this.involveFormArray.at(index).get('ROLE_ID').value;\n      this.involveFormArray.removeAt(index);\n      this.involveFormArray.markAsDirty();\n      const attrFormArray = this.relationshipForm.get('ATTRIBUTES') as FormArray;\n      const attributeInstanceGUIDIndex = attrFormArray.controls.findIndex(\n        attrCtrl => attrCtrl.get('ATTR_NAME').value === currentRoleID + '_INSTANCE_GUID');\n      if (attributeInstanceGUIDIndex >= 0) { this.attrComponent.deleteAttribute(attributeInstanceGUIDIndex); }\n      const attributeEntityIDIndex = attrFormArray.controls.findIndex(\n        attrCtrl => attrCtrl.get('ATTR_NAME').value === currentRoleID + '_ENTITY_ID');\n      if (attributeEntityIDIndex >= 0) { this.attrComponent.deleteAttribute(attributeEntityIDIndex); }\n    }\n  }\n\n  onChangeRoleID(index: number): void {\n    const currentInvolveFormGroup = this.involveFormArray.controls[index];\n    if (this.involveFormArray.controls.findIndex((involveCtrl, i) =>\n      i !== index && involveCtrl.get('ROLE_ID').value === currentInvolveFormGroup.get('ROLE_ID').value\n    ) !== -1) {\n      currentInvolveFormGroup.get('ROLE_ID').setErrors({message: 'Duplicate roles'});\n      return;\n    }\n\n    if (index === this.involveFormArray.length - 1 && currentInvolveFormGroup.value.ROLE_ID.trim() !== '') {\n      // Only work for the last New line\n      this.involveFormArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CARDINALITY: ['[1..1]'],\n          DIRECTION: ['']\n        })\n      );\n    }\n\n    this.entityService.getRoleDesc(currentInvolveFormGroup.value.ROLE_ID).subscribe(data => {\n      if (data['msgCat']) {\n        currentInvolveFormGroup.get('ROLE_ID').setErrors({message: data['msgShortText']});\n      } else {\n        currentInvolveFormGroup.get('ROLE_DESC').setValue(data);\n        const attrFormArray = this.relationshipForm.get('ATTRIBUTES') as FormArray;\n        const relationID = this.relationshipForm.get('RELATIONSHIP_ID').value;\n        const instanceGUIDFormGroup = this.fb.group({\n          ATTR_GUID: [''],\n          RELATION_ID: [relationID],\n          ATTR_NAME: [currentInvolveFormGroup.value.ROLE_ID + '_INSTANCE_GUID'],\n          ATTR_DESC: ['Entity Instance GUID of role ' + currentInvolveFormGroup.value.ROLE_ID],\n          DATA_ELEMENT: [null],\n          DATA_TYPE: [{value: 1, disabled: true}],\n          DATA_LENGTH: [32],\n          DECIMAL: [null],\n          ORDER: [null],\n          PRIMARY_KEY: [false],\n          AUTO_INCREMENT: [false]\n        });\n        instanceGUIDFormGroup.markAsDirty();\n        attrFormArray.insert(attrFormArray.length - 1, instanceGUIDFormGroup);\n        const entityIDFormGroup = this.fb.group({\n          ATTR_GUID: [''],\n          RELATION_ID: [relationID],\n          ATTR_NAME: [currentInvolveFormGroup.value.ROLE_ID + '_ENTITY_ID'],\n          ATTR_DESC: ['Entity ID of role ' + currentInvolveFormGroup.value.ROLE_ID],\n          DATA_ELEMENT: [null],\n          DATA_TYPE: [{value: 1, disabled: true}],\n          DATA_LENGTH: [32],\n          DECIMAL: [null],\n          ORDER: [null],\n          PRIMARY_KEY: [false],\n          AUTO_INCREMENT: [false]\n        });\n        entityIDFormGroup.markAsDirty();\n        attrFormArray.insert(attrFormArray.length - 1, entityIDFormGroup);\n        attrFormArray.markAsDirty();\n      }\n    });\n  }\n\n  oldInvolve(formGroup: AbstractControl): boolean {\n    return this.relationshipMeta.INVOLVES.findIndex( role => role.ROLE_ID === formGroup.get('ROLE_ID').value ) !== -1;\n  }\n\n  onGoToRole(roleID: string): void {\n    this.router.navigate(['/model/role', roleID]);\n  }\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.relationshipForm && this.relationshipForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.relationshipForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (!this.relationshipForm.valid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedRelationship['action'] = 'add';\n      this.changedRelationship['RELATIONSHIP_ID'] = this.relationshipForm.controls['RELATIONSHIP_ID'].value;\n    } else {\n      this.changedRelationship['action'] = 'update';\n      this.changedRelationship['RELATIONSHIP_ID'] = this.relationshipMeta.RELATIONSHIP_ID;\n    }\n    if (this.relationshipForm.controls['RELATIONSHIP_DESC'].dirty) {\n      this.changedRelationship['RELATIONSHIP_DESC'] = this.relationshipForm.controls['RELATIONSHIP_DESC'].value;\n    }\n    if (this.isNewMode || this.relationshipForm.controls['VALID_PERIOD'].dirty) {\n      this.changedRelationship['VALID_PERIOD'] = this.relationshipForm.controls['VALID_PERIOD'].value;\n    }\n    if (this.isNewMode || this.relationshipForm.controls['SINGLETON'].dirty) {\n      this.changedRelationship['SINGLETON'] = this.relationshipForm.controls['SINGLETON'].value;\n    }\n\n    this.changedRelationship['ATTRIBUTES'] = this.attrComponent.processChangedAttributes();\n\n    if (this._processChangedInvolves()) {\n      // console.log(this.changedRelationship);\n      this.entityService.saveRelationship(this.changedRelationship)\n        .subscribe(data => this._postActivityAfterSavingRelationship(data));\n    }\n  }\n\n  _processChangedInvolves(): boolean {\n    if (this.involveFormArray.length <= 2) { // An empty line is included\n      this.messageService.reportMessage('MODEL', 'RELATIONSHIP_LACK_INVOLVED_ROLES', 'E');\n      return false;\n    }\n    const changedInvolves = [];\n    if (this.involveFormArray.dirty) {\n      this.changedRelationship['INVOLVES'] = changedInvolves;\n\n      this.involveFormArray.controls.forEach(involveControl => {\n        if (involveControl.get('ROLE_ID').value.trim() === '') { return; }\n        let action;\n        const index = this.relationshipMeta.INVOLVES.findIndex(\n          involve => involveControl.get('ROLE_ID').value === involve.ROLE_ID);\n        if (index === -1) { // New Add Case\n          action = 'add';\n        } else { // New Update Case\n          if (involveControl.dirty) { action = 'update'; }\n        }\n        if (action) {\n          changedInvolves.push({ action: action, ROLE_ID: involveControl.get('ROLE_ID').value,\n            CARDINALITY: involveControl.get('CARDINALITY').value, DIRECTION: involveControl.get('DIRECTION').value });\n        }\n      });\n\n      // Deletion Case\n      this.relationshipMeta.INVOLVES.forEach(involve => {\n        const index = this.involveFormArray.controls.findIndex(\n          roleControl => roleControl.get('ROLE_ID').value === involve.ROLE_ID);\n        if (index === -1) { // The attribute must be deleted\n          const deletedRole = {action: 'delete', ROLE_ID: involve.ROLE_ID};\n          changedInvolves.push(deletedRole);\n        }\n      });\n    }\n    return true;\n  }\n\n  _postActivityAfterSavingRelationship(data: any) {\n    this.changedRelationship = {};\n    if (data[0] && data[0]['RELATIONSHIP_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/relationship/' + data[0]['RELATIONSHIP_ID']],\n          {state: {message: this.messageService.generateMessage(\n                'MODEL', 'RELATIONSHIP_SAVED', 'S', data[0]['RELATIONSHIP_ID'])}});\n      } else {\n        this.readonly = true;\n        this.relationshipForm.get('TIME_DEPENDENT').disable();\n        this.relationshipForm.get('SINGLETON').disable();\n        this.relationshipMeta = data[0];\n        this.attributes = data[1].ATTRIBUTES;\n        this._generateRelationshipForm();\n        this.messageService.reportMessage(\n          'MODEL', 'RELATIONSHIP_SAVED', 'S', this.relationshipMeta.RELATIONSHIP_ID);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RelationshipH} from 'jor-angular';\nimport {Subject} from 'rxjs';\nimport {EntityService} from 'jor-angular';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {IdentityService} from '../../identity.service';\n\n@Component({\n  selector: 'app-relationship',\n  templateUrl: './relationship.component.html',\n  styleUrls: ['./relationship.component.css']\n})\nexport class RelationshipComponent implements OnInit {\n  relationshipList: RelationshipH[];\n  isSearchListShown = true;\n  private searchTerms = new Subject<string>();\n  private theSelectedRelationship: RelationshipH;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private identityService: IdentityService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listRelationship(term)),\n    ).subscribe(data => {\n      this.relationshipList = data;\n      let relationshipID;\n      if (this.route.snapshot.firstChild) {\n        relationshipID = this.route.snapshot.firstChild.paramMap.get('relationshipID');\n      }\n      if (relationshipID ) {\n        if (relationshipID === 'new') {\n          this._newRelationship();\n        } else {\n          this.onSelect(this.relationshipList.find(relationship => relationship.RELATIONSHIP_ID === relationshipID));\n        }\n      }\n    });\n    this.searchRelationship(''); // The initial list\n\n    this.modelService.theSelectedRelationship$.subscribe( data => {\n      if (this.theSelectedRelationship) {\n        this.theSelectedRelationship.RELATIONSHIP_ID = data['RELATIONSHIP_ID'];\n        this.theSelectedRelationship.RELATIONSHIP_DESC = data['RELATIONSHIP_DESC'];\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.relationshipList[0] && !this.relationshipList[0].CREATE_TIME) {\n        this.relationshipList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const relationshipID = this.route.snapshot.firstChild.paramMap.get('relationshipID');\n        if (relationshipID) {\n          if (relationshipID === 'new') {\n            this.onSelect(this.relationshipList[0]);\n          } else {\n            this.onSelect(this.relationshipList.find(relationship => relationship.RELATIONSHIP_ID === relationshipID));\n          }\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  onSelect(relationship: RelationshipH): void {\n    if (relationship) {\n      this.theSelectedRelationship = relationship;\n      this.modelService.setSelectedRelationship(relationship);\n    }\n  }\n\n  searchRelationship(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  newRelationship(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('relationshipID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newRelationship();\n      this.router.navigate(['/model/relationship/new']);\n    }\n  }\n\n  _newRelationship(): void {\n    this.theSelectedRelationship = new RelationshipH();\n    this.theSelectedRelationship.RELATIONSHIP_ID = 'new';\n    this.theSelectedRelationship.RELATIONSHIP_DESC = 'description';\n    this.theSelectedRelationship.VERSION_NO = 1;\n    this.theSelectedRelationship.LAST_CHANGE_BY = this.identityService.Session.USER_ID;\n    this.theSelectedRelationship.LAST_CHANGE_TIME = this.identityService.CurrentTime;\n    this.modelService.setSelectedRelationship(this.theSelectedRelationship);\n    this.relationshipList.splice(0, 0, this.theSelectedRelationship);\n  }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {RoleMeta} from 'jor-angular';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {EntityService} from 'jor-angular';\nimport {msgStore} from '../../../msgStore';\nimport {switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {UniqueRoleValidator} from '../../model-validators';\nimport {SearchHelp, SearchHelpMethod} from 'jor-angular';\nimport {SearchHelpComponent} from 'jor-angular';\nimport {AttributeMetaComponent} from '../../attribute-meta/attribute-meta.component';\n\n@Component({\n  selector: 'app-role-detail',\n  templateUrl: './role-detail.component.html',\n  styleUrls: ['./role-detail.component.css']\n})\nexport class RoleDetailComponent implements OnInit {\n  roleMeta: RoleMeta;\n  readonly = true;\n  isNewMode = false;\n  roleForm: FormGroup;\n  changedRole = {};\n  bypassProtection = false;\n  isSearchListShown = true;\n  relationSearchHelp: SearchHelp;\n\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent!: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueRoleValidator: UniqueRoleValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  get relationFormArray() {\n    return this.roleForm.get('RELATIONS') as FormArray;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const roleID = params.get('roleID');\n        if (roleID === 'new') {\n          const role = new RoleMeta();\n          role.ROLE_ID = '';\n          role.ROLE_DESC = '';\n          role.RELATIONS = [];\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return of(role);\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return this.entityService.getRole(roleID);\n        }\n      })\n    ).subscribe(data => {\n      if ( 'msgName' in data) {\n        this.messageService.clearMessages();\n        this.roleMeta = null;\n        this.roleForm = null;\n        this.messageService.report(<Message>data);\n      } else {\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.roleMeta = <RoleMeta>data;\n        this._generateRoleForm();\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  onSearchHelp(control: AbstractControl, rowID: number): void {\n    if (!this.relationSearchHelp) {\n      this.relationSearchHelp = new SearchHelp();\n      this.relationSearchHelp.OBJECT_NAME = 'Relation';\n      this.relationSearchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listRelation(searchTerm);\n      }(this.entityService);\n      this.relationSearchHelp.BEHAVIOUR = 'A';\n      this.relationSearchHelp.MULTI = false;\n      this.relationSearchHelp.FUZZY_SEARCH = true;\n      this.relationSearchHelp.FIELDS = [\n        {FIELD_NAME: 'RELATION_ID', LIST_HEADER_TEXT: 'Relation', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n        {FIELD_NAME: 'RELATION_DESC', LIST_HEADER_TEXT: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.relationSearchHelp.READ_ONLY = this.readonly || this.oldRelation(control) && control.valid;\n    }\n    const afterExportFn = function (context: any, ruleIdx: number) {\n      return () => context.onChangeRelationID(ruleIdx, true);\n    }(this, rowID).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.relationSearchHelp, control, afterExportFn);\n  }\n\n  _generateRoleForm(): void {\n    this.roleForm = this.fb.group({});\n    this.roleForm.addControl('ROLE_ID', new FormControl(this.roleMeta.ROLE_ID, {updateOn: 'blur'}));\n    if (this.isNewMode) {\n      this.roleForm.get('ROLE_ID').setValidators(this._validateRoleID);\n      this.roleForm.get('ROLE_ID').setAsyncValidators(this.uniqueRoleValidator.validate.bind(this.uniqueRoleValidator));\n    }\n    this.roleForm.addControl('ROLE_DESC', new FormControl(this.roleMeta.ROLE_DESC));\n\n    // Compose Involves\n    const formArray = [];\n    this.roleMeta.RELATIONS.forEach( relation => {\n      formArray.push(this.fb.group({\n        RELATION_ID: [relation.RELATION_ID],\n        RELATION_DESC: [relation.RELATION_DESC],\n        CARDINALITY: [{value: relation.CARDINALITY, disabled: this.readonly}]\n      }));\n    });\n    if (this.isNewMode) {\n      formArray.push(\n        this.fb.group({\n          RELATION_ID: [''],\n          RELATION_DESC: [''],\n          CARDINALITY: ['[0..1]']\n        }));\n    }\n    this.roleForm.addControl('RELATIONS', new FormArray(formArray));\n  }\n\n  _validateRoleID(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Role ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Role?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.roleMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.roleForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateRoleForm();\n            this.roleForm.reset(this.roleForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this.readonly = false;\n      this.relationFormArray.controls.forEach(relationFormGroup => {\n        relationFormGroup.get('CARDINALITY').enable();\n      });\n      this.relationFormArray.push(\n        this.fb.group({\n          RELATION_ID: [''],\n          RELATION_DESC: [''],\n          CARDINALITY: ['[0..1]']\n        })\n      );\n    }\n\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    let lastIndex = this.relationFormArray.length - 1;\n    while (lastIndex >= 0 && this.relationFormArray.controls[lastIndex].get('ROLE_ID').value.trim() === '') {\n      this.relationFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n    this.relationFormArray.controls.forEach(relationFormGroup => {\n      relationFormGroup.get('CARDINALITY').disable();\n    });\n  }\n\n  onChangeRoleID(): void {\n    this.modelService.updateRoleID(this.roleForm.get('ROLE_ID').value);\n  }\n\n  onChangeRoleDesc(): void {\n    this.modelService.updateRoleDesc(this.roleForm.get('ROLE_DESC').value);\n  }\n\n  deleteRelation(index: number): void {\n    if (index !== this.relationFormArray.length - 1) {\n      this.relationFormArray.removeAt(index);\n      this.relationFormArray.markAsDirty();\n    }\n  }\n\n  onChangeRelationID(index: number, isExportedFromSH?: boolean): void {\n    const currentRelationFormGroup = this.relationFormArray.controls[index];\n    if (this.relationFormArray.controls.findIndex((relationCtrl, i) =>\n      i !== index && relationCtrl.get('RELATION_ID').value === currentRelationFormGroup.get('RELATION_ID').value\n    ) !== -1) {\n      currentRelationFormGroup.get('RELATION_ID').setErrors({message: 'Duplicate Relations'});\n      return;\n    }\n\n    if (index === this.relationFormArray.length - 1 && currentRelationFormGroup.value.RELATION_ID.trim() !== '') {\n      // Only work for the last New line\n      this.relationFormArray.push(\n        this.fb.group({\n          RELATION_ID: [''],\n          RELATION_DESC: [''],\n          CARDINALITY: ['[0..1]']\n        })\n      );\n    }\n\n    if (!isExportedFromSH) {\n      this.entityService.getRelationDesc(currentRelationFormGroup.value.RELATION_ID).subscribe(data => {\n        if (data['msgCat']) {\n          currentRelationFormGroup.get('RELATION_ID').setErrors({message: data['msgShortText']});\n        } else {\n          currentRelationFormGroup.get('RELATION_DESC').setValue(data);\n        }\n      });\n    }\n  }\n\n  oldRelation(formGroup: AbstractControl): boolean {\n    return this.roleMeta.RELATIONS ?\n      this.roleMeta.RELATIONS.findIndex(\n        relation => relation.RELATION_ID === formGroup.get('RELATION_ID').value ) !== -1 :\n      false;\n  }\n\n  onGoToRelation(relationID: string): void {\n    this.router.navigate(['/model/relation', relationID]);\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.roleForm && this.roleForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.roleForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (!this.roleForm.valid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedRole['action'] = 'add';\n      this.changedRole['ROLE_ID'] = this.roleForm.controls['ROLE_ID'].value;\n    } else {\n      this.changedRole['action'] = 'update';\n      this.changedRole['ROLE_ID'] = this.roleMeta.ROLE_ID;\n    }\n    if (this.roleForm.controls['ROLE_DESC'].dirty) {\n      this.changedRole['ROLE_DESC'] = this.roleForm.controls['ROLE_DESC'].value;\n    }\n\n    this._processChangedRelation();\n\n    this.entityService.saveRole(this.changedRole)\n      .subscribe(data => this._postActivityAfterSavingRole(data));\n  }\n\n  _processChangedRelation(): void {\n    const changedRelations = [];\n    if (!this.relationFormArray.dirty) { return; }\n\n    this.changedRole['RELATIONS'] = changedRelations;\n\n    this.relationFormArray.controls.forEach(relationControl => {\n      if (relationControl.get('RELATION_ID').value.trim() === '') { return; }\n      let action;\n      const index = this.roleMeta.RELATIONS.findIndex(\n        relation => relationControl.get('RELATION_ID').value === relation.RELATION_ID);\n      if (index === -1) {// New Add Case\n        action = 'add';\n      } else {\n        if (relationControl.dirty) {// Change Case\n          action = 'update';\n        }\n      }\n      if (action) {\n        changedRelations.push({\n          action: action, RELATION_ID: relationControl.get('RELATION_ID').value, CARDINALITY: relationControl.get('CARDINALITY').value\n        });\n      }\n    });\n\n    // Deletion Case\n    this.roleMeta.RELATIONS.forEach(relation => {\n      const index = this.relationFormArray.controls.findIndex(\n        relationControl => relationControl.get('RELATION_ID').value === relation.RELATION_ID);\n      if (index === -1) { // The attribute must be deleted\n        const deletedRelation = {action: 'delete', RELATION_ID: relation.RELATION_ID};\n        changedRelations.push(deletedRelation);\n      }\n    });\n  }\n\n  _postActivityAfterSavingRole(data: any) {\n    this.changedRole = {};\n    if (data && data['ROLE_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/role/' + data['ROLE_ID']],\n          {state: {message: this.messageService.generateMessage(\n                'MODEL', 'ROLE_SAVED', 'S', data['ROLE_ID'])}});\n      } else {\n        this.readonly = true;\n        this.roleMeta = data;\n        this._generateRoleForm();\n        this.messageService.reportMessage('MODEL', 'ROLE_SAVED', 'S', this.roleMeta.ROLE_ID);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RoleH} from 'jor-angular';\nimport {Subject} from 'rxjs';\nimport {EntityService} from 'jor-angular';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {IdentityService} from '../../identity.service';\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n  styleUrls: ['./role.component.css']\n})\nexport class RoleComponent implements OnInit {\n  roleList: RoleH[];\n  isSearchListShown = true;\n  private searchTerms = new Subject<string>();\n  private theSelectedRole: RoleH;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private identityService: IdentityService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listRole(term)),\n    ).subscribe(data => {\n      this.roleList = data;\n      let roleID;\n      if (this.route.snapshot.firstChild) {\n        roleID = this.route.snapshot.firstChild.paramMap.get('roleID');\n      }\n      if (roleID ) {\n        if (roleID === 'new') {\n          this._newRole();\n        } else {\n          this.onSelect(this.roleList.find(role => role.ROLE_ID === roleID ));\n        }\n      }\n    });\n    this.searchRole(''); // The initial list\n\n    this.modelService.theSelectedRole$.subscribe( data => {\n      if (this.theSelectedRole) {\n        this.theSelectedRole.ROLE_ID = data['ROLE_ID'];\n        this.theSelectedRole.ROLE_DESC = data['ROLE_DESC'];\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.roleList[0] && !this.roleList[0].CREATE_TIME) {\n        this.roleList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const roleID = this.route.snapshot.firstChild.paramMap.get('roleID');\n        if (roleID) {\n          if (roleID === 'new') {\n            this.onSelect(this.roleList[0]);\n          } else {\n            this.onSelect(this.roleList.find(role => role.ROLE_ID === roleID));\n          }\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  onSelect(role: RoleH): void {\n    if (role) {\n      this.theSelectedRole = role;\n      this.modelService.setSelectedRole(role);\n    }\n  }\n\n  searchRole(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  newRole(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('roleID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newRole();\n      this.router.navigate(['/model/role/new']);\n    }\n  }\n\n  _newRole(): void {\n    this.theSelectedRole = new RoleH();\n    this.theSelectedRole.ROLE_ID = 'new';\n    this.theSelectedRole.ROLE_DESC = 'description';\n    this.theSelectedRole.VERSION_NO = 1;\n    this.theSelectedRole.LAST_CHANGE_BY = this.identityService.Session.USER_ID;\n    this.theSelectedRole.LAST_CHANGE_TIME = this.identityService.CurrentTime;\n    this.modelService.setSelectedRole(this.theSelectedRole);\n    this.roleList.splice(0, 0, this.theSelectedRole);\n  }\n\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {SearchHelpMeta, EntityService, SearchHelp, SearchHelpComponent, SearchHelpMethod, Attribute, RelationMeta} from 'jor-angular';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {UniqueSearchHelpValidator} from '../../model-validators';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\n\n@Component({\n  selector: 'app-search-help-detail',\n  templateUrl: './search-help-detail.component.html',\n  styleUrls: ['./search-help-detail.component.css']\n})\nexport class SearchHelpDetailComponent implements OnInit {\n\n  searchHelpMeta: SearchHelpMeta;\n  readonly = true;\n  isNewMode = false;\n  searchHelpForm: FormGroup;\n  changedSearchHelp = {};\n  relationsOfEntity = [];\n  bypassProtection = false;\n  isSearchListShown = true;\n  behaviours = [\n    {key: 'A', value: 'Search automatically when popup'},\n    {key: 'M', value: 'Search manually'}\n  ];\n  relationAttributesMap = {};\n  entitySearchHelp: SearchHelp;\n\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent !: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueSearchHelpValidator: UniqueSearchHelpValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n  }\n\n  get searchHelpFieldsFormArray() {\n    return this.searchHelpForm.get('FIELDS') as FormArray;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const searchHelpID = params.get('searchHelpID');\n        if (searchHelpID === 'new') {\n          const searchHelp = new SearchHelpMeta();\n          searchHelp.SEARCH_HELP_ID = '';\n          searchHelp.SEARCH_HELP_DESC = '';\n          searchHelp.BEHAVIOUR = 'A'; // A: Auto-Trigger Search, M: Manual-Trigger Search\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return of(searchHelp);\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return this.entityService.getSearchHelp(searchHelpID);\n        }\n      })\n    ).subscribe(data => {\n      if ( 'msgName' in data) {\n        this.messageService.clearMessages();\n        this.searchHelpMeta = null;\n        this.searchHelpForm = null;\n        this.messageService.report(<Message>data);\n      } else {\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.searchHelpMeta = <SearchHelpMeta>data;\n        this._generateSearchHelpForm();\n        this._getRelationsOfEntity( this.searchHelpForm, false);\n        this.searchHelpFieldsFormArray.controls.forEach( field =>\n          this._getAttributesOfRelation(field, false ));\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  _generateSearchHelpForm(): void {\n    if (this.searchHelpForm) {\n      this.searchHelpForm.markAsPristine({onlySelf: false});\n      this.searchHelpForm.get('SEARCH_HELP_ID').setValue(this.searchHelpMeta.SEARCH_HELP_ID);\n      this.searchHelpForm.get('SEARCH_HELP_DESC').setValue(this.searchHelpMeta.SEARCH_HELP_DESC);\n      this.searchHelpForm.get('ENTITY_ID').setValue(this.searchHelpMeta.ENTITY_ID);\n      this.searchHelpForm.get('RELATION_ID').setValue(this.searchHelpMeta.RELATION_ID);\n      this.searchHelpForm.get('BEHAVIOUR').setValue(this.searchHelpMeta.BEHAVIOUR);\n      this.searchHelpForm.get('MULTI').setValue(this.searchHelpMeta.MULTI);\n      this.searchHelpForm.get('FUZZY_SEARCH').setValue(this.searchHelpMeta.FUZZY_SEARCH);\n      this.searchHelpFieldsFormArray.clear();\n      if (this.readonly) {\n        this.searchHelpForm.get('BEHAVIOUR').disable();\n        this.searchHelpForm.get('MULTI').disable();\n        this.searchHelpForm.get('FUZZY_SEARCH').disable();\n        this.searchHelpForm.get('RELATION_ID').disable();\n      }\n    } else {\n      this.searchHelpForm = this.fb.group({\n        SEARCH_HELP_ID: [this.searchHelpMeta.SEARCH_HELP_ID, {updateOn: 'blur'}],\n        SEARCH_HELP_DESC: [this.searchHelpMeta.SEARCH_HELP_DESC],\n        ENTITY_ID: [this.searchHelpMeta.ENTITY_ID],\n        RELATION_ID: [{value: this.searchHelpMeta.RELATION_ID, disabled: this.readonly}],\n        BEHAVIOUR: [{value: this.searchHelpMeta.BEHAVIOUR, disabled: this.readonly}],\n        MULTI: [{value: this.searchHelpMeta.MULTI, disabled: this.readonly}],\n        FUZZY_SEARCH: [{value: this.searchHelpMeta.FUZZY_SEARCH, disabled: this.readonly}],\n        FIELDS: this.fb.array([])\n      });\n    }\n    this._setNewModeState();\n\n    if (this.searchHelpMeta.FIELDS) {\n      this.searchHelpMeta.FIELDS.forEach( field => {\n        this.searchHelpFieldsFormArray.push(\n          this.fb.group({\n            RELATION_ID: [{value: field.RELATION_ID, disabled: this.readonly}],\n            FIELD_NAME: [{value: field.FIELD_NAME, disabled: this.readonly}],\n            FIELD_DESC: [field.FIELD_DESC],\n            IMPORT: [{value: field.IMPORT, disabled: this.readonly}],\n            EXPORT: [{value: field.EXPORT, disabled: this.readonly}],\n            IE_FIELD_NAME: [field.IE_FIELD_NAME],\n            LIST_POSITION: [field.LIST_POSITION],\n            FILTER_POSITION: [field.FILTER_POSITION],\n            FILTER_DISP_ONLY: [{value: field.FILTER_DISP_ONLY, disabled: this.readonly}],\n            DEFAULT_VALUE: [field.DEFAULT_VALUE]\n          })\n        );\n      });\n    }\n  }\n\n  _setNewModeState() {\n    if (this.isNewMode) {\n      this.searchHelpForm.get('SEARCH_HELP_ID').setValidators(this._validateSearchHelpID);\n      this.searchHelpForm.get('SEARCH_HELP_ID').setAsyncValidators(\n        this.uniqueSearchHelpValidator.validate.bind(this.uniqueSearchHelpValidator));\n      this.searchHelpForm.get('BEHAVIOUR').enable();\n      this.searchHelpForm.get('MULTI').enable();\n      this.searchHelpForm.get('FUZZY_SEARCH').enable();\n      this.searchHelpForm.get('RELATION_ID').enable();\n      this.searchHelpForm.get('BEHAVIOUR').markAsDirty(); // Default value mark as dirty\n    } else {\n      this.searchHelpForm.get('SEARCH_HELP_ID').clearValidators();\n      this.searchHelpForm.get('SEARCH_HELP_ID').clearAsyncValidators();\n      this.searchHelpForm.get('SEARCH_HELP_ID').updateValueAndValidity();\n    }\n  }\n\n  _validateSearchHelpID(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Search Help ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().length > 32) {\n      return {message: 'Search Help ID must have length less than 32!'};\n    }\n    return null;\n  }\n\n  _validateEntityID(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give an entity'};\n    }\n    return null;\n  }\n  _validateRelationID(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give a relation'};\n    }\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Search Help?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.searchHelpMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.searchHelpForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateSearchHelpForm();\n            this.searchHelpForm.reset(this.searchHelpForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this._switch2EditMode();\n    }\n\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this.searchHelpForm.get('BEHAVIOUR').disable();\n    this.searchHelpForm.get('MULTI').disable();\n    this.searchHelpForm.get('FUZZY_SEARCH').disable();\n    this.searchHelpForm.get('RELATION_ID').disable();\n    this.searchHelpFieldsFormArray.controls.forEach(field => {\n      field.get('RELATION_ID').disable();\n      field.get('FIELD_NAME').disable();\n      field.get('IMPORT').disable();\n      field.get('EXPORT').disable();\n      field.get('FILTER_DISP_ONLY').disable();\n    });\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n    this.searchHelpForm.get('BEHAVIOUR').enable();\n    this.searchHelpForm.get('MULTI').enable();\n    this.searchHelpForm.get('FUZZY_SEARCH').enable();\n    this.searchHelpForm.get('RELATION_ID').enable();\n    this.searchHelpFieldsFormArray.controls.forEach(field => {\n      field.get('RELATION_ID').enable();\n      field.get('FIELD_NAME').enable();\n      field.get('IMPORT').enable();\n      field.get('EXPORT').enable();\n      field.get('FILTER_DISP_ONLY').enable();\n    });\n  }\n\n  onChangeSearchHelpID(): void {\n    this.modelService.updateSearchHelpID(this.searchHelpForm.get('SEARCH_HELP_ID').value);\n  }\n\n  onChangeSearchHelpDesc(): void {\n    this.modelService.updateSearchHelpDesc(this.searchHelpForm.get('SEARCH_HELP_DESC').value);\n  }\n\n  onEntitySearchHelp(control: AbstractControl): void {\n    if (!this.entitySearchHelp) {\n      this.entitySearchHelp = new SearchHelp();\n      this.entitySearchHelp.OBJECT_NAME = 'Entity ID';\n      this.entitySearchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listEntityType(searchTerm);\n      }(this.entityService);\n      this.entitySearchHelp.BEHAVIOUR = 'A';\n      this.entitySearchHelp.MULTI = false;\n      this.entitySearchHelp.FUZZY_SEARCH = true;\n      this.entitySearchHelp.FIELDS = [\n        {FIELD_NAME: 'ENTITY_ID', LIST_HEADER_TEXT: 'Entity', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n        {FIELD_NAME: 'ENTITY_DESC', LIST_HEADER_TEXT: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.entitySearchHelp.READ_ONLY = this.readonly;\n    }\n    const afterExportFn = function (context: any) {\n      return () => context.onChangeEntityID(control);\n    }(this).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.entitySearchHelp, control, afterExportFn);\n  }\n\n  onChangeEntityID(formGroup: AbstractControl): void {\n    this._getRelationsOfEntity(formGroup, true);\n  }\n\n  _getRelationsOfEntity(searchHelpForm: AbstractControl, setDefault: boolean): void {\n    const domainEntityID = searchHelpForm.get('ENTITY_ID').value;\n    if (!domainEntityID) { return; }\n    this.entityService.getRelationMetaOfEntity(domainEntityID)\n      .subscribe(entityRelations => {\n        if (entityRelations[0]['msgType'] === 'E') {\n          searchHelpForm.get('ENTITY_ID').setErrors({message: entityRelations[0]['msgShortText']});\n        } else {\n          this.relationsOfEntity = entityRelations.map(relationMeta => relationMeta.RELATION_ID )\n            .filter(relationId => relationId.substr(0, 2) !== 'rs' );\n          if (setDefault) {\n            searchHelpForm.get('RELATION_ID').setValue(this.relationsOfEntity[0]);\n            searchHelpForm.get('RELATION_ID').markAsDirty();\n            this._getAttributesOfRelation(searchHelpForm, true);\n          }\n        }\n      });\n  }\n\n  onChangeRelationID(formGroup: AbstractControl): void {\n    this._getAttributesOfRelation(formGroup, true);\n  }\n  _getAttributesOfRelation(formGroup: AbstractControl, afterChanges: boolean): void {\n    const relationID = formGroup.get('RELATION_ID').value;\n    if (!relationID) { return; }\n    if (this.relationAttributesMap[relationID]) {\n      if (afterChanges) {\n        this._afterChangeRelationID(formGroup);\n      } else {\n        this.onChangeField(formGroup);\n      }\n    } else {\n      this.entityService.getRelationMeta(relationID)\n        .subscribe((relationMeta: RelationMeta) => {\n          this.relationAttributesMap[relationID] = relationMeta.ATTRIBUTES;\n          if (afterChanges) {\n            this._afterChangeRelationID(formGroup);\n          } else {\n            this.onChangeField(formGroup);\n          }\n        });\n    }\n  }\n  _afterChangeRelationID(formGroup: AbstractControl): void {\n    const relationID = formGroup.get('RELATION_ID').value;\n    if (formGroup.get('FIELD_NAME')) { // Search help field level relation ID change\n      formGroup.get('FIELD_NAME').setValue(this.relationAttributesMap[relationID][0]['ATTR_NAME']);\n      formGroup.get('FIELD_NAME').markAsDirty();\n      formGroup.get('FIELD_DESC').setValue(this.relationAttributesMap[relationID][0]['ATTR_DESC']);\n    } else { // Search help head level relation ID change\n      this.searchHelpFieldsFormArray.clear();\n      this.relationAttributesMap[relationID].forEach( (attribute: Attribute) => {\n        this.searchHelpFieldsFormArray.push(\n          this.fb.group({\n            RELATION_ID: [attribute.RELATION_ID],\n            FIELD_NAME: [attribute.ATTR_NAME],\n            FIELD_DESC: [attribute.ATTR_DESC],\n            IMPORT: [attribute.PRIMARY_KEY],\n            EXPORT: [attribute.PRIMARY_KEY],\n            IE_FIELD_NAME: [''],\n            LIST_POSITION: [attribute.ORDER],\n            FILTER_POSITION: [attribute.ORDER],\n            FILTER_DISP_ONLY: [false],\n            DEFAULT_VALUE: ['']\n          })\n        );\n      });\n      this.searchHelpFieldsFormArray.markAsDirty();\n    }\n  }\n\n  onChangeField(formGroup: AbstractControl): void {\n    const relationID = formGroup.get('RELATION_ID').value;\n    const currAttr = <Attribute>this.relationAttributesMap[relationID].find(\n      (attribute: Attribute) => attribute.ATTR_NAME === formGroup.get('FIELD_NAME').value);\n    formGroup.get('FIELD_DESC').setValue(currAttr.ATTR_DESC);\n  }\n\n  insertField(index: number): void {\n    const mainRelationID = this.searchHelpForm.get('RELATION_ID').value;\n    const firstAttribute = <Attribute>this.relationAttributesMap[mainRelationID][0];\n    this.searchHelpFieldsFormArray.insert(index, this.fb.group({\n      RELATION_ID: [mainRelationID],\n      FIELD_NAME: [firstAttribute.ATTR_NAME],\n      FIELD_DESC: [firstAttribute.ATTR_DESC],\n      IMPORT: [firstAttribute.PRIMARY_KEY],\n      EXPORT: [firstAttribute.PRIMARY_KEY],\n      IE_FIELD_NAME: [''],\n      LIST_POSITION: [0],\n      FILTER_POSITION: [0],\n      FILTER_DISP_ONLY: [false],\n      DEFAULT_VALUE: ['']\n    }));\n  }\n\n  deleteField(index: number): void {\n    if (this.searchHelpFieldsFormArray.length === 1) {\n      this.messageService.reportMessage('MODEL', 'MINIMUM_ONE_SEARCH_FIELD', 'E');\n      return;\n    }\n    this.searchHelpFieldsFormArray.removeAt(index);\n    this.searchHelpFieldsFormArray.markAsDirty();\n  }\n\n  onGoToEntity(entityID: string): void {\n    this.router.navigate(['/model/entity-type', entityID]);\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.searchHelpForm && this.searchHelpForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.searchHelpForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (this.searchHelpForm.invalid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedSearchHelp['action'] = 'add';\n      this.changedSearchHelp['SEARCH_HELP_ID'] = this.searchHelpForm.get('SEARCH_HELP_ID').value;\n    } else {\n      this.changedSearchHelp['action'] = 'update';\n      this.changedSearchHelp['SEARCH_HELP_ID'] = this.searchHelpMeta.SEARCH_HELP_ID;\n    }\n    if (this.searchHelpForm.get('SEARCH_HELP_DESC').dirty) {\n      this.changedSearchHelp['SEARCH_HELP_DESC'] = this.searchHelpForm.get('SEARCH_HELP_DESC').value;\n    }\n    if (this.searchHelpForm.get('BEHAVIOUR').dirty) {\n      this.changedSearchHelp['BEHAVIOUR'] = this.searchHelpForm.get('BEHAVIOUR').value;\n    }\n    if (this.searchHelpForm.get('MULTI').dirty) {\n      this.changedSearchHelp['MULTI'] = this.searchHelpForm.get('MULTI').value;\n    }\n    if (this.searchHelpForm.get('FUZZY_SEARCH').dirty) {\n      this.changedSearchHelp['FUZZY_SEARCH'] = this.searchHelpForm.get('FUZZY_SEARCH').value;\n    }\n    if (this.searchHelpForm.get('ENTITY_ID').dirty) {\n      this.changedSearchHelp['ENTITY_ID'] = this.searchHelpForm.get('ENTITY_ID').value;\n    }\n    if (this.searchHelpForm.get('RELATION_ID').dirty) {\n      this.changedSearchHelp['RELATION_ID'] = this.searchHelpForm.get('RELATION_ID').value;\n    }\n    if (this.searchHelpForm.get('FIELDS').dirty) {\n      this.changedSearchHelp['FIELDS'] = [];\n      this.searchHelpForm.get('FIELDS').value.forEach( field => {\n        if (field.FIELD_NAME) {\n          this.changedSearchHelp['FIELDS'].push(field);\n        }\n      });\n    }\n    this.entityService.saveSearchHelp(this.changedSearchHelp)\n      .subscribe(data => this._postActivityAfterSavingSearchHelp(data));\n  }\n\n  _postActivityAfterSavingSearchHelp(data: any) {\n    this.changedSearchHelp = {};\n    if (data['SEARCH_HELP_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/search-help/' + data['SEARCH_HELP_ID']],\n          {state: {message: this.messageService.generateMessage(\n                'MODEL', 'SEARCH_HELP_SAVED', 'S', data['SEARCH_HELP_ID'])}});\n      } else {\n        this._switch2DisplayMode();\n        this.searchHelpMeta = data;\n        this._generateSearchHelpForm();\n        this.searchHelpFieldsFormArray.controls.forEach( field =>\n          this._getAttributesOfRelation(field, false ));\n        this.messageService.reportMessage('MODEL', 'SEARCH_HELP_SAVED', 'S', data['SEARCH_HELP_ID']);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {EntityService, SearchHelpH, SearchHelpMeta} from 'jor-angular';\nimport {Subject} from 'rxjs';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {IdentityService} from '../../identity.service';\n\n@Component({\n  selector: 'app-search-help',\n  templateUrl: './search-help.component.html',\n  styleUrls: ['./search-help.component.css']\n})\nexport class SearchHelpComponent implements OnInit {\n\n  searchHelpList: SearchHelpH[] = [];\n  isSearchListShown = true;\n  private searchTerms = new Subject<string>();\n  private theSelectedSearchHelp: SearchHelpH;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private identityService: IdentityService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listSearchHelp(term)),\n    ).subscribe(data => {\n      this.searchHelpList = data;\n      let searchHelpID;\n      if (this.route.snapshot.firstChild) {\n        searchHelpID = this.route.snapshot.firstChild.paramMap.get('searchHelpID');\n      }\n      if (searchHelpID ) {\n        if (searchHelpID === 'new') {\n          this._newSearchHelp();\n        } else {\n          this.onSelect(this.searchHelpList.find(searchHelp => searchHelp.SEARCH_HELP_ID === searchHelpID));\n        }\n      }\n    });\n    this.searchSearchHelp(''); // The initial list\n\n    this.modelService.theSelectedSearchHelp$.subscribe( data => {\n      if (this.theSelectedSearchHelp) {\n        this.theSelectedSearchHelp.SEARCH_HELP_ID = data['SEARCH_HELP_ID'];\n        this.theSelectedSearchHelp.SEARCH_HELP_DESC = data['SEARCH_HELP_DESC'];\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.searchHelpList[0] && !this.searchHelpList[0].CREATE_TIME) {\n        this.searchHelpList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const searchHelpID = this.route.snapshot.firstChild.paramMap.get('searchHelpID');\n        if (searchHelpID) {\n          if (searchHelpID === 'new') {\n            this.onSelect(this.searchHelpList[0]);\n          } else {\n            this.onSelect(this.searchHelpList.find(searchHelp => searchHelp.SEARCH_HELP_ID === searchHelpID));\n          }\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  onSelect(searchHelp: SearchHelpH): void {\n    if (searchHelp) {\n      this.theSelectedSearchHelp = searchHelp;\n      this.modelService.setSelectedSearchHelp(searchHelp);\n    }\n  }\n\n  searchSearchHelp(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  newSearchHelp(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('searchHelpID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newSearchHelp();\n      this.router.navigate(['/model/search-help/new']);\n    }\n  }\n\n  _newSearchHelp(): void {\n    this.theSelectedSearchHelp = new SearchHelpMeta();\n    this.theSelectedSearchHelp.SEARCH_HELP_ID = 'new';\n    this.theSelectedSearchHelp.SEARCH_HELP_DESC = 'description';\n    this.theSelectedSearchHelp.VERSION_NO = 1;\n    this.theSelectedSearchHelp.LAST_CHANGE_BY = this.identityService.Session.USER_ID;\n    this.theSelectedSearchHelp.LAST_CHANGE_TIME = this.identityService.CurrentTime;\n    this.modelService.setSelectedSearchHelp(this.theSelectedSearchHelp);\n    this.searchHelpList.splice(0, 0, this.theSelectedSearchHelp);\n  }\n\n}\n","export default \".dk-table {\\n  display: block;\\n  overflow-x: auto;\\n  white-space: nowrap;\\n  border: none;\\n}\\n.dk-actions{\\n  width: 6rem;\\n}\\n.dk-description{\\n  min-width: 12rem;\\n  max-width: 20rem;\\n}\\n.dk-dataElement{\\n  min-width: 12rem;\\n  max-width: 20rem;\\n}\\n.dk-number{\\n  min-width: 4rem;\\n  max-width: 6rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF0dHJpYnV0ZS1tZXRhLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxjQUFjO0VBQ2QsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtFQUNuQixZQUFZO0FBQ2Q7QUFDQTtFQUNFLFdBQVc7QUFDYjtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtBQUNsQjtBQUNBO0VBQ0UsZUFBZTtFQUNmLGVBQWU7QUFDakIiLCJmaWxlIjoiYXR0cmlidXRlLW1ldGEuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kay10YWJsZSB7XG4gIGRpc3BsYXk6IGJsb2NrO1xuICBvdmVyZmxvdy14OiBhdXRvO1xuICB3aGl0ZS1zcGFjZTogbm93cmFwO1xuICBib3JkZXI6IG5vbmU7XG59XG4uZGstYWN0aW9uc3tcbiAgd2lkdGg6IDZyZW07XG59XG4uZGstZGVzY3JpcHRpb257XG4gIG1pbi13aWR0aDogMTJyZW07XG4gIG1heC13aWR0aDogMjByZW07XG59XG4uZGstZGF0YUVsZW1lbnR7XG4gIG1pbi13aWR0aDogMTJyZW07XG4gIG1heC13aWR0aDogMjByZW07XG59XG4uZGstbnVtYmVye1xuICBtaW4td2lkdGg6IDRyZW07XG4gIG1heC13aWR0aDogNnJlbTtcbn1cbiJdfQ== */\";","export default \".dk-table {\\n  display: block;\\n  overflow-x: auto;\\n  white-space: nowrap;\\n  border: none;\\n}\\n.dk-actions{\\n  width: 4rem;\\n  min-width: 4rem;\\n  max-width: 4rem;\\n}\\n.dk-description{\\n  width: 20rem;\\n  min-width: 20rem;\\n  max-width: 20rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImRhdGEtZG9tYWluLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtBQUNkO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsZUFBZTtFQUNmLGVBQWU7QUFDakI7QUFDQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6ImRhdGEtZG9tYWluLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRrLXRhYmxlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93LXg6IGF1dG87XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi5kay1hY3Rpb25ze1xuICB3aWR0aDogNHJlbTtcbiAgbWluLXdpZHRoOiA0cmVtO1xuICBtYXgtd2lkdGg6IDRyZW07XG59XG4uZGstZGVzY3JpcHRpb257XG4gIHdpZHRoOiAyMHJlbTtcbiAgbWluLXdpZHRoOiAyMHJlbTtcbiAgbWF4LXdpZHRoOiAyMHJlbTtcbn1cbiJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXRhLWRvbWFpbi5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXRhLWVsZW1lbnQtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJkYXRhLWVsZW1lbnQuY29tcG9uZW50LmNzcyJ9 */\";","export default \".dk-table {\\n  display: block;\\n  overflow-x: auto;\\n  white-space: nowrap;\\n  border: none;\\n}\\n.dk-actions{\\n  width: 3rem;\\n  min-width: 3rem;\\n  max-width: 3rem;\\n}\\n.dk-description{\\n  width: 15rem;\\n  min-width: 15rem;\\n  max-width: 15rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVudGl0eS10eXBlLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtBQUNkO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsZUFBZTtFQUNmLGVBQWU7QUFDakI7QUFDQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6ImVudGl0eS10eXBlLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRrLXRhYmxlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93LXg6IGF1dG87XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi5kay1hY3Rpb25ze1xuICB3aWR0aDogM3JlbTtcbiAgbWluLXdpZHRoOiAzcmVtO1xuICBtYXgtd2lkdGg6IDNyZW07XG59XG4uZGstZGVzY3JpcHRpb257XG4gIHdpZHRoOiAxNXJlbTtcbiAgbWluLXdpZHRoOiAxNXJlbTtcbiAgbWF4LXdpZHRoOiAxNXJlbTtcbn1cbiJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJlbnRpdHktdHlwZS5jb21wb25lbnQuY3NzIn0= */\";","export default \".dk-model-content {\\n  margin-top: .5rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1vZGVsLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxpQkFBaUI7QUFDbkIiLCJmaWxlIjoibW9kZWwuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5kay1tb2RlbC1jb250ZW50IHtcbiAgbWFyZ2luLXRvcDogLjVyZW07XG59XG4iXX0= */\";","export default \".dk-actions{\\n  width: 5rem;\\n  min-width: 5rem;\\n  max-width: 5rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInJlbGF0aW9uLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztFQUNYLGVBQWU7RUFDZixlQUFlO0FBQ2pCIiwiZmlsZSI6InJlbGF0aW9uLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRrLWFjdGlvbnN7XG4gIHdpZHRoOiA1cmVtO1xuICBtaW4td2lkdGg6IDVyZW07XG4gIG1heC13aWR0aDogNXJlbTtcbn1cbiJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWxhdGlvbi5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWxhdGlvbnNoaXAtZGV0YWlsLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyZWxhdGlvbnNoaXAuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyb2xlLWRldGFpbC5jb21wb25lbnQuY3NzIn0= */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJyb2xlLmNvbXBvbmVudC5jc3MifQ== */\";","export default \".dk-table {\\n  display: block;\\n  overflow-x: auto;\\n  white-space: nowrap;\\n  border: none;\\n}\\n.dk-actions{\\n  width: 4rem;\\n  min-width: 4rem;\\n  max-width: 4rem;\\n}\\n.dk-selection{\\n  width: 15rem;\\n  min-width: 10rem;\\n}\\n.dk-string{\\n  width: 15rem;\\n  min-width: 10rem;\\n}\\n.dk-number{\\n  width: 10rem;\\n  min-width: 5rem;\\n}\\n.dk-description{\\n  width: 15rem;\\n  min-width: 10rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlYXJjaC1oZWxwLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtBQUNkO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsZUFBZTtFQUNmLGVBQWU7QUFDakI7QUFDQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLFlBQVk7RUFDWixlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxZQUFZO0VBQ1osZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNlYXJjaC1oZWxwLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRrLXRhYmxlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93LXg6IGF1dG87XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi5kay1hY3Rpb25ze1xuICB3aWR0aDogNHJlbTtcbiAgbWluLXdpZHRoOiA0cmVtO1xuICBtYXgtd2lkdGg6IDRyZW07XG59XG4uZGstc2VsZWN0aW9ue1xuICB3aWR0aDogMTVyZW07XG4gIG1pbi13aWR0aDogMTByZW07XG59XG4uZGstc3RyaW5ne1xuICB3aWR0aDogMTVyZW07XG4gIG1pbi13aWR0aDogMTByZW07XG59XG4uZGstbnVtYmVye1xuICB3aWR0aDogMTByZW07XG4gIG1pbi13aWR0aDogNXJlbTtcbn1cbi5kay1kZXNjcmlwdGlvbntcbiAgd2lkdGg6IDE1cmVtO1xuICBtaW4td2lkdGg6IDEwcmVtO1xufVxuIl19 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzZWFyY2gtaGVscC5jb21wb25lbnQuY3NzIn0= */\";","export default \"<div class=\\\"card mt-2\\\">\\n  <div class=\\\"card-header\\\"><span class=\\\"fab fa-elementor\\\"></span> Attribute</div>\\n  <div class=\\\"card-body\\\">\\n    <table class=\\\"table table-bordered table-sm dk-table\\\" [formGroup]=\\\"parentForm\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Action</th>\\n          <th scope=\\\"col\\\">Attribute Name</th>\\n          <th scope=\\\"col\\\">Description</th>\\n          <th scope=\\\"col\\\">Data Element</th>\\n          <th scope=\\\"col\\\">Data Type</th>\\n          <th scope=\\\"col\\\">Length</th>\\n          <th scope=\\\"col\\\">Decimal</th>\\n          <th scope=\\\"col\\\" title=\\\"Primary Key\\\" [hidden]=\\\"relationID.substring(0,2) !== 'r_'\\\">PK</th>\\n          <th scope=\\\"col\\\" title=\\\"Auto Incremental\\\" [hidden]=\\\"relationID.substring(0,2) !== 'r_'\\\">AI</th>\\n        </tr>\\n      </thead>\\n\\n      <tbody formArrayName=\\\"ATTRIBUTES\\\">\\n        <tr *ngFor=\\\"let attrFormGroup of formArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" id=\\\"delete\\\" [disabled]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                    (click)=\\\"deleteAttribute(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" id=\\\"add\\\" [disabled]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                    (click)=\\\"insertAttribute(i)\\\" title=\\\"Insert\\\">\\n              <span class=\\\"fas fa-plus\\\"></span>\\n            </button>\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" id=\\\"switch\\\" [disabled]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                    (click)=\\\"switchBtwDEAndDT(i)\\\" title=\\\"Switch btw Data Element and Data Type\\\">\\n              <span class=\\\"far fa-lightbulb\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ATTR_NAME\\\" [readonly]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                   class=\\\"form-control form-control-sm\\\" (change)=\\\"onChangeAttributeName(i)\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ATTR_DESC\\\" class=\\\"form-control form-control-sm dk-description\\\"\\n                   [readonly]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <div class=\\\"input-group dk-dataElement\\\">\\n              <input type=\\\"text\\\" formControlName=\\\"DATA_ELEMENT\\\" [readonly]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                     class=\\\"form-control form-control-sm\\\" (change)=\\\"onChangeDataElement(i)\\\"\\n                     (dblclick)=\\\"onGoToDataElement(attrFormGroup.value['DATA_ELEMENT'])\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{attrFormGroup.get('DATA_ELEMENT').errors?.message}}\\n              </div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchDataElement\\\"\\n                        (click)=\\\"onSearchHelp(attrFormGroup, i)\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <select formControlName=\\\"DATA_TYPE\\\" (change)=\\\"onChangeDataType(attrFormGroup)\\\" class=\\\"form-control form-control-sm\\\">\\n              <option *ngFor=\\\"let opt of dataTypes\\\" [value]=\\\"opt.key\\\">{{opt.value}}</option>\\n            </select>\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <input type=\\\"number\\\" formControlName=\\\"DATA_LENGTH\\\" class=\\\"form-control form-control-sm dk-number\\\"\\n                   [readonly]=\\\"(+attrFormGroup.value.DATA_TYPE !== 1 && +attrFormGroup.value.DATA_TYPE !== 4) || readonly || isFieldGray(attrFormGroup.value)\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <input type=\\\"number\\\" formControlName=\\\"DECIMAL\\\" class=\\\"form-control form-control-sm dk-number\\\"\\n                   [readonly]=\\\"+attrFormGroup.value.DATA_TYPE !== 4 || readonly || isFieldGray(attrFormGroup.value)\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\" [hidden]=\\\"relationID.substring(0,2) !== 'r_'\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"PRIMARY_KEY\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\" [hidden]=\\\"relationID.substring(0,2) !== 'r_'\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"AUTO_INCREMENT\\\">\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n<dk-app-search-help></dk-app-search-help>\\n\";","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"dataDomainMeta\\\" [formGroup]=\\\"dataDomainForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"dataDomain\\\" class=\\\"col-form-label form-control-sm\\\">Data Domain:\\n      <span [class.ng-invalid]=\\\"dataDomainForm.get('DOMAIN_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{dataDomainForm.get('DOMAIN_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"dataDomain\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           (change)=\\\"onChangeDataDomainID()\\\" name=\\\"dataDomain\\\" formControlName=\\\"DOMAIN_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"dataDomain-desc\\\" class=\\\"col-form-label form-control-sm\\\">Data Domain Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"dataDomain-desc\\\" name=\\\"dataDomain-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"DOMAIN_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeDataDomainDesc()\\\"></textarea>\\n  </div>\\n\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">Data Type</div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"ml-2 mb-2 row\\\">\\n        <select formControlName=\\\"DATA_TYPE\\\" (change)=\\\"onChangeDataType(dataDomainForm)\\\"\\n                class=\\\"col-sm-8 col-lg-4 form-control form-control-sm\\\">\\n          <option *ngFor=\\\"let opt of dataTypes\\\" [value]=\\\"opt.key\\\">{{opt.value}}</option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"ml-0 row\\\">\\n        <div class=\\\"form-group col-8 col-sm-4 col-lg-2\\\">\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"data-length\\\">Length:\\n          </label>\\n          <input type=\\\"number\\\" formControlName=\\\"DATA_LENGTH\\\" id=\\\"data-length\\\" name=\\\"data-length\\\"\\n                 class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\" >\\n          <span class=\\\"dk-invalid-feedback\\\">{{dataDomainForm.get('DATA_LENGTH').errors?.message}}</span>\\n        </div>\\n\\n        <div class=\\\"form-group col-8 col-sm-4 col-lg-2\\\">\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"decimal-place\\\">Decimal Place:\\n          </label>\\n          <input type=\\\"number\\\" formControlName=\\\"DECIMAL\\\" id=\\\"decimal-place\\\" name=\\\"decimal-place\\\"\\n                 class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\">\\n          <span class=\\\"dk-invalid-feedback\\\">{{dataDomainForm.get('DECIMAL').errors?.message}}</span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card mt-3\\\">\\n    <div class=\\\"card-header\\\">Domain Definition</div>\\n    <div class=\\\"card-body\\\">\\n      <div *ngIf=\\\"enableGeneralType\\\" class=\\\"card mb-3\\\">\\n        <div class=\\\"ml-2 mt-2 custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"general-type\\\" name=\\\"DOMAIN_TYPE\\\"\\n                 [value]=\\\"0\\\" formControlName=\\\"DOMAIN_TYPE\\\" (change)=\\\"onChangeDomainType(dataDomainForm)\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"general-type\\\">General Type</label>\\n        </div>\\n        <div class=\\\"card-body row\\\">\\n          <div class=\\\"form-check col-sm-3 mx-3\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"UNSIGNED\\\" id=\\\"unsigned\\\" name=\\\"unsigned\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"unsigned\\\">Unsigned</label>\\n          </div>\\n          <div class=\\\"form-check col-sm-3 mx-3\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"CAPITAL_ONLY\\\" id=\\\"CAPITAL_ONLY\\\" name=\\\"CAPITAL_ONLY\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"CAPITAL_ONLY\\\">Capital Only</label>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"enableRegExpr\\\" class=\\\"card mb-3\\\">\\n        <div class=\\\"ml-2 mt-2 custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"regular-expression\\\" name=\\\"DOMAIN_TYPE\\\"\\n                 [value]=\\\"1\\\" formControlName=\\\"DOMAIN_TYPE\\\" (change)=\\\"onChangeDomainType(dataDomainForm)\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"regular-expression\\\">Regular Expression\\n            <span [class.ng-invalid]=\\\"dataDomainForm.get('REG_EXPR').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n              {{dataDomainForm.get('REG_EXPR').errors?.message}}\\n            </span>\\n          </label>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"REG_EXPR\\\" id=\\\"REG_EXPR\\\" name=\\\"REG_EXPR\\\"\\n                   class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\" >\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"enableValueRelation\\\" class=\\\"card mb-2\\\">\\n        <div class=\\\"ml-2 mt-2 custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"value-relation\\\" name=\\\"DOMAIN_TYPE\\\"\\n                 [value]=\\\"2\\\" formControlName=\\\"DOMAIN_TYPE\\\" (change)=\\\"onChangeDomainType(dataDomainForm)\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"value-relation\\\">Value Entity Relation\\n            <span [class.ng-invalid]=\\\"dataDomainForm.get('ENTITY_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n              {{dataDomainForm.get('ENTITY_ID').errors?.message}}\\n            </span>\\n          </label>\\n        </div>\\n        <div class=\\\"card-body row\\\">\\n          <div class=\\\"input-group col-lg-4 ml-2 mb-3\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ENTITY_ID\\\" id=\\\"ENTITY_ID\\\" name=\\\"ENTITY_ID\\\" placeholder=\\\"Entity Type\\\"\\n                   class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeEntityID(dataDomainForm)\\\">\\n            <div class=\\\"input-group-append\\\">\\n              <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchEntity\\\" (click)=\\\"onEntitySearchHelp(dataDomainForm)\\\">\\n                <span class=\\\"fas fa-search\\\"></span>\\n              </button>\\n            </div>\\n          </div>\\n          <select formControlName=\\\"RELATION_ID\\\" class=\\\"form-control form-control-sm col-lg-4 ml-4 mr-3\\\">\\n            <option *ngFor=\\\"let relation of relationsOfEntity\\\" [value]=\\\"relation\\\">{{relation}}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"enableArrayOrInterval\\\" class=\\\"card mb-3\\\">\\n        <div class=\\\"ml-2 mt-2 row\\\">\\n          <div class=\\\"custom-control custom-radio col-3\\\">\\n            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"value-array\\\" name=\\\"DOMAIN_TYPE\\\"\\n                   [value]=\\\"3\\\" formControlName=\\\"DOMAIN_TYPE\\\" (change)=\\\"onChangeDomainType(dataDomainForm)\\\">\\n            <label class=\\\"custom-control-label\\\" for=\\\"value-array\\\">Value Array</label>\\n          </div>\\n          <div class=\\\"custom-control custom-radio col-3\\\">\\n            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"value-interval\\\" name=\\\"DOMAIN_TYPE\\\"\\n                   [value]=\\\"4\\\" formControlName=\\\"DOMAIN_TYPE\\\" (change)=\\\"onChangeDomainType(dataDomainForm)\\\">\\n            <label class=\\\"custom-control-label\\\" for=\\\"value-interval\\\">Value Interval</label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"card-body\\\">\\n          <table class=\\\"table table-bordered dk-table\\\">\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th scope=\\\"col\\\">Low Value</th>\\n                <th *ngIf=\\\"dataDomainForm.get('DOMAIN_TYPE').value === 4\\\" scope=\\\"col\\\">High Value</th>\\n                <th scope=\\\"col\\\">Description</th>\\n                <th scope=\\\"col\\\">Actions</th>\\n              </tr>\\n            </thead>\\n\\n            <tbody formArrayName=\\\"DOMAIN_VALUES\\\">\\n            <tr *ngFor=\\\"let domainValueForm of domainValueFormArray.controls; let i = index\\\">\\n              <td [formGroup]=\\\"domainValueForm\\\">\\n                <div class=\\\"input-group\\\">\\n                  <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"LOW_VALUE\\\" maxlength=\\\"10\\\"\\n                         [readonly]=\\\"readonly\\\" (change)=\\\"onChangeDomainValue(i)\\\">\\n                  <div class=\\\"invalid-tooltip\\\">\\n                    {{domainValueForm.get('LOW_VALUE').errors?.message}}\\n                  </div>\\n                </div>\\n              </td>\\n              <td *ngIf=\\\"dataDomainForm.get('DOMAIN_TYPE').value === 4\\\" [formGroup]=\\\"domainValueForm\\\">\\n                <div class=\\\"input-group\\\">\\n                  <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"HIGH_VALUE\\\"\\n                         [readonly]=\\\"readonly\\\"  (change)=\\\"onChangeDomainValue(i)\\\">\\n                  <div class=\\\"invalid-tooltip\\\">\\n                    {{domainValueForm.get('HIGH_VALUE').errors?.message}}\\n                  </div>\\n                </div>\\n              </td>\\n              <td [formGroup]=\\\"domainValueForm\\\" class=\\\"dk-description\\\">\\n                <input  class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"LOW_VALUE_TEXT\\\" maxlength=\\\"100\\\"\\n                        [readonly]=\\\"readonly\\\">\\n              </td>\\n              <td class=\\\"dk-actions\\\">\\n                <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"insertDomainValue(i)\\\" title=\\\"Insert\\\">\\n                  <span class=\\\"fas fa-plus\\\"></span>\\n                </button>\\n                <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteDomainValue(i)\\\" title=\\\"Delete\\\">\\n                  <span class=\\\"far fa-trash-alt\\\"></span>\\n                </button>\\n              </td>\\n            </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\";","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchDataDomain(searchBox.value)\\\" >\\n      </div>\\n\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedDataDomain\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newDataDomian()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let dataDomain of dataDomainList\\\" routerLink=\\\"/model/data-domain/{{dataDomain.DOMAIN_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(dataDomain)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{dataDomain.DOMAIN_ID}}</h5>\\n          <small>version: {{dataDomain.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{dataDomain.DOMAIN_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{dataDomain.LAST_CHANGE_BY}} @{{dataDomain.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"dataElementMeta\\\" [formGroup]=\\\"dataElementForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"dataElement\\\" class=\\\"col-form-label form-control-sm\\\">Data Element:\\n      <span [class.ng-invalid]=\\\"dataElementForm.get('ELEMENT_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{dataElementForm.get('ELEMENT_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"dataElement\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           (change)=\\\"onChangeDataElementID()\\\" name=\\\"dataElement\\\" formControlName=\\\"ELEMENT_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"dataElement-desc\\\" class=\\\"col-form-label form-control-sm\\\">Data Element Description:\\n    </label>\\n    <textarea class=\\\"form-control\\\" id=\\\"dataElement-desc\\\" name=\\\"dataElement-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"ELEMENT_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeDataElementDesc()\\\"></textarea>\\n  </div>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">Data Type</div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"ml-2 mb-3 row\\\">\\n        <div class=\\\"col-8 col-lg-3 custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"use-domain\\\" name=\\\"USE_DOMAIN\\\"\\n                 [value]=\\\"1\\\" formControlName=\\\"USE_DOMAIN\\\" (change)=\\\"onChangeUseDomain(dataElementForm)\\\" required>\\n          <label class=\\\"custom-control-label\\\" for=\\\"use-domain\\\">Data Domain</label>\\n        </div>\\n        <div class=\\\"input-group col-8 col-lg-4\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"data-domain\\\" (change)=\\\"onChangeDataDomain(dataElementForm)\\\"\\n                 [readonly]=\\\"readonly || !dataElementForm.get('USE_DOMAIN').value\\\" name=\\\"dataElement\\\" formControlName=\\\"DOMAIN_ID\\\"\\n                 (dblclick)=\\\"onGoToDataDomain(dataElementForm.value['DOMAIN_ID'])\\\">\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchDomain\\\"\\n                    (click)=\\\"onDataDomainSearchHelp(dataElementForm)\\\">\\n              <span class=\\\"fas fa-search\\\"></span>\\n            </button>\\n          </div>\\n        </div>\\n        <span [class.ng-invalid]=\\\"dataElementForm.get('DOMAIN_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n          {{dataElementForm.get('DOMAIN_ID').errors?.required? 'A Data Domain is required': null}}\\n          {{dataElementForm.get('DOMAIN_ID').errors?.message}}\\n        </span>\\n      </div>\\n\\n      <div class=\\\"ml-2 mb-2 row\\\">\\n        <div class=\\\"col-8 col-lg-3 custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"use-data-type\\\" name=\\\"USE_DOMAIN\\\"\\n                 [value]=\\\"0\\\" formControlName=\\\"USE_DOMAIN\\\" (change)=\\\"onChangeUseDomain(dataElementForm)\\\" required>\\n          <label class=\\\"custom-control-label\\\" for=\\\"use-data-type\\\">Elementary Type</label>\\n        </div>\\n        <div class=\\\"input-group col-8 col-lg-4\\\">\\n          <select formControlName=\\\"DATA_TYPE\\\" (change)=\\\"onChangeDataType(dataElementForm)\\\"\\n                  class=\\\"form-control form-control-sm\\\">\\n            <option *ngFor=\\\"let opt of dataTypes\\\" [value]=\\\"opt.key\\\">{{opt.value}}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"ml-2 row\\\">\\n        <div class=\\\"col-lg-3\\\"></div>\\n        <div class=\\\"form-group col-4 col-lg-2\\\">\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"data-length\\\">Length:\\n          </label>\\n          <input type=\\\"number\\\" formControlName=\\\"DATA_LENGTH\\\" id=\\\"data-length\\\" name=\\\"data-length\\\" class=\\\"form-control form-control-sm\\\"\\n                 [readonly]=\\\"readonly\\\" >\\n          <span class=\\\"dk-invalid-feedback\\\">{{dataElementForm.get('DATA_LENGTH').errors?.message}}</span>\\n        </div>\\n        <div class=\\\"form-group col-4 col-lg-2\\\">\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"decimal-place\\\">Decimal Place:\\n          </label>\\n          <input type=\\\"number\\\" formControlName=\\\"DECIMAL\\\" id=\\\"decimal-place\\\" name=\\\"decimal-place\\\"\\n                 class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\">\\n          <span class=\\\"dk-invalid-feedback\\\">{{dataElementForm.get('DECIMAL').errors?.message}}</span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">Text</div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"ml-2 form-group row\\\">\\n        <label class=\\\"col-form-label col-form-label-sm col-lg-3\\\" for=\\\"label-text\\\">Label Text</label>\\n        <input type=\\\"text\\\" formControlName=\\\"LABEL_TEXT\\\" id=\\\"label-text\\\" name=\\\"label-text\\\"\\n               class=\\\"form-control form-control-sm col-md-6\\\" [readonly]=\\\"readonly\\\">\\n      </div>\\n\\n      <div class=\\\"ml-2 form-group row\\\">\\n        <label class=\\\"col-form-label col-form-label-sm col-lg-3\\\" for=\\\"list-header-text\\\">List Header Text</label>\\n        <input type=\\\"text\\\" formControlName=\\\"LIST_HEADER_TEXT\\\" id=\\\"list-header-text\\\" name=\\\"list-header-text\\\"\\n               class=\\\"form-control form-control-sm col-md-6\\\" [readonly]=\\\"readonly\\\">\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">Additional Attribute</div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"ml-2 form-group row\\\">\\n        <label class=\\\"col-form-label col-form-label-sm col-lg-3\\\" for=\\\"search-help\\\">Search Help</label>\\n        <div class=\\\"input-group col-8 col-lg-4\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"SEARCH_HELP_ID\\\" id=\\\"search-help\\\" name=\\\"search-help\\\"\\n                 class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeSearchHelp(dataElementForm)\\\"\\n                 (dblclick)=\\\"onGoToSearchHelp(dataElementForm.value['SEARCH_HELP_ID'])\\\">\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchSearchHelp\\\"\\n                    (click)=\\\"onSearchHelpSearchHelp(dataElementForm)\\\">\\n              <span class=\\\"fas fa-search\\\"></span>\\n            </button>\\n          </div>\\n        </div>\\n        <span [class.ng-invalid]=\\\"dataElementForm.get('SEARCH_HELP_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n            {{dataElementForm.get('SEARCH_HELP_ID').errors?.message}}\\n        </span>\\n      </div>\\n\\n      <div class=\\\"ml-2 form-group row\\\">\\n        <label class=\\\"col-form-label col-form-label-sm col-lg-3\\\" for=\\\"sh-export-field\\\">Export Field</label>\\n        <div class=\\\"input-group col-8 col-lg-4\\\">\\n          <select formControlName=\\\"SEARCH_HELP_EXPORT_FIELD\\\" class=\\\"form-control form-control-sm\\\" id=\\\"sh-export-field\\\">\\n            <option *ngFor=\\\"let exportField of searchHelpExportField\\\" [value]=\\\"exportField\\\">{{exportField}}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"ml-2 form-group row\\\">\\n        <label class=\\\"col-form-label col-form-label-sm col-lg-3\\\" for=\\\"parameter\\\">Parameter</label>\\n        <div class=\\\"input-group col-8 col-lg-4\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"PARAMETER_ID\\\" id=\\\"parameter\\\" name=\\\"parameter\\\"\\n                 class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\">\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\";","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchDataElement(searchBox.value)\\\" >\\n      </div>\\n\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedDataElement\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newDataElement()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let dataElement of dataElementList\\\" routerLink=\\\"/model/data-element/{{dataElement.ELEMENT_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(dataElement)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{dataElement.ELEMENT_ID}}</h5>\\n          <small>version: {{dataElement.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{dataElement.ELEMENT_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{dataElement.LAST_CHANGE_BY}} @{{dataElement.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"entityMeta\\\" [formGroup]=\\\"entityTypeForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"entity-type\\\" class=\\\"col-form-label form-control-sm\\\">Entity Type:\\n      <span [class.ng-invalid]=\\\"entityTypeForm.get('ENTITY_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{entityTypeForm.get('ENTITY_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"entity-type\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           name=\\\"entity-type\\\" formControlName=\\\"ENTITY_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"entity-desc\\\" class=\\\"col-form-label form-control-sm\\\">Entity Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"entity-desc\\\" name=\\\"entity-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"ENTITY_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeEntityDesc()\\\"></textarea>\\n  </div>\\n\\n  <app-attribute-meta [readonly]=\\\"readonly\\\" [parentForm]=\\\"entityTypeForm\\\" [attributes]=\\\"attributes\\\"\\n                      [relationID]=\\\"entityMeta.ENTITY_ID\\\" [isNewMode]=\\\"isNewMode\\\">\\n  </app-attribute-meta>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\"><span class=\\\"fas fa-user-check\\\"></span> Role</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered table-sm dk-table\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th scope=\\\"col\\\">Action</th>\\n            <th scope=\\\"col\\\">Role</th>\\n            <th scope=\\\"col\\\">Description</th>\\n            <th scope=\\\"col\\\">Conditional Attribute</th>\\n            <th scope=\\\"col\\\">Conditional Value</th>\\n          </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"ROLES\\\">\\n        <tr *ngFor=\\\"let roleFormGroup of roleFormArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteRole(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"roleFormGroup\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"ROLE_ID\\\"\\n                     [readonly]=\\\"readonly || oldRole(roleFormGroup) && roleFormGroup.valid\\\" (change)=\\\"onChangeRoleID(i)\\\"\\n                     (dblclick)=\\\"onGoToRole(roleFormGroup.value['ROLE_ID'])\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{roleFormGroup.get('ROLE_ID').errors?.message}}\\n              </div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchRole\\\"\\n                        (click)=\\\"onSearchHelp(roleFormGroup, i)\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"roleFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ROLE_DESC\\\" readonly class=\\\"form-control form-control-sm dk-description\\\">\\n          </td>\\n          <td [formGroup]=\\\"roleFormGroup\\\">\\n            <select formControlName=\\\"CONDITIONAL_ATTR\\\"  class=\\\"form-control form-control-sm\\\">\\n              <option *ngFor=\\\"let opt of attrFormArray.controls\\\" [value]=\\\"opt.value.ATTR_NAME\\\">{{opt.value.ATTR_NAME}}</option>\\n            </select>\\n          </td>\\n          <td [formGroup]=\\\"roleFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"CONDITIONAL_VALUE\\\" [readonly]=\\\"readonly\\\" class=\\\"form-control form-control-sm\\\">\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\";","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchEntityType(searchBox.value)\\\" >\\n      </div>\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedEntityType\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newEntityType()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let entityType of entityTypeList\\\" routerLink=\\\"/model/entity-type/{{entityType.ENTITY_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(entityType)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{entityType.ENTITY_ID}}</h5>\\n          <small>version: {{entityType.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{entityType.ENTITY_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{entityType.LAST_CHANGE_BY}} @{{entityType.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\";","export default \"<ul class=\\\"nav nav-tabs mt-1\\\">\\n  <li class=\\\"nav-item active\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/entity-type\\\" routerLinkActive=\\\"active\\\">Entity</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/role\\\" routerLinkActive=\\\"active\\\">Role</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/relation\\\" routerLinkActive=\\\"active\\\">Relation</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/relationship\\\" routerLinkActive=\\\"active\\\">Relationship</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/data-element\\\" routerLinkActive=\\\"active\\\">Data Element</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/data-domain\\\" routerLinkActive=\\\"active\\\">Data Domain</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/search-help\\\" routerLinkActive=\\\"active\\\">Search Help</a>\\n  </li>\\n</ul>\\n\\n<div class=\\\"dk-model-content\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\";","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"relationMeta\\\" [formGroup]=\\\"relationForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"relation\\\" class=\\\"col-form-label form-control-sm\\\">Relation:\\n      <span [class.ng-invalid]=\\\"relationForm.get('RELATION_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{relationForm.get('RELATION_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"relation\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n          name=\\\"relation\\\" formControlName=\\\"RELATION_ID\\\" >\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"relation-desc\\\" class=\\\"col-form-label form-control-sm\\\">Relation Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"relation-desc\\\" name=\\\"relation-desc\\\" rows=\\\"2\\\"\\n              (change)=\\\"onChangeRelationDesc()\\\" formControlName=\\\"RELATION_DESC\\\" [readonly]=\\\"readonly\\\"></textarea>\\n  </div>\\n\\n  <app-attribute-meta [readonly]=\\\"readonly\\\" [parentForm]=\\\"relationForm\\\" [attributes]=\\\"relationMeta.ATTRIBUTES\\\"\\n                      [relationID]=\\\"relationMeta.RELATION_ID\\\" [isNewMode]=\\\"isNewMode\\\">\\n  </app-attribute-meta>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\"><span class=\\\"fas fa-atlas\\\"></span> Association</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered table-sm dk-table\\\">\\n        <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Action</th>\\n          <th scope=\\\"col\\\">Association</th>\\n          <th scope=\\\"col\\\">Right Relation</th>\\n          <th scope=\\\"col\\\">Cardinality</th>\\n          <th scope=\\\"col\\\" title=\\\"Foreign Key Check\\\">FC</th>\\n        </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"ASSOCIATIONS\\\">\\n        <tr *ngFor=\\\"let associationFormGroup of associationFormArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteAssociation(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" (click)=\\\"openFieldMapModal(i)\\\" title=\\\"Fields Mapping\\\">\\n              <span class=\\\"fas fa-map-signs\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"associationFormGroup\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"ASSOCIATION_NAME\\\"\\n                     [readonly]=\\\"readonly || oldAssociationName(associationFormGroup) && associationFormGroup.valid\\\"\\n                     (change)=\\\"onChangeAssociationName(i)\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{associationFormGroup.get('ASSOCIATION_NAME').errors?.message}}\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"associationFormGroup\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"RIGHT_RELATION_ID\\\"\\n                     [readonly]=\\\"readonly\\\" (change)=\\\"onChangeRightRelationID(i)\\\"\\n                     (dblclick)=\\\"onGoToRelation(associationFormGroup.value['RIGHT_RELATION_ID'])\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{associationFormGroup.get('RIGHT_RELATION_ID').errors?.message}}\\n              </div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchRelation\\\"\\n                        (click)=\\\"onSearchHelp('RIGHT_RELATION_ID', associationFormGroup, i)\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"associationFormGroup\\\">\\n            <select class=\\\"form-control form-control-sm\\\" formControlName=\\\"CARDINALITY\\\"\\n                    (change)=\\\"onChangeCardinality(associationFormGroup)\\\">\\n              <option>[0..1]</option>\\n              <option>[1..1]</option>\\n              <option>[0..n]</option>\\n              <option>[1..n]</option>\\n            </select>\\n          </td>\\n          <td [formGroup]=\\\"associationFormGroup\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"FOREIGN_KEY_CHECK\\\">\\n          </td>\\n        </tr>\\n\\n        <div *ngIf=\\\"currentAssociationForm\\\" class=\\\"modal fade dk-modal-open\\\" [ngClass]=\\\"{'show': isFieldMapShown}\\\"\\n             [ngStyle]=\\\"{'display': displayFieldMapModal}\\\" id=\\\"detailModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n          <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"detail\\\">Fields Mapping</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeFieldMapModal()\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                <table class=\\\"table table-bordered table-sm dk-table\\\" [formGroup]=\\\"currentAssociationForm\\\">\\n                  <thead class=\\\"thead-light\\\">\\n                  <tr>\\n                    <th scope=\\\"col\\\">Action</th>\\n                    <th scope=\\\"col\\\">Left Table Field</th>\\n                    <th scope=\\\"col\\\">Right Table Field</th>\\n                  </tr>\\n                  </thead>\\n\\n                  <tbody formArrayName=\\\"FIELDS_MAPPING\\\">\\n                    <tr *ngFor=\\\"let fieldMapFormGroup of fieldMapFormArray.controls; let i = index\\\">\\n                      <td class=\\\"dk-actions\\\">\\n                        <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteFieldMap(i)\\\" title=\\\"Delete\\\">\\n                          <span class=\\\"far fa-trash-alt\\\"></span>\\n                        </button>\\n                      </td>\\n                      <td [formGroup]=\\\"fieldMapFormGroup\\\">\\n                        <div class=\\\"input-group\\\">\\n                          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"LEFT_FIELD\\\"\\n                                 [readonly]=\\\"readonly || oldFieldMap(fieldMapFormGroup) && fieldMapFormGroup.valid\\\" (change)=\\\"onChangeLeftField(i)\\\">\\n                          <div class=\\\"invalid-tooltip\\\">\\n                            {{fieldMapFormGroup.get('LEFT_FIELD').errors?.message}}\\n                          </div>\\n                        </div>\\n                      </td>\\n                      <td [formGroup]=\\\"fieldMapFormGroup\\\">\\n                        <div class=\\\"input-group\\\">\\n                          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"RIGHT_FIELD\\\"\\n                                 [readonly]=\\\"readonly || oldFieldMap(fieldMapFormGroup) && fieldMapFormGroup.valid\\\" (change)=\\\"onChangeRightField(i)\\\">\\n                          <div class=\\\"invalid-tooltip\\\">\\n                            {{fieldMapFormGroup.get('RIGHT_FIELD').errors?.message}}\\n                          </div>\\n                        </div>\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"closeFieldMapModal()\\\">OK</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\\n\";","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchRelation(searchBox.value)\\\" >\\n      </div>\\n\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedRelation\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newRelation()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let relation of relationList\\\" routerLink=\\\"/model/relation/{{relation.RELATION_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(relation)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{relation.RELATION_ID}}</h5>\\n          <small>version: {{relation.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{relation.RELATION_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{relation.LAST_CHANGE_BY}} @{{relation.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"relationshipMeta\\\" [formGroup]=\\\"relationshipForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"relationship\\\" class=\\\"col-form-label form-control-sm\\\">Relationship:\\n      <span [class.ng-invalid]=\\\"relationshipForm.get('RELATIONSHIP_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{relationshipForm.get('RELATIONSHIP_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"relationship\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           name=\\\"relationship\\\" formControlName=\\\"RELATIONSHIP_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"relationship-desc\\\" class=\\\"col-form-label form-control-sm\\\">Relationship Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"relationship-desc\\\" name=\\\"relationship-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"RELATIONSHIP_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeRelationshipDesc()\\\"></textarea>\\n  </div>\\n  <div class=\\\"row ml-2\\\">\\n    <div class=\\\"col-8 col-lg-3 form-check\\\">\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"timeDependent\\\" name=\\\"timeDependent\\\"\\n             formControlName=\\\"TIME_DEPENDENT\\\" (change)=\\\"onChangeTimeDependency()\\\">\\n      <label for=\\\"timeDependent\\\" class=\\\"form-check-label\\\">Time Dependent</label>\\n    </div>\\n    <div class=\\\"col-8 col-lg-4 form-group row mx-3\\\">\\n      <label for=\\\"valid_period\\\" class=\\\"col-form-label form-control-sm\\\">Default Period of Validity(seconds):\\n        <span [class.ng-invalid]=\\\"relationshipForm.get('VALID_PERIOD').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{relationshipForm.get('VALID_PERIOD').errors?.message}}\\n      </span>\\n      </label>\\n      <input type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"valid_period\\\" [readonly]=\\\"readonly\\\"\\n             name=\\\"valid_period\\\" formControlName=\\\"VALID_PERIOD\\\">\\n    </div>\\n    <div class=\\\"col-8 col-lg-3 form-check\\\" >\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"singleton\\\" name=\\\"singleton\\\"\\n             formControlName=\\\"SINGLETON\\\">\\n      <label for=\\\"singleton\\\" class=\\\"form-check-label\\\">Singleton</label>\\n    </div>\\n  </div>\\n\\n  <app-attribute-meta [readonly]=\\\"readonly\\\" [parentForm]=\\\"relationshipForm\\\" [attributes]=\\\"attributes\\\"\\n                      [relationID]=\\\"relationshipMeta.RELATIONSHIP_ID\\\" [isNewMode]=\\\"isNewMode\\\">\\n  </app-attribute-meta>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\"><span class=\\\"fas fa-user-check\\\"></span> Involved Roles</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered table-sm\\\">\\n        <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Action</th>\\n          <th scope=\\\"col\\\">Role</th>\\n          <th scope=\\\"col\\\">Description</th>\\n          <th scope=\\\"col\\\">Cardinality</th>\\n          <th scope=\\\"col\\\">Direction</th>\\n        </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"INVOLVES\\\">\\n        <tr *ngFor=\\\"let involveFormGroup of involveFormArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteInvolve(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"involveFormGroup\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"ROLE_ID\\\"\\n                     [readonly]=\\\"readonly || oldInvolve(involveFormGroup) && involveFormGroup.valid\\\" (change)=\\\"onChangeRoleID(i)\\\"\\n                     (dblclick)=\\\"onGoToRole(involveFormGroup.value['ROLE_ID'])\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{involveFormGroup.get('ROLE_ID').errors?.message}}\\n              </div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchRole\\\"\\n                        (click)=\\\"onSearchHelp(involveFormGroup, i)\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"involveFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ROLE_DESC\\\" readonly class=\\\"form-control form-control-sm dk-description\\\">\\n          </td>\\n          <td [formGroup]=\\\"involveFormGroup\\\">\\n            <select class=\\\"form-control form-control-sm\\\" formControlName=\\\"CARDINALITY\\\">\\n              <option>[1..1]</option>\\n              <option>[1..n]</option>\\n            </select>\\n          </td>\\n          <td [formGroup]=\\\"involveFormGroup\\\">\\n            <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"DIRECTION\\\" [readonly]=\\\"readonly\\\">\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\";","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchRelationship(searchBox.value)\\\" >\\n      </div>\\n\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedRelationship\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newRelationship()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let relationship of relationshipList\\\" routerLink=\\\"/model/relationship/{{relationship.RELATIONSHIP_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(relationship)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{relationship.RELATIONSHIP_ID}}</h5>\\n          <small>version: {{relationship.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{relationship.RELATIONSHIP_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{relationship.LAST_CHANGE_BY}} @{{relationship.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"roleMeta\\\" [formGroup]=\\\"roleForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"role\\\" class=\\\"col-form-label form-control-sm\\\">Role:\\n      <span [class.ng-invalid]=\\\"roleForm.get('ROLE_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{roleForm.get('ROLE_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"role\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           name=\\\"role\\\" formControlName=\\\"ROLE_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"role-desc\\\" class=\\\"col-form-label form-control-sm\\\">Role Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"role-desc\\\" name=\\\"role-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"ROLE_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeRoleDesc()\\\"></textarea>\\n  </div>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\"><span class=\\\"fas fa-user-check\\\"></span> Relation</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered table-sm\\\">\\n        <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Action</th>\\n          <th scope=\\\"col\\\">Relation</th>\\n          <th scope=\\\"col\\\">Description</th>\\n          <th scope=\\\"col\\\">Cardinality</th>\\n        </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"RELATIONS\\\">\\n        <tr *ngFor=\\\"let relationFormGroup of relationFormArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteRelation(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"relationFormGroup\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"RELATION_ID\\\"\\n                     [readonly]=\\\"readonly || oldRelation(relationFormGroup) && relationFormGroup.valid\\\" (change)=\\\"onChangeRelationID(i)\\\"\\n                     (dblclick)=\\\"onGoToRelation(relationFormGroup.value['RELATION_ID'])\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{relationFormGroup.get('RELATION_ID').errors?.message}}\\n              </div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchRelation\\\"\\n                        (click)=\\\"onSearchHelp(relationFormGroup, i)\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"relationFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"RELATION_DESC\\\" readonly class=\\\"form-control form-control-sm dk-description\\\">\\n          </td>\\n          <td [formGroup]=\\\"relationFormGroup\\\">\\n            <select class=\\\"form-control form-control-sm\\\" formControlName=\\\"CARDINALITY\\\">\\n              <option>[0..1]</option>\\n              <option>[1..1]</option>\\n              <option>[0..n]</option>\\n              <option>[1..n]</option>\\n            </select>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\";","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchRole(searchBox.value)\\\" >\\n      </div>\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedRole\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newRole()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let role of roleList\\\" routerLink=\\\"/model/role/{{role.ROLE_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(role)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{role.ROLE_ID}}</h5>\\n          <small>version: {{role.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{role.ROLE_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{role.LAST_CHANGE_BY}} @{{role.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"searchHelpMeta\\\" [formGroup]=\\\"searchHelpForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"searchHelp\\\" class=\\\"col-form-label form-control-sm\\\">Search Help:\\n      <span [class.ng-invalid]=\\\"searchHelpForm.get('SEARCH_HELP_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{searchHelpForm.get('SEARCH_HELP_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"searchHelp\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           (change)=\\\"onChangeSearchHelpID()\\\" name=\\\"searchHelp\\\" formControlName=\\\"SEARCH_HELP_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"searchHelp-desc\\\" class=\\\"col-form-label form-control-sm\\\">Search Help Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"searchHelp-desc\\\" name=\\\"searchHelp-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"SEARCH_HELP_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeSearchHelpDesc()\\\"></textarea>\\n  </div>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">Search Help Definition</div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"card mb-2\\\">\\n        <div class=\\\"ml-4 mt-2\\\">\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"ENTITY_ID\\\">Entity and Relation:\\n            <span [class.ng-invalid]=\\\"searchHelpForm.get('ENTITY_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n                  {{searchHelpForm.get('ENTITY_ID').errors?.message}}\\n            </span>\\n          </label>\\n        </div>\\n        <div class=\\\"card-body row\\\">\\n          <div class=\\\"input-group col-lg-4 ml-1\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ENTITY_ID\\\" id=\\\"ENTITY_ID\\\" name=\\\"ENTITY_ID\\\" placeholder=\\\"Entity Type\\\"\\n                   class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeEntityID(searchHelpForm)\\\"\\n                   (dblclick)=\\\"onGoToEntity(searchHelpForm.get('ENTITY_ID').value)\\\">\\n            <div class=\\\"input-group-append\\\">\\n              <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchEntity\\\"\\n                      (click)=\\\"onEntitySearchHelp(searchHelpForm)\\\">\\n                <span class=\\\"fas fa-search\\\"></span>\\n              </button>\\n            </div>\\n          </div>\\n          <select formControlName=\\\"RELATION_ID\\\" class=\\\"form-control form-control-sm col-lg-4 ml-2 mr-3\\\"\\n                  (change)=\\\"onChangeRelationID(searchHelpForm)\\\">\\n            <option *ngFor=\\\"let relation of relationsOfEntity\\\" [value]=\\\"relation\\\">{{relation}}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"card mb-2\\\">\\n        <div class=\\\"card-body row\\\">\\n          <div class=\\\"form-group row col-lg-5 mr-2\\\">\\n            <label class=\\\"col-form-label col-form-label-sm col-4 text-right\\\" for=\\\"behaviour\\\">Behaviour:</label>\\n            <select formControlName=\\\"BEHAVIOUR\\\" class=\\\"form-control form-control-sm col-8\\\" id=\\\"behaviour\\\">\\n              <option *ngFor=\\\"let opt of behaviours\\\" [value]=\\\"opt.key\\\">{{opt.value}}</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-check col-lg-3 ml-4\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"MULTI\\\" id=\\\"Multiple\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"Multiple\\\">Multiple Values</label>\\n          </div>\\n<!--          <div class=\\\"form-check col-lg-3 ml-4\\\">-->\\n<!--            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"FUZZY_SEARCH\\\" id=\\\"fuzzySearch\\\">-->\\n<!--            <label class=\\\"form-check-label\\\" for=\\\"fuzzySearch\\\">Fuzzy Search</label>-->\\n<!--          </div>-->\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">Search Help Fields</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered dk-table\\\">\\n        <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Relation</th>\\n          <th scope=\\\"col\\\">Field Name</th>\\n          <th scope=\\\"col\\\">Field Description</th>\\n          <th scope=\\\"col\\\" title=\\\"Import the value to the filter\\\">I</th>\\n          <th scope=\\\"col\\\" title=\\\"Export the value when selected\\\">E</th>\\n          <th scope=\\\"col\\\">Alias</th>\\n          <th scope=\\\"col\\\" title=\\\"Position in the list\\\">L.P.</th>\\n          <th scope=\\\"col\\\" title=\\\"Position in the filter\\\">F.P.</th>\\n          <th scope=\\\"col\\\" title=\\\"Display on in the filter\\\">Disp</th>\\n          <th scope=\\\"col\\\" title=\\\"Default value in the filter\\\">Default</th>\\n          <th scope=\\\"col\\\">Actions</th>\\n        </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"FIELDS\\\">\\n        <tr *ngFor=\\\"let fieldForm of searchHelpFieldsFormArray.controls; let i = index\\\">\\n          <td [formGroup]=\\\"fieldForm\\\" class=\\\"dk-selection\\\">\\n            <div class=\\\"input-group\\\">\\n              <select formControlName=\\\"RELATION_ID\\\" class=\\\"form-control form-control-sm\\\"\\n                      (change)=\\\"onChangeRelationID(fieldForm)\\\">\\n                <option *ngFor=\\\"let relation of relationsOfEntity\\\" [value]=\\\"relation\\\">{{relation}}</option>\\n              </select>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\" class=\\\"dk-selection\\\">\\n            <div class=\\\"input-group\\\">\\n              <select formControlName=\\\"FIELD_NAME\\\" class=\\\"form-control form-control-sm\\\"\\n                      (change)=\\\"onChangeField(fieldForm)\\\">\\n                <option *ngFor=\\\"let attribute of relationAttributesMap[fieldForm.get('RELATION_ID').value]\\\"\\n                        [value]=\\\"attribute['ATTR_NAME']\\\">{{attribute['ATTR_NAME']}}</option>\\n              </select>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\" class=\\\"dk-description\\\">\\n            <input  type=\\\"text\\\" formControlName=\\\"FIELD_DESC\\\" class=\\\"form-control\\\" maxlength=\\\"100\\\" readonly>\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"IMPORT\\\">\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"EXPORT\\\">\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\" class=\\\"dk-string\\\">\\n            <input  type=\\\"text\\\" formControlName=\\\"IE_FIELD_NAME\\\" class=\\\"form-control form-control-sm\\\"  [readonly]=\\\"readonly\\\">\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\" class=\\\"dk-number\\\">\\n            <input type=\\\"number\\\" min=\\\"0\\\" formControlName=\\\"LIST_POSITION\\\" class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\">\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\" class=\\\"dk-number\\\">\\n            <input type=\\\"number\\\" min=\\\"0\\\" formControlName=\\\"FILTER_POSITION\\\" class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\">\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"FILTER_DISP_ONLY\\\">\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\" class=\\\"dk-string\\\">\\n            <input  type=\\\"text\\\" formControlName=\\\"DEFAULT_VALUE\\\" class=\\\"form-control form-control-sm\\\"  [readonly]=\\\"readonly\\\">\\n          </td>\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"insertField(i)\\\" title=\\\"Insert\\\">\\n              <span class=\\\"fas fa-plus\\\"></span>\\n            </button>\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteField(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\";","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchSearchHelp(searchBox.value)\\\" >\\n      </div>\\n\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedSearchHelp\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newSearchHelp()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let searchHelp of searchHelpList\\\" routerLink=\\\"/model/search-help/{{searchHelp.SEARCH_HELP_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(searchHelp)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{searchHelp.SEARCH_HELP_ID}}</h5>\\n          <small>version: {{searchHelp.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{searchHelp.SEARCH_HELP_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{searchHelp.LAST_CHANGE_BY}} @{{searchHelp.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\\n\";"]}