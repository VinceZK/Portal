{"version":3,"sources":["webpack:///src/app/model/attribute-meta/attribute-meta.component.css","webpack:///src/app/model/data-domain/data-domain-detail/data-domain-detail.component.ts","webpack:///src/app/model/attribute-meta/attribute-meta.component.ts","webpack:///src/app/model/search-help/search-help.component.css","webpack:///src/app/model/relationship/relationship-detail/relationship-detail.component.css","webpack:///src/app/model/data-element/data-element.component.css","webpack:///src/app/model/relation/relation.component.css","webpack:///src/app/model/data-element/data-element.component.html","webpack:///src/app/model/data-domain/data-domain.component.ts","webpack:///src/app/model/model.component.ts","webpack:///src/app/model/relation/relation.component.ts","webpack:///src/app/model/relation/relation-detail/relation-detail.component.html","webpack:///src/app/model/entity-type/entity-type-detail/entity-type-detail.component.css","webpack:///src/app/model/relationship/relationship-detail/relationship-detail.component.html","webpack:///src/app/model/model.module.ts","webpack:///src/app/model/role/role-detail/role-detail.component.ts","webpack:///src/app/model/model-routing.module.ts","webpack:///src/app/model/entity-type/entity-type.component.html","webpack:///src/app/model/model.component.html","webpack:///src/app/model/role/role.component.html","webpack:///src/app/model/relation/relation.component.html","webpack:///src/app/model/entity-type/entity-type-detail/entity-type-detail.component.html","webpack:///src/app/model/relationship/relationship.component.css","webpack:///src/app/model/search-help/search-help-detail/search-help-detail.component.css","webpack:///src/app/model/data-domain/data-domain.component.html","webpack:///src/app/model/attribute-meta/attribute-meta.component.html","webpack:///src/app/model/search-help/search-help-detail/search-help-detail.component.ts","webpack:///src/app/model/search-help/search-help-detail/search-help-detail.component.html","webpack:///src/app/model/relationship/relationship.component.ts","webpack:///src/app/model/relationship/relationship-detail/relationship-detail.component.ts","webpack:///src/app/model/data-element/data-element-detail/data-element-detail.component.ts","webpack:///src/app/model/role/role.component.ts","webpack:///src/app/model/role/role-detail/role-detail.component.html","webpack:///src/app/model/entity-type/entity-type.component.ts","webpack:///src/app/model/relation/relation-detail/relation-detail.component.css","webpack:///src/app/model/role/role-detail/role-detail.component.css","webpack:///src/app/model/role/role.component.css","webpack:///src/app/model/model.component.css","webpack:///src/app/model/data-domain/data-domain-detail/data-domain-detail.component.html","webpack:///src/app/model/relationship/relationship.component.html","webpack:///src/app/model/data-domain/data-domain-detail/data-domain-detail.component.css","webpack:///src/app/model/search-help/search-help.component.ts","webpack:///src/app/model/model-validators.ts","webpack:///src/app/model/data-element/data-element-detail/data-element-detail.component.css","webpack:///src/app/model/relation/relation-detail/relation-detail.component.ts","webpack:///src/app/model/data-element/data-element-detail/data-element-detail.component.html","webpack:///src/app/model/data-domain/data-domain.component.css","webpack:///src/app/model/model.service.ts","webpack:///src/app/model/entity-type/entity-type.component.css","webpack:///src/app/model/search-help/search-help.component.html","webpack:///src/app/model/entity-type/entity-type-detail/entity-type-detail.component.ts","webpack:///src/app/model/data-element/data-element.component.ts"],"names":["DataDomainDetailComponent","route","router","fb","uniqueDataDomainValidator","messageService","modelService","dialogService","entityService","readonly","isNewMode","dataTypes","changedDataDomain","relationsOfEntity","bypassProtection","isSearchListShown","enableGeneralType","enableRegExpr","enableValueRelation","enableArrayOrInterval","paramMap","pipe","params","domainID","get","dataDomain","DOMAIN_ID","DOMAIN_DESC","DATA_TYPE","DATA_LENGTH","DOMAIN_TYPE","getDataDomain","subscribe","data","clearMessages","dataDomainMeta","dataDomainForm","report","history","state","message","_generateDataDomainForm","_getRelationsOfEntity","isSearchListShown$","showSearchList","markAsPristine","onlySelf","setValue","DECIMAL","UNSIGNED","CAPITAL_ONLY","REG_EXPR","ENTITY_ID","RELATION_ID","clear","disable","group","updateOn","value","disabled","_validateDataLength","_validateDecimal","DOMAIN_VALUES","array","_setNewModeState","forEach","domainValue","domainValueFormArray","push","LOW_VALUE","LOW_VALUE_TEXT","HIGH_VALUE","_setDomainType","_updateLengthAndDecimal","setValidators","_validateDataDomainID","setAsyncValidators","validate","bind","enable","markAsDirty","clearValidators","clearAsyncValidators","updateValueAndValidity","c","trim","toString","toLowerCase","length","enabled","confirm","_switch2DisplayMode","sendDialogAnswer","dirty","reset","_switch2EditMode","updateDataDomainID","updateDataDomainDesc","formGroup","control","entitySearchHelp","OBJECT_NAME","METHOD","searchTerm","listEntityType","BEHAVIOUR","MULTI","FUZZY_SEARCH","FIELDS","FIELD_NAME","LIST_HEADER_TEXT","IMPORT","EXPORT","LIST_POSITION","FILTER_POSITION","READ_ONLY","afterExportFn","context","onChangeEntityID","searchHelpComponent","openSearchHelpModal","setDefault","domainEntityID","getRelationMetaOfEntity","entityRelations","setErrors","map","relationMeta","filter","relationId","substr","_invalidField","_validateEntityID","_validateRelationID","_generateEmptyLines","num","existingLines","i","fieldCtrl","isArray","index","currentDomainValueCtrl","at","indexFound","controls","findIndex","ctrl","valueIndex","insert","removeAt","dialogAnswer","reportMessage","invalid","saveDataDomain","_postActivityAfterSavingDataDomain","navigate","generateMessage","Array","err","add","selector","template","AttributeMetaComponent","deletedAttributes","setMessageStore","generateFormArray","formArray","parentForm","rowID","dataElementSearchHelp","listDataElement","IE_FIELD_NAME","attrIdx","onChangeDataElement","ATTR_GUID","ATTR_NAME","_createAnAttributeFormCtrl","ATTR_DESC","DATA_ELEMENT","ORDER","PRIMARY_KEY","AUTO_INCREMENT","currentAttributeFormCtrl","dataElementCtrl","_disableField","_enableField","attrFormGroup","attributeFormGroup","getDataElement","Messages","changedAttributes","changedAttribute","order","attribute","Object","keys","key","formControl","action","attributes","isDataElementAttribute","isFieldGray","addControl","lastIndex","relationID","DataDomainComponent","identityService","dataDomainList","searchTerms","term","listDataDomain","snapshot","firstChild","_newDataDomain","onSelect","find","searchDataDomain","theSelectedDataDomain$","theSelectedDataDomain","dialogAnswer$","answer","CREATE_TIME","splice","hideSearchList","setSelectedDataDomain","next","VERSION_NO","LAST_CHANGE_BY","Session","USER_ID","LAST_CHANGE_TIME","CurrentTime","ModelComponent","RelationComponent","listRelation","relationList","_newRelation","relation","searchRelation","theSelectedRelation$","theSelectedRelation","RELATION_DESC","setSelectedRelation","ModelModule","imports","declarations","RoleDetailComponent","uniqueRoleValidator","changedRole","roleID","role","ROLE_ID","ROLE_DESC","RELATIONS","getRole","roleMeta","roleForm","_generateRoleForm","relationSearchHelp","oldRelation","valid","ruleIdx","onChangeRelationID","_validateRoleID","CARDINALITY","relationFormArray","relationFormGroup","updateRoleID","updateRoleDesc","isExportedFromSH","currentRelationFormGroup","relationCtrl","getRelationDesc","_processChangedRelation","saveRole","_postActivityAfterSavingRole","changedRelations","relationControl","deletedRelation","routes","path","component","children","canDeactivate","redirectTo","pathMatch","ModelRoutingModule","forChild","exports","SearchHelpDetailComponent","uniqueSearchHelpValidator","changedSearchHelp","behaviours","relationAttributesMap","searchHelpID","searchHelp","SEARCH_HELP_ID","SEARCH_HELP_DESC","getSearchHelp","searchHelpMeta","searchHelpForm","_generateSearchHelpForm","searchHelpFieldsFormArray","field","_getAttributesOfRelation","FIELD_DESC","FILTER_DISP_ONLY","DEFAULT_VALUE","_validateSearchHelpID","updateSearchHelpID","updateSearchHelpDesc","afterChanges","_afterChangeRelationID","onChangeField","getRelationMeta","ATTRIBUTES","currAttr","mainRelationID","firstAttribute","saveSearchHelp","_postActivityAfterSavingSearchHelp","RelationshipComponent","listRelationship","relationshipList","relationshipID","_newRelationship","relationship","RELATIONSHIP_ID","searchRelationship","theSelectedRelationship$","theSelectedRelationship","RELATIONSHIP_DESC","setSelectedRelationship","RelationshipDetailComponent","uniqueRelationshipValidator","changedRelationship","VALID_PERIOD","SINGLETON","INVOLVES","getRelationship","relationshipMeta","relationshipForm","_generateRelationshipForm","roleSearchHelp","listRole","oldInvolve","onChangeRoleID","removeControl","TIME_DEPENDENT","_validateValidPeriod","involve","DIRECTION","_validateRelationshipID","setControl","parent","attrComponent","switchEditDisplay","involveFormArray","involveFormGroup","updateRelationshipID","timeDependent","validPeriodCtrl","attrFormArray","validFromFormGroup","validToFormGroup","attributeValidFromIndex","attrCtrl","deleteAttribute","attributeValidToIndex","updateRelationshipDesc","currentRoleID","attributeInstanceGUIDIndex","attributeEntityIDIndex","currentInvolveFormGroup","involveCtrl","getRoleDesc","instanceGUIDFormGroup","entityIDFormGroup","processChangedAttributes","_processChangedInvolves","saveRelationship","_postActivityAfterSavingRelationship","changedInvolves","involveControl","roleControl","deletedRole","DataElementDetailComponent","uniqueDataElementValidator","changedDataElement","searchHelpExportField","elementID","dataElement","ELEMENT_ID","ELEMENT_DESC","dataElementMeta","dataElementForm","_generateDataElementForm","_getSearchHelpMeta","dataDomainSearchHelp","onChangeDataDomain","searchHelpSearchHelp","listSearchHelp","onChangeSearchHelp","searchHelpCtrl","searchHelpFields","LABEL_TEXT","SEARCH_HELP_EXPORT_FIELD","PARAMETER_ID","USE_DOMAIN","required","_validateDataElementID","_setUseDomain","updateDataElementID","updateDataElementDesc","dataDomainCtrl","saveDataElement","_postActivityAfterSavingDataElement","RoleComponent","roleList","_newRole","searchRole","theSelectedRole$","theSelectedRole","setSelectedRole","EntityTypeComponent","entityTypeList","entityID","_newEntityType","entityType","searchEntityType","theSelectedEntityType$","theSelectedEntityType","ENTITY_DESC","setSelectedEntityType","SearchHelpComponent","searchHelpList","_newSearchHelp","searchSearchHelp","theSelectedSearchHelp$","theSelectedSearchHelp","setSelectedSearchHelp","UniqueSearchHelpValidator","getSearchHelpDesc","providedIn","UniqueDataDomainValidator","getDataDomainDesc","UniqueDataElementValidator","getDataElementDesc","UniqueRoleValidator","UniqueRelationValidator","updateRelationID","UniqueRelationshipValidator","getRelationshipDesc","UniqueEntityTypeValidator","getEntityTypeDesc","updateEntityID","RelationDetailComponent","uniqueRelationValidator","isFieldMapShown","changedRelation","_generateRelationForm","relationForm","fieldName","onChangeRightRelationID","_validateRelationId","ASSOCIATIONS","association","fieldsMapArray","FIELDS_MAPPING","fieldsMap","LEFT_FIELD","RIGHT_FIELD","ASSOCIATION_NAME","RIGHT_RELATION_ID","FOREIGN_KEY_CHECK","_appendEmptyAssociation","associationFormArray","associationFormGroup","updateRelationDesc","currentAssociationForm","currentRightRelationMeta","fieldMapFormArray","currentAssociation","currentAssocFormGroup","assocCtrl","cardinality","currentFieldMapFormGroup","fieldMapCtrl","fieldMap","checkErrs","checkAttributes","errMsg","_processChangedAssociation","saveRelation","_postActivityAfterSavingRelation","changedAssociations","errMessages","associationControl","changedAssociation","associationMeta","fieldMapArray","oldFieldMap","errMessage","ModelService","asObservable","selectedEntityTypeSource","selectedRelationSource","selectedRelationshipSource","selectedRoleSource","selectedDataElementSource","theSelectedDataElement$","selectedDataDomainSource","selectedSearchHelpSource","entityDesc","relationDesc","relationshipDesc","roleDesc","theSelectedDataElement","elementDesc","element","domainDesc","domain","searchHelpDesc","EntityTypeDetailComponent","uniqueEntityTypeValidator","changedEntityType","ROLES","getEntityMeta","entityMeta","_generateEntityTypeForm","entityTypeForm","oldRole","_validateEntityId","CONDITIONAL_ATTR","CONDITIONAL_VALUE","roleFormArray","roleFormGroup","updateEntityDesc","currentRoleFormGroup","roleCtrl","_processChangedRoles","saveEntityType","_postActivityAfterSavingEntityType","changedRoles","existRole","DataElementComponent","dataElementList","_newDataElement","dataEle","searchDataElement","setSelectedDataElement"],"mappings":"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","file":"model-model-module-es5.js","sourcesContent":["export default \".dk-table {\\n  display: block;\\n  overflow-x: auto;\\n  white-space: nowrap;\\n  border: none;\\n}\\n.dk-actions{\\n  width: 6rem;\\n}\\n.dk-description{\\n  min-width: 12rem;\\n  max-width: 20rem;\\n}\\n.dk-dataElement{\\n  min-width: 12rem;\\n  max-width: 20rem;\\n}\\n.dk-number{\\n  min-width: 4rem;\\n  max-width: 6rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwvYXR0cmlidXRlLW1ldGEvYXR0cmlidXRlLW1ldGEuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGNBQWM7RUFDZCxnQkFBZ0I7RUFDaEIsbUJBQW1CO0VBQ25CLFlBQVk7QUFDZDtBQUNBO0VBQ0UsV0FBVztBQUNiO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCO0FBQ0E7RUFDRSxlQUFlO0VBQ2YsZUFBZTtBQUNqQiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL2F0dHJpYnV0ZS1tZXRhL2F0dHJpYnV0ZS1tZXRhLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGstdGFibGUge1xuICBkaXNwbGF5OiBibG9jaztcbiAgb3ZlcmZsb3cteDogYXV0bztcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcbiAgYm9yZGVyOiBub25lO1xufVxuLmRrLWFjdGlvbnN7XG4gIHdpZHRoOiA2cmVtO1xufVxuLmRrLWRlc2NyaXB0aW9ue1xuICBtaW4td2lkdGg6IDEycmVtO1xuICBtYXgtd2lkdGg6IDIwcmVtO1xufVxuLmRrLWRhdGFFbGVtZW50e1xuICBtaW4td2lkdGg6IDEycmVtO1xuICBtYXgtd2lkdGg6IDIwcmVtO1xufVxuLmRrLW51bWJlcntcbiAgbWluLXdpZHRoOiA0cmVtO1xuICBtYXgtd2lkdGg6IDZyZW07XG59XG4iXX0= */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {UniqueDataDomainValidator} from '../../model-validators';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {DataDomainMeta, SearchHelpComponent, EntityService, SearchHelp, SearchHelpMethod} from 'jor-angular';\n\n@Component({\n  selector: 'app-data-domain-detail',\n  templateUrl: './data-domain-detail.component.html',\n  styleUrls: ['./data-domain-detail.component.css']\n})\nexport class DataDomainDetailComponent implements OnInit {\n\n  dataDomainMeta: DataDomainMeta;\n  readonly = true;\n  isNewMode = false;\n  dataDomainForm: FormGroup;\n  dataTypes = [];\n  changedDataDomain = {};\n  relationsOfEntity = [];\n  bypassProtection = false;\n  isSearchListShown = true;\n  enableGeneralType = false;\n  enableRegExpr = false;\n  enableValueRelation = false;\n  enableArrayOrInterval = false;\n  entitySearchHelp: SearchHelp;\n\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent !: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueDataDomainValidator: UniqueDataDomainValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.dataTypes = this.modelService.dataTypes;\n  }\n\n  get domainValueFormArray() {\n    return this.dataDomainForm.get('DOMAIN_VALUES') as FormArray;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const domainID = params.get('domainID');\n        if (domainID === 'new') {\n          const dataDomain = new DataDomainMeta();\n          dataDomain.DOMAIN_ID = '';\n          dataDomain.DOMAIN_DESC = '';\n          dataDomain.DATA_TYPE = 1; // Char by default\n          dataDomain.DATA_LENGTH = 10;\n          dataDomain.DOMAIN_TYPE = 0;\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return of(dataDomain);\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return this.entityService.getDataDomain(domainID);\n        }\n      })\n    ).subscribe(data => {\n      if ( 'msgName' in data) {\n        this.messageService.clearMessages();\n        this.dataDomainMeta = null;\n        this.dataDomainForm = null;\n        this.messageService.report(<Message>data);\n      } else {\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.dataDomainMeta = <DataDomainMeta>data;\n        this._generateDataDomainForm();\n        this._getRelationsOfEntity( this.dataDomainForm, false);\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  _generateDataDomainForm(): void {\n    if (this.dataDomainForm) {\n      this.dataDomainForm.markAsPristine({onlySelf: false});\n      this.dataDomainForm.get('DOMAIN_ID').setValue(this.dataDomainMeta.DOMAIN_ID);\n      this.dataDomainForm.get('DOMAIN_DESC').setValue(this.dataDomainMeta.DOMAIN_DESC);\n      this.dataDomainForm.get('DATA_TYPE').setValue(this.dataDomainMeta.DATA_TYPE);\n      this.dataDomainForm.get('DATA_LENGTH').setValue(this.dataDomainMeta.DATA_LENGTH);\n      this.dataDomainForm.get('DECIMAL').setValue(this.dataDomainMeta.DECIMAL);\n      this.dataDomainForm.get('DOMAIN_TYPE').setValue(this.dataDomainMeta.DOMAIN_TYPE);\n      this.dataDomainForm.get('UNSIGNED').setValue(this.dataDomainMeta.UNSIGNED);\n      this.dataDomainForm.get('CAPITAL_ONLY').setValue(this.dataDomainMeta.CAPITAL_ONLY);\n      this.dataDomainForm.get('REG_EXPR').setValue(this.dataDomainMeta.REG_EXPR);\n      this.dataDomainForm.get('ENTITY_ID').setValue(this.dataDomainMeta.ENTITY_ID);\n      this.dataDomainForm.get('RELATION_ID').setValue(this.dataDomainMeta.RELATION_ID);\n      (<FormArray>this.dataDomainForm.get('DOMAIN_VALUES')).clear();\n      if (this.readonly) {\n        this.dataDomainForm.get('DOMAIN_TYPE').disable();\n        this.dataDomainForm.get('DATA_TYPE').disable();\n      }\n    } else {\n      this.dataDomainForm = this.fb.group({\n        DOMAIN_ID: [this.dataDomainMeta.DOMAIN_ID, {updateOn: 'blur'}],\n        DOMAIN_DESC: [this.dataDomainMeta.DOMAIN_DESC],\n        DATA_TYPE: [{value: this.dataDomainMeta.DATA_TYPE, disabled: this.readonly}],\n        DATA_LENGTH: [this.dataDomainMeta.DATA_LENGTH, [this._validateDataLength]],\n        DECIMAL: [this.dataDomainMeta.DECIMAL, [this._validateDecimal]],\n        DOMAIN_TYPE: [{value: this.dataDomainMeta.DOMAIN_TYPE, disabled: this.readonly}],\n        UNSIGNED: [{value: this.dataDomainMeta.UNSIGNED, disabled: this.readonly}],\n        CAPITAL_ONLY: [{value: this.dataDomainMeta.CAPITAL_ONLY, disabled: this.readonly}],\n        REG_EXPR: [this.dataDomainMeta.REG_EXPR],\n        ENTITY_ID: [this.dataDomainMeta.ENTITY_ID],\n        RELATION_ID: [{value: this.dataDomainMeta.RELATION_ID, disabled: this.readonly}],\n        DOMAIN_VALUES: this.fb.array([])\n      });\n    }\n    this._setNewModeState();\n    if (this.dataDomainMeta.DOMAIN_TYPE >= 3 && this.dataDomainMeta.DOMAIN_VALUES) { // Value Array/Interval\n      this.dataDomainMeta.DOMAIN_VALUES.forEach( domainValue => {\n        this.domainValueFormArray.push(\n          this.fb.group({\n            LOW_VALUE: [domainValue.LOW_VALUE],\n            LOW_VALUE_TEXT: [domainValue.LOW_VALUE_TEXT],\n            HIGH_VALUE: [domainValue.HIGH_VALUE]\n          })\n        );\n      });\n    }\n    this._setDomainType(this.dataDomainForm, false);\n    this._updateLengthAndDecimal(this.dataDomainForm, false);\n  }\n\n  _setNewModeState() {\n    if (this.isNewMode) {\n      this.dataDomainForm.get('DOMAIN_ID').setValidators(this._validateDataDomainID);\n      this.dataDomainForm.get('DOMAIN_ID').setAsyncValidators(\n        this.uniqueDataDomainValidator.validate.bind(this.uniqueDataDomainValidator));\n      this.dataDomainForm.get('DATA_TYPE').enable();\n      this.dataDomainForm.get('DOMAIN_TYPE').enable();\n      this.dataDomainForm.get('DATA_TYPE').markAsDirty(); // Default value mark as dirty\n      this.dataDomainForm.get('DATA_LENGTH').markAsDirty(); // Default value mark as dirty\n      this.dataDomainForm.get('DOMAIN_TYPE').markAsDirty(); // Default value mark as dirty\n    } else {\n      this.dataDomainForm.get('DOMAIN_ID').clearValidators();\n      this.dataDomainForm.get('DOMAIN_ID').clearAsyncValidators();\n      this.dataDomainForm.get('DOMAIN_ID').updateValueAndValidity();\n    }\n  }\n\n  _validateDataDomainID(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Data Domain ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().length > 32) {\n      return {message: 'Data Domain ID must have length less than 32!'};\n    }\n    return null;\n  }\n\n  _validateDataLength(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give a Length'};\n    }\n    return null;\n  }\n\n  _validateDecimal(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give a decimal place'};\n    }\n    if (c.value < 1 || c.value > 37) {\n      return {message: 'Decimal place can only between 1 and 37'};\n    }\n    return null;\n  }\n  _validateEntityID(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give an entity'};\n    }\n    return null;\n  }\n  _validateRelationID(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give a relation'};\n    }\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Data Domain?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.dataDomainMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.dataDomainForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateDataDomainForm();\n            this.dataDomainForm.reset(this.dataDomainForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this._switch2EditMode();\n    }\n\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this.dataDomainForm.get('DOMAIN_TYPE').disable();\n    this.dataDomainForm.get('DATA_TYPE').disable();\n    this.dataDomainForm.get('UNSIGNED').disable();\n    this.dataDomainForm.get('CAPITAL_ONLY').disable();\n    this.dataDomainForm.get('RELATION_ID').disable();\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n    this.dataDomainForm.get('DOMAIN_TYPE').enable();\n    this.dataDomainForm.get('DATA_TYPE').enable();\n    this._setDomainType(this.dataDomainForm, false);\n    this._updateLengthAndDecimal(this.dataDomainForm, false);\n  }\n\n  onChangeDataDomainID(): void {\n    this.modelService.updateDataDomainID(this.dataDomainForm.get('DOMAIN_ID').value);\n  }\n\n  onChangeDataDomainDesc(): void {\n    this.modelService.updateDataDomainDesc(this.dataDomainForm.get('DOMAIN_DESC').value);\n  }\n\n  onChangeDomainType(formGroup: AbstractControl): void {\n    this._setDomainType(formGroup, true);\n  }\n\n  onEntitySearchHelp(control: AbstractControl): void {\n    if (!this.entitySearchHelp) {\n      this.entitySearchHelp = new SearchHelp();\n      this.entitySearchHelp.OBJECT_NAME = 'Entity ID';\n      this.entitySearchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listEntityType(searchTerm);\n      }(this.entityService);\n      this.entitySearchHelp.BEHAVIOUR = 'M';\n      this.entitySearchHelp.MULTI = false;\n      this.entitySearchHelp.FUZZY_SEARCH = true;\n      this.entitySearchHelp.FIELDS = [\n        {FIELD_NAME: 'ENTITY_ID', LIST_HEADER_TEXT: 'Entity', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n        {FIELD_NAME: 'ENTITY_DESC', LIST_HEADER_TEXT: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.entitySearchHelp.READ_ONLY = this.readonly || this.dataDomainForm.get('DOMAIN_TYPE').value !== 2;\n    }\n    const afterExportFn = function (context: any) {\n      return () => context.onChangeEntityID(control);\n    }(this).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.entitySearchHelp, control, afterExportFn);\n  }\n\n  onChangeEntityID(formGroup: AbstractControl): void {\n    this._getRelationsOfEntity(formGroup, true);\n  }\n\n  _getRelationsOfEntity(dataDomainForm: AbstractControl, setDefault: boolean): void {\n    const domainEntityID = dataDomainForm.get('ENTITY_ID').value;\n    if (!domainEntityID) { return; }\n    this.entityService.getRelationMetaOfEntity(domainEntityID)\n      .subscribe(entityRelations => {\n        if (entityRelations[0]['msgType'] === 'E') {\n          dataDomainForm.get('ENTITY_ID').setErrors({message: entityRelations[0]['msgShortText']});\n        } else {\n          this.relationsOfEntity = entityRelations.map(relationMeta => relationMeta.RELATION_ID )\n            .filter(relationId => relationId.substr(0, 2) !== 'rs' );\n          if (setDefault) {\n            dataDomainForm.get('RELATION_ID').setValue(this.relationsOfEntity[0]);\n            dataDomainForm.get('RELATION_ID').markAsDirty();\n          }\n        }\n      });\n  }\n\n  _setDomainType(formGroup: AbstractControl, markAsDirty: boolean): void {\n    if (markAsDirty) { formGroup.get('DOMAIN_TYPE').markAsDirty(); }\n    switch (+formGroup.get('DOMAIN_TYPE').value) {\n      case 0: // General Type\n        if (+formGroup.get('DATA_TYPE').value === 2) {\n          if (!this.readonly) { formGroup.get('UNSIGNED').enable(); }\n          this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        } else if (+formGroup.get('DATA_TYPE').value === 1) {\n          if (!this.readonly) { formGroup.get('CAPITAL_ONLY').enable(); }\n          this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        }\n        this._invalidField(formGroup.get('REG_EXPR'), markAsDirty);\n        this._invalidField(formGroup.get('ENTITY_ID'), markAsDirty);\n        this._invalidField(formGroup.get('RELATION_ID'), markAsDirty);\n        this._invalidField(formGroup.get('DOMAIN_VALUES'), markAsDirty, true);\n        break;\n      case 1: // Regular Expression\n        // formGroup.get('REG_EXPR').setValidators(this._validateRegExpr);\n        if (!this.readonly) { formGroup.get('REG_EXPR').enable(); }\n        this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        this._invalidField(formGroup.get('ENTITY_ID'), markAsDirty);\n        this._invalidField(formGroup.get('RELATION_ID'), markAsDirty);\n        this._invalidField(formGroup.get('DOMAIN_VALUES'), markAsDirty, true);\n        break;\n      case 2: // Value Relation\n        if (!this.readonly) {\n          formGroup.get('ENTITY_ID').enable();\n          formGroup.get('RELATION_ID').enable();\n          formGroup.get('ENTITY_ID').setValidators(this._validateEntityID);\n          formGroup.get('RELATION_ID').setValidators(this._validateRelationID);\n        }\n        this._invalidField(formGroup.get('REG_EXPR'), markAsDirty);\n        this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        this._invalidField(formGroup.get('DOMAIN_VALUES'), markAsDirty, true);\n        break;\n      case 3: // Value Array\n        if (!this.readonly) { formGroup.get('DOMAIN_VALUES').enable(); }\n        this._invalidField(formGroup.get('ENTITY_ID'), markAsDirty);\n        this._invalidField(formGroup.get('RELATION_ID'), markAsDirty);\n        this._invalidField(formGroup.get('REG_EXPR'), markAsDirty);\n        this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        this._generateEmptyLines(5);\n        break;\n      case 4: // Value Interval\n        if (!this.readonly) { formGroup.get('DOMAIN_VALUES').enable(); }\n        this._invalidField(formGroup.get('ENTITY_ID'), markAsDirty);\n        this._invalidField(formGroup.get('RELATION_ID'), markAsDirty);\n        this._invalidField(formGroup.get('REG_EXPR'), markAsDirty);\n        this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        this._generateEmptyLines(5);\n        break;\n      default:\n    }\n  }\n\n  _generateEmptyLines(num: number): void {\n    const existingLines = this.domainValueFormArray.length;\n    for (let i = 0; i < num - existingLines; i++) {\n      this.domainValueFormArray.push(\n        this.fb.group({\n          LOW_VALUE: [''],\n          LOW_VALUE_TEXT: [''],\n          HIGH_VALUE: ['']\n        }));\n    }\n  }\n\n  onChangeDataType(formGroup: AbstractControl): void {\n    switch (+formGroup.get('DATA_TYPE').value) {\n      case 1: // char\n        formGroup.get('DATA_LENGTH').setValue(10);\n        formGroup.get('DECIMAL').setValue(null);\n        break;\n      case 4: // decimal\n        formGroup.get('DATA_LENGTH').setValue(23);\n        formGroup.get('DECIMAL').setValue(2);\n        break;\n      default:\n        formGroup.get('DATA_LENGTH').setValue(null);\n        formGroup.get('DECIMAL').setValue(null);\n    }\n    formGroup.get('DATA_LENGTH').markAsDirty();\n    formGroup.get('DECIMAL').markAsDirty();\n    this._updateLengthAndDecimal(formGroup, true);\n  }\n\n  _updateLengthAndDecimal(formGroup: AbstractControl, markAsDirty: boolean): void {\n    switch (+formGroup.get('DATA_TYPE').value) {\n      case 1: // char\n        if (!this.readonly) {\n          formGroup.get('DATA_LENGTH').enable();\n          formGroup.get('DATA_LENGTH').setValidators(this._validateDataLength);\n        }\n        this._invalidField(formGroup.get('DECIMAL'));\n        if (+formGroup.get('DOMAIN_TYPE').value === 0) {\n          if (!this.readonly) { formGroup.get('CAPITAL_ONLY').enable(); }\n          this._invalidField(formGroup.get('UNSIGNED'));\n        }\n        this.enableGeneralType = true;\n        this.enableRegExpr = true;\n        this.enableValueRelation = true;\n        this.enableArrayOrInterval = true;\n        break;\n      case 2: // Integer\n        formGroup.get('DATA_LENGTH').disable();\n        this._invalidField(formGroup.get('DECIMAL'), markAsDirty);\n        if (+formGroup.get('DOMAIN_TYPE').value === 0) {\n          if (!this.readonly) { formGroup.get('UNSIGNED').enable(); }\n          this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        } else if (+formGroup.get('DOMAIN_TYPE').value === 1 || +formGroup.get('DOMAIN_TYPE').value === 2) {\n          if (!this.readonly) { formGroup.get('DOMAIN_TYPE').setValue(0); }\n          this._setDomainType(formGroup, markAsDirty);\n        }\n        this.enableGeneralType = true;\n        this.enableRegExpr = false;\n        this.enableValueRelation = false;\n        this.enableArrayOrInterval = true;\n        break;\n      case 4: // decimal\n        if (!this.readonly) {\n          formGroup.get('DATA_LENGTH').enable();\n          formGroup.get('DATA_LENGTH').setValidators(this._validateDataLength);\n          formGroup.get('DECIMAL').enable();\n          formGroup.get('DECIMAL').setValidators(this._validateDecimal);\n          formGroup.get('UNSIGNED').enable();\n        }\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        formGroup.get('DOMAIN_TYPE').setValue(0);\n        this._setDomainType(formGroup, markAsDirty);\n        this.enableGeneralType = true;\n        this.enableRegExpr = false;\n        this.enableValueRelation = false;\n        this.enableArrayOrInterval = false;\n        break;\n      case 5: // string\n        this._invalidField(formGroup.get('DATA_LENGTH'), markAsDirty);\n        this._invalidField(formGroup.get('DECIMAL'), markAsDirty);\n        formGroup.get('DOMAIN_TYPE').setValue(1);\n        this._setDomainType(formGroup, markAsDirty);\n        this.enableGeneralType = false;\n        this.enableRegExpr = true;\n        this.enableValueRelation = false;\n        this.enableArrayOrInterval = false;\n        break;\n      default:\n        this._invalidField(formGroup.get('DATA_LENGTH'), markAsDirty);\n        this._invalidField(formGroup.get('DECIMAL'), markAsDirty);\n        this._invalidField(formGroup.get('CAPITAL_ONLY'), markAsDirty);\n        this._invalidField(formGroup.get('UNSIGNED'), markAsDirty);\n        formGroup.get('DOMAIN_TYPE').setValue(0);\n        this._setDomainType(formGroup, markAsDirty);\n        this.enableGeneralType = true;\n        this.enableRegExpr = false;\n        this.enableValueRelation = false;\n        this.enableArrayOrInterval = false;\n    }\n  }\n\n  _invalidField(fieldCtrl: AbstractControl, markAsDirty: boolean = false, isArray: boolean = false): void {\n    fieldCtrl.clearValidators();\n    fieldCtrl.clearAsyncValidators();\n    fieldCtrl.disable();\n    if (markAsDirty) {\n      isArray ? (<FormArray>fieldCtrl).clear() : fieldCtrl.setValue(null);\n      fieldCtrl.markAsDirty();\n    }\n  }\n\n  onChangeDomainValue(index: number): void {\n    const currentDomainValueCtrl = this.domainValueFormArray.at(index);\n    if (!currentDomainValueCtrl.get('LOW_VALUE').value) { return; }\n    const indexFound = this.domainValueFormArray.controls.findIndex(\n      (ctrl, valueIndex) => index !== valueIndex && ctrl.value.LOW_VALUE === currentDomainValueCtrl.value.LOW_VALUE);\n    if (indexFound > -1) {\n      currentDomainValueCtrl.get('LOW_VALUE').setErrors({message: 'Value is duplicated!'});\n    } else {\n      currentDomainValueCtrl.get('LOW_VALUE').setErrors(null);\n    }\n\n    if (this.dataDomainForm.get('DOMAIN_TYPE').value === 4 && currentDomainValueCtrl.get('LOW_VALUE').value) {\n      if (!currentDomainValueCtrl.value.HIGH_VALUE ||\n        currentDomainValueCtrl.value.HIGH_VALUE <=  currentDomainValueCtrl.value.LOW_VALUE ) {\n        currentDomainValueCtrl.get('HIGH_VALUE').setErrors({message: 'High value must be greater!'});\n      } else {\n        currentDomainValueCtrl.get('HIGH_VALUE').setErrors(null);\n      }\n    }\n  }\n\n  insertDomainValue(index: number): void {\n    this.domainValueFormArray.insert(index, this.fb.group({\n        LOW_VALUE: [''],\n        LOW_VALUE_TEXT: [''],\n        HIGH_VALUE: ['']\n      }));\n  }\n\n  deleteDomainValue(index: number): void {\n    this.domainValueFormArray.removeAt(index);\n    this.domainValueFormArray.markAsDirty();\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.dataDomainForm && this.dataDomainForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.dataDomainForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (this.dataDomainForm.invalid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (+this.dataDomainForm.get('DOMAIN_TYPE').value >= 3 && this.domainValueFormArray.length === 0 ) {\n      return this.messageService.reportMessage('MODEL', 'MINIMUM_ONE_DOMAIN_VALUE', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedDataDomain['action'] = 'add';\n      this.changedDataDomain['DOMAIN_ID'] = this.dataDomainForm.get('DOMAIN_ID').value;\n    } else {\n      this.changedDataDomain['action'] = 'update';\n      this.changedDataDomain['DOMAIN_ID'] = this.dataDomainMeta.DOMAIN_ID;\n    }\n    if (this.dataDomainForm.get('DOMAIN_DESC').dirty) {\n      this.changedDataDomain['DOMAIN_DESC'] = this.dataDomainForm.get('DOMAIN_DESC').value;\n    }\n    if (this.dataDomainForm.get('DATA_TYPE').dirty) {\n      this.changedDataDomain['DATA_TYPE'] = this.dataDomainForm.get('DATA_TYPE').value;\n    }\n    if (this.dataDomainForm.get('DATA_LENGTH').dirty) {\n      this.changedDataDomain['DATA_LENGTH'] = this.dataDomainForm.get('DATA_LENGTH').value;\n    }\n    if (this.dataDomainForm.get('DECIMAL').dirty) {\n      this.changedDataDomain['DECIMAL'] = this.dataDomainForm.get('DECIMAL').value;\n    }\n    if (this.dataDomainForm.get('DOMAIN_TYPE').dirty) {\n      this.changedDataDomain['DOMAIN_TYPE'] = this.dataDomainForm.get('DOMAIN_TYPE').value;\n    }\n    if (this.dataDomainForm.get('UNSIGNED').dirty) {\n      this.changedDataDomain['UNSIGNED'] = this.dataDomainForm.get('UNSIGNED').value;\n    }\n    if (this.dataDomainForm.get('CAPITAL_ONLY').dirty) {\n      this.changedDataDomain['CAPITAL_ONLY'] = this.dataDomainForm.get('CAPITAL_ONLY').value;\n    }\n    if (this.dataDomainForm.get('REG_EXPR').dirty) {\n      this.changedDataDomain['REG_EXPR'] = this.dataDomainForm.get('REG_EXPR').value;\n    }\n    if (this.dataDomainForm.get('ENTITY_ID').dirty) {\n      this.changedDataDomain['ENTITY_ID'] = this.dataDomainForm.get('ENTITY_ID').value;\n    }\n    if (this.dataDomainForm.get('RELATION_ID').dirty) {\n      this.changedDataDomain['RELATION_ID'] = this.dataDomainForm.get('RELATION_ID').value;\n    }\n    if (this.dataDomainForm.get('DOMAIN_VALUES').dirty) {\n      this.changedDataDomain['DOMAIN_VALUES'] = [];\n      this.dataDomainForm.get('DOMAIN_VALUES').value.forEach( domainValue => {\n        if (domainValue.LOW_VALUE) {\n          this.changedDataDomain['DOMAIN_VALUES'].push(domainValue);\n        }\n      });\n    }\n    this.entityService.saveDataDomain(this.changedDataDomain)\n      .subscribe(data => this._postActivityAfterSavingDataDomain(data));\n  }\n\n  _postActivityAfterSavingDataDomain(data: any) {\n    this.changedDataDomain = {};\n    if (data['DOMAIN_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/data-domain/' + data['DOMAIN_ID']],\n          {state: {message: this.messageService.generateMessage(\n                'MODEL', 'DATA_DOMAIN_SAVED', 'S', data['DOMAIN_ID'])}});\n      } else {\n        this._switch2DisplayMode();\n        this.dataDomainMeta = data;\n        this._generateDataDomainForm();\n        this.messageService.reportMessage('MODEL', 'DATA_DOMAIN_SAVED', 'S', data['DOMAIN_ID']);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n\n\n","import {Component, Input, OnChanges, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormArray, FormBuilder, FormGroup} from '@angular/forms';\nimport {Attribute} from 'jor-angular';\nimport {ModelService} from '../model.service';\nimport {Observable} from 'rxjs';\nimport {SearchHelpMethod, SearchHelp, EntityService, SearchHelpComponent} from 'jor-angular';\nimport {MessageService, Message} from 'ui-message-angular';\nimport {msgStore} from '../../msgStore';\n\n@Component({\n  selector: 'app-attribute-meta',\n  templateUrl: './attribute-meta.component.html',\n  styleUrls: ['./attribute-meta.component.css']\n})\nexport class AttributeMetaComponent implements OnInit, OnChanges {\n  dataTypes = [];\n  formArray: FormArray;\n  deletedAttributes = [];\n  dataElementSearchHelp: SearchHelp;\n\n  constructor(private fb: FormBuilder,\n              private entityService: EntityService,\n              private messageService: MessageService,\n              private modelService: ModelService) {\n    this.dataTypes = modelService.dataTypes;\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  @Input() parentForm: FormGroup;\n  @Input() attributes: Attribute[];\n  @Input() readonly: boolean;\n  @Input() relationID: string;\n  @Input() isNewMode: boolean;\n\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent !: SearchHelpComponent;\n\n  ngOnInit() {\n  }\n\n  ngOnChanges() {\n    this.generateFormArray();\n    this.formArray = this.parentForm.get('ATTRIBUTES') as FormArray;\n  }\n\n  onSearchHelp(control: AbstractControl, rowID: number): void {\n    if (!this.dataElementSearchHelp) {\n      this.dataElementSearchHelp = new SearchHelp();\n      this.dataElementSearchHelp.OBJECT_NAME = 'Data Element';\n      this.dataElementSearchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listDataElement(searchTerm);\n      }(this.entityService);\n      this.dataElementSearchHelp.BEHAVIOUR = 'M';\n      this.dataElementSearchHelp.MULTI = false;\n      this.dataElementSearchHelp.FUZZY_SEARCH = true;\n      this.dataElementSearchHelp.FIELDS = [\n        {FIELD_NAME: 'ELEMENT_ID', LIST_HEADER_TEXT: 'Element ID', IE_FIELD_NAME: 'DATA_ELEMENT',\n          IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n        {FIELD_NAME: 'ELEMENT_DESC', LIST_HEADER_TEXT: 'Element Description', IE_FIELD_NAME: 'ATTR_DESC',\n          IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.dataElementSearchHelp.READ_ONLY = this.readonly || control.get('DATA_ELEMENT').disabled;\n    }\n    const afterExportFn = function (context: any, attrIdx: number) {\n      return () => context.onChangeDataElement(attrIdx);\n    }(this, rowID).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.dataElementSearchHelp, control, afterExportFn);\n  }\n\n  deleteAttribute(index: number): void {\n    if (index !== this.formArray.length - 1) {\n      this.deletedAttributes.push({\n        ATTR_GUID: this.formArray.at(index).get('ATTR_GUID').value,\n        ATTR_NAME: this.formArray.at(index).get('ATTR_NAME').value\n      });\n      this.formArray.removeAt(index);\n      this.formArray.markAsDirty();\n    }\n  }\n\n  insertAttribute(index: number): void {\n    this.formArray.insert(index, this._createAnAttributeFormCtrl());\n  }\n\n  _createAnAttributeFormCtrl(): FormGroup {\n    return this.fb.group({\n      ATTR_GUID: [''],\n      RELATION_ID: [''],\n      ATTR_NAME: [''],\n      ATTR_DESC: [{value: '', disabled: true}],\n      DATA_ELEMENT: [{value: '', disabled: false}],\n      DATA_TYPE: [{value: '', disabled: true}],\n      DATA_LENGTH: [{value: '', disabled: true}],\n      DECIMAL: [null],\n      ORDER: [null],\n      PRIMARY_KEY: [false],\n      AUTO_INCREMENT: [{value: false, disabled: true}]\n    });\n  }\n\n  switchBtwDEAndDT(index: number): void {\n    const currentAttributeFormCtrl = this.formArray.at(index);\n    const dataElementCtrl = currentAttributeFormCtrl.get('DATA_ELEMENT');\n    if (dataElementCtrl.enabled) {\n      this._disableField(dataElementCtrl);\n      this._enableField(currentAttributeFormCtrl.get('ATTR_DESC'));\n      this._enableField(currentAttributeFormCtrl.get('DATA_TYPE'));\n      this._enableField(currentAttributeFormCtrl.get('DATA_LENGTH'));\n      this._enableField(currentAttributeFormCtrl.get('DECIMAL'));\n      currentAttributeFormCtrl.get('DATA_TYPE').setValue(1);\n      currentAttributeFormCtrl.get('DATA_LENGTH').setValue(10);\n      this._disableField(currentAttributeFormCtrl.get('AUTO_INCREMENT'));\n    } else {\n      dataElementCtrl.enable();\n      this._enableField(dataElementCtrl);\n      this._disableField(currentAttributeFormCtrl.get('ATTR_DESC'));\n      this._disableField(currentAttributeFormCtrl.get('DATA_TYPE'));\n      this._disableField(currentAttributeFormCtrl.get('DATA_LENGTH'));\n      this._disableField(currentAttributeFormCtrl.get('DECIMAL'));\n      this._disableField(currentAttributeFormCtrl.get('AUTO_INCREMENT'));\n    }\n  }\n\n  _enableField(ctrl: AbstractControl) {\n    ctrl.setValue(null);\n    ctrl.enable();\n  }\n\n  _disableField(ctrl: AbstractControl) {\n    if (ctrl.value !== null && ctrl.value !== '') {\n      ctrl.setValue(null);\n      ctrl.markAsDirty();\n    }\n    ctrl.disable();\n  }\n\n  onChangeDataType(attrFormGroup: AbstractControl): void {\n    switch (attrFormGroup.get('DATA_TYPE').value) {\n      case '1': // char\n        attrFormGroup.get('DATA_LENGTH').setValue(10);\n        attrFormGroup.get('DECIMAL').setValue(null);\n        this._disableField(attrFormGroup.get('AUTO_INCREMENT'));\n        break;\n      case '2': // Integer\n        attrFormGroup.get('DATA_LENGTH').setValue(null);\n        attrFormGroup.get('DECIMAL').setValue(null);\n        this._enableField(attrFormGroup.get('AUTO_INCREMENT'));\n        break;\n      case '4': // decimal\n        attrFormGroup.get('DATA_LENGTH').setValue(23);\n        attrFormGroup.get('DECIMAL').setValue(2);\n        this._disableField(attrFormGroup.get('AUTO_INCREMENT'));\n        break;\n      default:\n        attrFormGroup.get('DATA_LENGTH').setValue(null);\n        attrFormGroup.get('DECIMAL').setValue(null);\n        this._disableField(attrFormGroup.get('AUTO_INCREMENT'));\n    }\n    attrFormGroup.get('DATA_LENGTH').markAsDirty();\n  }\n\n  onChangeAttributeName(index: number): void {\n    if (index === this.formArray.length - 1 && !this.formArray.controls[index].value.ATTR_GUID) {\n      // Only work for the last New line\n      this.formArray.push(this._createAnAttributeFormCtrl());\n    }\n  }\n\n  onChangeDataElement(index: number): void {\n    const attributeFormGroup = this.formArray.at(index);\n    const dataElementCtrl = attributeFormGroup.get('DATA_ELEMENT');\n    this.entityService.getDataElement(dataElementCtrl.value).subscribe(data => {\n      if (data['msgCat']) {\n        dataElementCtrl.setErrors({message: data['msgShortText']});\n      } else {\n        attributeFormGroup.get('ATTR_DESC').setValue(data['ELEMENT_DESC']);\n        attributeFormGroup.get('DATA_TYPE').setValue(data['DATA_TYPE']);\n        attributeFormGroup.get('DATA_LENGTH').setValue(data['DATA_LENGTH']);\n        attributeFormGroup.get('DECIMAL').setValue(data['DECIMAL']);\n        if (attributeFormGroup.get('DATA_TYPE').value === 2) {\n          this._enableField(attributeFormGroup.get('AUTO_INCREMENT'));\n        } else {\n          this._disableField(attributeFormGroup.get('AUTO_INCREMENT'));\n        }\n      }\n    });\n  }\n\n  checkAttributes(): Message[] {\n    const Messages: Message[] = [];\n    if ( this.formArray.controls.findIndex( control => control.get('PRIMARY_KEY').value ) === -1 ) {\n      Messages.push(this.messageService.generateMessage(\n        'MODEL', 'RELATION_PRIMARY_KEY_MISSING', 'E'));\n    }\n    return Messages;\n  }\n\n  processChangedAttributes(): any[] {\n    const changedAttributes = [];\n    let changedAttribute;\n    let order = 0;\n    if (this.formArray.dirty) {\n      this.formArray.controls.forEach((attribute, index) => {\n        if (attribute.get('ATTR_NAME').value.trim() === '') { return; }\n        order = index + 1;\n        if (order !== attribute.get('ORDER').value) {\n          attribute.get('ORDER').setValue(order);\n          attribute.get('ORDER').markAsDirty();\n        }\n        if (attribute.dirty) {\n          changedAttribute = {};\n          if (attribute.get('ATTR_GUID').value) { // Update Case\n            changedAttribute['action'] = 'update';\n            changedAttribute['ATTR_GUID'] = attribute.get('ATTR_GUID').value;\n            const attrFormGroup = attribute as FormGroup;\n            Object.keys(attrFormGroup.controls).forEach(key => {\n              const formControl = attrFormGroup.controls[key];\n              if (formControl.dirty) {\n                changedAttribute[key] = formControl.value;\n              }\n            });\n          } else { // New Add Case\n            changedAttribute['action'] = 'add';\n            const attrFormGroup = attribute as FormGroup;\n            Object.keys(attrFormGroup.controls).forEach(key => {\n              const formControl = attrFormGroup.controls[key];\n              changedAttribute[key] = formControl.value;\n            });\n          }\n        } else {\n          changedAttribute = null;\n        }\n        if (changedAttribute) {\n          changedAttributes.push(changedAttribute);\n        }\n      });\n\n      // Deletion Case\n      this.deletedAttributes.forEach(attribute => {\n        changedAttribute = {action: 'delete', ATTR_GUID: attribute.ATTR_GUID, ATTR_NAME: attribute.ATTR_NAME};\n        changedAttributes.push(changedAttribute);\n      });\n\n      return changedAttributes;\n    }\n  }\n\n  generateFormArray(): void {\n    const formArray = [];\n    if (this.attributes) {\n      this.attributes.forEach( attribute => {\n        const isDataElementAttribute = !!attribute.DATA_ELEMENT;\n        formArray.push(this.fb.group({\n          ATTR_GUID: [attribute.ATTR_GUID],\n          RELATION_ID: [attribute.RELATION_ID],\n          ATTR_NAME: [attribute.ATTR_NAME],\n          ATTR_DESC: [{value: attribute.ATTR_DESC, disabled: isDataElementAttribute}],\n          DATA_ELEMENT: [{value: attribute.DATA_ELEMENT, disabled: !isDataElementAttribute}],\n          DATA_TYPE: [{value: attribute.DATA_TYPE, disabled: this.readonly || this.isFieldGray(attribute) || isDataElementAttribute}],\n          DATA_LENGTH: [{value: attribute.DATA_LENGTH, disabled: isDataElementAttribute}],\n          DECIMAL: [{value: attribute.DECIMAL, disabled: isDataElementAttribute}],\n          ORDER: [attribute.ORDER],\n          PRIMARY_KEY: [{value: attribute.PRIMARY_KEY, disabled: this.readonly || this.isFieldGray(attribute)}],\n          AUTO_INCREMENT: [{\n            value: attribute.AUTO_INCREMENT,\n            disabled: this.readonly || this.isFieldGray(attribute) || attribute.DATA_TYPE !== 2}]\n        }));\n      });\n    }\n    if (this.isNewMode) {\n      formArray.push(this._createAnAttributeFormCtrl());\n    }\n    this.parentForm.addControl('ATTRIBUTES', new FormArray(formArray));\n  }\n\n  switchEditDisplay(readonly: boolean) {\n    if (!readonly) { // To Edit Mode\n      this.formArray.controls.forEach(attrFormGroup => {\n        if (!this.isFieldGray(attrFormGroup.value)) {\n          if (!attrFormGroup.get('DATA_ELEMENT').value) {\n            attrFormGroup.get('DATA_TYPE').enable();\n          }\n          attrFormGroup.get('PRIMARY_KEY').enable();\n          if (attrFormGroup.get('DATA_TYPE').value === 2) {\n            attrFormGroup.get('AUTO_INCREMENT').enable();\n          } else {\n            attrFormGroup.get('AUTO_INCREMENT').disable();\n          }\n        }\n      });\n      this.formArray.push(this._createAnAttributeFormCtrl());\n    } else { // To Display Mode\n      let lastIndex = this.formArray.length - 1;\n      while (lastIndex >= 0 && this.formArray.controls[lastIndex].get('ATTR_NAME').value.trim() === '') {\n        this.formArray.removeAt(lastIndex);\n        lastIndex--;\n      }\n      this.formArray.controls.forEach(attrFormGroup => {\n        attrFormGroup.get('DATA_TYPE').disable();\n        attrFormGroup.get('PRIMARY_KEY').disable();\n        attrFormGroup.get('AUTO_INCREMENT').disable();\n      });\n    }\n  }\n\n  isFieldGray(attribute: Attribute): boolean {\n    return this.relationID.substr(0, 3) === 'rs_' &&\n        attribute && attribute.ATTR_NAME &&\n       (attribute.ATTR_NAME === 'VALID_FROM' ||\n        attribute.ATTR_NAME === 'VALID_TO' ||\n        attribute.ATTR_NAME.substr(-14, 14) === '_INSTANCE_GUID' ||\n        attribute.ATTR_NAME.substr(-10, 10) === '_ENTITY_ID');\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL3NlYXJjaC1oZWxwL3NlYXJjaC1oZWxwLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL3JlbGF0aW9uc2hpcC9yZWxhdGlvbnNoaXAtZGV0YWlsL3JlbGF0aW9uc2hpcC1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL2RhdGEtZWxlbWVudC9kYXRhLWVsZW1lbnQuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL3JlbGF0aW9uL3JlbGF0aW9uLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchDataElement(searchBox.value)\\\" >\\n      </div>\\n\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedDataElement\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newDataElement()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let dataElement of dataElementList\\\" routerLink=\\\"/model/data-element/{{dataElement.ELEMENT_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(dataElement)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{dataElement.ELEMENT_ID}}</h5>\\n          <small>version: {{dataElement.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{dataElement.ELEMENT_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{dataElement.LAST_CHANGE_BY}} @{{dataElement.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\";","import { Component, OnInit } from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {DataDomainH, DataDomainMeta, EntityService} from 'jor-angular';\nimport {IdentityService} from '../../identity.service';\n\n@Component({\n  selector: 'app-data-domain',\n  templateUrl: './data-domain.component.html',\n  styleUrls: ['./data-domain.component.css']\n})\nexport class DataDomainComponent implements OnInit {\n  dataDomainList: DataDomainH[] = [];\n  isSearchListShown = true;\n  private searchTerms = new Subject<string>();\n  private theSelectedDataDomain: DataDomainH;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private identityService: IdentityService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listDataDomain(term)),\n    ).subscribe(data => {\n      this.dataDomainList = data;\n      let domainID;\n      if (this.route.snapshot.firstChild) {\n        domainID = this.route.snapshot.firstChild.paramMap.get('domainID');\n      }\n      if (domainID ) {\n        if (domainID === 'new') {\n          this._newDataDomain();\n        } else {\n          this.onSelect(this.dataDomainList.find(dataDomain => dataDomain.DOMAIN_ID === domainID));\n        }\n      }\n    });\n    this.searchDataDomain(''); // The initial list\n\n    this.modelService.theSelectedDataDomain$.subscribe( data => {\n      if (this.theSelectedDataDomain) {\n        this.theSelectedDataDomain.DOMAIN_ID = data['DOMAIN_ID'];\n        this.theSelectedDataDomain.DOMAIN_DESC = data['DOMAIN_DESC'];\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.dataDomainList[0] && !this.dataDomainList[0].CREATE_TIME) {\n        this.dataDomainList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const domainID = this.route.snapshot.firstChild.paramMap.get('domainID');\n        if (domainID) {\n          if (domainID === 'new') {\n            this.onSelect(this.dataDomainList[0]);\n          } else {\n            this.onSelect(this.dataDomainList.find(dataDomain => dataDomain.DOMAIN_ID === domainID));\n          }\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  onSelect(dataDomain: DataDomainH): void {\n    if (dataDomain) {\n      this.theSelectedDataDomain = dataDomain;\n      this.modelService.setSelectedDataDomain(dataDomain);\n    }\n  }\n\n  searchDataDomain(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  newDataDomian(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('domainID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newDataDomain();\n      this.router.navigate(['/model/data-domain/new']);\n    }\n  }\n\n  _newDataDomain(): void {\n    this.theSelectedDataDomain = new DataDomainMeta();\n    this.theSelectedDataDomain.DOMAIN_ID = 'new';\n    this.theSelectedDataDomain.DOMAIN_DESC = 'description';\n    this.theSelectedDataDomain.VERSION_NO = 1;\n    this.theSelectedDataDomain.LAST_CHANGE_BY = this.identityService.Session.USER_ID;\n    this.theSelectedDataDomain.LAST_CHANGE_TIME = this.identityService.CurrentTime;\n    this.modelService.setSelectedDataDomain(this.theSelectedDataDomain);\n    this.dataDomainList.splice(0, 0, this.theSelectedDataDomain);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-model',\n  templateUrl: './model.component.html',\n  styleUrls: ['./model.component.css']\n})\nexport class ModelComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Relation} from 'jor-angular';\nimport {Subject} from 'rxjs';\nimport {EntityService} from 'jor-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {IdentityService} from '../../identity.service';\n\n@Component({\n  selector: 'app-relation',\n  templateUrl: './relation.component.html',\n  styleUrls: ['./relation.component.css']\n})\nexport class RelationComponent implements OnInit {\n\n  relationList: Relation[];\n  isSearchListShown = true;\n  private searchTerms = new Subject<string>();\n  private theSelectedRelation: Relation;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private identityService: IdentityService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listRelation(term)),\n    ).subscribe(data => {\n      this.relationList = data;\n      let relationID;\n      if (this.route.snapshot.firstChild) {\n        relationID = this.route.snapshot.firstChild.paramMap.get('relationID');\n      }\n      if (relationID) {\n        if (relationID === 'new') {\n          this._newRelation();\n        } else {\n          this.onSelect(this.relationList.find(relation => relation.RELATION_ID === relationID));\n        }\n      }\n    });\n    this.searchRelation(''); // The initial list\n\n    this.modelService.theSelectedRelation$.subscribe( data => {\n      if (this.theSelectedRelation) {\n        this.theSelectedRelation.RELATION_ID = data.RELATION_ID;\n        this.theSelectedRelation.RELATION_DESC = data.RELATION_DESC;\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.relationList[0] && !this.relationList[0].CREATE_TIME) {\n        this.relationList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const relationID = this.route.snapshot.firstChild.paramMap.get('relationID');\n        if (relationID) {\n          if (relationID === 'new') {\n            this.onSelect(this.relationList[0]);\n          } else {\n            this.onSelect(this.relationList.find(relation => relation.RELATION_ID === relationID));\n          }\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  searchRelation(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  onSelect(relation: Relation): void {\n    if (relation) {\n      this.theSelectedRelation = relation;\n      this.modelService.setSelectedRelation(relation);\n    }\n  }\n\n  newRelation(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('relationID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newRelation();\n      this.router.navigate(['/model/relation/new']);\n    }\n  }\n\n  _newRelation(): void {\n    this.theSelectedRelation = new Relation();\n    this.theSelectedRelation.RELATION_ID = 'r_new';\n    this.theSelectedRelation.RELATION_DESC = 'description';\n    this.theSelectedRelation.VERSION_NO = 1;\n    this.theSelectedRelation.LAST_CHANGE_BY = this.identityService.Session.USER_ID;\n    this.theSelectedRelation.LAST_CHANGE_TIME = this.identityService.CurrentTime;\n    this.modelService.setSelectedRelation(this.theSelectedRelation);\n    this.relationList.splice(0, 0, this.theSelectedRelation);\n  }\n}\n","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"relationMeta\\\" [formGroup]=\\\"relationForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"relation\\\" class=\\\"col-form-label form-control-sm\\\">Relation:\\n      <span [class.ng-invalid]=\\\"relationForm.get('RELATION_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{relationForm.get('RELATION_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"relation\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n          name=\\\"relation\\\" formControlName=\\\"RELATION_ID\\\" >\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"relation-desc\\\" class=\\\"col-form-label form-control-sm\\\">Relation Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"relation-desc\\\" name=\\\"relation-desc\\\" rows=\\\"2\\\"\\n              (change)=\\\"onChangeRelationDesc()\\\" formControlName=\\\"RELATION_DESC\\\" [readonly]=\\\"readonly\\\"></textarea>\\n  </div>\\n\\n  <app-attribute-meta [readonly]=\\\"readonly\\\" [parentForm]=\\\"relationForm\\\" [attributes]=\\\"relationMeta.ATTRIBUTES\\\"\\n                      [relationID]=\\\"relationMeta.RELATION_ID\\\" [isNewMode]=\\\"isNewMode\\\">\\n  </app-attribute-meta>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\"><span class=\\\"fas fa-atlas\\\"></span> Association</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered table-sm dk-table\\\">\\n        <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Action</th>\\n          <th scope=\\\"col\\\">Association</th>\\n          <th scope=\\\"col\\\">Right Relation</th>\\n          <th scope=\\\"col\\\">Cardinality</th>\\n          <th scope=\\\"col\\\" title=\\\"Foreign Key Check\\\">FC</th>\\n        </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"ASSOCIATIONS\\\">\\n        <tr *ngFor=\\\"let associationFormGroup of associationFormArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteAssociation(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" (click)=\\\"openFieldMapModal(i)\\\" title=\\\"Fields Mapping\\\">\\n              <span class=\\\"fas fa-map-signs\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"associationFormGroup\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"ASSOCIATION_NAME\\\"\\n                     [readonly]=\\\"readonly || oldAssociationName(associationFormGroup) && associationFormGroup.valid\\\"\\n                     (change)=\\\"onChangeAssociationName(i)\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{associationFormGroup.get('ASSOCIATION_NAME').errors?.message}}\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"associationFormGroup\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"RIGHT_RELATION_ID\\\"\\n                     [readonly]=\\\"readonly\\\" (change)=\\\"onChangeRightRelationID(i)\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{associationFormGroup.get('RIGHT_RELATION_ID').errors?.message}}\\n              </div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchRelation\\\"\\n                        (click)=\\\"onSearchHelp('RIGHT_RELATION_ID', associationFormGroup, i)\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"associationFormGroup\\\">\\n            <select class=\\\"form-control form-control-sm\\\" formControlName=\\\"CARDINALITY\\\"\\n                    (change)=\\\"onChangeCardinality(associationFormGroup)\\\">\\n              <option>[0..1]</option>\\n              <option>[1..1]</option>\\n              <option>[0..n]</option>\\n              <option>[1..n]</option>\\n            </select>\\n          </td>\\n          <td [formGroup]=\\\"associationFormGroup\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"FOREIGN_KEY_CHECK\\\">\\n          </td>\\n        </tr>\\n\\n        <div *ngIf=\\\"currentAssociationForm\\\" class=\\\"modal fade dk-modal-open\\\" [ngClass]=\\\"{'show': isFieldMapShown}\\\"\\n             [ngStyle]=\\\"{'display': displayFieldMapModal}\\\" id=\\\"detailModal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\">\\n          <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content\\\">\\n              <div class=\\\"modal-header\\\">\\n                <h5 class=\\\"modal-title\\\" id=\\\"detail\\\">Fields Mapping</h5>\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeFieldMapModal()\\\">\\n                  <span aria-hidden=\\\"true\\\">&times;</span>\\n                </button>\\n              </div>\\n              <div class=\\\"modal-body\\\">\\n                <table class=\\\"table table-bordered table-sm dk-table\\\" [formGroup]=\\\"currentAssociationForm\\\">\\n                  <thead class=\\\"thead-light\\\">\\n                  <tr>\\n                    <th scope=\\\"col\\\">Action</th>\\n                    <th scope=\\\"col\\\">Left Table Field</th>\\n                    <th scope=\\\"col\\\">Right Table Field</th>\\n                  </tr>\\n                  </thead>\\n\\n                  <tbody formArrayName=\\\"FIELDS_MAPPING\\\">\\n                    <tr *ngFor=\\\"let fieldMapFormGroup of fieldMapFormArray.controls; let i = index\\\">\\n                      <td class=\\\"dk-actions\\\">\\n                        <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteFieldMap(i)\\\" title=\\\"Delete\\\">\\n                          <span class=\\\"far fa-trash-alt\\\"></span>\\n                        </button>\\n                      </td>\\n                      <td [formGroup]=\\\"fieldMapFormGroup\\\">\\n                        <div class=\\\"input-group\\\">\\n                          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"LEFT_FIELD\\\"\\n                                 [readonly]=\\\"readonly || oldFieldMap(fieldMapFormGroup) && fieldMapFormGroup.valid\\\" (change)=\\\"onChangeLeftField(i)\\\">\\n                          <div class=\\\"invalid-tooltip\\\">\\n                            {{fieldMapFormGroup.get('LEFT_FIELD').errors?.message}}\\n                          </div>\\n                        </div>\\n                      </td>\\n                      <td [formGroup]=\\\"fieldMapFormGroup\\\">\\n                        <div class=\\\"input-group\\\">\\n                          <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"RIGHT_FIELD\\\"\\n                                 [readonly]=\\\"readonly || oldFieldMap(fieldMapFormGroup) && fieldMapFormGroup.valid\\\" (change)=\\\"onChangeRightField(i)\\\">\\n                          <div class=\\\"invalid-tooltip\\\">\\n                            {{fieldMapFormGroup.get('RIGHT_FIELD').errors?.message}}\\n                          </div>\\n                        </div>\\n                      </td>\\n                    </tr>\\n                  </tbody>\\n                </table>\\n              </div>\\n              <div class=\\\"modal-footer\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-sm btn-primary\\\" (click)=\\\"closeFieldMapModal()\\\">OK</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\\n\";","export default \".dk-table {\\n  display: block;\\n  overflow-x: auto;\\n  white-space: nowrap;\\n  border: none;\\n}\\n.dk-actions{\\n  width: 3rem;\\n  min-width: 3rem;\\n  max-width: 3rem;\\n}\\n.dk-description{\\n  width: 15rem;\\n  min-width: 15rem;\\n  max-width: 15rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwvZW50aXR5LXR5cGUvZW50aXR5LXR5cGUtZGV0YWlsL2VudGl0eS10eXBlLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtBQUNkO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsZUFBZTtFQUNmLGVBQWU7QUFDakI7QUFDQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwvZW50aXR5LXR5cGUvZW50aXR5LXR5cGUtZGV0YWlsL2VudGl0eS10eXBlLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRrLXRhYmxlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93LXg6IGF1dG87XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi5kay1hY3Rpb25ze1xuICB3aWR0aDogM3JlbTtcbiAgbWluLXdpZHRoOiAzcmVtO1xuICBtYXgtd2lkdGg6IDNyZW07XG59XG4uZGstZGVzY3JpcHRpb257XG4gIHdpZHRoOiAxNXJlbTtcbiAgbWluLXdpZHRoOiAxNXJlbTtcbiAgbWF4LXdpZHRoOiAxNXJlbTtcbn1cbiJdfQ== */\";","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"relationshipMeta\\\" [formGroup]=\\\"relationshipForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"relationship\\\" class=\\\"col-form-label form-control-sm\\\">Relationship:\\n      <span [class.ng-invalid]=\\\"relationshipForm.get('RELATIONSHIP_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{relationshipForm.get('RELATIONSHIP_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"relationship\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           name=\\\"relationship\\\" formControlName=\\\"RELATIONSHIP_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"relationship-desc\\\" class=\\\"col-form-label form-control-sm\\\">Relationship Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"relationship-desc\\\" name=\\\"relationship-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"RELATIONSHIP_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeRelationshipDesc()\\\"></textarea>\\n  </div>\\n  <div class=\\\"row ml-2\\\">\\n    <div class=\\\"col-8 col-lg-3 form-check\\\">\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"timeDependent\\\" name=\\\"timeDependent\\\"\\n             formControlName=\\\"TIME_DEPENDENT\\\" (change)=\\\"onChangeTimeDependency()\\\">\\n      <label for=\\\"timeDependent\\\" class=\\\"form-check-label\\\">Time Dependent</label>\\n    </div>\\n    <div class=\\\"col-8 col-lg-4 form-group row mx-3\\\">\\n      <label for=\\\"valid_period\\\" class=\\\"col-form-label form-control-sm\\\">Default Period of Validity(seconds):\\n        <span [class.ng-invalid]=\\\"relationshipForm.get('VALID_PERIOD').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{relationshipForm.get('VALID_PERIOD').errors?.message}}\\n      </span>\\n      </label>\\n      <input type=\\\"number\\\" class=\\\"form-control form-control-sm\\\" id=\\\"valid_period\\\" [readonly]=\\\"readonly\\\"\\n             name=\\\"valid_period\\\" formControlName=\\\"VALID_PERIOD\\\">\\n    </div>\\n    <div class=\\\"col-8 col-lg-3 form-check\\\" >\\n      <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" id=\\\"singleton\\\" name=\\\"singleton\\\"\\n             formControlName=\\\"SINGLETON\\\">\\n      <label for=\\\"singleton\\\" class=\\\"form-check-label\\\">Singleton</label>\\n    </div>\\n  </div>\\n\\n  <app-attribute-meta [readonly]=\\\"readonly\\\" [parentForm]=\\\"relationshipForm\\\" [attributes]=\\\"attributes\\\"\\n                      [relationID]=\\\"relationshipMeta.RELATIONSHIP_ID\\\" [isNewMode]=\\\"isNewMode\\\">\\n  </app-attribute-meta>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\"><span class=\\\"fas fa-user-check\\\"></span> Involved Roles</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered table-sm\\\">\\n        <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Action</th>\\n          <th scope=\\\"col\\\">Role</th>\\n          <th scope=\\\"col\\\">Description</th>\\n          <th scope=\\\"col\\\">Cardinality</th>\\n          <th scope=\\\"col\\\">Direction</th>\\n        </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"INVOLVES\\\">\\n        <tr *ngFor=\\\"let involveFormGroup of involveFormArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteInvolve(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"involveFormGroup\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"ROLE_ID\\\"\\n                     [readonly]=\\\"readonly || oldInvolve(involveFormGroup) && involveFormGroup.valid\\\" (change)=\\\"onChangeRoleID(i)\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{involveFormGroup.get('ROLE_ID').errors?.message}}\\n              </div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchRole\\\"\\n                        (click)=\\\"onSearchHelp(involveFormGroup, i)\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"involveFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ROLE_DESC\\\" readonly class=\\\"form-control form-control-sm dk-description\\\">\\n          </td>\\n          <td [formGroup]=\\\"involveFormGroup\\\">\\n            <select class=\\\"form-control form-control-sm\\\" formControlName=\\\"CARDINALITY\\\">\\n              <option>[1..1]</option>\\n              <option>[1..n]</option>\\n            </select>\\n          </td>\\n          <td [formGroup]=\\\"involveFormGroup\\\">\\n            <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"DIRECTION\\\" [readonly]=\\\"readonly\\\">\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ModelComponent } from './model.component';\nimport { ModelRoutingModule } from './model-routing.module';\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\nimport { EntityTypeComponent } from './entity-type/entity-type.component';\nimport {HttpClientModule} from '@angular/common/http';\nimport { EntityTypeDetailComponent } from './entity-type/entity-type-detail/entity-type-detail.component';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { AttributeMetaComponent } from './attribute-meta/attribute-meta.component';\nimport {MessageModule} from 'ui-message-angular';\nimport { RelationComponent } from './relation/relation.component';\nimport {RelationDetailComponent} from './relation/relation-detail/relation-detail.component';\nimport { RelationshipComponent } from './relationship/relationship.component';\nimport { RelationshipDetailComponent } from './relationship/relationship-detail/relationship-detail.component';\nimport { RoleComponent } from './role/role.component';\nimport { RoleDetailComponent } from './role/role-detail/role-detail.component';\nimport { DataElementComponent } from './data-element/data-element.component';\nimport { DataDomainComponent } from './data-domain/data-domain.component';\nimport { DataDomainDetailComponent } from './data-domain/data-domain-detail/data-domain-detail.component';\nimport { DataElementDetailComponent } from './data-element/data-element-detail/data-element-detail.component';\nimport { SearchHelpComponent } from './search-help/search-help.component';\nimport { SearchHelpDetailComponent } from './search-help/search-help-detail/search-help-detail.component';\nimport {JorAngularModule} from 'jor-angular';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ModelRoutingModule,\n    MessageModule,\n    NgbModule,\n    JorAngularModule\n  ],\n  declarations: [\n    ModelComponent,\n    EntityTypeComponent,\n    EntityTypeDetailComponent,\n    AttributeMetaComponent,\n    RelationComponent,\n    RelationDetailComponent,\n    RelationshipComponent,\n    RelationshipDetailComponent,\n    RoleComponent,\n    RoleDetailComponent,\n    DataElementComponent,\n    DataElementDetailComponent,\n    DataDomainComponent,\n    DataDomainDetailComponent,\n    SearchHelpComponent,\n    SearchHelpDetailComponent\n  ]\n})\nexport class ModelModule { }\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {RoleMeta} from 'jor-angular';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {EntityService} from 'jor-angular';\nimport {msgStore} from '../../../msgStore';\nimport {switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {UniqueRoleValidator} from '../../model-validators';\nimport {SearchHelp, SearchHelpMethod} from 'jor-angular';\nimport {SearchHelpComponent} from 'jor-angular';\nimport {AttributeMetaComponent} from '../../attribute-meta/attribute-meta.component';\n\n@Component({\n  selector: 'app-role-detail',\n  templateUrl: './role-detail.component.html',\n  styleUrls: ['./role-detail.component.css']\n})\nexport class RoleDetailComponent implements OnInit {\n  roleMeta: RoleMeta;\n  readonly = true;\n  isNewMode = false;\n  roleForm: FormGroup;\n  changedRole = {};\n  bypassProtection = false;\n  isSearchListShown = true;\n  relationSearchHelp: SearchHelp;\n\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent!: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueRoleValidator: UniqueRoleValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  get relationFormArray() {\n    return this.roleForm.get('RELATIONS') as FormArray;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const roleID = params.get('roleID');\n        if (roleID === 'new') {\n          const role = new RoleMeta();\n          role.ROLE_ID = '';\n          role.ROLE_DESC = '';\n          role.RELATIONS = [];\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return of(role);\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return this.entityService.getRole(roleID);\n        }\n      })\n    ).subscribe(data => {\n      if ( 'msgName' in data) {\n        this.messageService.clearMessages();\n        this.roleMeta = null;\n        this.roleForm = null;\n        this.messageService.report(<Message>data);\n      } else {\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.roleMeta = <RoleMeta>data;\n        this._generateRoleForm();\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  onSearchHelp(control: AbstractControl, rowID: number): void {\n    if (!this.relationSearchHelp) {\n      this.relationSearchHelp = new SearchHelp();\n      this.relationSearchHelp.OBJECT_NAME = 'Relation';\n      this.relationSearchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listRelation(searchTerm);\n      }(this.entityService);\n      this.relationSearchHelp.BEHAVIOUR = 'A';\n      this.relationSearchHelp.MULTI = false;\n      this.relationSearchHelp.FUZZY_SEARCH = true;\n      this.relationSearchHelp.FIELDS = [\n        {FIELD_NAME: 'RELATION_ID', LIST_HEADER_TEXT: 'Relation', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n        {FIELD_NAME: 'RELATION_DESC', LIST_HEADER_TEXT: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.relationSearchHelp.READ_ONLY = this.readonly || this.oldRelation(control) && control.valid;\n    }\n    const afterExportFn = function (context: any, ruleIdx: number) {\n      return () => context.onChangeRelationID(ruleIdx, true);\n    }(this, rowID).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.relationSearchHelp, control, afterExportFn);\n  }\n\n  _generateRoleForm(): void {\n    this.roleForm = this.fb.group({});\n    this.roleForm.addControl('ROLE_ID', new FormControl(this.roleMeta.ROLE_ID, {updateOn: 'blur'}));\n    if (this.isNewMode) {\n      this.roleForm.get('ROLE_ID').setValidators(this._validateRoleID);\n      this.roleForm.get('ROLE_ID').setAsyncValidators(this.uniqueRoleValidator.validate.bind(this.uniqueRoleValidator));\n    }\n    this.roleForm.addControl('ROLE_DESC', new FormControl(this.roleMeta.ROLE_DESC));\n\n    // Compose Involves\n    const formArray = [];\n    this.roleMeta.RELATIONS.forEach( relation => {\n      formArray.push(this.fb.group({\n        RELATION_ID: [relation.RELATION_ID],\n        RELATION_DESC: [relation.RELATION_DESC],\n        CARDINALITY: [{value: relation.CARDINALITY, disabled: this.readonly}]\n      }));\n    });\n    if (this.isNewMode) {\n      formArray.push(\n        this.fb.group({\n          RELATION_ID: [''],\n          RELATION_DESC: [''],\n          CARDINALITY: ['[0..1]']\n        }));\n    }\n    this.roleForm.addControl('RELATIONS', new FormArray(formArray));\n  }\n\n  _validateRoleID(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Role ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Role?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.roleMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.roleForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateRoleForm();\n            this.roleForm.reset(this.roleForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this.readonly = false;\n      this.relationFormArray.controls.forEach(relationFormGroup => {\n        relationFormGroup.get('CARDINALITY').enable();\n      });\n      this.relationFormArray.push(\n        this.fb.group({\n          RELATION_ID: [''],\n          RELATION_DESC: [''],\n          CARDINALITY: ['[0..1]']\n        })\n      );\n    }\n\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    let lastIndex = this.relationFormArray.length - 1;\n    while (lastIndex >= 0 && this.relationFormArray.controls[lastIndex].get('ROLE_ID').value.trim() === '') {\n      this.relationFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n    this.relationFormArray.controls.forEach(relationFormGroup => {\n      relationFormGroup.get('CARDINALITY').disable();\n    });\n  }\n\n  onChangeRoleID(): void {\n    this.modelService.updateRoleID(this.roleForm.get('ROLE_ID').value);\n  }\n\n  onChangeRoleDesc(): void {\n    this.modelService.updateRoleDesc(this.roleForm.get('ROLE_DESC').value);\n  }\n\n  deleteRelation(index: number): void {\n    if (index !== this.relationFormArray.length - 1) {\n      this.relationFormArray.removeAt(index);\n      this.relationFormArray.markAsDirty();\n    }\n  }\n\n  onChangeRelationID(index: number, isExportedFromSH?: boolean): void {\n    const currentRelationFormGroup = this.relationFormArray.controls[index];\n    if (this.relationFormArray.controls.findIndex((relationCtrl, i) =>\n      i !== index && relationCtrl.get('RELATION_ID').value === currentRelationFormGroup.get('RELATION_ID').value\n    ) !== -1) {\n      currentRelationFormGroup.get('RELATION_ID').setErrors({message: 'Duplicate Relations'});\n      return;\n    }\n\n    if (index === this.relationFormArray.length - 1 && currentRelationFormGroup.value.RELATION_ID.trim() !== '') {\n      // Only work for the last New line\n      this.relationFormArray.push(\n        this.fb.group({\n          RELATION_ID: [''],\n          RELATION_DESC: [''],\n          CARDINALITY: ['[0..1]']\n        })\n      );\n    }\n\n    if (!isExportedFromSH) {\n      this.entityService.getRelationDesc(currentRelationFormGroup.value.RELATION_ID).subscribe(data => {\n        if (data['msgCat']) {\n          currentRelationFormGroup.get('RELATION_ID').setErrors({message: data['msgShortText']});\n        } else {\n          currentRelationFormGroup.get('RELATION_DESC').setValue(data);\n        }\n      });\n    }\n  }\n\n  oldRelation(formGroup: AbstractControl): boolean {\n    return this.roleMeta.RELATIONS ?\n      this.roleMeta.RELATIONS.findIndex(\n        relation => relation.RELATION_ID === formGroup.get('RELATION_ID').value ) !== -1 :\n      false;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.roleForm && this.roleForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.roleForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (!this.roleForm.valid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedRole['action'] = 'add';\n      this.changedRole['ROLE_ID'] = this.roleForm.controls['ROLE_ID'].value;\n    } else {\n      this.changedRole['action'] = 'update';\n      this.changedRole['ROLE_ID'] = this.roleMeta.ROLE_ID;\n    }\n    if (this.roleForm.controls['ROLE_DESC'].dirty) {\n      this.changedRole['ROLE_DESC'] = this.roleForm.controls['ROLE_DESC'].value;\n    }\n\n    this._processChangedRelation();\n\n    this.entityService.saveRole(this.changedRole)\n      .subscribe(data => this._postActivityAfterSavingRole(data));\n  }\n\n  _processChangedRelation(): void {\n    const changedRelations = [];\n    if (!this.relationFormArray.dirty) { return; }\n\n    this.changedRole['RELATIONS'] = changedRelations;\n\n    this.relationFormArray.controls.forEach(relationControl => {\n      if (relationControl.get('RELATION_ID').value.trim() === '') { return; }\n      let action;\n      const index = this.roleMeta.RELATIONS.findIndex(\n        relation => relationControl.get('RELATION_ID').value === relation.RELATION_ID);\n      if (index === -1) {// New Add Case\n        action = 'add';\n      } else {\n        if (relationControl.dirty) {// Change Case\n          action = 'update';\n        }\n      }\n      if (action) {\n        changedRelations.push({\n          action: action, RELATION_ID: relationControl.get('RELATION_ID').value, CARDINALITY: relationControl.get('CARDINALITY').value\n        });\n      }\n    });\n\n    // Deletion Case\n    this.roleMeta.RELATIONS.forEach(relation => {\n      const index = this.relationFormArray.controls.findIndex(\n        relationControl => relationControl.get('RELATION_ID').value === relation.RELATION_ID);\n      if (index === -1) { // The attribute must be deleted\n        const deletedRelation = {action: 'delete', RELATION_ID: relation.RELATION_ID};\n        changedRelations.push(deletedRelation);\n      }\n    });\n  }\n\n  _postActivityAfterSavingRole(data: any) {\n    this.changedRole = {};\n    if (data && data['ROLE_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/role/' + data['ROLE_ID']],\n          {state: {message: this.messageService.generateMessage(\n                'MODEL', 'ROLE_SAVED', 'S', data['ROLE_ID'])}});\n      } else {\n        this.readonly = true;\n        this.roleMeta = data;\n        this._generateRoleForm();\n        this.messageService.reportMessage('MODEL', 'ROLE_SAVED', 'S', this.roleMeta.ROLE_ID);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {ModelComponent} from './model.component';\nimport {EntityTypeComponent} from './entity-type/entity-type.component';\nimport {EntityTypeDetailComponent} from './entity-type/entity-type-detail/entity-type-detail.component';\nimport {RelationComponent} from './relation/relation.component';\nimport {RelationDetailComponent} from './relation/relation-detail/relation-detail.component';\nimport {WorkProtectionGuard} from '../work-protection.guard';\nimport {RelationshipComponent} from './relationship/relationship.component';\nimport {RelationshipDetailComponent} from './relationship/relationship-detail/relationship-detail.component';\nimport {RoleComponent} from './role/role.component';\nimport {RoleDetailComponent} from './role/role-detail/role-detail.component';\nimport {DataElementComponent} from './data-element/data-element.component';\nimport {DataDomainComponent} from './data-domain/data-domain.component';\nimport {DataDomainDetailComponent} from './data-domain/data-domain-detail/data-domain-detail.component';\nimport {DataElementDetailComponent} from './data-element/data-element-detail/data-element-detail.component';\nimport {SearchHelpComponent} from './search-help/search-help.component';\nimport {SearchHelpDetailComponent} from './search-help/search-help-detail/search-help-detail.component';\n\nconst routes: Routes = [\n  { path: '',\n    component: ModelComponent,\n    children: [\n      { path: 'entity-type', component: EntityTypeComponent,\n        children: [{ path: ':entityID', canDeactivate: [WorkProtectionGuard], component: EntityTypeDetailComponent }] },\n      { path: 'role', component: RoleComponent,\n        children: [{ path: ':roleID', canDeactivate: [WorkProtectionGuard], component: RoleDetailComponent }] },\n      { path: 'relation', component: RelationComponent,\n        children: [{ path: ':relationID', canDeactivate: [WorkProtectionGuard], component: RelationDetailComponent }] },\n      { path: 'relationship', component: RelationshipComponent,\n        children: [{ path: ':relationshipID', canDeactivate: [WorkProtectionGuard], component: RelationshipDetailComponent }] },\n      { path: 'data-element', component: DataElementComponent,\n        children: [{ path: ':elementID', canDeactivate: [WorkProtectionGuard], component: DataElementDetailComponent }] },\n      { path: 'data-domain', component: DataDomainComponent,\n        children: [{ path: ':domainID', canDeactivate: [WorkProtectionGuard], component: DataDomainDetailComponent }] },\n      { path: 'search-help', component: SearchHelpComponent,\n        children: [{ path: ':searchHelpID', canDeactivate: [WorkProtectionGuard], component: SearchHelpDetailComponent }] },\n      { path: '**', redirectTo: '/model/entity-type', pathMatch: 'full' },\n    ]\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes)\n  ],\n  exports: [ RouterModule ]\n})\nexport class ModelRoutingModule { }\n","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchEntityType(searchBox.value)\\\" >\\n      </div>\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedEntityType\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newEntityType()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let entityType of entityTypeList\\\" routerLink=\\\"/model/entity-type/{{entityType.ENTITY_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(entityType)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{entityType.ENTITY_ID}}</h5>\\n          <small>version: {{entityType.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{entityType.ENTITY_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{entityType.LAST_CHANGE_BY}} @{{entityType.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\";","export default \"<ul class=\\\"nav nav-tabs mt-1\\\">\\n  <li class=\\\"nav-item active\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/entity-type\\\" routerLinkActive=\\\"active\\\">Entity</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/role\\\" routerLinkActive=\\\"active\\\">Role</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/relation\\\" routerLinkActive=\\\"active\\\">Relation</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/relationship\\\" routerLinkActive=\\\"active\\\">Relationship</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/data-element\\\" routerLinkActive=\\\"active\\\">Data Element</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/data-domain\\\" routerLinkActive=\\\"active\\\">Data Domain</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/model/search-help\\\" routerLinkActive=\\\"active\\\">Search Help</a>\\n  </li>\\n</ul>\\n\\n<div class=\\\"dk-model-content\\\">\\n  <router-outlet></router-outlet>\\n</div>\\n\\n\";","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchRole(searchBox.value)\\\" >\\n      </div>\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedRole\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newRole()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let role of roleList\\\" routerLink=\\\"/model/role/{{role.ROLE_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(role)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{role.ROLE_ID}}</h5>\\n          <small>version: {{role.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{role.ROLE_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{role.LAST_CHANGE_BY}} @{{role.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchRelation(searchBox.value)\\\" >\\n      </div>\\n\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedRelation\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newRelation()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let relation of relationList\\\" routerLink=\\\"/model/relation/{{relation.RELATION_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(relation)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{relation.RELATION_ID}}</h5>\\n          <small>version: {{relation.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{relation.RELATION_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{relation.LAST_CHANGE_BY}} @{{relation.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"entityMeta\\\" [formGroup]=\\\"entityTypeForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"entity-type\\\" class=\\\"col-form-label form-control-sm\\\">Entity Type:\\n      <span [class.ng-invalid]=\\\"entityTypeForm.get('ENTITY_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{entityTypeForm.get('ENTITY_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"entity-type\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           name=\\\"entity-type\\\" formControlName=\\\"ENTITY_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"entity-desc\\\" class=\\\"col-form-label form-control-sm\\\">Entity Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"entity-desc\\\" name=\\\"entity-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"ENTITY_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeEntityDesc()\\\"></textarea>\\n  </div>\\n\\n  <app-attribute-meta [readonly]=\\\"readonly\\\" [parentForm]=\\\"entityTypeForm\\\" [attributes]=\\\"attributes\\\"\\n                      [relationID]=\\\"entityMeta.ENTITY_ID\\\" [isNewMode]=\\\"isNewMode\\\">\\n  </app-attribute-meta>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\"><span class=\\\"fas fa-user-check\\\"></span> Role</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered table-sm dk-table\\\">\\n        <thead class=\\\"thead-light\\\">\\n          <tr>\\n            <th scope=\\\"col\\\">Action</th>\\n            <th scope=\\\"col\\\">Role</th>\\n            <th scope=\\\"col\\\">Description</th>\\n            <th scope=\\\"col\\\">Conditional Attribute</th>\\n            <th scope=\\\"col\\\">Conditional Value</th>\\n          </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"ROLES\\\">\\n        <tr *ngFor=\\\"let roleFormGroup of roleFormArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteRole(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"roleFormGroup\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"ROLE_ID\\\"\\n                     [readonly]=\\\"readonly || oldRole(roleFormGroup) && roleFormGroup.valid\\\" (change)=\\\"onChangeRoleID(i)\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{roleFormGroup.get('ROLE_ID').errors?.message}}\\n              </div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchRole\\\"\\n                        (click)=\\\"onSearchHelp(roleFormGroup, i)\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"roleFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ROLE_DESC\\\" readonly class=\\\"form-control form-control-sm dk-description\\\">\\n          </td>\\n          <td [formGroup]=\\\"roleFormGroup\\\">\\n            <select formControlName=\\\"CONDITIONAL_ATTR\\\"  class=\\\"form-control form-control-sm\\\">\\n              <option *ngFor=\\\"let opt of attrFormArray.controls\\\" [value]=\\\"opt.value.ATTR_NAME\\\">{{opt.value.ATTR_NAME}}</option>\\n            </select>\\n          </td>\\n          <td [formGroup]=\\\"roleFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"CONDITIONAL_VALUE\\\" [readonly]=\\\"readonly\\\" class=\\\"form-control form-control-sm\\\">\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL3JlbGF0aW9uc2hpcC9yZWxhdGlvbnNoaXAuY29tcG9uZW50LmNzcyJ9 */\";","export default \".dk-table {\\n  display: block;\\n  overflow-x: auto;\\n  white-space: nowrap;\\n  border: none;\\n}\\n.dk-actions{\\n  width: 4rem;\\n  min-width: 4rem;\\n  max-width: 4rem;\\n}\\n.dk-selection{\\n  width: 15rem;\\n  min-width: 10rem;\\n}\\n.dk-string{\\n  width: 15rem;\\n  min-width: 10rem;\\n}\\n.dk-number{\\n  width: 10rem;\\n  min-width: 5rem;\\n}\\n.dk-description{\\n  width: 15rem;\\n  min-width: 10rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwvc2VhcmNoLWhlbHAvc2VhcmNoLWhlbHAtZGV0YWlsL3NlYXJjaC1oZWxwLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtBQUNkO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsZUFBZTtFQUNmLGVBQWU7QUFDakI7QUFDQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7QUFDbEI7QUFDQTtFQUNFLFlBQVk7RUFDWixlQUFlO0FBQ2pCO0FBQ0E7RUFDRSxZQUFZO0VBQ1osZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwvc2VhcmNoLWhlbHAvc2VhcmNoLWhlbHAtZGV0YWlsL3NlYXJjaC1oZWxwLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRrLXRhYmxlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93LXg6IGF1dG87XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi5kay1hY3Rpb25ze1xuICB3aWR0aDogNHJlbTtcbiAgbWluLXdpZHRoOiA0cmVtO1xuICBtYXgtd2lkdGg6IDRyZW07XG59XG4uZGstc2VsZWN0aW9ue1xuICB3aWR0aDogMTVyZW07XG4gIG1pbi13aWR0aDogMTByZW07XG59XG4uZGstc3RyaW5ne1xuICB3aWR0aDogMTVyZW07XG4gIG1pbi13aWR0aDogMTByZW07XG59XG4uZGstbnVtYmVye1xuICB3aWR0aDogMTByZW07XG4gIG1pbi13aWR0aDogNXJlbTtcbn1cbi5kay1kZXNjcmlwdGlvbntcbiAgd2lkdGg6IDE1cmVtO1xuICBtaW4td2lkdGg6IDEwcmVtO1xufVxuIl19 */\";","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchDataDomain(searchBox.value)\\\" >\\n      </div>\\n\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedDataDomain\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newDataDomian()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let dataDomain of dataDomainList\\\" routerLink=\\\"/model/data-domain/{{dataDomain.DOMAIN_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(dataDomain)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{dataDomain.DOMAIN_ID}}</h5>\\n          <small>version: {{dataDomain.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{dataDomain.DOMAIN_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{dataDomain.LAST_CHANGE_BY}} @{{dataDomain.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\";","export default \"<div class=\\\"card mt-2\\\">\\n  <div class=\\\"card-header\\\"><span class=\\\"fab fa-elementor\\\"></span> Attribute</div>\\n  <div class=\\\"card-body\\\">\\n    <table class=\\\"table table-bordered table-sm dk-table\\\" [formGroup]=\\\"parentForm\\\">\\n      <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Action</th>\\n          <th scope=\\\"col\\\">Attribute Name</th>\\n          <th scope=\\\"col\\\">Description</th>\\n          <th scope=\\\"col\\\">Data Element</th>\\n          <th scope=\\\"col\\\">Data Type</th>\\n          <th scope=\\\"col\\\">Length</th>\\n          <th scope=\\\"col\\\">Decimal</th>\\n          <th scope=\\\"col\\\" title=\\\"Primary Key\\\" [hidden]=\\\"relationID.substring(0,2) !== 'r_'\\\">PK</th>\\n          <th scope=\\\"col\\\" title=\\\"Auto Incremental\\\" [hidden]=\\\"relationID.substring(0,2) !== 'r_'\\\">AI</th>\\n        </tr>\\n      </thead>\\n\\n      <tbody formArrayName=\\\"ATTRIBUTES\\\">\\n        <tr *ngFor=\\\"let attrFormGroup of formArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" id=\\\"delete\\\" [disabled]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                    (click)=\\\"deleteAttribute(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" id=\\\"add\\\" [disabled]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                    (click)=\\\"insertAttribute(i)\\\" title=\\\"Insert\\\">\\n              <span class=\\\"fas fa-plus\\\"></span>\\n            </button>\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" id=\\\"switch\\\" [disabled]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                    (click)=\\\"switchBtwDEAndDT(i)\\\" title=\\\"Switch btw Data Element and Data Type\\\">\\n              <span class=\\\"far fa-lightbulb\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ATTR_NAME\\\" [readonly]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                   class=\\\"form-control form-control-sm\\\" (change)=\\\"onChangeAttributeName(i)\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ATTR_DESC\\\" class=\\\"form-control form-control-sm dk-description\\\"\\n                   [readonly]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <div class=\\\"input-group dk-dataElement\\\">\\n              <input type=\\\"text\\\" formControlName=\\\"DATA_ELEMENT\\\" [readonly]=\\\"readonly || isFieldGray(attrFormGroup.value)\\\"\\n                     class=\\\"form-control form-control-sm\\\" (change)=\\\"onChangeDataElement(i)\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{attrFormGroup.get('DATA_ELEMENT').errors?.message}}\\n              </div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchDataElement\\\"\\n                        (click)=\\\"onSearchHelp(attrFormGroup, i)\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <select formControlName=\\\"DATA_TYPE\\\" (change)=\\\"onChangeDataType(attrFormGroup)\\\" class=\\\"form-control form-control-sm\\\">\\n              <option *ngFor=\\\"let opt of dataTypes\\\" [value]=\\\"opt.key\\\">{{opt.value}}</option>\\n            </select>\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <input type=\\\"number\\\" formControlName=\\\"DATA_LENGTH\\\" class=\\\"form-control form-control-sm dk-number\\\"\\n                   [readonly]=\\\"(+attrFormGroup.value.DATA_TYPE !== 1 && +attrFormGroup.value.DATA_TYPE !== 4) || readonly || isFieldGray(attrFormGroup.value)\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\">\\n            <input type=\\\"number\\\" formControlName=\\\"DECIMAL\\\" class=\\\"form-control form-control-sm dk-number\\\"\\n                   [readonly]=\\\"+attrFormGroup.value.DATA_TYPE !== 4 || readonly || isFieldGray(attrFormGroup.value)\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\" [hidden]=\\\"relationID.substring(0,2) !== 'r_'\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"PRIMARY_KEY\\\">\\n          </td>\\n          <td [formGroup]=\\\"attrFormGroup\\\" [hidden]=\\\"relationID.substring(0,2) !== 'r_'\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"AUTO_INCREMENT\\\">\\n          </td>\\n        </tr>\\n      </tbody>\\n    </table>\\n  </div>\\n</div>\\n<dk-app-search-help></dk-app-search-help>\\n\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {SearchHelpMeta, EntityService, SearchHelp, SearchHelpComponent, SearchHelpMethod, Attribute, RelationMeta} from 'jor-angular';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {UniqueSearchHelpValidator} from '../../model-validators';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\n\n@Component({\n  selector: 'app-search-help-detail',\n  templateUrl: './search-help-detail.component.html',\n  styleUrls: ['./search-help-detail.component.css']\n})\nexport class SearchHelpDetailComponent implements OnInit {\n\n  searchHelpMeta: SearchHelpMeta;\n  readonly = true;\n  isNewMode = false;\n  searchHelpForm: FormGroup;\n  changedSearchHelp = {};\n  relationsOfEntity = [];\n  bypassProtection = false;\n  isSearchListShown = true;\n  behaviours = [\n    {key: 'A', value: 'Search automatically when popup'},\n    {key: 'M', value: 'Search manually'}\n  ];\n  relationAttributesMap = {};\n  entitySearchHelp: SearchHelp;\n\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent !: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueSearchHelpValidator: UniqueSearchHelpValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n  }\n\n  get searchHelpFieldsFormArray() {\n    return this.searchHelpForm.get('FIELDS') as FormArray;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const searchHelpID = params.get('searchHelpID');\n        if (searchHelpID === 'new') {\n          const searchHelp = new SearchHelpMeta();\n          searchHelp.SEARCH_HELP_ID = '';\n          searchHelp.SEARCH_HELP_DESC = '';\n          searchHelp.BEHAVIOUR = 'A'; // A: Auto-Trigger Search, M: Manual-Trigger Search\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return of(searchHelp);\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return this.entityService.getSearchHelp(searchHelpID);\n        }\n      })\n    ).subscribe(data => {\n      if ( 'msgName' in data) {\n        this.messageService.clearMessages();\n        this.searchHelpMeta = null;\n        this.searchHelpForm = null;\n        this.messageService.report(<Message>data);\n      } else {\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.searchHelpMeta = <SearchHelpMeta>data;\n        this._generateSearchHelpForm();\n        this._getRelationsOfEntity( this.searchHelpForm, false);\n        this.searchHelpFieldsFormArray.controls.forEach( field =>\n          this._getAttributesOfRelation(field, false ));\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  _generateSearchHelpForm(): void {\n    if (this.searchHelpForm) {\n      this.searchHelpForm.markAsPristine({onlySelf: false});\n      this.searchHelpForm.get('SEARCH_HELP_ID').setValue(this.searchHelpMeta.SEARCH_HELP_ID);\n      this.searchHelpForm.get('SEARCH_HELP_DESC').setValue(this.searchHelpMeta.SEARCH_HELP_DESC);\n      this.searchHelpForm.get('ENTITY_ID').setValue(this.searchHelpMeta.ENTITY_ID);\n      this.searchHelpForm.get('RELATION_ID').setValue(this.searchHelpMeta.RELATION_ID);\n      this.searchHelpForm.get('BEHAVIOUR').setValue(this.searchHelpMeta.BEHAVIOUR);\n      this.searchHelpForm.get('MULTI').setValue(this.searchHelpMeta.MULTI);\n      this.searchHelpForm.get('FUZZY_SEARCH').setValue(this.searchHelpMeta.FUZZY_SEARCH);\n      this.searchHelpFieldsFormArray.clear();\n      if (this.readonly) {\n        this.searchHelpForm.get('BEHAVIOUR').disable();\n        this.searchHelpForm.get('MULTI').disable();\n        this.searchHelpForm.get('FUZZY_SEARCH').disable();\n        this.searchHelpForm.get('RELATION_ID').disable();\n      }\n    } else {\n      this.searchHelpForm = this.fb.group({\n        SEARCH_HELP_ID: [this.searchHelpMeta.SEARCH_HELP_ID, {updateOn: 'blur'}],\n        SEARCH_HELP_DESC: [this.searchHelpMeta.SEARCH_HELP_DESC],\n        ENTITY_ID: [this.searchHelpMeta.ENTITY_ID],\n        RELATION_ID: [{value: this.searchHelpMeta.RELATION_ID, disabled: this.readonly}],\n        BEHAVIOUR: [{value: this.searchHelpMeta.BEHAVIOUR, disabled: this.readonly}],\n        MULTI: [{value: this.searchHelpMeta.MULTI, disabled: this.readonly}],\n        FUZZY_SEARCH: [{value: this.searchHelpMeta.FUZZY_SEARCH, disabled: this.readonly}],\n        FIELDS: this.fb.array([])\n      });\n    }\n    this._setNewModeState();\n\n    if (this.searchHelpMeta.FIELDS) {\n      this.searchHelpMeta.FIELDS.forEach( field => {\n        this.searchHelpFieldsFormArray.push(\n          this.fb.group({\n            RELATION_ID: [{value: field.RELATION_ID, disabled: this.readonly}],\n            FIELD_NAME: [{value: field.FIELD_NAME, disabled: this.readonly}],\n            FIELD_DESC: [field.FIELD_DESC],\n            IMPORT: [{value: field.IMPORT, disabled: this.readonly}],\n            EXPORT: [{value: field.EXPORT, disabled: this.readonly}],\n            IE_FIELD_NAME: [field.IE_FIELD_NAME],\n            LIST_POSITION: [field.LIST_POSITION],\n            FILTER_POSITION: [field.FILTER_POSITION],\n            FILTER_DISP_ONLY: [{value: field.FILTER_DISP_ONLY, disabled: this.readonly}],\n            DEFAULT_VALUE: [field.DEFAULT_VALUE]\n          })\n        );\n      });\n    }\n  }\n\n  _setNewModeState() {\n    if (this.isNewMode) {\n      this.searchHelpForm.get('SEARCH_HELP_ID').setValidators(this._validateSearchHelpID);\n      this.searchHelpForm.get('SEARCH_HELP_ID').setAsyncValidators(\n        this.uniqueSearchHelpValidator.validate.bind(this.uniqueSearchHelpValidator));\n      this.searchHelpForm.get('BEHAVIOUR').enable();\n      this.searchHelpForm.get('MULTI').enable();\n      this.searchHelpForm.get('FUZZY_SEARCH').enable();\n      this.searchHelpForm.get('RELATION_ID').enable();\n      this.searchHelpForm.get('BEHAVIOUR').markAsDirty(); // Default value mark as dirty\n    } else {\n      this.searchHelpForm.get('SEARCH_HELP_ID').clearValidators();\n      this.searchHelpForm.get('SEARCH_HELP_ID').clearAsyncValidators();\n      this.searchHelpForm.get('SEARCH_HELP_ID').updateValueAndValidity();\n    }\n  }\n\n  _validateSearchHelpID(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Search Help ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().length > 32) {\n      return {message: 'Search Help ID must have length less than 32!'};\n    }\n    return null;\n  }\n\n  _validateEntityID(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give an entity'};\n    }\n    return null;\n  }\n  _validateRelationID(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give a relation'};\n    }\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Search Help?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.searchHelpMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.searchHelpForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateSearchHelpForm();\n            this.searchHelpForm.reset(this.searchHelpForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this._switch2EditMode();\n    }\n\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this.searchHelpForm.get('BEHAVIOUR').disable();\n    this.searchHelpForm.get('MULTI').disable();\n    this.searchHelpForm.get('FUZZY_SEARCH').disable();\n    this.searchHelpForm.get('RELATION_ID').disable();\n    this.searchHelpFieldsFormArray.controls.forEach(field => {\n      field.get('RELATION_ID').disable();\n      field.get('FIELD_NAME').disable();\n      field.get('IMPORT').disable();\n      field.get('EXPORT').disable();\n      field.get('FILTER_DISP_ONLY').disable();\n    });\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n    this.searchHelpForm.get('BEHAVIOUR').enable();\n    this.searchHelpForm.get('MULTI').enable();\n    this.searchHelpForm.get('FUZZY_SEARCH').enable();\n    this.searchHelpForm.get('RELATION_ID').enable();\n    this.searchHelpFieldsFormArray.controls.forEach(field => {\n      field.get('RELATION_ID').enable();\n      field.get('FIELD_NAME').enable();\n      field.get('IMPORT').enable();\n      field.get('EXPORT').enable();\n      field.get('FILTER_DISP_ONLY').enable();\n    });\n  }\n\n  onChangeSearchHelpID(): void {\n    this.modelService.updateSearchHelpID(this.searchHelpForm.get('SEARCH_HELP_ID').value);\n  }\n\n  onChangeSearchHelpDesc(): void {\n    this.modelService.updateSearchHelpDesc(this.searchHelpForm.get('SEARCH_HELP_DESC').value);\n  }\n\n  onEntitySearchHelp(control: AbstractControl): void {\n    if (!this.entitySearchHelp) {\n      this.entitySearchHelp = new SearchHelp();\n      this.entitySearchHelp.OBJECT_NAME = 'Entity ID';\n      this.entitySearchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listEntityType(searchTerm);\n      }(this.entityService);\n      this.entitySearchHelp.BEHAVIOUR = 'M';\n      this.entitySearchHelp.MULTI = false;\n      this.entitySearchHelp.FUZZY_SEARCH = true;\n      this.entitySearchHelp.FIELDS = [\n        {FIELD_NAME: 'ENTITY_ID', LIST_HEADER_TEXT: 'Entity', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n        {FIELD_NAME: 'ENTITY_DESC', LIST_HEADER_TEXT: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.entitySearchHelp.READ_ONLY = this.readonly;\n    }\n    const afterExportFn = function (context: any) {\n      return () => context.onChangeEntityID(control);\n    }(this).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.entitySearchHelp, control, afterExportFn);\n  }\n\n  onChangeEntityID(formGroup: AbstractControl): void {\n    this._getRelationsOfEntity(formGroup, true);\n  }\n\n  _getRelationsOfEntity(searchHelpForm: AbstractControl, setDefault: boolean): void {\n    const domainEntityID = searchHelpForm.get('ENTITY_ID').value;\n    if (!domainEntityID) { return; }\n    this.entityService.getRelationMetaOfEntity(domainEntityID)\n      .subscribe(entityRelations => {\n        if (entityRelations[0]['msgType'] === 'E') {\n          searchHelpForm.get('ENTITY_ID').setErrors({message: entityRelations[0]['msgShortText']});\n        } else {\n          this.relationsOfEntity = entityRelations.map(relationMeta => relationMeta.RELATION_ID )\n            .filter(relationId => relationId.substr(0, 2) !== 'rs' );\n          if (setDefault) {\n            searchHelpForm.get('RELATION_ID').setValue(this.relationsOfEntity[0]);\n            searchHelpForm.get('RELATION_ID').markAsDirty();\n            this._getAttributesOfRelation(searchHelpForm, true);\n          }\n        }\n      });\n  }\n\n  onChangeRelationID(formGroup: AbstractControl): void {\n    this._getAttributesOfRelation(formGroup, true);\n  }\n  _getAttributesOfRelation(formGroup: AbstractControl, afterChanges: boolean): void {\n    const relationID = formGroup.get('RELATION_ID').value;\n    if (!relationID) { return; }\n    if (this.relationAttributesMap[relationID]) {\n      if (afterChanges) {\n        this._afterChangeRelationID(formGroup);\n      } else {\n        this.onChangeField(formGroup);\n      }\n    } else {\n      this.entityService.getRelationMeta(relationID)\n        .subscribe((relationMeta: RelationMeta) => {\n          this.relationAttributesMap[relationID] = relationMeta.ATTRIBUTES;\n          if (afterChanges) {\n            this._afterChangeRelationID(formGroup);\n          } else {\n            this.onChangeField(formGroup);\n          }\n        });\n    }\n  }\n  _afterChangeRelationID(formGroup: AbstractControl): void {\n    const relationID = formGroup.get('RELATION_ID').value;\n    if (formGroup.get('FIELD_NAME')) { // Search help field level relation ID change\n      formGroup.get('FIELD_NAME').setValue(this.relationAttributesMap[relationID][0]['ATTR_NAME']);\n      formGroup.get('FIELD_NAME').markAsDirty();\n      formGroup.get('FIELD_DESC').setValue(this.relationAttributesMap[relationID][0]['ATTR_DESC']);\n    } else { // Search help head level relation ID change\n      this.searchHelpFieldsFormArray.clear();\n      this.relationAttributesMap[relationID].forEach( (attribute: Attribute) => {\n        this.searchHelpFieldsFormArray.push(\n          this.fb.group({\n            RELATION_ID: [attribute.RELATION_ID],\n            FIELD_NAME: [attribute.ATTR_NAME],\n            FIELD_DESC: [attribute.ATTR_DESC],\n            IMPORT: [attribute.PRIMARY_KEY],\n            EXPORT: [attribute.PRIMARY_KEY],\n            IE_FIELD_NAME: [''],\n            LIST_POSITION: [attribute.ORDER],\n            FILTER_POSITION: [attribute.ORDER],\n            FILTER_DISP_ONLY: [false],\n            DEFAULT_VALUE: ['']\n          })\n        );\n      });\n      this.searchHelpFieldsFormArray.markAsDirty();\n    }\n  }\n\n  onChangeField(formGroup: AbstractControl): void {\n    const relationID = formGroup.get('RELATION_ID').value;\n    const currAttr = <Attribute>this.relationAttributesMap[relationID].find(\n      (attribute: Attribute) => attribute.ATTR_NAME === formGroup.get('FIELD_NAME').value);\n    formGroup.get('FIELD_DESC').setValue(currAttr.ATTR_DESC);\n  }\n\n  insertField(index: number): void {\n    const mainRelationID = this.searchHelpForm.get('RELATION_ID').value;\n    const firstAttribute = <Attribute>this.relationAttributesMap[mainRelationID][0];\n    this.searchHelpFieldsFormArray.insert(index, this.fb.group({\n      RELATION_ID: [mainRelationID],\n      FIELD_NAME: [firstAttribute.ATTR_NAME],\n      FIELD_DESC: [firstAttribute.ATTR_DESC],\n      IMPORT: [firstAttribute.PRIMARY_KEY],\n      EXPORT: [firstAttribute.PRIMARY_KEY],\n      IE_FIELD_NAME: [''],\n      LIST_POSITION: [0],\n      FILTER_POSITION: [0],\n      FILTER_DISP_ONLY: [false],\n      DEFAULT_VALUE: ['']\n    }));\n  }\n\n  deleteField(index: number): void {\n    if (this.searchHelpFieldsFormArray.length === 1) {\n      this.messageService.reportMessage('MODEL', 'MINIMUM_ONE_SEARCH_FIELD', 'E');\n      return;\n    }\n    this.searchHelpFieldsFormArray.removeAt(index);\n    this.searchHelpFieldsFormArray.markAsDirty();\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.searchHelpForm && this.searchHelpForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.searchHelpForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (this.searchHelpForm.invalid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedSearchHelp['action'] = 'add';\n      this.changedSearchHelp['SEARCH_HELP_ID'] = this.searchHelpForm.get('SEARCH_HELP_ID').value;\n    } else {\n      this.changedSearchHelp['action'] = 'update';\n      this.changedSearchHelp['SEARCH_HELP_ID'] = this.searchHelpMeta.SEARCH_HELP_ID;\n    }\n    if (this.searchHelpForm.get('SEARCH_HELP_DESC').dirty) {\n      this.changedSearchHelp['SEARCH_HELP_DESC'] = this.searchHelpForm.get('SEARCH_HELP_DESC').value;\n    }\n    if (this.searchHelpForm.get('BEHAVIOUR').dirty) {\n      this.changedSearchHelp['BEHAVIOUR'] = this.searchHelpForm.get('BEHAVIOUR').value;\n    }\n    if (this.searchHelpForm.get('MULTI').dirty) {\n      this.changedSearchHelp['MULTI'] = this.searchHelpForm.get('MULTI').value;\n    }\n    if (this.searchHelpForm.get('FUZZY_SEARCH').dirty) {\n      this.changedSearchHelp['FUZZY_SEARCH'] = this.searchHelpForm.get('FUZZY_SEARCH').value;\n    }\n    if (this.searchHelpForm.get('ENTITY_ID').dirty) {\n      this.changedSearchHelp['ENTITY_ID'] = this.searchHelpForm.get('ENTITY_ID').value;\n    }\n    if (this.searchHelpForm.get('RELATION_ID').dirty) {\n      this.changedSearchHelp['RELATION_ID'] = this.searchHelpForm.get('RELATION_ID').value;\n    }\n    if (this.searchHelpForm.get('FIELDS').dirty) {\n      this.changedSearchHelp['FIELDS'] = [];\n      this.searchHelpForm.get('FIELDS').value.forEach( field => {\n        if (field.FIELD_NAME) {\n          this.changedSearchHelp['FIELDS'].push(field);\n        }\n      });\n    }\n    this.entityService.saveSearchHelp(this.changedSearchHelp)\n      .subscribe(data => this._postActivityAfterSavingSearchHelp(data));\n  }\n\n  _postActivityAfterSavingSearchHelp(data: any) {\n    this.changedSearchHelp = {};\n    if (data['SEARCH_HELP_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/search-help/' + data['SEARCH_HELP_ID']],\n          {state: {message: this.messageService.generateMessage(\n                'MODEL', 'SEARCH_HELP_SAVED', 'S', data['SEARCH_HELP_ID'])}});\n      } else {\n        this._switch2DisplayMode();\n        this.searchHelpMeta = data;\n        this._generateSearchHelpForm();\n        this.searchHelpFieldsFormArray.controls.forEach( field =>\n          this._getAttributesOfRelation(field, false ));\n        this.messageService.reportMessage('MODEL', 'SEARCH_HELP_SAVED', 'S', data['SEARCH_HELP_ID']);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"searchHelpMeta\\\" [formGroup]=\\\"searchHelpForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"searchHelp\\\" class=\\\"col-form-label form-control-sm\\\">Search Help:\\n      <span [class.ng-invalid]=\\\"searchHelpForm.get('SEARCH_HELP_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{searchHelpForm.get('SEARCH_HELP_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"searchHelp\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           (change)=\\\"onChangeSearchHelpID()\\\" name=\\\"searchHelp\\\" formControlName=\\\"SEARCH_HELP_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"searchHelp-desc\\\" class=\\\"col-form-label form-control-sm\\\">Search Help Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"searchHelp-desc\\\" name=\\\"searchHelp-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"SEARCH_HELP_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeSearchHelpDesc()\\\"></textarea>\\n  </div>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">Search Help Definition</div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"card mb-2\\\">\\n        <div class=\\\"ml-4 mt-2\\\">\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"ENTITY_ID\\\">Entity and Relation:\\n            <span [class.ng-invalid]=\\\"searchHelpForm.get('ENTITY_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n                  {{searchHelpForm.get('ENTITY_ID').errors?.message}}\\n            </span>\\n          </label>\\n        </div>\\n        <div class=\\\"card-body row\\\">\\n          <div class=\\\"input-group col-lg-4 ml-1\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ENTITY_ID\\\" id=\\\"ENTITY_ID\\\" name=\\\"ENTITY_ID\\\" placeholder=\\\"Entity Type\\\"\\n                   class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeEntityID(searchHelpForm)\\\">\\n            <div class=\\\"input-group-append\\\">\\n              <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchEntity\\\"\\n                      (click)=\\\"onEntitySearchHelp(searchHelpForm)\\\">\\n                <span class=\\\"fas fa-search\\\"></span>\\n              </button>\\n            </div>\\n          </div>\\n          <select formControlName=\\\"RELATION_ID\\\" class=\\\"form-control form-control-sm col-lg-4 ml-2 mr-3\\\"\\n                  (change)=\\\"onChangeRelationID(searchHelpForm)\\\">\\n            <option *ngFor=\\\"let relation of relationsOfEntity\\\" [value]=\\\"relation\\\">{{relation}}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"card mb-2\\\">\\n        <div class=\\\"card-body row\\\">\\n          <div class=\\\"form-group row col-lg-5 mr-2\\\">\\n            <label class=\\\"col-form-label col-form-label-sm col-4 text-right\\\" for=\\\"behaviour\\\">Behaviour:</label>\\n            <select formControlName=\\\"BEHAVIOUR\\\" class=\\\"form-control form-control-sm col-8\\\" id=\\\"behaviour\\\">\\n              <option *ngFor=\\\"let opt of behaviours\\\" [value]=\\\"opt.key\\\">{{opt.value}}</option>\\n            </select>\\n          </div>\\n          <div class=\\\"form-check col-lg-3 ml-4\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"MULTI\\\" id=\\\"Multiple\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"Multiple\\\">Multiple Values</label>\\n          </div>\\n<!--          <div class=\\\"form-check col-lg-3 ml-4\\\">-->\\n<!--            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"FUZZY_SEARCH\\\" id=\\\"fuzzySearch\\\">-->\\n<!--            <label class=\\\"form-check-label\\\" for=\\\"fuzzySearch\\\">Fuzzy Search</label>-->\\n<!--          </div>-->\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">Search Help Fields</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered dk-table\\\">\\n        <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Relation</th>\\n          <th scope=\\\"col\\\">Field Name</th>\\n          <th scope=\\\"col\\\">Field Description</th>\\n          <th scope=\\\"col\\\" title=\\\"Import the value to the filter\\\">I</th>\\n          <th scope=\\\"col\\\" title=\\\"Export the value when selected\\\">E</th>\\n          <th scope=\\\"col\\\">Alias</th>\\n          <th scope=\\\"col\\\" title=\\\"Position in the list\\\">L.P.</th>\\n          <th scope=\\\"col\\\" title=\\\"Position in the filter\\\">F.P.</th>\\n          <th scope=\\\"col\\\" title=\\\"Display on in the filter\\\">Disp</th>\\n          <th scope=\\\"col\\\" title=\\\"Default value in the filter\\\">Default</th>\\n          <th scope=\\\"col\\\">Actions</th>\\n        </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"FIELDS\\\">\\n        <tr *ngFor=\\\"let fieldForm of searchHelpFieldsFormArray.controls; let i = index\\\">\\n          <td [formGroup]=\\\"fieldForm\\\" class=\\\"dk-selection\\\">\\n            <div class=\\\"input-group\\\">\\n              <select formControlName=\\\"RELATION_ID\\\" class=\\\"form-control form-control-sm\\\"\\n                      (change)=\\\"onChangeRelationID(fieldForm)\\\">\\n                <option *ngFor=\\\"let relation of relationsOfEntity\\\" [value]=\\\"relation\\\">{{relation}}</option>\\n              </select>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\" class=\\\"dk-selection\\\">\\n            <div class=\\\"input-group\\\">\\n              <select formControlName=\\\"FIELD_NAME\\\" class=\\\"form-control form-control-sm\\\"\\n                      (change)=\\\"onChangeField(fieldForm)\\\">\\n                <option *ngFor=\\\"let attribute of relationAttributesMap[fieldForm.get('RELATION_ID').value]\\\"\\n                        [value]=\\\"attribute['ATTR_NAME']\\\">{{attribute['ATTR_NAME']}}</option>\\n              </select>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\" class=\\\"dk-description\\\">\\n            <input  type=\\\"text\\\" formControlName=\\\"FIELD_DESC\\\" class=\\\"form-control\\\" maxlength=\\\"100\\\" readonly>\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"IMPORT\\\">\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"EXPORT\\\">\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\" class=\\\"dk-string\\\">\\n            <input  type=\\\"text\\\" formControlName=\\\"IE_FIELD_NAME\\\" class=\\\"form-control form-control-sm\\\"  [readonly]=\\\"readonly\\\">\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\" class=\\\"dk-number\\\">\\n            <input type=\\\"number\\\" min=\\\"0\\\" formControlName=\\\"LIST_POSITION\\\" class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\">\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\" class=\\\"dk-number\\\">\\n            <input type=\\\"number\\\" min=\\\"0\\\" formControlName=\\\"FILTER_POSITION\\\" class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\">\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\">\\n            <input type=\\\"checkbox\\\" formControlName=\\\"FILTER_DISP_ONLY\\\">\\n          </td>\\n          <td [formGroup]=\\\"fieldForm\\\" class=\\\"dk-string\\\">\\n            <input  type=\\\"text\\\" formControlName=\\\"DEFAULT_VALUE\\\" class=\\\"form-control form-control-sm\\\"  [readonly]=\\\"readonly\\\">\\n          </td>\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"insertField(i)\\\" title=\\\"Insert\\\">\\n              <span class=\\\"fas fa-plus\\\"></span>\\n            </button>\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteField(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\";","import { Component, OnInit } from '@angular/core';\nimport { RelationshipH} from 'jor-angular';\nimport {Subject} from 'rxjs';\nimport {EntityService} from 'jor-angular';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {IdentityService} from '../../identity.service';\n\n@Component({\n  selector: 'app-relationship',\n  templateUrl: './relationship.component.html',\n  styleUrls: ['./relationship.component.css']\n})\nexport class RelationshipComponent implements OnInit {\n  relationshipList: RelationshipH[];\n  isSearchListShown = true;\n  private searchTerms = new Subject<string>();\n  private theSelectedRelationship: RelationshipH;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private identityService: IdentityService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listRelationship(term)),\n    ).subscribe(data => {\n      this.relationshipList = data;\n      let relationshipID;\n      if (this.route.snapshot.firstChild) {\n        relationshipID = this.route.snapshot.firstChild.paramMap.get('relationshipID');\n      }\n      if (relationshipID ) {\n        if (relationshipID === 'new') {\n          this._newRelationship();\n        } else {\n          this.onSelect(this.relationshipList.find(relationship => relationship.RELATIONSHIP_ID === relationshipID));\n        }\n      }\n    });\n    this.searchRelationship(''); // The initial list\n\n    this.modelService.theSelectedRelationship$.subscribe( data => {\n      if (this.theSelectedRelationship) {\n        this.theSelectedRelationship.RELATIONSHIP_ID = data['RELATIONSHIP_ID'];\n        this.theSelectedRelationship.RELATIONSHIP_DESC = data['RELATIONSHIP_DESC'];\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.relationshipList[0] && !this.relationshipList[0].CREATE_TIME) {\n        this.relationshipList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const relationshipID = this.route.snapshot.firstChild.paramMap.get('relationshipID');\n        if (relationshipID) {\n          if (relationshipID === 'new') {\n            this.onSelect(this.relationshipList[0]);\n          } else {\n            this.onSelect(this.relationshipList.find(relationship => relationship.RELATIONSHIP_ID === relationshipID));\n          }\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  onSelect(relationship: RelationshipH): void {\n    if (relationship) {\n      this.theSelectedRelationship = relationship;\n      this.modelService.setSelectedRelationship(relationship);\n    }\n  }\n\n  searchRelationship(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  newRelationship(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('relationshipID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newRelationship();\n      this.router.navigate(['/model/relationship/new']);\n    }\n  }\n\n  _newRelationship(): void {\n    this.theSelectedRelationship = new RelationshipH();\n    this.theSelectedRelationship.RELATIONSHIP_ID = 'new';\n    this.theSelectedRelationship.RELATIONSHIP_DESC = 'description';\n    this.theSelectedRelationship.VERSION_NO = 1;\n    this.theSelectedRelationship.LAST_CHANGE_BY = this.identityService.Session.USER_ID;\n    this.theSelectedRelationship.LAST_CHANGE_TIME = this.identityService.CurrentTime;\n    this.modelService.setSelectedRelationship(this.theSelectedRelationship);\n    this.relationshipList.splice(0, 0, this.theSelectedRelationship);\n  }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Attribute, RelationshipMeta} from 'jor-angular';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {AttributeMetaComponent} from '../../attribute-meta/attribute-meta.component';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {EntityService} from 'jor-angular';\nimport {msgStore} from '../../../msgStore';\nimport {switchMap} from 'rxjs/operators';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {UniqueRelationshipValidator} from '../../model-validators';\nimport {SearchHelp, SearchHelpMethod} from 'jor-angular';\nimport {SearchHelpComponent} from 'jor-angular';\n\n@Component({\n  selector: 'app-relationship-detail',\n  templateUrl: './relationship-detail.component.html',\n  styleUrls: ['./relationship-detail.component.css']\n})\nexport class RelationshipDetailComponent implements OnInit {\n  relationshipMeta: RelationshipMeta;\n  attributes: Attribute[];\n  readonly = true;\n  isNewMode = false;\n  relationshipForm: FormGroup;\n  changedRelationship = {};\n  bypassProtection = false;\n  isSearchListShown = true;\n  roleSearchHelp: SearchHelp;\n\n  @ViewChild(AttributeMetaComponent, {static: false})\n  private attrComponent!: AttributeMetaComponent;\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent!: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueRelationshipValidator: UniqueRelationshipValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  get involveFormArray() {\n    return this.relationshipForm.get('INVOLVES') as FormArray;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const relationshipID = params.get('relationshipID');\n        if (relationshipID === 'new') {\n          const relationship = new RelationshipMeta();\n          relationship.RELATIONSHIP_ID = 'rs_';\n          relationship.RELATIONSHIP_DESC = '';\n          relationship.VALID_PERIOD = 0;\n          relationship.SINGLETON = false;\n          relationship.INVOLVES = [];\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return forkJoin(of(relationship), of([]));\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return forkJoin([\n            this.entityService.getRelationship(relationshipID),\n            this.entityService.getRelationMeta(relationshipID)\n          ]);\n        }\n      })\n    ).subscribe(data => {\n      if ( 'msgName' in data[0]) {\n        this.messageService.clearMessages();\n        this.relationshipMeta = null;\n        this.relationshipForm = null;\n        this.messageService.report(<Message>data[0]);\n      } else {\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.relationshipMeta = data[0];\n        this.attributes = 'msgName' in data[1] ? [] : data[1]['ATTRIBUTES'];\n        this._generateRelationshipForm();\n        if (this.readonly) {\n          this.relationshipForm.get('TIME_DEPENDENT').disable();\n          this.relationshipForm.get('SINGLETON').disable();\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  onSearchHelp(control: AbstractControl, rowID: number): void {\n    if (!this.roleSearchHelp) {\n      this.roleSearchHelp = new SearchHelp();\n      this.roleSearchHelp.OBJECT_NAME = 'Role';\n      this.roleSearchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listRole(searchTerm);\n      }(this.entityService);\n      this.roleSearchHelp.BEHAVIOUR = 'A';\n      this.roleSearchHelp.MULTI = false;\n      this.roleSearchHelp.FUZZY_SEARCH = true;\n      this.roleSearchHelp.FIELDS = [\n        {FIELD_NAME: 'ROLE_ID', LIST_HEADER_TEXT: 'Role', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n        {FIELD_NAME: 'ROLE_DESC', LIST_HEADER_TEXT: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.roleSearchHelp.READ_ONLY = this.readonly || this.oldInvolve(control) && control.valid;\n    }\n    const afterExportFn = function (context: any, ruleIdx: number) {\n      return () => context.onChangeRoleID(ruleIdx, true);\n    }(this, rowID).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.roleSearchHelp, control, afterExportFn);\n  }\n\n  _generateRelationshipForm(): void {\n    if (this.relationshipForm) {\n      this.relationshipForm.markAsPristine({onlySelf: false});\n      this.relationshipForm.get('RELATIONSHIP_ID').setValue(this.relationshipMeta.RELATIONSHIP_ID);\n      this.relationshipForm.get('RELATIONSHIP_DESC').setValue(this.relationshipMeta.RELATIONSHIP_DESC);\n      this.relationshipForm.get('TIME_DEPENDENT').setValue(this.relationshipMeta.VALID_PERIOD > 0);\n      this.relationshipForm.get('VALID_PERIOD').setValue(this.relationshipMeta.VALID_PERIOD);\n      this.relationshipForm.get('SINGLETON').setValue(this.relationshipMeta.SINGLETON);\n      this.relationshipForm.removeControl('ATTRIBUTES');\n    } else {\n      this.relationshipForm = this.fb.group({\n        RELATIONSHIP_ID: [this.relationshipMeta.RELATIONSHIP_ID, {updateOn: 'blur'}],\n        RELATIONSHIP_DESC: [this.relationshipMeta.RELATIONSHIP_DESC],\n        TIME_DEPENDENT: [this.relationshipMeta.VALID_PERIOD > 0],\n        VALID_PERIOD: [this.relationshipMeta.VALID_PERIOD, this._validateValidPeriod],\n        SINGLETON: [this.relationshipMeta.SINGLETON]\n      });\n    }\n\n    // Compose Involves\n    const formArray = [];\n    this.relationshipMeta.INVOLVES.forEach( involve => {\n      formArray.push(this.fb.group({\n        ROLE_ID: [involve.ROLE_ID],\n        ROLE_DESC: [involve.ROLE_DESC],\n        CARDINALITY: [{value: involve.CARDINALITY, disabled: this.readonly}],\n        DIRECTION: [involve.DIRECTION]\n      }));\n    });\n\n    if (this.isNewMode) {\n      this.relationshipForm.get('RELATIONSHIP_ID').setValidators(this._validateRelationshipID);\n      this.relationshipForm.get('RELATIONSHIP_ID').setAsyncValidators(\n        this.uniqueRelationshipValidator.validate.bind(this.uniqueRelationshipValidator));\n      this.relationshipForm.get('TIME_DEPENDENT').enable();\n      formArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CARDINALITY: ['[1..1]'],\n          DIRECTION: ['']\n        }));\n    } else {\n      this.relationshipForm.get('RELATIONSHIP_ID').clearValidators();\n      this.relationshipForm.get('RELATIONSHIP_ID').clearAsyncValidators();\n      this.relationshipForm.get('RELATIONSHIP_ID').updateValueAndValidity();\n    }\n\n    this.relationshipForm.setControl('INVOLVES', new FormArray(formArray));\n  }\n\n  _validateRelationshipID(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Relationship ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().toLowerCase().substr(0, 3) !== 'rs_') {\n      return {message: 'Relationship ID must be started with \"rs_\"!'};\n    }\n\n    if (c.value.toString().length < 4) {\n      return {message: 'Relationship ID must have length larger than 3!'};\n    }\n    if (c.value.toString().length > 32) {\n      return {message: 'Relationship ID must have length less than 32!'};\n    }\n    return null;\n  }\n\n  _validateValidPeriod(c: FormControl) {\n    if (c.parent && c.parent.value.TIME_DEPENDENT && c.value <= 0) {\n      return {message: 'must be larger than 0'};\n    }\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Relationship?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.relationshipMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.relationshipForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateRelationshipForm();\n            this.relationshipForm.reset(this.relationshipForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this.readonly = false;\n      this.relationshipForm.get('TIME_DEPENDENT').enable();\n      this.relationshipForm.get('SINGLETON').enable();\n      this.attrComponent.switchEditDisplay(this.readonly);\n      this.involveFormArray.controls.forEach(involveFormGroup => {\n        involveFormGroup.get('CARDINALITY').enable();\n      });\n      this.involveFormArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CARDINALITY: ['[1..1]'],\n          DIRECTION: ['']\n        })\n      );\n    }\n\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this.relationshipForm.get('TIME_DEPENDENT').disable();\n    this.relationshipForm.get('SINGLETON').disable();\n    this.attrComponent.switchEditDisplay(this.readonly);\n    let lastIndex = this.involveFormArray.length - 1;\n    while (lastIndex >= 0 && this.involveFormArray.controls[lastIndex].get('ROLE_ID').value.trim() === '') {\n      this.involveFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n    this.involveFormArray.controls.forEach(involveFormGroup => {\n      involveFormGroup.get('CARDINALITY').disable();\n    });\n  }\n\n  onChangeRelationshipID(): void {\n    this.modelService.updateRelationshipID(this.relationshipForm.get('RELATIONSHIP_ID').value);\n  }\n\n  onChangeTimeDependency(): void {\n    const timeDependent = this.relationshipForm.get('TIME_DEPENDENT').value;\n    const validPeriodCtrl = this.relationshipForm.get('VALID_PERIOD');\n    const relationID = this.relationshipForm.get('RELATIONSHIP_ID').value;\n    const attrFormArray = this.relationshipForm.get('ATTRIBUTES') as FormArray;\n    if (timeDependent) {\n      validPeriodCtrl.setValue(31536000); // 3600 * 24 * 365\n      validPeriodCtrl.markAsDirty();\n      validPeriodCtrl.enable();\n      const validFromFormGroup = this.fb.group({\n        ATTR_GUID: [''],\n        RELATION_ID: [relationID],\n        ATTR_NAME: ['VALID_FROM'],\n        ATTR_DESC: ['Valid from'],\n        DATA_ELEMENT: [''],\n        DATA_TYPE: [{value: 8, disabled: true}],\n        DATA_LENGTH: [null],\n        DECIMAL: [null],\n        ORDER: [null],\n        PRIMARY_KEY: [false],\n        AUTO_INCREMENT: [false]\n      });\n      validFromFormGroup.markAsDirty();\n      attrFormArray.insert(attrFormArray.length - 1, validFromFormGroup);\n      const validToFormGroup = this.fb.group({\n        ATTR_GUID: [''],\n        RELATION_ID: [relationID],\n        ATTR_NAME: ['VALID_TO'],\n        ATTR_DESC: ['Valid to'],\n        DATA_ELEMENT: [''],\n        DATA_TYPE: [{value: 8, disabled: true}],\n        DATA_LENGTH: [null],\n        DECIMAL: [null],\n        ORDER: [null],\n        PRIMARY_KEY: [false],\n        AUTO_INCREMENT: [false]\n      });\n      validToFormGroup.markAsDirty();\n      attrFormArray.insert(attrFormArray.length - 1, validToFormGroup);\n    } else {\n      validPeriodCtrl.setValue(0);\n      validPeriodCtrl.disable();\n      validPeriodCtrl.markAsDirty();\n      const attributeValidFromIndex = attrFormArray.controls.findIndex(\n        attrCtrl => attrCtrl.get('ATTR_NAME').value === 'VALID_FROM');\n      if (attributeValidFromIndex >= 0) { this.attrComponent.deleteAttribute(attributeValidFromIndex); }\n      const attributeValidToIndex = attrFormArray.controls.findIndex(\n        attrCtrl => attrCtrl.get('ATTR_NAME').value === 'VALID_TO');\n      if (attributeValidToIndex >= 0) { this.attrComponent.deleteAttribute(attributeValidToIndex); }\n    }\n\n  }\n\n  onChangeRelationshipDesc(): void {\n    this.modelService.updateRelationshipDesc(this.relationshipForm.get('RELATIONSHIP_DESC').value);\n  }\n\n  deleteInvolve(index: number): void {\n    if (index !== this.involveFormArray.length - 1) {\n      const currentRoleID = this.involveFormArray.at(index).get('ROLE_ID').value;\n      this.involveFormArray.removeAt(index);\n      this.involveFormArray.markAsDirty();\n      const attrFormArray = this.relationshipForm.get('ATTRIBUTES') as FormArray;\n      const attributeInstanceGUIDIndex = attrFormArray.controls.findIndex(\n        attrCtrl => attrCtrl.get('ATTR_NAME').value === currentRoleID + '_INSTANCE_GUID');\n      if (attributeInstanceGUIDIndex >= 0) { this.attrComponent.deleteAttribute(attributeInstanceGUIDIndex); }\n      const attributeEntityIDIndex = attrFormArray.controls.findIndex(\n        attrCtrl => attrCtrl.get('ATTR_NAME').value === currentRoleID + '_ENTITY_ID');\n      if (attributeEntityIDIndex >= 0) { this.attrComponent.deleteAttribute(attributeEntityIDIndex); }\n    }\n  }\n\n  onChangeRoleID(index: number): void {\n    const currentInvolveFormGroup = this.involveFormArray.controls[index];\n    if (this.involveFormArray.controls.findIndex((involveCtrl, i) =>\n      i !== index && involveCtrl.get('ROLE_ID').value === currentInvolveFormGroup.get('ROLE_ID').value\n    ) !== -1) {\n      currentInvolveFormGroup.get('ROLE_ID').setErrors({message: 'Duplicate roles'});\n      return;\n    }\n\n    if (index === this.involveFormArray.length - 1 && currentInvolveFormGroup.value.ROLE_ID.trim() !== '') {\n      // Only work for the last New line\n      this.involveFormArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CARDINALITY: ['[1..1]'],\n          DIRECTION: ['']\n        })\n      );\n    }\n\n    this.entityService.getRoleDesc(currentInvolveFormGroup.value.ROLE_ID).subscribe(data => {\n      if (data['msgCat']) {\n        currentInvolveFormGroup.get('ROLE_ID').setErrors({message: data['msgShortText']});\n      } else {\n        currentInvolveFormGroup.get('ROLE_DESC').setValue(data);\n        const attrFormArray = this.relationshipForm.get('ATTRIBUTES') as FormArray;\n        const relationID = this.relationshipForm.get('RELATIONSHIP_ID').value;\n        const instanceGUIDFormGroup = this.fb.group({\n          ATTR_GUID: [''],\n          RELATION_ID: [relationID],\n          ATTR_NAME: [currentInvolveFormGroup.value.ROLE_ID + '_INSTANCE_GUID'],\n          ATTR_DESC: ['Entity Instance GUID of role ' + currentInvolveFormGroup.value.ROLE_ID],\n          DATA_ELEMENT: [null],\n          DATA_TYPE: [{value: 1, disabled: true}],\n          DATA_LENGTH: [32],\n          DECIMAL: [null],\n          ORDER: [null],\n          PRIMARY_KEY: [false],\n          AUTO_INCREMENT: [false]\n        });\n        instanceGUIDFormGroup.markAsDirty();\n        attrFormArray.insert(attrFormArray.length - 1, instanceGUIDFormGroup);\n        const entityIDFormGroup = this.fb.group({\n          ATTR_GUID: [''],\n          RELATION_ID: [relationID],\n          ATTR_NAME: [currentInvolveFormGroup.value.ROLE_ID + '_ENTITY_ID'],\n          ATTR_DESC: ['Entity ID of role ' + currentInvolveFormGroup.value.ROLE_ID],\n          DATA_ELEMENT: [null],\n          DATA_TYPE: [{value: 1, disabled: true}],\n          DATA_LENGTH: [32],\n          DECIMAL: [null],\n          ORDER: [null],\n          PRIMARY_KEY: [false],\n          AUTO_INCREMENT: [false]\n        });\n        entityIDFormGroup.markAsDirty();\n        attrFormArray.insert(attrFormArray.length - 1, entityIDFormGroup);\n        attrFormArray.markAsDirty();\n      }\n    });\n  }\n\n  oldInvolve(formGroup: AbstractControl): boolean {\n    return this.relationshipMeta.INVOLVES.findIndex( role => role.ROLE_ID === formGroup.get('ROLE_ID').value ) !== -1;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.relationshipForm && this.relationshipForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.relationshipForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (!this.relationshipForm.valid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedRelationship['action'] = 'add';\n      this.changedRelationship['RELATIONSHIP_ID'] = this.relationshipForm.controls['RELATIONSHIP_ID'].value;\n    } else {\n      this.changedRelationship['action'] = 'update';\n      this.changedRelationship['RELATIONSHIP_ID'] = this.relationshipMeta.RELATIONSHIP_ID;\n    }\n    if (this.relationshipForm.controls['RELATIONSHIP_DESC'].dirty) {\n      this.changedRelationship['RELATIONSHIP_DESC'] = this.relationshipForm.controls['RELATIONSHIP_DESC'].value;\n    }\n    if (this.isNewMode || this.relationshipForm.controls['VALID_PERIOD'].dirty) {\n      this.changedRelationship['VALID_PERIOD'] = this.relationshipForm.controls['VALID_PERIOD'].value;\n    }\n    if (this.isNewMode || this.relationshipForm.controls['SINGLETON'].dirty) {\n      this.changedRelationship['SINGLETON'] = this.relationshipForm.controls['SINGLETON'].value;\n    }\n\n    this.changedRelationship['ATTRIBUTES'] = this.attrComponent.processChangedAttributes();\n\n    if (this._processChangedInvolves()) {\n      // console.log(this.changedRelationship);\n      this.entityService.saveRelationship(this.changedRelationship)\n        .subscribe(data => this._postActivityAfterSavingRelationship(data));\n    }\n  }\n\n  _processChangedInvolves(): boolean {\n    if (this.involveFormArray.length <= 2) { // An empty line is included\n      this.messageService.reportMessage('MODEL', 'RELATIONSHIP_LACK_INVOLVED_ROLES', 'E');\n      return false;\n    }\n    const changedInvolves = [];\n    if (this.involveFormArray.dirty) {\n      this.changedRelationship['INVOLVES'] = changedInvolves;\n\n      this.involveFormArray.controls.forEach(involveControl => {\n        if (involveControl.get('ROLE_ID').value.trim() === '') { return; }\n        let action;\n        const index = this.relationshipMeta.INVOLVES.findIndex(\n          involve => involveControl.get('ROLE_ID').value === involve.ROLE_ID);\n        if (index === -1) { // New Add Case\n          action = 'add';\n        } else { // New Update Case\n          if (involveControl.dirty) { action = 'update'; }\n        }\n        if (action) {\n          changedInvolves.push({ action: action, ROLE_ID: involveControl.get('ROLE_ID').value,\n            CARDINALITY: involveControl.get('CARDINALITY').value, DIRECTION: involveControl.get('DIRECTION').value });\n        }\n      });\n\n      // Deletion Case\n      this.relationshipMeta.INVOLVES.forEach(involve => {\n        const index = this.involveFormArray.controls.findIndex(\n          roleControl => roleControl.get('ROLE_ID').value === involve.ROLE_ID);\n        if (index === -1) { // The attribute must be deleted\n          const deletedRole = {action: 'delete', ROLE_ID: involve.ROLE_ID};\n          changedInvolves.push(deletedRole);\n        }\n      });\n    }\n    return true;\n  }\n\n  _postActivityAfterSavingRelationship(data: any) {\n    this.changedRelationship = {};\n    if (data[0] && data[0]['RELATIONSHIP_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/relationship/' + data[0]['RELATIONSHIP_ID']],\n          {state: {message: this.messageService.generateMessage(\n                'MODEL', 'RELATIONSHIP_SAVED', 'S', data[0]['RELATIONSHIP_ID'])}});\n      } else {\n        this.readonly = true;\n        this.relationshipForm.get('TIME_DEPENDENT').disable();\n        this.relationshipForm.get('SINGLETON').disable();\n        this.relationshipMeta = data[0];\n        this.attributes = data[1].ATTRIBUTES;\n        this._generateRelationshipForm();\n        this.messageService.reportMessage(\n          'MODEL', 'RELATIONSHIP_SAVED', 'S', this.relationshipMeta.RELATIONSHIP_ID);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {AbstractControl, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {UniqueDataElementValidator} from '../../model-validators';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {msgStore} from '../../../msgStore';\nimport {switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {DataElementMeta, EntityService, SearchHelp, SearchHelpComponent, SearchHelpField, SearchHelpMethod} from 'jor-angular';\n\n@Component({\n  selector: 'app-data-element-detail',\n  templateUrl: './data-element-detail.component.html',\n  styleUrls: ['./data-element-detail.component.css']\n})\nexport class DataElementDetailComponent implements OnInit {\n  dataElementMeta: DataElementMeta;\n  readonly = true;\n  isNewMode = false;\n  dataElementForm: FormGroup;\n  dataTypes = [];\n  changedDataElement = {};\n  bypassProtection = false;\n  isSearchListShown = true;\n  searchHelpExportField = [];\n  dataDomainSearchHelp: SearchHelp;\n  searchHelpSearchHelp: SearchHelp;\n\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent !: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueDataElementValidator: UniqueDataElementValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n    this.dataTypes = this.modelService.dataTypes;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const elementID = params.get('elementID');\n        if (elementID === 'new') {\n          const dataElement = new DataElementMeta();\n          dataElement.ELEMENT_ID = '';\n          dataElement.ELEMENT_DESC = '';\n          dataElement.DATA_TYPE = 1;\n          dataElement.DATA_LENGTH = 10;\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return of(dataElement);\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return this.entityService.getDataElement(elementID);\n        }})\n    ).subscribe(data => {\n      if ( 'msgName' in data) {\n        this.messageService.clearMessages();\n        this.dataElementMeta = null;\n        this.dataElementForm = null;\n        this.messageService.report(<Message>data);\n      } else {\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.dataElementMeta = <DataElementMeta>data;\n        this._generateDataElementForm();\n        this._getSearchHelpMeta(this.dataElementForm, false);\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  onDataDomainSearchHelp(control: AbstractControl): void {\n    if (!this.dataDomainSearchHelp) {\n      this.dataDomainSearchHelp = new SearchHelp();\n      this.dataDomainSearchHelp.OBJECT_NAME = 'Data Domain';\n      this.dataDomainSearchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listDataDomain(searchTerm);\n      }(this.entityService);\n      this.dataDomainSearchHelp.BEHAVIOUR = 'A';\n      this.dataDomainSearchHelp.MULTI = false;\n      this.dataDomainSearchHelp.FUZZY_SEARCH = true;\n      this.dataDomainSearchHelp.FIELDS = [\n        {FIELD_NAME: 'DOMAIN_ID', LIST_HEADER_TEXT: 'Domain', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n        {FIELD_NAME: 'DOMAIN_DESC', LIST_HEADER_TEXT: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.dataDomainSearchHelp.READ_ONLY = this.readonly || !this.dataElementForm.get('USE_DOMAIN').value;\n    }\n    const afterExportFn = function (context: any) {\n      return () => context.onChangeDataDomain(control);\n    }(this).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.dataDomainSearchHelp, control, afterExportFn);\n  }\n\n  onSearchHelpSearchHelp(control: AbstractControl): void {\n    if (!this.searchHelpSearchHelp) {\n      this.searchHelpSearchHelp = new SearchHelp();\n      this.searchHelpSearchHelp.OBJECT_NAME = 'Search Help';\n      this.searchHelpSearchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listSearchHelp(searchTerm);\n      }(this.entityService);\n      this.searchHelpSearchHelp.BEHAVIOUR = 'M';\n      this.searchHelpSearchHelp.MULTI = false;\n      this.searchHelpSearchHelp.FUZZY_SEARCH = true;\n      this.searchHelpSearchHelp.FIELDS = [\n        {FIELD_NAME: 'SEARCH_HELP_ID', LIST_HEADER_TEXT: 'Search Help', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n        {FIELD_NAME: 'SEARCH_HELP_DESC', LIST_HEADER_TEXT: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.searchHelpSearchHelp.READ_ONLY = this.readonly;\n    }\n    const afterExportFn = function (context: any) {\n      return () => context.onChangeSearchHelp(control);\n    }(this).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.searchHelpSearchHelp, control, afterExportFn);\n  }\n\n  onChangeSearchHelp(formGroup: AbstractControl): void {\n    this._getSearchHelpMeta(formGroup, true);\n  }\n\n  _getSearchHelpMeta(formGroup: AbstractControl, setDefault: boolean): void {\n    const searchHelpCtrl = formGroup.get('SEARCH_HELP_ID');\n    if (!searchHelpCtrl.value) {\n      formGroup.get('SEARCH_HELP_EXPORT_FIELD').setValue('');\n      formGroup.get('SEARCH_HELP_EXPORT_FIELD').markAsDirty();\n      return;\n    }\n    this.entityService.getSearchHelp(searchHelpCtrl.value).subscribe(data => {\n      if (data['msgCat']) {\n        searchHelpCtrl.setErrors({message: data['msgShortText']});\n        if (setDefault) {\n          formGroup.get('SEARCH_HELP_EXPORT_FIELD').setValue('');\n          formGroup.get('SEARCH_HELP_EXPORT_FIELD').markAsDirty();\n        }\n      } else {\n        this.searchHelpExportField = [];\n        const searchHelpFields = <SearchHelpField[]>data['FIELDS'];\n        searchHelpFields.forEach( field => {\n          if (field.EXPORT) {\n            this.searchHelpExportField.push( field.IE_FIELD_NAME || field.FIELD_NAME );\n          }\n        });\n        if (setDefault) {\n          formGroup.get('SEARCH_HELP_EXPORT_FIELD').setValue(this.searchHelpExportField[0]);\n          formGroup.get('SEARCH_HELP_EXPORT_FIELD').markAsDirty();\n        }\n      }\n    });\n  }\n\n  _generateDataElementForm(): void {\n    if (this.dataElementForm) {\n      this.dataElementForm.markAsPristine({onlySelf: false});\n      this.dataElementForm.get('ELEMENT_ID').setValue(this.dataElementMeta.ELEMENT_ID);\n      this.dataElementForm.get('ELEMENT_DESC').setValue(this.dataElementMeta.ELEMENT_DESC);\n      this.dataElementForm.get('LABEL_TEXT').setValue(this.dataElementMeta.LABEL_TEXT);\n      this.dataElementForm.get('LIST_HEADER_TEXT').setValue(this.dataElementMeta.LIST_HEADER_TEXT);\n      this.dataElementForm.get('DOMAIN_ID').setValue(this.dataElementMeta.DOMAIN_ID);\n      this.dataElementForm.get('DATA_TYPE').setValue(this.dataElementMeta.DATA_TYPE);\n      this.dataElementForm.get('DATA_LENGTH').setValue(this.dataElementMeta.DATA_LENGTH);\n      this.dataElementForm.get('DECIMAL').setValue(this.dataElementMeta.DECIMAL);\n      this.dataElementForm.get('SEARCH_HELP_ID').setValue(this.dataElementMeta.SEARCH_HELP_ID);\n      this.dataElementForm.get('SEARCH_HELP_EXPORT_FIELD').setValue(this.dataElementMeta.SEARCH_HELP_EXPORT_FIELD);\n      this.dataElementForm.get('PARAMETER_ID').setValue(this.dataElementMeta.PARAMETER_ID);\n      if (this.dataElementMeta.DOMAIN_ID) {\n        this.dataElementForm.get('USE_DOMAIN').setValue(1);\n        this.dataElementForm.get('DATA_TYPE').disable();\n      } else {\n        this.dataElementForm.get('USE_DOMAIN').setValue(0);\n        this.dataElementForm.get('DATA_TYPE').enable();\n      }\n      if (this.readonly) {\n        this.dataElementForm.get('USE_DOMAIN').disable();\n        this.dataElementForm.get('DOMAIN_ID').disable();\n        this.dataElementForm.get('DATA_TYPE').disable();\n        this.dataElementForm.get('SEARCH_HELP_EXPORT_FIELD').disable();\n      }\n    } else {\n      this.dataElementForm = this.fb.group({\n        ELEMENT_ID: [this.dataElementMeta.ELEMENT_ID, {updateOn: 'blur'}],\n        ELEMENT_DESC: [this.dataElementMeta.ELEMENT_DESC],\n        LABEL_TEXT: [this.dataElementMeta.LABEL_TEXT],\n        LIST_HEADER_TEXT: [this.dataElementMeta.LIST_HEADER_TEXT],\n        DOMAIN_ID: [this.dataElementMeta.DOMAIN_ID],\n        DATA_TYPE: [{value: this.dataElementMeta.DATA_TYPE, disabled: this.readonly}],\n        DATA_LENGTH: [this.dataElementMeta.DATA_LENGTH, [this._validateDataLength]],\n        DECIMAL: [this.dataElementMeta.DECIMAL, [this._validateDecimal]],\n        SEARCH_HELP_ID: [this.dataElementMeta.SEARCH_HELP_ID],\n        SEARCH_HELP_EXPORT_FIELD: [{value: this.dataElementMeta.SEARCH_HELP_EXPORT_FIELD, disabled: this.readonly}],\n        PARAMETER_ID: [this.dataElementMeta.PARAMETER_ID],\n        USE_DOMAIN: [{value: this.dataElementMeta.DOMAIN_ID ? 1 : 0, disabled: this.readonly}]\n      });\n    }\n    this._setNewModeState();\n    if (this.dataElementForm.get('USE_DOMAIN').value) {\n      this.dataElementForm.get('DOMAIN_ID').setValidators(Validators.required);\n      this.onChangeDataDomain(this.dataElementForm);\n    } else {\n      this.dataElementForm.get('DOMAIN_ID').setErrors(null);\n      this.dataElementForm.get('DOMAIN_ID').clearValidators();\n    }\n    this._updateLengthAndDecimal(this.dataElementForm);\n  }\n\n  _setNewModeState() {\n    if (this.isNewMode) {\n      this.dataElementForm.get('ELEMENT_ID').setValidators(this._validateDataElementID);\n      this.dataElementForm.get('ELEMENT_ID').setAsyncValidators(\n        this.uniqueDataElementValidator.validate.bind(this.uniqueDataElementValidator));\n      this.dataElementForm.get('USE_DOMAIN').enable();\n      this.dataElementForm.get('DATA_TYPE').enable();\n      this.dataElementForm.get('DATA_TYPE').markAsDirty(); // Default value mark as dirty\n      this.dataElementForm.get('DATA_LENGTH').markAsDirty(); // Default value mark as dirty\n    } else {\n      this.dataElementForm.get('ELEMENT_ID').clearValidators();\n      this.dataElementForm.get('ELEMENT_ID').clearAsyncValidators() ;\n      this.dataElementForm.get('ELEMENT_ID').updateValueAndValidity();\n    }\n  }\n\n  _validateDataElementID(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Data Element ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().length > 32) {\n      return {message: 'Data Element ID must have length less than 32!'};\n    }\n    return null;\n  }\n\n  _validateDataLength(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give a Length'};\n    }\n    return null;\n  }\n\n  _validateDecimal(c: FormControl) {\n    if (c.enabled && !c.value) {\n      return {message: 'Please give a decimal place'};\n    }\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Data Element?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.dataElementMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.dataElementForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateDataElementForm();\n            this.dataElementForm.reset(this.dataElementForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this._switch2EditMode();\n    }\n\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this.dataElementForm.get('USE_DOMAIN').disable();\n    this.dataElementForm.get('DATA_TYPE').disable();\n    this.dataElementForm.get('SEARCH_HELP_EXPORT_FIELD').disable();\n  }\n\n  _switch2EditMode(): void {\n    this.readonly = false;\n    this.dataElementForm.get('USE_DOMAIN').enable();\n    this.dataElementForm.get('SEARCH_HELP_EXPORT_FIELD').enable();\n    this._setUseDomain(this.dataElementForm);\n  }\n\n  onChangeDataElementID(): void {\n    this.modelService.updateDataElementID(this.dataElementForm.get('ELEMENT_ID').value);\n  }\n\n  onChangeDataElementDesc(): void {\n    this.modelService.updateDataElementDesc(this.dataElementForm.get('ELEMENT_DESC').value);\n  }\n\n  onChangeUseDomain(formGroup: AbstractControl): void {\n    this._setUseDomain(formGroup, true);\n  }\n\n  onChangeDataDomain(formGroup: AbstractControl): void {\n    const dataDomainCtrl = formGroup.get('DOMAIN_ID');\n    this.entityService.getDataDomain(dataDomainCtrl.value).subscribe(data => {\n      if (data['msgCat']) {\n        dataDomainCtrl.setErrors({message: data['msgShortText']});\n      } else {\n        formGroup.get('DATA_TYPE').setValue(data['DATA_TYPE']);\n        formGroup.get('DATA_LENGTH').setValue(data['DATA_LENGTH']);\n        formGroup.get('DECIMAL').setValue(data['DECIMAL']);\n      }\n    });\n  }\n\n  _setUseDomain(formGroup: AbstractControl, markAsDirty: boolean = false): void {\n    if (formGroup.get('USE_DOMAIN').value) {\n      formGroup.get('DOMAIN_ID').enable();\n      formGroup.get('DOMAIN_ID').setValidators(Validators.required);\n      this._invalidField(formGroup.get('DATA_TYPE'), markAsDirty);\n      this._invalidField(formGroup.get('DATA_LENGTH'), markAsDirty);\n      this._invalidField(formGroup.get('DECIMAL'), markAsDirty);\n    } else {\n      this._invalidField(formGroup.get('DOMAIN_ID'), markAsDirty);\n      formGroup.get('DATA_TYPE').enable();\n      formGroup.get('DATA_TYPE').markAsDirty();\n      formGroup.get('DATA_LENGTH').enable();\n      formGroup.get('DATA_LENGTH').markAsDirty();\n      formGroup.get('DECIMAL').enable();\n      formGroup.get('DECIMAL').markAsDirty();\n      if (!formGroup.get('DATA_TYPE').value) {\n        formGroup.get('DATA_TYPE').setValue(1);\n        if (!formGroup.get('DATA_LENGTH').value) {\n          formGroup.get('DATA_LENGTH').setValue(10);\n        }\n      }\n      this._updateLengthAndDecimal(formGroup);\n    }\n  }\n\n  _invalidField(fieldCtrl: AbstractControl, markAsDirty: boolean = false): void {\n    fieldCtrl.clearValidators();\n    fieldCtrl.clearAsyncValidators();\n    fieldCtrl.disable();\n    if (markAsDirty) {\n      fieldCtrl.setValue(null);\n      fieldCtrl.markAsDirty();\n    }\n  }\n\n  onChangeDataType(formGroup: AbstractControl): void {\n    switch (+formGroup.get('DATA_TYPE').value) {\n      case 1: // char\n        formGroup.get('DATA_LENGTH').setValue(10);\n        formGroup.get('DECIMAL').setValue(null);\n        break;\n      case 4: // decimal\n        formGroup.get('DATA_LENGTH').setValue(23);\n        formGroup.get('DECIMAL').setValue(2);\n        break;\n      default:\n        formGroup.get('DATA_LENGTH').setValue(null);\n        formGroup.get('DECIMAL').setValue(null);\n    }\n    formGroup.get('DATA_LENGTH').markAsDirty();\n    formGroup.get('DECIMAL').markAsDirty();\n    this._updateLengthAndDecimal(formGroup);\n  }\n\n  _updateLengthAndDecimal(formGroup: AbstractControl): void {\n    switch (+formGroup.get('DATA_TYPE').value) {\n      case 1: // char\n        formGroup.get('DATA_LENGTH').enable();\n        formGroup.get('DATA_LENGTH').setValidators(this._validateDataLength);\n        formGroup.get('DECIMAL').disable();\n        break;\n      case 4: // decimal\n        formGroup.get('DATA_LENGTH').enable();\n        formGroup.get('DATA_LENGTH').setValidators(this._validateDataLength);\n        formGroup.get('DECIMAL').enable();\n        formGroup.get('DATA_LENGTH').setValidators(this._validateDecimal);\n        break;\n      default:\n        formGroup.get('DATA_LENGTH').disable();\n        formGroup.get('DECIMAL').disable();\n    }\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.dataElementForm && this.dataElementForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.dataElementForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (this.dataElementForm.invalid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedDataElement['action'] = 'add';\n      this.changedDataElement['ELEMENT_ID'] = this.dataElementForm.get('ELEMENT_ID').value;\n    } else {\n      this.changedDataElement['action'] = 'update';\n      this.changedDataElement['ELEMENT_ID'] = this.dataElementMeta.ELEMENT_ID;\n    }\n    if (this.dataElementForm.get('ELEMENT_DESC').dirty) {\n      this.changedDataElement['ELEMENT_DESC'] = this.dataElementForm.get('ELEMENT_DESC').value;\n    }\n    if (this.dataElementForm.get('DOMAIN_ID').dirty) {\n      this.changedDataElement['DOMAIN_ID'] = this.dataElementForm.get('DOMAIN_ID').value;\n    }\n    if (this.dataElementForm.get('DATA_TYPE').dirty) {\n      this.changedDataElement['DATA_TYPE'] = this.dataElementForm.get('USE_DOMAIN').value ?\n        null : this.dataElementForm.get('DATA_TYPE').value;\n    }\n    if (this.dataElementForm.get('DATA_LENGTH').dirty) {\n      this.changedDataElement['DATA_LENGTH'] = this.dataElementForm.get('USE_DOMAIN').value ?\n        null : this.dataElementForm.get('DATA_LENGTH').value;\n    }\n    if (this.dataElementForm.get('DECIMAL').dirty) {\n      this.changedDataElement['DECIMAL'] = this.dataElementForm.get('USE_DOMAIN').value ?\n        null : this.dataElementForm.get('DECIMAL').value;\n    }\n    if (this.dataElementForm.get('LABEL_TEXT').dirty) {\n      this.changedDataElement['LABEL_TEXT'] = this.dataElementForm.get('LABEL_TEXT').value;\n    }\n    if (this.dataElementForm.get('LIST_HEADER_TEXT').dirty) {\n      this.changedDataElement['LIST_HEADER_TEXT'] = this.dataElementForm.get('LIST_HEADER_TEXT').value;\n    }\n    if (this.dataElementForm.get('SEARCH_HELP_ID').dirty) {\n      this.changedDataElement['SEARCH_HELP_ID'] = this.dataElementForm.get('SEARCH_HELP_ID').value;\n    }\n    if (this.dataElementForm.get('SEARCH_HELP_EXPORT_FIELD').dirty) {\n      this.changedDataElement['SEARCH_HELP_EXPORT_FIELD'] = this.dataElementForm.get('SEARCH_HELP_EXPORT_FIELD').value;\n    }\n    if (this.dataElementForm.get('PARAMETER_ID').dirty) {\n      this.changedDataElement['PARAMETER_ID'] = this.dataElementForm.get('PARAMETER_ID').value;\n    }\n    this.entityService.saveDataElement(this.changedDataElement)\n      .subscribe(data => this._postActivityAfterSavingDataElement(data));\n  }\n\n  _postActivityAfterSavingDataElement(data: any) {\n    this.changedDataElement = {};\n    if (data['ELEMENT_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/data-element/' + data['ELEMENT_ID']],\n          {state: {message: this.messageService.generateMessage(\n            'MODEL', 'DATA_ELEMENT_SAVED', 'S', data['ELEMENT_ID'])}});\n      } else {\n        this._switch2DisplayMode();\n        this.dataElementMeta = data;\n        this._generateDataElementForm();\n        this.messageService.reportMessage(\n          'MODEL', 'DATA_ELEMENT_SAVED', 'S', data['ELEMENT_ID']);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { RoleH} from 'jor-angular';\nimport {Subject} from 'rxjs';\nimport {EntityService} from 'jor-angular';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {IdentityService} from '../../identity.service';\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n  styleUrls: ['./role.component.css']\n})\nexport class RoleComponent implements OnInit {\n  roleList: RoleH[];\n  isSearchListShown = true;\n  private searchTerms = new Subject<string>();\n  private theSelectedRole: RoleH;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private identityService: IdentityService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listRole(term)),\n    ).subscribe(data => {\n      this.roleList = data;\n      let roleID;\n      if (this.route.snapshot.firstChild) {\n        roleID = this.route.snapshot.firstChild.paramMap.get('roleID');\n      }\n      if (roleID ) {\n        if (roleID === 'new') {\n          this._newRole();\n        } else {\n          this.onSelect(this.roleList.find(role => role.ROLE_ID === roleID ));\n        }\n      }\n    });\n    this.searchRole(''); // The initial list\n\n    this.modelService.theSelectedRole$.subscribe( data => {\n      if (this.theSelectedRole) {\n        this.theSelectedRole.ROLE_ID = data['ROLE_ID'];\n        this.theSelectedRole.ROLE_DESC = data['ROLE_DESC'];\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.roleList[0] && !this.roleList[0].CREATE_TIME) {\n        this.roleList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const roleID = this.route.snapshot.firstChild.paramMap.get('roleID');\n        if (roleID) {\n          if (roleID === 'new') {\n            this.onSelect(this.roleList[0]);\n          } else {\n            this.onSelect(this.roleList.find(role => role.ROLE_ID === roleID));\n          }\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  onSelect(role: RoleH): void {\n    if (role) {\n      this.theSelectedRole = role;\n      this.modelService.setSelectedRole(role);\n    }\n  }\n\n  searchRole(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  newRole(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('roleID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newRole();\n      this.router.navigate(['/model/role/new']);\n    }\n  }\n\n  _newRole(): void {\n    this.theSelectedRole = new RoleH();\n    this.theSelectedRole.ROLE_ID = 'new';\n    this.theSelectedRole.ROLE_DESC = 'description';\n    this.theSelectedRole.VERSION_NO = 1;\n    this.theSelectedRole.LAST_CHANGE_BY = this.identityService.Session.USER_ID;\n    this.theSelectedRole.LAST_CHANGE_TIME = this.identityService.CurrentTime;\n    this.modelService.setSelectedRole(this.theSelectedRole);\n    this.roleList.splice(0, 0, this.theSelectedRole);\n  }\n\n}\n","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"roleMeta\\\" [formGroup]=\\\"roleForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"role\\\" class=\\\"col-form-label form-control-sm\\\">Role:\\n      <span [class.ng-invalid]=\\\"roleForm.get('ROLE_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{roleForm.get('ROLE_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"role\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           name=\\\"role\\\" formControlName=\\\"ROLE_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"role-desc\\\" class=\\\"col-form-label form-control-sm\\\">Role Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"role-desc\\\" name=\\\"role-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"ROLE_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeRoleDesc()\\\"></textarea>\\n  </div>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\"><span class=\\\"fas fa-user-check\\\"></span> Relation</div>\\n    <div class=\\\"card-body\\\">\\n      <table class=\\\"table table-bordered table-sm\\\">\\n        <thead class=\\\"thead-light\\\">\\n        <tr>\\n          <th scope=\\\"col\\\">Action</th>\\n          <th scope=\\\"col\\\">Relation</th>\\n          <th scope=\\\"col\\\">Description</th>\\n          <th scope=\\\"col\\\">Cardinality</th>\\n        </tr>\\n        </thead>\\n\\n        <tbody formArrayName=\\\"RELATIONS\\\">\\n        <tr *ngFor=\\\"let relationFormGroup of relationFormArray.controls; let i = index\\\">\\n          <td class=\\\"dk-actions\\\">\\n            <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteRelation(i)\\\" title=\\\"Delete\\\">\\n              <span class=\\\"far fa-trash-alt\\\"></span>\\n            </button>\\n          </td>\\n          <td [formGroup]=\\\"relationFormGroup\\\">\\n            <div class=\\\"input-group\\\">\\n              <input class=\\\"form-control form-control-sm\\\" type=\\\"text\\\" formControlName=\\\"RELATION_ID\\\"\\n                     [readonly]=\\\"readonly || oldRelation(relationFormGroup) && relationFormGroup.valid\\\" (change)=\\\"onChangeRelationID(i)\\\">\\n              <div class=\\\"invalid-tooltip\\\">\\n                {{relationFormGroup.get('RELATION_ID').errors?.message}}\\n              </div>\\n              <div class=\\\"input-group-append\\\">\\n                <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchRelation\\\"\\n                        (click)=\\\"onSearchHelp(relationFormGroup, i)\\\">\\n                  <span class=\\\"fas fa-search\\\"></span>\\n                </button>\\n              </div>\\n            </div>\\n          </td>\\n          <td [formGroup]=\\\"relationFormGroup\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"RELATION_DESC\\\" readonly class=\\\"form-control form-control-sm dk-description\\\">\\n          </td>\\n          <td [formGroup]=\\\"relationFormGroup\\\">\\n            <select class=\\\"form-control form-control-sm\\\" formControlName=\\\"CARDINALITY\\\">\\n              <option>[0..1]</option>\\n              <option>[1..1]</option>\\n              <option>[0..n]</option>\\n              <option>[1..n]</option>\\n            </select>\\n          </td>\\n        </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\";","import { Component, OnInit } from '@angular/core';\nimport {EntityService} from 'jor-angular';\nimport {EntityType} from 'jor-angular';\nimport { debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {Subject} from 'rxjs';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {IdentityService} from '../../identity.service';\n\n@Component({\n  selector: 'app-entity-type',\n  templateUrl: './entity-type.component.html',\n  styleUrls: ['./entity-type.component.css']\n})\nexport class EntityTypeComponent implements OnInit {\n  entityTypeList: EntityType[];\n  isSearchListShown = true;\n\n  private searchTerms = new Subject<string>();\n  private theSelectedEntityType: EntityType;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private identityService: IdentityService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listEntityType(term)),\n    ).subscribe(data => {\n      this.entityTypeList = data;\n      let entityID;\n      if (this.route.snapshot.firstChild) {\n        entityID = this.route.snapshot.firstChild.paramMap.get('entityID');\n      }\n      if (entityID ) {\n        if (entityID === 'new') {\n          this._newEntityType();\n        } else {\n          this.onSelect(this.entityTypeList.find(entityType => entityType.ENTITY_ID === entityID));\n        }\n      }\n    });\n    this.searchEntityType(''); // The initial list\n\n    this.modelService.theSelectedEntityType$.subscribe( data => {\n      if (this.theSelectedEntityType) {\n        this.theSelectedEntityType.ENTITY_ID = data.ENTITY_ID;\n        this.theSelectedEntityType.ENTITY_DESC = data.ENTITY_DESC;\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.entityTypeList[0] && !this.entityTypeList[0].CREATE_TIME) {\n        this.entityTypeList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const entityID = this.route.snapshot.firstChild.paramMap.get('entityID');\n        if (entityID) {\n          if (entityID === 'new') {\n            this.onSelect(this.entityTypeList[0]);\n          } else {\n            this.onSelect(this.entityTypeList.find(entityType => entityType.ENTITY_ID === entityID));\n          }\n        }\n      }\n    });\n  }\n\n  onSelect(entityType: EntityType): void {\n    if (entityType) {\n      this.theSelectedEntityType = entityType;\n      this.modelService.setSelectedEntityType(entityType);\n    }\n  }\n\n  searchEntityType(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  newEntityType(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('entityID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newEntityType();\n      this.router.navigate(['/model/entity-type/new']);\n    }\n  }\n\n  _newEntityType(): void {\n    this.theSelectedEntityType = new EntityType();\n    this.theSelectedEntityType.ENTITY_ID = 'new';\n    this.theSelectedEntityType.ENTITY_DESC = 'description';\n    this.theSelectedEntityType.VERSION_NO = 1;\n    this.theSelectedEntityType.LAST_CHANGE_BY = this.identityService.Session.USER_ID;\n    this.theSelectedEntityType.LAST_CHANGE_TIME = this.identityService.CurrentTime;\n    this.modelService.setSelectedEntityType(this.theSelectedEntityType);\n    this.entityTypeList.splice(0, 0, this.theSelectedEntityType);\n  }\n}\n","export default \".dk-actions{\\n  width: 5rem;\\n  min-width: 5rem;\\n  max-width: 5rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwvcmVsYXRpb24vcmVsYXRpb24tZGV0YWlsL3JlbGF0aW9uLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBVztFQUNYLGVBQWU7RUFDZixlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwvcmVsYXRpb24vcmVsYXRpb24tZGV0YWlsL3JlbGF0aW9uLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRrLWFjdGlvbnN7XG4gIHdpZHRoOiA1cmVtO1xuICBtaW4td2lkdGg6IDVyZW07XG4gIG1heC13aWR0aDogNXJlbTtcbn1cbiJdfQ== */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL3JvbGUvcm9sZS1kZXRhaWwvcm9sZS1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL3JvbGUvcm9sZS5jb21wb25lbnQuY3NzIn0= */\";","export default \".dk-model-content {\\n  margin-top: .5rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwvbW9kZWwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFpQjtBQUNuQiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL21vZGVsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuZGstbW9kZWwtY29udGVudCB7XG4gIG1hcmdpbi10b3A6IC41cmVtO1xufVxuIl19 */\";","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"dataDomainMeta\\\" [formGroup]=\\\"dataDomainForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"dataDomain\\\" class=\\\"col-form-label form-control-sm\\\">Data Domain:\\n      <span [class.ng-invalid]=\\\"dataDomainForm.get('DOMAIN_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{dataDomainForm.get('DOMAIN_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"dataDomain\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           (change)=\\\"onChangeDataDomainID()\\\" name=\\\"dataDomain\\\" formControlName=\\\"DOMAIN_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"dataDomain-desc\\\" class=\\\"col-form-label form-control-sm\\\">Data Domain Description:</label>\\n    <textarea class=\\\"form-control\\\" id=\\\"dataDomain-desc\\\" name=\\\"dataDomain-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"DOMAIN_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeDataDomainDesc()\\\"></textarea>\\n  </div>\\n\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">Data Type</div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"ml-2 mb-2 row\\\">\\n        <select formControlName=\\\"DATA_TYPE\\\" (change)=\\\"onChangeDataType(dataDomainForm)\\\"\\n                class=\\\"col-sm-8 col-lg-4 form-control form-control-sm\\\">\\n          <option *ngFor=\\\"let opt of dataTypes\\\" [value]=\\\"opt.key\\\">{{opt.value}}</option>\\n        </select>\\n      </div>\\n\\n      <div class=\\\"ml-0 row\\\">\\n        <div class=\\\"form-group col-8 col-sm-4 col-lg-2\\\">\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"data-length\\\">Length:\\n          </label>\\n          <input type=\\\"number\\\" formControlName=\\\"DATA_LENGTH\\\" id=\\\"data-length\\\" name=\\\"data-length\\\"\\n                 class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\" >\\n          <span class=\\\"dk-invalid-feedback\\\">{{dataDomainForm.get('DATA_LENGTH').errors?.message}}</span>\\n        </div>\\n\\n        <div class=\\\"form-group col-8 col-sm-4 col-lg-2\\\">\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"decimal-place\\\">Decimal Place:\\n          </label>\\n          <input type=\\\"number\\\" formControlName=\\\"DECIMAL\\\" id=\\\"decimal-place\\\" name=\\\"decimal-place\\\"\\n                 class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\">\\n          <span class=\\\"dk-invalid-feedback\\\">{{dataDomainForm.get('DECIMAL').errors?.message}}</span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card mt-3\\\">\\n    <div class=\\\"card-header\\\">Domain Definition</div>\\n    <div class=\\\"card-body\\\">\\n      <div *ngIf=\\\"enableGeneralType\\\" class=\\\"card mb-3\\\">\\n        <div class=\\\"ml-2 mt-2 custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"general-type\\\" name=\\\"DOMAIN_TYPE\\\"\\n                 [value]=\\\"0\\\" formControlName=\\\"DOMAIN_TYPE\\\" (change)=\\\"onChangeDomainType(dataDomainForm)\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"general-type\\\">General Type</label>\\n        </div>\\n        <div class=\\\"card-body row\\\">\\n          <div class=\\\"form-check col-sm-3 mx-3\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"UNSIGNED\\\" id=\\\"unsigned\\\" name=\\\"unsigned\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"unsigned\\\">Unsigned</label>\\n          </div>\\n          <div class=\\\"form-check col-sm-3 mx-3\\\">\\n            <input type=\\\"checkbox\\\" class=\\\"form-check-input\\\" formControlName=\\\"CAPITAL_ONLY\\\" id=\\\"CAPITAL_ONLY\\\" name=\\\"CAPITAL_ONLY\\\">\\n            <label class=\\\"form-check-label\\\" for=\\\"CAPITAL_ONLY\\\">Capital Only</label>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"enableRegExpr\\\" class=\\\"card mb-3\\\">\\n        <div class=\\\"ml-2 mt-2 custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"regular-expression\\\" name=\\\"DOMAIN_TYPE\\\"\\n                 [value]=\\\"1\\\" formControlName=\\\"DOMAIN_TYPE\\\" (change)=\\\"onChangeDomainType(dataDomainForm)\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"regular-expression\\\">Regular Expression\\n            <span [class.ng-invalid]=\\\"dataDomainForm.get('REG_EXPR').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n              {{dataDomainForm.get('REG_EXPR').errors?.message}}\\n            </span>\\n          </label>\\n        </div>\\n        <div class=\\\"card-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"REG_EXPR\\\" id=\\\"REG_EXPR\\\" name=\\\"REG_EXPR\\\"\\n                   class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\" >\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"enableValueRelation\\\" class=\\\"card mb-2\\\">\\n        <div class=\\\"ml-2 mt-2 custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"value-relation\\\" name=\\\"DOMAIN_TYPE\\\"\\n                 [value]=\\\"2\\\" formControlName=\\\"DOMAIN_TYPE\\\" (change)=\\\"onChangeDomainType(dataDomainForm)\\\">\\n          <label class=\\\"custom-control-label\\\" for=\\\"value-relation\\\">Value Entity Relation\\n            <span [class.ng-invalid]=\\\"dataDomainForm.get('ENTITY_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n              {{dataDomainForm.get('ENTITY_ID').errors?.message}}\\n            </span>\\n          </label>\\n        </div>\\n        <div class=\\\"card-body row\\\">\\n          <div class=\\\"input-group col-lg-4 ml-2 mb-3\\\">\\n            <input type=\\\"text\\\" formControlName=\\\"ENTITY_ID\\\" id=\\\"ENTITY_ID\\\" name=\\\"ENTITY_ID\\\" placeholder=\\\"Entity Type\\\"\\n                   class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeEntityID(dataDomainForm)\\\">\\n            <div class=\\\"input-group-append\\\">\\n              <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchEntity\\\" (click)=\\\"onEntitySearchHelp(dataDomainForm)\\\">\\n                <span class=\\\"fas fa-search\\\"></span>\\n              </button>\\n            </div>\\n          </div>\\n          <select formControlName=\\\"RELATION_ID\\\" class=\\\"form-control form-control-sm col-lg-4 ml-4 mr-3\\\">\\n            <option *ngFor=\\\"let relation of relationsOfEntity\\\" [value]=\\\"relation\\\">{{relation}}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div *ngIf=\\\"enableArrayOrInterval\\\" class=\\\"card mb-3\\\">\\n        <div class=\\\"ml-2 mt-2 row\\\">\\n          <div class=\\\"custom-control custom-radio col-3\\\">\\n            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"value-array\\\" name=\\\"DOMAIN_TYPE\\\"\\n                   [value]=\\\"3\\\" formControlName=\\\"DOMAIN_TYPE\\\" (change)=\\\"onChangeDomainType(dataDomainForm)\\\">\\n            <label class=\\\"custom-control-label\\\" for=\\\"value-array\\\">Value Array</label>\\n          </div>\\n          <div class=\\\"custom-control custom-radio col-3\\\">\\n            <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"value-interval\\\" name=\\\"DOMAIN_TYPE\\\"\\n                   [value]=\\\"4\\\" formControlName=\\\"DOMAIN_TYPE\\\" (change)=\\\"onChangeDomainType(dataDomainForm)\\\">\\n            <label class=\\\"custom-control-label\\\" for=\\\"value-interval\\\">Value Interval</label>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"card-body\\\">\\n          <table class=\\\"table table-bordered dk-table\\\">\\n            <thead class=\\\"thead-light\\\">\\n              <tr>\\n                <th scope=\\\"col\\\">Low Value</th>\\n                <th *ngIf=\\\"dataDomainForm.get('DOMAIN_TYPE').value === 4\\\" scope=\\\"col\\\">High Value</th>\\n                <th scope=\\\"col\\\">Description</th>\\n                <th scope=\\\"col\\\">Actions</th>\\n              </tr>\\n            </thead>\\n\\n            <tbody formArrayName=\\\"DOMAIN_VALUES\\\">\\n            <tr *ngFor=\\\"let domainValueForm of domainValueFormArray.controls; let i = index\\\">\\n              <td [formGroup]=\\\"domainValueForm\\\">\\n                <div class=\\\"input-group\\\">\\n                  <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"LOW_VALUE\\\" maxlength=\\\"10\\\"\\n                         [readonly]=\\\"readonly\\\" (change)=\\\"onChangeDomainValue(i)\\\">\\n                  <div class=\\\"invalid-tooltip\\\">\\n                    {{domainValueForm.get('LOW_VALUE').errors?.message}}\\n                  </div>\\n                </div>\\n              </td>\\n              <td *ngIf=\\\"dataDomainForm.get('DOMAIN_TYPE').value === 4\\\" [formGroup]=\\\"domainValueForm\\\">\\n                <div class=\\\"input-group\\\">\\n                  <input class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"HIGH_VALUE\\\"\\n                         [readonly]=\\\"readonly\\\"  (change)=\\\"onChangeDomainValue(i)\\\">\\n                  <div class=\\\"invalid-tooltip\\\">\\n                    {{domainValueForm.get('HIGH_VALUE').errors?.message}}\\n                  </div>\\n                </div>\\n              </td>\\n              <td [formGroup]=\\\"domainValueForm\\\" class=\\\"dk-description\\\">\\n                <input  class=\\\"form-control\\\" type=\\\"text\\\" formControlName=\\\"LOW_VALUE_TEXT\\\" maxlength=\\\"100\\\"\\n                        [readonly]=\\\"readonly\\\">\\n              </td>\\n              <td class=\\\"dk-actions\\\">\\n                <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"insertDomainValue(i)\\\" title=\\\"Insert\\\">\\n                  <span class=\\\"fas fa-plus\\\"></span>\\n                </button>\\n                <button class=\\\"btn btn-sm\\\" type=\\\"button\\\" [disabled]=\\\"readonly\\\" (click)=\\\"deleteDomainValue(i)\\\" title=\\\"Delete\\\">\\n                  <span class=\\\"far fa-trash-alt\\\"></span>\\n                </button>\\n              </td>\\n            </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\";","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchRelationship(searchBox.value)\\\" >\\n      </div>\\n\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedRelationship\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newRelationship()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let relationship of relationshipList\\\" routerLink=\\\"/model/relationship/{{relationship.RELATIONSHIP_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(relationship)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{relationship.RELATIONSHIP_ID}}</h5>\\n          <small>version: {{relationship.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{relationship.RELATIONSHIP_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{relationship.LAST_CHANGE_BY}} @{{relationship.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\";","export default \".dk-table {\\n  display: block;\\n  overflow-x: auto;\\n  white-space: nowrap;\\n  border: none;\\n}\\n.dk-actions{\\n  width: 4rem;\\n  min-width: 4rem;\\n  max-width: 4rem;\\n}\\n.dk-description{\\n  width: 20rem;\\n  min-width: 20rem;\\n  max-width: 20rem;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbW9kZWwvZGF0YS1kb21haW4vZGF0YS1kb21haW4tZGV0YWlsL2RhdGEtZG9tYWluLWRldGFpbC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsY0FBYztFQUNkLGdCQUFnQjtFQUNoQixtQkFBbUI7RUFDbkIsWUFBWTtBQUNkO0FBQ0E7RUFDRSxXQUFXO0VBQ1gsZUFBZTtFQUNmLGVBQWU7QUFDakI7QUFDQTtFQUNFLFlBQVk7RUFDWixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvbW9kZWwvZGF0YS1kb21haW4vZGF0YS1kb21haW4tZGV0YWlsL2RhdGEtZG9tYWluLWRldGFpbC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmRrLXRhYmxlIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIG92ZXJmbG93LXg6IGF1dG87XG4gIHdoaXRlLXNwYWNlOiBub3dyYXA7XG4gIGJvcmRlcjogbm9uZTtcbn1cbi5kay1hY3Rpb25ze1xuICB3aWR0aDogNHJlbTtcbiAgbWluLXdpZHRoOiA0cmVtO1xuICBtYXgtd2lkdGg6IDRyZW07XG59XG4uZGstZGVzY3JpcHRpb257XG4gIHdpZHRoOiAyMHJlbTtcbiAgbWluLXdpZHRoOiAyMHJlbTtcbiAgbWF4LXdpZHRoOiAyMHJlbTtcbn1cbiJdfQ== */\";","import { Component, OnInit } from '@angular/core';\nimport {EntityService, SearchHelpH, SearchHelpMeta} from 'jor-angular';\nimport {Subject} from 'rxjs';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {IdentityService} from '../../identity.service';\n\n@Component({\n  selector: 'app-search-help',\n  templateUrl: './search-help.component.html',\n  styleUrls: ['./search-help.component.css']\n})\nexport class SearchHelpComponent implements OnInit {\n\n  searchHelpList: SearchHelpH[] = [];\n  isSearchListShown = true;\n  private searchTerms = new Subject<string>();\n  private theSelectedSearchHelp: SearchHelpH;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private identityService: IdentityService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listSearchHelp(term)),\n    ).subscribe(data => {\n      this.searchHelpList = data;\n      let searchHelpID;\n      if (this.route.snapshot.firstChild) {\n        searchHelpID = this.route.snapshot.firstChild.paramMap.get('searchHelpID');\n      }\n      if (searchHelpID ) {\n        if (searchHelpID === 'new') {\n          this._newSearchHelp();\n        } else {\n          this.onSelect(this.searchHelpList.find(searchHelp => searchHelp.SEARCH_HELP_ID === searchHelpID));\n        }\n      }\n    });\n    this.searchSearchHelp(''); // The initial list\n\n    this.modelService.theSelectedSearchHelp$.subscribe( data => {\n      if (this.theSelectedSearchHelp) {\n        this.theSelectedSearchHelp.SEARCH_HELP_ID = data['SEARCH_HELP_ID'];\n        this.theSelectedSearchHelp.SEARCH_HELP_DESC = data['SEARCH_HELP_DESC'];\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.searchHelpList[0] && !this.searchHelpList[0].CREATE_TIME) {\n        this.searchHelpList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const searchHelpID = this.route.snapshot.firstChild.paramMap.get('searchHelpID');\n        if (searchHelpID) {\n          if (searchHelpID === 'new') {\n            this.onSelect(this.searchHelpList[0]);\n          } else {\n            this.onSelect(this.searchHelpList.find(searchHelp => searchHelp.SEARCH_HELP_ID === searchHelpID));\n          }\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  onSelect(searchHelp: SearchHelpH): void {\n    if (searchHelp) {\n      this.theSelectedSearchHelp = searchHelp;\n      this.modelService.setSelectedSearchHelp(searchHelp);\n    }\n  }\n\n  searchSearchHelp(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  newSearchHelp(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('searchHelpID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newSearchHelp();\n      this.router.navigate(['/model/search-help/new']);\n    }\n  }\n\n  _newSearchHelp(): void {\n    this.theSelectedSearchHelp = new SearchHelpMeta();\n    this.theSelectedSearchHelp.SEARCH_HELP_ID = 'new';\n    this.theSelectedSearchHelp.SEARCH_HELP_DESC = 'description';\n    this.theSelectedSearchHelp.VERSION_NO = 1;\n    this.theSelectedSearchHelp.LAST_CHANGE_BY = this.identityService.Session.USER_ID;\n    this.theSelectedSearchHelp.LAST_CHANGE_TIME = this.identityService.CurrentTime;\n    this.modelService.setSelectedSearchHelp(this.theSelectedSearchHelp);\n    this.searchHelpList.splice(0, 0, this.theSelectedSearchHelp);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {AbstractControl, AsyncValidator, ValidationErrors} from '@angular/forms';\nimport {EntityService} from 'jor-angular';\nimport {Observable, of} from 'rxjs';\nimport {catchError, map} from 'rxjs/operators';\nimport {ModelService} from './model.service';\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueSearchHelpValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return this.entityService.getSearchHelpDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'SEARCH_HELP_NOT_EXIST') {\n          this.modelService.updateSearchHelpID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueDataDomainValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return this.entityService.getDataDomainDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'DATA_DOMAIN_NOT_EXIST') {\n          this.modelService.updateDataDomainID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueDataElementValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return this.entityService.getDataElementDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'DATA_ELEMENT_NOT_EXIST') {\n          this.modelService.updateDataElementID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueRoleValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return this.entityService.getRoleDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'ROLE_NOT_EXIST') {\n          this.modelService.updateRoleID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueRelationValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    if (ctrl.value === 'r_') { return of(null); }\n    return this.entityService.getRelationDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'RELATION_NOT_EXIST') {\n          this.modelService.updateRelationID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueRelationshipValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    if (ctrl.value === 'rs_') { return of(null); }\n    return this.entityService.getRelationshipDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'RELATIONSHIP_NOT_EXIST') {\n          this.modelService.updateRelationshipID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n\n// noinspection JSAnnotator\n@Injectable({\n  providedIn: 'root'\n})\nexport class UniqueEntityTypeValidator implements AsyncValidator {\n  constructor(private entityService: EntityService,\n              private modelService: ModelService) {}\n\n  validate(\n    ctrl: AbstractControl\n  ): Promise<ValidationErrors | null> | Observable<ValidationErrors | null> {\n    return this.entityService.getEntityTypeDesc(ctrl.value).pipe(\n      map(data => {\n        if (data['msgName'] && data['msgName'] === 'ENTITY_TYPE_NOT_EXIST') {\n          this.modelService.updateEntityID(ctrl.value);\n          return null;\n        } else {\n          return { message: '\"' + ctrl.value + '\" already exists' };\n        }\n      }),\n      catchError(() => null)\n    );\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL2RhdGEtZWxlbWVudC9kYXRhLWVsZW1lbnQtZGV0YWlsL2RhdGEtZWxlbWVudC1kZXRhaWwuY29tcG9uZW50LmNzcyJ9 */\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {Association, RelationMeta} from 'jor-angular';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {EntityService} from 'jor-angular';\nimport {msgStore} from '../../../msgStore';\nimport {switchMap} from 'rxjs/operators';\nimport {Observable, of} from 'rxjs';\nimport {AttributeMetaComponent} from '../../attribute-meta/attribute-meta.component';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {UniqueRelationValidator} from '../../model-validators';\nimport {SearchHelpComponent} from 'jor-angular';\nimport {SearchHelp, SearchHelpMethod} from 'jor-angular';\n\n@Component({\n  selector: 'app-relation-detail',\n  templateUrl: './relation-detail.component.html',\n  styleUrls: ['./relation-detail.component.css']\n})\nexport class RelationDetailComponent implements OnInit {\n  relationMeta: RelationMeta;\n  readonly = true;\n  isNewMode = false;\n  isFieldMapShown = false;\n  relationForm: FormGroup;\n  currentAssociationForm: AbstractControl;\n  currentAssociation: Association;\n  currentRightRelationMeta: RelationMeta;\n  changedRelation = {};\n  bypassProtection = false;\n  isSearchListShown = true;\n  relationSearchHelp: SearchHelp;\n\n  @ViewChild(AttributeMetaComponent, {static: false})\n  private attrComponent!: AttributeMetaComponent;\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent!: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueRelationValidator: UniqueRelationValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  get associationFormArray() {\n    return this.relationForm.get('ASSOCIATIONS') as FormArray;\n  }\n  get fieldMapFormArray() {\n    if (this.currentAssociationForm) {\n      return this.currentAssociationForm.get('FIELDS_MAPPING') as FormArray;\n    } else {\n      return null;\n    }\n  }\n  get displayFieldMapModal() {\n    return this.isFieldMapShown ? 'block' : 'none';\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const relationID = params.get('relationID');\n        if (relationID === 'new') {\n          const relation = new RelationMeta();\n          relation.RELATION_ID = 'r_';\n          relation.RELATION_DESC = '';\n          relation.ATTRIBUTES = [];\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return of(relation);\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return this.entityService.getRelationMeta(params.get('relationID'));\n        }\n      })\n    ).subscribe(data => {\n      if ( 'RELATION_ID' in data) { // If the return data is a message\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.relationMeta = <RelationMeta>data;\n        this._generateRelationForm();\n      } else {\n        this.messageService.clearMessages();\n        this.relationMeta = null;\n        this.relationForm = null;\n        if (data instanceof Array) {\n          data.forEach(err => this.messageService.add(err));\n        } else {\n          this.messageService.report(<Message>data);\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  onSearchHelp(fieldName: string, control: AbstractControl, rowID: number): void {\n    if (!this.relationSearchHelp) {\n      this.relationSearchHelp = new SearchHelp();\n      this.relationSearchHelp.OBJECT_NAME = 'Relation';\n      this.relationSearchHelp.METHOD = function (entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listRelation(searchTerm);\n      }(this.entityService);\n      this.relationSearchHelp.BEHAVIOUR = 'A';\n      this.relationSearchHelp.MULTI = false;\n      this.relationSearchHelp.FUZZY_SEARCH = true;\n      this.relationSearchHelp.FIELDS = [\n        {\n          FIELD_NAME: 'RELATION_ID', LIST_HEADER_TEXT: 'Relation', IMPORT: true, EXPORT: true, IE_FIELD_NAME: fieldName,\n          LIST_POSITION: 1, FILTER_POSITION: 0\n        },\n        {FIELD_NAME: 'RELATION_DESC', LIST_HEADER_TEXT: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.relationSearchHelp.READ_ONLY = this.readonly;\n    }\n    const afterExportFn = function (context: any, ruleIdx: number) {\n      return () => context.onChangeRightRelationID(ruleIdx, true);\n    }(this, rowID).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.relationSearchHelp, control, afterExportFn);\n  }\n\n  _generateRelationForm(): void {\n    this.relationForm = this.fb.group({});\n    this.relationForm.addControl('RELATION_ID', new FormControl(this.relationMeta.RELATION_ID, {updateOn: 'blur'}));\n    if (this.isNewMode) {\n      this.relationForm.get('RELATION_ID').setValidators(this._validateRelationId);\n      this.relationForm.get('RELATION_ID').setAsyncValidators(this.uniqueRelationValidator.validate.bind(this.uniqueRelationValidator));\n    }\n    this.relationForm.addControl('RELATION_DESC', new FormControl(this.relationMeta.RELATION_DESC));\n\n    // Compose Associations\n    const formArray = [];\n    if (this.relationMeta.ASSOCIATIONS) {\n      this.relationMeta.ASSOCIATIONS.forEach( association => {\n        const fieldsMapArray = [];\n        association.FIELDS_MAPPING.forEach( fieldsMap => {\n          fieldsMapArray.push(this.fb.group({\n            LEFT_FIELD: [fieldsMap.LEFT_FIELD],\n            RIGHT_FIELD: [fieldsMap.RIGHT_FIELD]\n          }));\n        });\n        formArray.push(this.fb.group({\n          ASSOCIATION_NAME: [association.ASSOCIATION_NAME],\n          RIGHT_RELATION_ID: [association.RIGHT_RELATION_ID],\n          CARDINALITY: [{value: association.CARDINALITY, disabled: this.readonly}],\n          FOREIGN_KEY_CHECK: [{\n            value: association.FOREIGN_KEY_CHECK,\n            disabled: this.readonly || association.CARDINALITY === '[0..1]' || association.CARDINALITY === '[0..N]'}],\n          FIELDS_MAPPING: this.fb.array(fieldsMapArray)\n        }));\n      });\n    }\n\n    if (this.isNewMode) {\n      this._appendEmptyAssociation(formArray);\n    }\n    this.relationForm.addControl('ASSOCIATIONS', new FormArray(formArray));\n  }\n\n  _appendEmptyAssociation(formArray: any) {\n    formArray.push(\n      this.fb.group({\n        ASSOCIATION_NAME: [''],\n        RIGHT_RELATION_ID: [''],\n        CARDINALITY: ['[0..1]'],\n        FOREIGN_KEY_CHECK: [{value: 0, disabled: true}],\n        FIELDS_MAPPING: this.fb.array([])\n    }));\n  }\n\n  _validateRelationId(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Relation ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().toLowerCase().substr(0, 2) !== 'r_') {\n      return {message: 'Relation name must be started with \"r_\"!'};\n    }\n\n    if (c.value.toString().length < 3) {\n      return {message: 'Relation name must have length larger than 2!'};\n    }\n\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Entity Type?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.relationMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.relationForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateRelationForm();\n            this.relationForm.reset(this.relationForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this.readonly = false;\n      this.associationFormArray.controls.forEach(associationFormGroup => {\n        associationFormGroup.get('CARDINALITY').enable();\n        if ( associationFormGroup.get('CARDINALITY').value === '[1..1]' ||\n             associationFormGroup.get('CARDINALITY').value === '[1..N]' ) {\n          associationFormGroup.get('FOREIGN_KEY_CHECK').enable();\n        }\n      });\n      this._appendEmptyAssociation(this.associationFormArray);\n      this.attrComponent.switchEditDisplay(this.readonly);\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    let lastIndex = this.associationFormArray.length - 1;\n    while (lastIndex >= 0 && this.associationFormArray.controls[lastIndex].get('ASSOCIATION_NAME').value.trim() === '') {\n      this.associationFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n    this.associationFormArray.controls.forEach(associationFormGroup => {\n      associationFormGroup.get('CARDINALITY').disable();\n      associationFormGroup.get('FOREIGN_KEY_CHECK').disable();\n    });\n    this.attrComponent.switchEditDisplay(this.readonly);\n  }\n\n  onChangeRelationID(): void {\n    this.modelService.updateRelationID(this.relationForm.get('RELATION_ID').value);\n  }\n\n  onChangeRelationDesc(): void {\n    this.modelService.updateRelationDesc(this.relationForm.get('RELATION_DESC').value);\n  }\n\n  deleteAssociation(index: number): void {\n    if (index !== this.associationFormArray.length - 1) {\n      this.associationFormArray.removeAt(index);\n      this.associationFormArray.markAsDirty();\n    }\n  }\n\n  openFieldMapModal(index: number): void {\n    this.currentAssociationForm = this.associationFormArray.controls[index];\n    if (this.currentAssociationForm.get('RIGHT_RELATION_ID').value.trim() === '') {\n      return;\n    }\n\n    this.entityService.getRelationMeta(this.currentAssociationForm.get('RIGHT_RELATION_ID').value)\n      .subscribe( data => {\n        this.currentRightRelationMeta = <RelationMeta>data;\n      });\n\n    if (this.readonly === false) {\n      this.fieldMapFormArray.push(this.fb.group({LEFT_FIELD: [''], RIGHT_FIELD: ['']}));\n    }\n    this.currentAssociation = this.relationMeta.ASSOCIATIONS ? this.relationMeta.ASSOCIATIONS[index] : null;\n    this.isFieldMapShown = true;\n  }\n\n  closeFieldMapModal(): void {\n    // this.currentAssociationForm.setValue(this.currentAssociationForm.value); // Or the value won't be updated.\n    let lastIndex = this.fieldMapFormArray.length - 1;\n    while (lastIndex >= 0 && this.fieldMapFormArray.controls[lastIndex].get('RIGHT_FIELD').value.trim() === '') {\n      this.fieldMapFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n    this.isFieldMapShown = false;\n  }\n\n  deleteFieldMap(index: number): void {\n    if (index !== this.fieldMapFormArray.length - 1) {\n      this.fieldMapFormArray.removeAt(index);\n      this.fieldMapFormArray.markAsDirty();\n    }\n  }\n\n  onChangeAssociationName(index: number): void {\n    const currentAssocFormGroup = this.associationFormArray.at(index);\n    if (this.associationFormArray.controls.findIndex((assocCtrl, i) =>\n      i !== index && assocCtrl.get('ASSOCIATION_NAME').value === currentAssocFormGroup.get('ASSOCIATION_NAME').value\n    ) !== -1) {\n      currentAssocFormGroup.get('ASSOCIATION_NAME').setErrors({message: 'Duplicate association name!'});\n      return;\n    }\n\n    if (index === this.associationFormArray.length - 1 && currentAssocFormGroup.value.ASSOCIATION_NAME.trim() !== '') {\n      this._appendEmptyAssociation(this.associationFormArray);\n    }\n  }\n\n  onChangeRightRelationID(index: number, isExportedFromSH?: boolean): void {\n    const currentAssocFormGroup = this.associationFormArray.controls[index];\n\n    if (currentAssocFormGroup.get('RIGHT_RELATION_ID').value === this.relationMeta.RELATION_ID) {\n      currentAssocFormGroup.get('RIGHT_RELATION_ID').setErrors({message: 'Self association is not allowed'});\n      return;\n    }\n\n    if (!isExportedFromSH) {\n      this.entityService.getRelationDesc(currentAssocFormGroup.value.RIGHT_RELATION_ID)\n        .subscribe(data => {\n          if (data['msgCat']) {\n            currentAssocFormGroup.get('RIGHT_RELATION_ID').setErrors({message: data['msgShortText']});\n          }\n        });\n    }\n  }\n\n  onChangeCardinality(formGroup: AbstractControl): void {\n    const cardinality = formGroup.get('CARDINALITY');\n    if ( cardinality.value === '[1..1]' || cardinality.value === '[1..n]' ) {\n      formGroup.get('FOREIGN_KEY_CHECK').enable();\n    } else {\n      formGroup.get('FOREIGN_KEY_CHECK').setValue(0);\n      formGroup.get('FOREIGN_KEY_CHECK').markAsDirty();\n      formGroup.get('FOREIGN_KEY_CHECK').disable();\n    }\n  }\n\n  onChangeLeftField(index: number): void {\n    const currentFieldMapFormGroup = this.fieldMapFormArray.controls[index];\n    if (this.relationMeta.ATTRIBUTES.findIndex( attribute =>\n        attribute.ATTR_NAME === currentFieldMapFormGroup.get('LEFT_FIELD').value) === -1) {\n      currentFieldMapFormGroup.get('LEFT_FIELD').setErrors({message: 'Field Not Exist'});\n      return;\n    }\n\n    if (this.fieldMapFormArray.controls.findIndex((fieldMapCtrl, i) =>\n      i !== index && fieldMapCtrl.get('LEFT_FIELD') && fieldMapCtrl.get('RIGHT_FIELD') &&\n      fieldMapCtrl.get('LEFT_FIELD').value === currentFieldMapFormGroup.get('LEFT_FIELD').value &&\n      fieldMapCtrl.get('RIGHT_FIELD').value === currentFieldMapFormGroup.get('RIGHT_FIELD').value\n    ) !== -1) {\n      currentFieldMapFormGroup.get('LEFT_FIELD').setErrors({message: 'Duplicate Fields Mapping'});\n      return;\n    }\n\n    if (index === this.fieldMapFormArray.length - 1 && currentFieldMapFormGroup.value.LEFT_FIELD.trim() !== '') {\n      this.fieldMapFormArray.push(\n        this.fb.group( {LEFT_FIELD: [''], RIGHT_FIELD: ['']})\n      );\n    }\n  }\n\n  onChangeRightField(index: number): void {\n    const currentFieldMapFormGroup = this.fieldMapFormArray.controls[index];\n    if (this.currentRightRelationMeta &&\n        this.currentRightRelationMeta.ATTRIBUTES.findIndex( attribute =>\n          attribute.ATTR_NAME === currentFieldMapFormGroup.get('RIGHT_FIELD').value) === -1) {\n      currentFieldMapFormGroup.get('RIGHT_FIELD').setErrors({message: 'Field Not Exist'});\n      return;\n    }\n\n    if (this.fieldMapFormArray.controls.findIndex((fieldMapCtrl, i) =>\n      i !== index && fieldMapCtrl.get('LEFT_FIELD') && fieldMapCtrl.get('RIGHT_FIELD') &&\n      fieldMapCtrl.get('LEFT_FIELD').value === currentFieldMapFormGroup.get('LEFT_FIELD').value &&\n      fieldMapCtrl.get('RIGHT_FIELD').value === currentFieldMapFormGroup.get('RIGHT_FIELD').value\n    ) !== -1) {\n      currentFieldMapFormGroup.get('RIGHT_FIELD').setErrors({message: 'Duplicate Fields Mapping'});\n      return;\n    }\n\n    if (index === this.fieldMapFormArray.length - 1 && currentFieldMapFormGroup.value.RIGHT_FIELD.trim() !== '') {\n      this.fieldMapFormArray.push(\n        this.fb.group( {LEFT_FIELD: [''], RIGHT_FIELD: ['']})\n      );\n    }\n  }\n\n  oldAssociationName(formGroup: AbstractControl): boolean {\n    return this.relationMeta.ASSOCIATIONS ?\n      this.relationMeta.ASSOCIATIONS.findIndex(\n      association => association.ASSOCIATION_NAME === formGroup.get('ASSOCIATION_NAME').value ) !== -1 :\n      false;\n  }\n\n  oldFieldMap(formGroup: AbstractControl): boolean {\n    return this.currentAssociation ?\n      this.currentAssociation.FIELDS_MAPPING.findIndex(\n      fieldMap => fieldMap.LEFT_FIELD === formGroup.get('LEFT_FIELD').value &&\n                            fieldMap.RIGHT_FIELD === formGroup.get('RIGHT_FIELD').value ) !== -1 :\n      false;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.relationForm && this.relationForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.relationForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (!this.relationForm.valid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedRelation['action'] = 'add';\n      this.changedRelation['RELATION_ID'] = this.relationForm.controls['RELATION_ID'].value;\n    } else {\n      this.changedRelation['action'] = 'update';\n      this.changedRelation['RELATION_ID'] = this.relationMeta.RELATION_ID;\n    }\n    if (this.relationForm.controls['RELATION_DESC'].dirty) {\n      this.changedRelation['RELATION_DESC'] = this.relationForm.controls['RELATION_DESC'].value;\n    }\n\n    const checkErrs = this.attrComponent.checkAttributes();\n    if (checkErrs.length > 0) {\n      checkErrs.forEach( errMsg => this.messageService.add( errMsg ) );\n      return;\n    }\n    this.changedRelation['ATTRIBUTES'] = this.attrComponent.processChangedAttributes();\n    if (!this._processChangedAssociation()) {\n      return;\n    }\n\n    this.entityService.saveRelation(this.changedRelation)\n      .subscribe(data => this._postActivityAfterSavingRelation(data));\n  }\n\n  _processChangedAssociation(): boolean {\n    const changedAssociations = [];\n    const errMessages = [];\n    if (!this.associationFormArray.dirty) { return true; }\n\n    this.changedRelation['ASSOCIATIONS'] = changedAssociations;\n\n    this.associationFormArray.controls.forEach(associationControl => {\n      if (!associationControl.get('ASSOCIATION_NAME').value ||\n          !associationControl.get('RIGHT_RELATION_ID').value) { return; }\n      const changedAssociation = {};\n      const associationMeta = this.relationMeta.ASSOCIATIONS.find(\n        association => associationControl.get('ASSOCIATION_NAME').value === association.ASSOCIATION_NAME);\n      if (!associationMeta) {// New Add Case\n        changedAssociation['action'] = 'add';\n        changedAssociation['ASSOCIATION_NAME'] = associationControl.get('ASSOCIATION_NAME').value;\n        changedAssociation['RIGHT_RELATION_ID'] = associationControl.get('RIGHT_RELATION_ID').value;\n        changedAssociation['CARDINALITY'] = associationControl.get('CARDINALITY').value;\n        changedAssociation['FOREIGN_KEY_CHECK'] = associationControl.get('FOREIGN_KEY_CHECK').value;\n        changedAssociation['FIELDS_MAPPING'] = [];\n        const fieldMapArray = associationControl.get('FIELDS_MAPPING') as FormArray;\n        if (fieldMapArray.length === 0) {\n          errMessages.push(this.messageService.generateMessage(\n            'MODEL', 'MISS_RELATION_ASSOCIATION_FIELD_MAPPING', 'E', changedAssociation['RIGHT_RELATION_ID']));\n          return;\n        }\n        fieldMapArray.controls.forEach(fieldMap => {\n          changedAssociation['FIELDS_MAPPING'].push(\n            {action: 'add', RIGHT_FIELD: fieldMap.get('RIGHT_FIELD').value, LEFT_FIELD: fieldMap.get('LEFT_FIELD').value});\n        });\n        changedAssociations.push(changedAssociation);\n      } else {\n        if (associationControl.dirty) {// Change Case\n          changedAssociation['action'] = 'update';\n          changedAssociation['ASSOCIATION_NAME'] = associationControl.get('ASSOCIATION_NAME').value;\n          if (associationControl.get('RIGHT_RELATION_ID').dirty) {\n            changedAssociation['RIGHT_RELATION_ID'] = associationControl.get('RIGHT_RELATION_ID').value;\n          }\n          if (associationControl.get('CARDINALITY').dirty) {\n            changedAssociation['CARDINALITY'] = associationControl.get('CARDINALITY').value;\n          }\n          if (associationControl.get('FOREIGN_KEY_CHECK').dirty) {\n            changedAssociation['FOREIGN_KEY_CHECK'] = associationControl.get('FOREIGN_KEY_CHECK').value;\n          }\n          if (associationControl.get('FIELDS_MAPPING').dirty) {\n            changedAssociation['FIELDS_MAPPING'] = [];\n            const fieldMapArray = associationControl.get('FIELDS_MAPPING') as FormArray;\n            if (fieldMapArray.length === 0) {\n              errMessages.push(this.messageService.generateMessage(\n                'MODEL', 'MISS_RELATION_ASSOCIATION_FIELD_MAPPING', 'E', changedAssociation['RIGHT_RELATION_ID']));\n              return;\n            }\n            fieldMapArray.controls.forEach(fieldMap => {\n              if (fieldMap.dirty) {\n                changedAssociation['FIELDS_MAPPING'].push(\n                  {action: 'add', RIGHT_FIELD: fieldMap.get('RIGHT_FIELD').value, LEFT_FIELD: fieldMap.get('LEFT_FIELD').value});\n              }\n            });\n            associationMeta.FIELDS_MAPPING.forEach( oldFieldMap => {\n              const index = fieldMapArray.controls.findIndex(fieldMap =>\n                fieldMap.get('LEFT_FIELD').value === oldFieldMap.LEFT_FIELD &&\n                fieldMap.get('RIGHT_FIELD').value === oldFieldMap.RIGHT_FIELD);\n              if (index === -1) {\n                changedAssociation['FIELDS_MAPPING'].push(\n                  {action: 'delete', RIGHT_FIELD: oldFieldMap.LEFT_FIELD, LEFT_FIELD: oldFieldMap.RIGHT_FIELD});\n              }\n            });\n          }\n          changedAssociations.push(changedAssociation);\n        }\n      }\n    });\n    if (errMessages.length > 0) {\n      errMessages.forEach( errMessage => this.messageService.add(errMessage));\n      return false;\n    }\n    // Deletion Case\n    this.relationMeta.ASSOCIATIONS.forEach(associationMeta => {\n      const index = this.associationFormArray.controls.findIndex(\n        associationControl => associationControl.get('ASSOCIATION_NAME').value === associationMeta.ASSOCIATION_NAME);\n      if (index === -1) { // The association must be deleted\n        changedAssociations.push({action: 'delete', ASSOCIATION_NAME: associationMeta.ASSOCIATION_NAME});\n      }\n    });\n    return true;\n  }\n\n  _postActivityAfterSavingRelation(data: any) {\n    this.changedRelation = {};\n    if (data['RELATION_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/relation/' + data['RELATION_ID']],\n          {state: {message: this.messageService.generateMessage(\n                'MODEL', 'RELATION_SAVED', 'S', data['RELATION_ID'])}});\n      } else {\n        this.readonly = true;\n        this.relationMeta = data;\n        this._generateRelationForm();\n        this.messageService.reportMessage('MODEL', 'RELATION_SAVED', 'S', data['RELATION_ID']);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n","export default \"<div class=\\\"btn-toolbar mb-2\\\"  role=\\\"toolbar\\\"\\n     [ngClass]=\\\"{'justify-content-end': isSearchListShown, 'justify-content-between': !isSearchListShown}\\\" >\\n  <button *ngIf=\\\"!isSearchListShown\\\" class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Show List\\\" (click)=\\\"showSearchList()\\\">\\n    <span class=\\\"fas fa-arrow-right\\\"></span>\\n  </button>\\n\\n  <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Edit/Display\\\" (click)=\\\"switchEditDisplay()\\\">\\n      <span *ngIf=\\\"readonly\\\" class=\\\"fas fa-edit\\\"></span>\\n      <span *ngIf=\\\"!readonly\\\" class=\\\"fas fa-glasses\\\"></span>\\n    </button>\\n    <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Save\\\" (click)=\\\"save()\\\">\\n      <span class=\\\"fas fa-save\\\"></span>\\n    </button>\\n  </div>\\n</div>\\n\\n<dk-message></dk-message>\\n<form *ngIf=\\\"dataElementMeta\\\" [formGroup]=\\\"dataElementForm\\\">\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"dataElement\\\" class=\\\"col-form-label form-control-sm\\\">Data Element:\\n      <span [class.ng-invalid]=\\\"dataElementForm.get('ELEMENT_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n        {{dataElementForm.get('ELEMENT_ID').errors?.message}}\\n      </span>\\n    </label>\\n    <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"dataElement\\\" [readonly]=\\\"readonly || !isNewMode\\\"\\n           (change)=\\\"onChangeDataElementID()\\\" name=\\\"dataElement\\\" formControlName=\\\"ELEMENT_ID\\\">\\n  </div>\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"dataElement-desc\\\" class=\\\"col-form-label form-control-sm\\\">Data Element Description:\\n    </label>\\n    <textarea class=\\\"form-control\\\" id=\\\"dataElement-desc\\\" name=\\\"dataElement-desc\\\" rows=\\\"2\\\"\\n              formControlName=\\\"ELEMENT_DESC\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeDataElementDesc()\\\"></textarea>\\n  </div>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">Data Type</div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"ml-2 mb-3 row\\\">\\n        <div class=\\\"col-8 col-lg-3 custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"use-domain\\\" name=\\\"USE_DOMAIN\\\"\\n                 [value]=\\\"1\\\" formControlName=\\\"USE_DOMAIN\\\" (change)=\\\"onChangeUseDomain(dataElementForm)\\\" required>\\n          <label class=\\\"custom-control-label\\\" for=\\\"use-domain\\\">Data Domain</label>\\n        </div>\\n        <div class=\\\"input-group col-8 col-lg-4\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control form-control-sm\\\" id=\\\"data-domain\\\" (change)=\\\"onChangeDataDomain(dataElementForm)\\\"\\n                 [readonly]=\\\"readonly || !dataElementForm.get('USE_DOMAIN').value\\\" name=\\\"dataElement\\\" formControlName=\\\"DOMAIN_ID\\\">\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchDomain\\\"\\n                    (click)=\\\"onDataDomainSearchHelp(dataElementForm)\\\">\\n              <span class=\\\"fas fa-search\\\"></span>\\n            </button>\\n          </div>\\n        </div>\\n        <span [class.ng-invalid]=\\\"dataElementForm.get('DOMAIN_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n          {{dataElementForm.get('DOMAIN_ID').errors?.required? 'A Data Domain is required': null}}\\n          {{dataElementForm.get('DOMAIN_ID').errors?.message}}\\n        </span>\\n      </div>\\n\\n      <div class=\\\"ml-2 mb-2 row\\\">\\n        <div class=\\\"col-8 col-lg-3 custom-control custom-radio\\\">\\n          <input type=\\\"radio\\\" class=\\\"custom-control-input\\\" id=\\\"use-data-type\\\" name=\\\"USE_DOMAIN\\\"\\n                 [value]=\\\"0\\\" formControlName=\\\"USE_DOMAIN\\\" (change)=\\\"onChangeUseDomain(dataElementForm)\\\" required>\\n          <label class=\\\"custom-control-label\\\" for=\\\"use-data-type\\\">Elementary Type</label>\\n        </div>\\n        <div class=\\\"input-group col-8 col-lg-4\\\">\\n          <select formControlName=\\\"DATA_TYPE\\\" (change)=\\\"onChangeDataType(dataElementForm)\\\"\\n                  class=\\\"form-control form-control-sm\\\">\\n            <option *ngFor=\\\"let opt of dataTypes\\\" [value]=\\\"opt.key\\\">{{opt.value}}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"ml-2 row\\\">\\n        <div class=\\\"col-lg-3\\\"></div>\\n        <div class=\\\"form-group col-4 col-lg-2\\\">\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"data-length\\\">Length:\\n          </label>\\n          <input type=\\\"number\\\" formControlName=\\\"DATA_LENGTH\\\" id=\\\"data-length\\\" name=\\\"data-length\\\" class=\\\"form-control form-control-sm\\\"\\n                 [readonly]=\\\"readonly\\\" >\\n          <span class=\\\"dk-invalid-feedback\\\">{{dataElementForm.get('DATA_LENGTH').errors?.message}}</span>\\n        </div>\\n        <div class=\\\"form-group col-4 col-lg-2\\\">\\n          <label class=\\\"col-form-label col-form-label-sm\\\" for=\\\"decimal-place\\\">Decimal Place:\\n          </label>\\n          <input type=\\\"number\\\" formControlName=\\\"DECIMAL\\\" id=\\\"decimal-place\\\" name=\\\"decimal-place\\\"\\n                 class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\">\\n          <span class=\\\"dk-invalid-feedback\\\">{{dataElementForm.get('DECIMAL').errors?.message}}</span>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">Text</div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"ml-2 form-group row\\\">\\n        <label class=\\\"col-form-label col-form-label-sm col-lg-3\\\" for=\\\"label-text\\\">Label Text</label>\\n        <input type=\\\"text\\\" formControlName=\\\"LABEL_TEXT\\\" id=\\\"label-text\\\" name=\\\"label-text\\\"\\n               class=\\\"form-control form-control-sm col-md-6\\\" [readonly]=\\\"readonly\\\">\\n      </div>\\n\\n      <div class=\\\"ml-2 form-group row\\\">\\n        <label class=\\\"col-form-label col-form-label-sm col-lg-3\\\" for=\\\"list-header-text\\\">List Header Text</label>\\n        <input type=\\\"text\\\" formControlName=\\\"LIST_HEADER_TEXT\\\" id=\\\"list-header-text\\\" name=\\\"list-header-text\\\"\\n               class=\\\"form-control form-control-sm col-md-6\\\" [readonly]=\\\"readonly\\\">\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card mt-2\\\">\\n    <div class=\\\"card-header\\\">Additional Attribute</div>\\n    <div class=\\\"card-body\\\">\\n      <div class=\\\"ml-2 form-group row\\\">\\n        <label class=\\\"col-form-label col-form-label-sm col-lg-3\\\" for=\\\"search-help\\\">Search Help</label>\\n        <div class=\\\"input-group col-8 col-lg-4\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"SEARCH_HELP_ID\\\" id=\\\"search-help\\\" name=\\\"search-help\\\"\\n                 class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\" (change)=\\\"onChangeSearchHelp(dataElementForm)\\\">\\n          <div class=\\\"input-group-append\\\">\\n            <button class=\\\"btn btn-outline-secondary btn-sm\\\" type=\\\"button\\\" id=\\\"searchSearchHelp\\\"\\n                    (click)=\\\"onSearchHelpSearchHelp(dataElementForm)\\\">\\n              <span class=\\\"fas fa-search\\\"></span>\\n            </button>\\n          </div>\\n        </div>\\n        <span [class.ng-invalid]=\\\"dataElementForm.get('SEARCH_HELP_ID').invalid\\\" class=\\\"dk-invalid-feedback\\\">\\n            {{dataElementForm.get('SEARCH_HELP_ID').errors?.message}}\\n        </span>\\n      </div>\\n\\n      <div class=\\\"ml-2 form-group row\\\">\\n        <label class=\\\"col-form-label col-form-label-sm col-lg-3\\\" for=\\\"sh-export-field\\\">Export Field</label>\\n        <div class=\\\"input-group col-8 col-lg-4\\\">\\n          <select formControlName=\\\"SEARCH_HELP_EXPORT_FIELD\\\" class=\\\"form-control form-control-sm\\\" id=\\\"sh-export-field\\\">\\n            <option *ngFor=\\\"let exportField of searchHelpExportField\\\" [value]=\\\"exportField\\\">{{exportField}}</option>\\n          </select>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"ml-2 form-group row\\\">\\n        <label class=\\\"col-form-label col-form-label-sm col-lg-3\\\" for=\\\"parameter\\\">Parameter</label>\\n        <div class=\\\"input-group col-8 col-lg-4\\\">\\n          <input type=\\\"text\\\" formControlName=\\\"PARAMETER_ID\\\" id=\\\"parameter\\\" name=\\\"parameter\\\"\\n                 class=\\\"form-control form-control-sm\\\" [readonly]=\\\"readonly\\\">\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</form>\\n\\n<dk-app-search-help></dk-app-search-help>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL2RhdGEtZG9tYWluL2RhdGEtZG9tYWluLmNvbXBvbmVudC5jc3MifQ== */\";","import { Injectable } from '@angular/core';\nimport {EntityType, Relation, RelationshipH, RoleH, DataDomainH, DataElementH, SearchHelpH} from 'jor-angular';\nimport {Subject} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ModelService {\n  dataTypes = [\n    {key: 1, value: 'Char'},\n    {key: 2, value: 'Integer'},\n    {key: 3, value: 'Boolean'},\n    {key: 4, value: 'Decimal'},\n    {key: 5, value: 'String'},\n    {key: 6, value: 'Binary'},\n    {key: 7, value: 'Date'},\n    {key: 8, value: 'Timestamp'}\n  ];\n\n  private dialogAnswer = new Subject<string>();\n  dialogAnswer$ = this.dialogAnswer.asObservable();\n\n  private isSearchListShown = new Subject<boolean>();\n  isSearchListShown$ = this.isSearchListShown.asObservable();\n\n  private theSelectedEntityType: EntityType;\n  private selectedEntityTypeSource = new Subject<EntityType>();\n  theSelectedEntityType$ = this.selectedEntityTypeSource.asObservable();\n\n  private theSelectedRelation: Relation;\n  private selectedRelationSource = new Subject<Relation>();\n  theSelectedRelation$ = this.selectedRelationSource.asObservable();\n\n  private theSelectedRelationship: RelationshipH;\n  private selectedRelationshipSource = new Subject<RelationshipH>();\n  theSelectedRelationship$ = this.selectedRelationshipSource.asObservable();\n\n  private theSelectedRole: RoleH;\n  private selectedRoleSource = new Subject<RoleH>();\n  theSelectedRole$ = this.selectedRoleSource.asObservable();\n\n  private theSelectedDataElement: DataElementH;\n  private selectedDataElementSource = new Subject<DataElementH>();\n  theSelectedDataElement$ = this.selectedDataElementSource.asObservable();\n\n  private theSelectedDataDomain: DataDomainH;\n  private selectedDataDomainSource = new Subject<DataDomainH>();\n  theSelectedDataDomain$ = this.selectedDataDomainSource.asObservable();\n\n  private theSelectedSearchHelp: SearchHelpH;\n  private selectedSearchHelpSource = new Subject<SearchHelpH>();\n  theSelectedSearchHelp$ = this.selectedSearchHelpSource.asObservable();\n\n  showSearchList(): void {\n    this.isSearchListShown.next(true);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown.next(false);\n  }\n  updateEntityID(entityID: string) {\n    this.theSelectedEntityType.ENTITY_ID = entityID;\n    this.selectedEntityTypeSource.next(this.theSelectedEntityType);\n  }\n\n  updateEntityDesc(entityDesc: string) {\n    this.theSelectedEntityType.ENTITY_DESC = entityDesc;\n    this.selectedEntityTypeSource.next(this.theSelectedEntityType);\n  }\n\n  setSelectedEntityType(entityType: EntityType): void {\n    this.theSelectedEntityType = entityType;\n  }\n\n  updateRelationID(relationID: string) {\n    this.theSelectedRelation.RELATION_ID = relationID;\n    this.selectedRelationSource.next(this.theSelectedRelation);\n  }\n\n  updateRelationDesc(relationDesc: string) {\n    this.theSelectedRelation.RELATION_DESC = relationDesc;\n    this.selectedRelationSource.next(this.theSelectedRelation);\n  }\n\n  setSelectedRelation(relation: Relation): void {\n    this.theSelectedRelation = relation;\n  }\n\n  updateRelationshipID(relationshipID: string) {\n    this.theSelectedRelationship.RELATIONSHIP_ID = relationshipID;\n    this.selectedRelationshipSource.next(this.theSelectedRelationship);\n  }\n\n  updateRelationshipDesc(relationshipDesc: string) {\n    this.theSelectedRelationship.RELATIONSHIP_DESC = relationshipDesc;\n    this.selectedRelationshipSource.next(this.theSelectedRelationship);\n  }\n\n  setSelectedRelationship(relationship: RelationshipH): void {\n    this.theSelectedRelationship = relationship;\n  }\n\n  updateRoleID(roleID: string) {\n    this.theSelectedRole.ROLE_ID = roleID;\n    this.selectedRoleSource.next(this.theSelectedRole);\n  }\n\n  updateRoleDesc(roleDesc: string) {\n    this.theSelectedRole.ROLE_DESC = roleDesc;\n    this.selectedRoleSource.next(this.theSelectedRole);\n  }\n\n  setSelectedRole(role: RoleH): void {\n    this.theSelectedRole = role;\n  }\n\n  updateDataElementID(elementID: string) {\n    this.theSelectedDataElement.ELEMENT_ID = elementID;\n    this.selectedDataElementSource.next(this.theSelectedDataElement);\n  }\n\n  updateDataElementDesc(elementDesc: string) {\n    this.theSelectedDataElement.ELEMENT_DESC = elementDesc;\n    this.selectedDataElementSource.next(this.theSelectedDataElement);\n  }\n\n  setSelectedDataElement(element: DataElementH): void {\n    this.theSelectedDataElement = element;\n  }\n\n  updateDataDomainID(domainID: string) {\n    this.theSelectedDataDomain.DOMAIN_ID = domainID;\n    this.selectedDataDomainSource.next(this.theSelectedDataDomain);\n  }\n\n  updateDataDomainDesc(domainDesc: string) {\n    this.theSelectedDataDomain.DOMAIN_DESC = domainDesc;\n    this.selectedDataDomainSource.next(this.theSelectedDataDomain);\n  }\n\n  setSelectedDataDomain(domain: DataDomainH): void {\n    this.theSelectedDataDomain = domain;\n  }\n\n  updateSearchHelpID(searchHelpID: string) {\n    this.theSelectedSearchHelp.SEARCH_HELP_ID = searchHelpID;\n    this.selectedSearchHelpSource.next(this.theSelectedSearchHelp);\n  }\n\n  updateSearchHelpDesc(searchHelpDesc: string) {\n    this.theSelectedSearchHelp.SEARCH_HELP_DESC = searchHelpDesc;\n    this.selectedSearchHelpSource.next(this.theSelectedSearchHelp);\n  }\n\n  setSelectedSearchHelp(searchHelp: SearchHelpH): void {\n    this.theSelectedSearchHelp = searchHelp;\n  }\n\n  sendDialogAnswer(answer: string): void {\n    this.dialogAnswer.next(answer);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21vZGVsL2VudGl0eS10eXBlL2VudGl0eS10eXBlLmNvbXBvbmVudC5jc3MifQ== */\";","export default \"<div class=\\\"row\\\">\\n  <div *ngIf=\\\"isSearchListShown\\\" class=\\\"col-3\\\">\\n    <div class=\\\"btn-toolbar justify-content-between mb-2\\\" role=\\\"toolbar\\\">\\n      <div class=\\\"input-group\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search\\\" #searchBox (keyup)=\\\"searchSearchHelp(searchBox.value)\\\" >\\n      </div>\\n\\n      <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Hide\\\" (click)=\\\"hideSearchList()\\\" [disabled]=\\\"!theSelectedSearchHelp\\\">\\n          <span class=\\\"fas fa-arrow-left\\\"></span>\\n        </button>\\n        <button class=\\\"btn\\\" type=\\\"button\\\" title=\\\"Add\\\" (click)=\\\"newSearchHelp()\\\">\\n          <span class=\\\"fas fa-plus\\\"></span>\\n        </button>\\n      </div>\\n    </div>\\n    <div class=\\\"list-group\\\">\\n      <a *ngFor=\\\"let searchHelp of searchHelpList\\\" routerLink=\\\"/model/search-help/{{searchHelp.SEARCH_HELP_ID}}\\\" routerLinkActive=\\\"active\\\"\\n         (click)=\\\"onSelect(searchHelp)\\\" class=\\\"list-group-item list-group-item-action flex-column align-items-start\\\">\\n        <div class=\\\"d-flex w-100 justify-content-between\\\">\\n          <h5 class=\\\"mb-1\\\">{{searchHelp.SEARCH_HELP_ID}}</h5>\\n          <small>version: {{searchHelp.VERSION_NO}}</small>\\n        </div>\\n        <p class=\\\"mb-1\\\">{{searchHelp.SEARCH_HELP_DESC}}</p>\\n        <!--<small>created by: {{entityType.CREATE_BY}} @{{entityType.CREATE_TIME}}</small> <br/>-->\\n        <small>last changed by: {{searchHelp.LAST_CHANGE_BY}} @{{searchHelp.LAST_CHANGE_TIME}}</small>\\n      </a>\\n    </div>\\n  </div>\\n  <div [ngClass]=\\\"{'col-9': isSearchListShown, 'col-12': !isSearchListShown}\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\\n\";","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ActivatedRoute, ParamMap, Router} from '@angular/router';\nimport {switchMap} from 'rxjs/operators';\nimport {AbstractControl, FormArray, FormBuilder, FormControl, FormGroup} from '@angular/forms';\nimport {Message, MessageService} from 'ui-message-angular';\nimport {msgStore} from '../../../msgStore';\nimport {forkJoin, Observable, of} from 'rxjs';\nimport {AttributeMetaComponent} from '../../attribute-meta/attribute-meta.component';\nimport {ModelService} from '../../model.service';\nimport {DialogService} from '../../../dialog.service';\nimport {UniqueEntityTypeValidator} from '../../model-validators';\nimport {SearchHelpMethod, SearchHelp, SearchHelpComponent, EntityService, Attribute, EntityMeta} from 'jor-angular';\n\n@Component({\n  selector: 'app-entity-type-detail',\n  templateUrl: './entity-type-detail.component.html',\n  styleUrls: ['./entity-type-detail.component.css']\n})\nexport class EntityTypeDetailComponent implements OnInit {\n  entityMeta: EntityMeta;\n  attributes: Attribute[];\n  readonly = true;\n  isNewMode = false;\n  entityTypeForm: FormGroup;\n  changedEntityType = {};\n  bypassProtection = false;\n  isSearchListShown = true;\n  roleSearchHelp: SearchHelp;\n\n  @ViewChild(AttributeMetaComponent, {static: false})\n  private attrComponent !: AttributeMetaComponent;\n  @ViewChild(SearchHelpComponent, {static: false})\n  private searchHelpComponent !: SearchHelpComponent;\n\n  constructor(private route: ActivatedRoute,\n              private router: Router,\n              private fb: FormBuilder,\n              private uniqueEntityTypeValidator: UniqueEntityTypeValidator,\n              private messageService: MessageService,\n              private modelService: ModelService,\n              private dialogService: DialogService,\n              private entityService: EntityService) {\n    this.messageService.setMessageStore(msgStore, 'EN');\n  }\n\n  get roleFormArray() {\n    return this.entityTypeForm.get('ROLES') as FormArray;\n  }\n\n  get attrFormArray() {\n    return this.entityTypeForm.get('ATTRIBUTES') as FormArray;\n  }\n\n  ngOnInit() {\n    this.route.paramMap.pipe(\n      switchMap((params: ParamMap) => {\n        const entityID = params.get('entityID');\n        if (entityID === 'new') {\n          const entityType = new EntityMeta();\n          entityType.ENTITY_ID = '';\n          entityType.ENTITY_DESC = '';\n          entityType.ROLES = [];\n          this.isNewMode = true;\n          this.readonly = false;\n          this.bypassProtection = false;\n          return forkJoin(of(entityType), of([]));\n        } else {\n          this.readonly = true;\n          this.isNewMode = false;\n          return forkJoin(\n            this.entityService.getEntityMeta(entityID),\n            this.entityService.getRelationMeta(entityID));\n        }\n      })\n    ).subscribe(data => {\n      if ( 'ENTITY_ID' in data[0]) {\n        this.messageService.clearMessages();\n        if (history.state.message) {\n          this.messageService.report(history.state.message);\n        }\n        this.entityMeta = <EntityMeta>data[0];\n        this.attributes = 'RELATION_ID' in data[1] ? data[1]['ATTRIBUTES'] : [];\n        this._generateEntityTypeForm();\n      } else {\n        this.messageService.clearMessages();\n        this.entityMeta = null;\n        this.entityTypeForm = null;\n        if (data[0] instanceof Array) {\n          data[0].forEach(err => this.messageService.add(err) );\n        } else {\n          this.messageService.report(<Message>data[0]);\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  showSearchList(): void {\n    this.isSearchListShown = true;\n    this.modelService.showSearchList();\n  }\n\n  onSearchHelp(control: AbstractControl, rowID: number): void {\n    if (!this.roleSearchHelp) {\n      this.roleSearchHelp = new SearchHelp();\n      this.roleSearchHelp.OBJECT_NAME = 'Role';\n      this.roleSearchHelp.METHOD = function(entityService: EntityService): SearchHelpMethod {\n        return (searchTerm: string): Observable<object[]> => entityService.listRole(searchTerm);\n      }(this.entityService);\n      this.roleSearchHelp.BEHAVIOUR = 'A';\n      this.roleSearchHelp.MULTI = false;\n      this.roleSearchHelp.FUZZY_SEARCH = true;\n      this.roleSearchHelp.FIELDS = [\n        {FIELD_NAME: 'ROLE_ID', LIST_HEADER_TEXT: 'Role', IMPORT: true, EXPORT: true, LIST_POSITION: 1, FILTER_POSITION: 0},\n        {FIELD_NAME: 'ROLE_DESC', LIST_HEADER_TEXT: 'Description', IMPORT: true, EXPORT: true, LIST_POSITION: 2, FILTER_POSITION: 0}\n      ];\n      this.roleSearchHelp.READ_ONLY = this.readonly || this.oldRole(control) && control.valid;\n    }\n    const afterExportFn = function (context: any, ruleIdx: number) {\n      return () => context.onChangeRoleID(ruleIdx, true);\n    }(this, rowID).bind(this);\n    this.searchHelpComponent.openSearchHelpModal(this.roleSearchHelp, control, afterExportFn);\n  }\n\n  _generateEntityTypeForm(): void {\n    this.entityTypeForm = this.fb.group({});\n    this.entityTypeForm.addControl('ENTITY_ID',\n      new FormControl(this.entityMeta.ENTITY_ID, {updateOn: 'blur'}));\n    if (this.isNewMode) {\n      this.entityTypeForm.get('ENTITY_ID').setValidators(this._validateEntityId);\n      this.entityTypeForm.get('ENTITY_ID').setAsyncValidators(\n        this.uniqueEntityTypeValidator.validate.bind(this.uniqueEntityTypeValidator));\n    }\n    this.entityTypeForm.addControl('ENTITY_DESC', new FormControl(this.entityMeta.ENTITY_DESC));\n\n    // Compose roles\n    const formArray = [];\n    this.entityMeta.ROLES.forEach( role => {\n      formArray.push(this.fb.group({\n        ROLE_ID: [role.ROLE_ID],\n        ROLE_DESC: [role.ROLE_DESC],\n        CONDITIONAL_ATTR: [{value: role.CONDITIONAL_ATTR, disabled: this.readonly}],\n        CONDITIONAL_VALUE: [role.CONDITIONAL_VALUE]\n      }));\n    });\n    if (this.isNewMode) {\n      formArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CONDITIONAL_ATTR: [''],\n          CONDITIONAL_VALUE: ['']\n        }));\n    }\n    this.entityTypeForm.addControl('ROLES', new FormArray(formArray));\n  }\n\n  _validateEntityId(c: FormControl) {\n    if (c.value.trim() === '') {\n      return {message: 'Entity ID is mandatory'};\n    }\n\n    if (c.value.toString().toLowerCase() === 'new') {\n      return {message: '\"NEW/new\" is reserved, thus is not allowed to use!'};\n    }\n\n    if (c.value.toString().toLowerCase().substr(0, 2) === 'r_' ||\n        c.value.toString().toLowerCase().substr(0, 3) === 'rs_') {\n      return {message: 'Entity ID cannot be started with \"r_\" or \"rs_\"!'};\n    }\n    return null;\n  }\n\n  switchEditDisplay() {\n    if (this.isNewMode) {\n      this.dialogService.confirm('Discard the new Entity Type?').subscribe(confirm => {\n        if (confirm) {\n          this._switch2DisplayMode();\n          this.entityMeta = null;\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return;\n    }\n\n    if (!this.readonly) { // In Change Mode -> Display Mode\n      if (this.entityTypeForm.dirty) {\n        this.dialogService.confirm('Discard changes?').subscribe(confirm => {\n          if (confirm) { // Discard changes and switch to Display Mode\n            this._generateEntityTypeForm();\n            this.entityTypeForm.reset(this.entityTypeForm.value);\n            this._switch2DisplayMode();\n          }\n        });\n      } else { // Switch to display mode\n        this._switch2DisplayMode();\n      }\n    } else { // In Display Mode -> Change Mode\n      this.readonly = false;\n      this.attrComponent.switchEditDisplay(this.readonly);\n      this.roleFormArray.controls.forEach(roleFormGroup => roleFormGroup.get('CONDITIONAL_ATTR').enable());\n      this.roleFormArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CONDITIONAL_ATTR: [''],\n          CONDITIONAL_VALUE: ['']\n        })\n      );\n    }\n    this.messageService.clearMessages();\n  }\n\n  _switch2DisplayMode(): void {\n    this.readonly = true;\n    this.attrComponent.switchEditDisplay(this.readonly);\n    this.roleFormArray.controls.forEach(roleFormGroup => {\n      roleFormGroup.get('CONDITIONAL_ATTR').disable();\n    });\n    let lastIndex = this.roleFormArray.length - 1;\n    while (lastIndex >= 0 && this.roleFormArray.controls[lastIndex].get('ROLE_ID').value.trim() === '') {\n      this.roleFormArray.removeAt(lastIndex);\n      lastIndex--;\n    }\n  }\n\n  onChangeEntityID(): void {\n    this.modelService.updateEntityID(this.entityTypeForm.get('ENTITY_ID').value);\n  }\n\n  onChangeEntityDesc(): void {\n    this.modelService.updateEntityDesc(this.entityTypeForm.get('ENTITY_DESC').value);\n  }\n\n  deleteRole(index: number): void {\n    if (index !== this.roleFormArray.length - 1) {\n      this.roleFormArray.removeAt(index);\n      this.roleFormArray.markAsDirty();\n    }\n  }\n\n  onChangeRoleID(index: number, isExportedFromSH?: boolean): void {\n    const currentRoleFormGroup = this.roleFormArray.controls[index];\n    if (this.roleFormArray.controls.findIndex((roleCtrl, i) =>\n      i !== index && roleCtrl.get('ROLE_ID').value === currentRoleFormGroup.get('ROLE_ID').value\n    ) !== -1) {\n      currentRoleFormGroup.get('ROLE_ID').setErrors({message: 'Duplicate roles'});\n      return;\n    }\n\n    if (index === this.roleFormArray.length - 1 && currentRoleFormGroup.value.ROLE_ID.trim() !== '') {\n      // Only work for the last New line\n      this.roleFormArray.push(\n        this.fb.group({\n          ROLE_ID: [''],\n          ROLE_DESC: [''],\n          CONDITIONAL_ATTR: [''],\n          CONDITIONAL_VALUE: ['']\n        })\n      );\n    }\n\n    if (!isExportedFromSH) {\n      this.entityService.getRoleDesc(currentRoleFormGroup.value.ROLE_ID).subscribe(data => {\n        if (data['msgCat']) {\n          currentRoleFormGroup.get('ROLE_ID').setErrors({message: data['msgShortText']});\n        } else {\n          currentRoleFormGroup.get('ROLE_DESC').setValue(data);\n        }\n      });\n    }\n  }\n\n  oldRole(formGroup: AbstractControl): boolean {\n    return this.entityMeta.ROLES ?\n      this.entityMeta.ROLES.findIndex(\n        role => role.ROLE_ID === formGroup.get('ROLE_ID').value ) !== -1 :\n      false;\n  }\n\n  canDeactivate(): Observable<boolean> | boolean {\n    if (this.isNewMode || (!this.bypassProtection && this.entityTypeForm && this.entityTypeForm.dirty)) {\n      const dialogAnswer = this.dialogService.confirm('Discard changes?');\n      dialogAnswer.subscribe(confirm => {\n        if (confirm) {\n          this.modelService.sendDialogAnswer('OK');\n        } else {\n          this.modelService.sendDialogAnswer('CANCEL');\n        }\n      });\n      return dialogAnswer;\n    } else {\n      return true;\n    }\n  }\n\n  save(): void {\n    if (!this.entityTypeForm.dirty) {\n      return this.messageService.reportMessage('MODEL', 'NO_CHANGE', 'S');\n    }\n\n    if (!this.entityTypeForm.valid) {\n      return this.messageService.reportMessage('MODEL', 'INVALID_DATA', 'E');\n    }\n\n    if (this.isNewMode) {\n      this.changedEntityType['action'] = 'add';\n      this.changedEntityType['ENTITY_ID'] = this.entityTypeForm.controls['ENTITY_ID'].value;\n    } else {\n      this.changedEntityType['action'] = 'update';\n      this.changedEntityType['ENTITY_ID'] = this.entityMeta.ENTITY_ID;\n    }\n    if (this.entityTypeForm.controls['ENTITY_DESC'].dirty) {\n      this.changedEntityType['ENTITY_DESC'] = this.entityTypeForm.controls['ENTITY_DESC'].value;\n    }\n\n    this.changedEntityType['ATTRIBUTES'] = this.attrComponent.processChangedAttributes();\n    this._processChangedRoles();\n\n    this.entityService.saveEntityType(this.changedEntityType)\n      .subscribe(data => this._postActivityAfterSavingEntityType(data));\n  }\n\n  _processChangedRoles(): void {\n    const changedRoles = [];\n    if (this.roleFormArray.dirty) {\n      this.changedEntityType['ROLES'] = changedRoles;\n      let action;\n      // Add/Update Case\n      this.roleFormArray.controls.forEach(role => {\n        if (role.get('ROLE_ID').value.trim() === '') { return; }\n        const index = this.entityMeta.ROLES.findIndex(\n          existRole => role.value.ROLE_ID === existRole.ROLE_ID);\n        action = index === -1 ? 'add' : 'update';\n        if (role.dirty) {\n          const changedRole = { action: action, ROLE_ID: role.value.ROLE_ID };\n          if (role.get('CONDITIONAL_ATTR').dirty) {\n            changedRole['CONDITIONAL_ATTR'] = role.value.CONDITIONAL_ATTR;\n          }\n          if (role.get('CONDITIONAL_VALUE').dirty) {\n            changedRole['CONDITIONAL_VALUE'] = role.value.CONDITIONAL_VALUE;\n          }\n          changedRoles.push(changedRole);\n        }\n      });\n\n      // Deletion Case\n      this.entityMeta.ROLES.forEach(role => {\n        const index = this.roleFormArray.controls.findIndex(\n          roleControl => roleControl.get('ROLE_ID').value === role.ROLE_ID);\n        if (index === -1) {\n          const deletedRole = {action: 'delete', ROLE_ID: role.ROLE_ID};\n          changedRoles.push(deletedRole);\n        }\n      });\n    }\n  }\n\n  _postActivityAfterSavingEntityType(data: any) {\n    this.changedEntityType = {};\n    if (data[0] && data[0]['ENTITY_ID']) {\n      if (this.isNewMode) {\n        this.isNewMode = false;\n        this.bypassProtection = true;\n        this.router.navigate(['/model/entity-type/' + data[0]['ENTITY_ID']],\n          {state: {message: this.messageService.generateMessage(\n                'MODEL', 'ENTITY_TYPE_SAVED', 'S', data[0]['ENTITY_ID'])}});\n      } else {\n        this.readonly = true;\n        this.entityMeta = data[0];\n        this.attributes = data[1].ATTRIBUTES;\n        this._generateEntityTypeForm();\n        this.messageService.reportMessage('MODEL', 'ENTITY_TYPE_SAVED', 'S',\n          this.entityMeta.ENTITY_ID);\n      }\n    } else {\n      if (data instanceof Array) {\n        data.forEach(err => this.messageService.add(err));\n      } else {\n        this.messageService.report(<Message>data);\n      }\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Subject} from 'rxjs';\nimport {ModelService} from '../model.service';\nimport {MessageService} from 'ui-message-angular';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {debounceTime, distinctUntilChanged, switchMap} from 'rxjs/operators';\nimport {DataElementH, EntityService, DataElementMeta} from 'jor-angular';\nimport {IdentityService} from '../../identity.service';\n\n@Component({\n  selector: 'app-data-element',\n  templateUrl: './data-element.component.html',\n  styleUrls: ['./data-element.component.css']\n})\nexport class DataElementComponent implements OnInit {\n  dataElementList: DataElementH[] = [];\n  isSearchListShown = true;\n  private searchTerms = new Subject<string>();\n  private theSelectedDataElement: DataElementH;\n\n  constructor(private entityService: EntityService,\n              private modelService: ModelService,\n              private messageService: MessageService,\n              private identityService: IdentityService,\n              private route: ActivatedRoute,\n              private router: Router) {\n  }\n\n  ngOnInit() {\n    this.searchTerms.pipe(\n      debounceTime(300),\n      distinctUntilChanged(),\n      switchMap((term: string) => this.entityService.listDataElement(term)),\n    ).subscribe(data => {\n      this.dataElementList = data;\n      let elementID;\n      if (this.route.snapshot.firstChild) {\n        elementID = this.route.snapshot.firstChild.paramMap.get('elementID');\n      }\n      if (elementID ) {\n        if (elementID === 'new') {\n          this._newDataElement();\n        } else {\n          this.onSelect(this.dataElementList.find(dataEle => dataEle.ELEMENT_ID === elementID));\n        }\n      }\n    });\n    this.searchDataElement(''); // The initial list\n\n    this.modelService.theSelectedDataElement$.subscribe( data => {\n      if (this.theSelectedDataElement) {\n        this.theSelectedDataElement.ELEMENT_ID = data['ELEMENT_ID'];\n        this.theSelectedDataElement.ELEMENT_DESC = data['ELEMENT_DESC'];\n      }\n    });\n\n    this.modelService.dialogAnswer$.subscribe( answer => {\n      if (answer === 'OK' && this.dataElementList[0] && !this.dataElementList[0].CREATE_TIME) {\n        this.dataElementList.splice(0, 1); // Remove the first one.\n      } else if (answer === 'CANCEL') {\n        const elementID = this.route.snapshot.firstChild.paramMap.get('elementID');\n        if (elementID) {\n          if (elementID === 'new') {\n            this.onSelect(this.dataElementList[0]);\n          } else {\n            this.onSelect(this.dataElementList.find(dataElement => dataElement.ELEMENT_ID === elementID));\n          }\n        }\n      }\n    });\n\n    this.modelService.isSearchListShown$.subscribe( data => this.isSearchListShown = data);\n  }\n\n  hideSearchList(): void {\n    this.isSearchListShown = false;\n    this.modelService.hideSearchList();\n  }\n\n  onSelect(dataElement: DataElementH): void {\n    if (dataElement) {\n      this.theSelectedDataElement = dataElement;\n      this.modelService.setSelectedDataElement(dataElement);\n    }\n  }\n\n  searchDataElement(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  newDataElement(): void {\n    if (this.route.snapshot.firstChild && this.route.snapshot.firstChild.paramMap.get('elementID') === 'new') {\n      this.messageService.reportMessage('MODEL', 'UNSAVED_NEW', 'E');\n    } else {\n      this._newDataElement();\n      this.router.navigate(['/model/data-element/new']);\n    }\n  }\n\n  _newDataElement(): void {\n    this.theSelectedDataElement = new DataElementMeta();\n    this.theSelectedDataElement.ELEMENT_ID = 'new';\n    this.theSelectedDataElement.ELEMENT_DESC = 'description';\n    this.theSelectedDataElement.VERSION_NO = 1;\n    this.theSelectedDataElement.LAST_CHANGE_BY = this.identityService.Session.USER_ID;\n    this.theSelectedDataElement.LAST_CHANGE_TIME = this.identityService.CurrentTime;\n    this.modelService.setSelectedDataElement(this.theSelectedDataElement);\n    this.dataElementList.splice(0, 0, this.theSelectedDataElement);\n  }\n}\n"]}