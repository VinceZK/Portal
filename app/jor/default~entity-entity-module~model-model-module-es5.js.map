{"version":3,"sources":["webpack:///src/app/work-protection.guard.ts","webpack:///src/app/dialog.service.ts","webpack:///node_modules/@ng-bootstrap/ng-bootstrap/fesm2015/ng-bootstrap.js"],"names":["WorkProtectionGuard","component","currentRoute","currentState","nextState","canDeactivate","providedIn","DialogService","message","confirmation","window","confirm","NgbAccordion_ng_template_0_ng_template_2_Template","rf","ctx","NgbAccordion_ng_template_0_Template","panel_r3","$implicit","title","titleTpl","templateRef","NgbAccordion_ng_template_2_ng_template_2_Template","NgbAccordion_ng_template_2_div_3_ng_template_2_Template","NgbAccordion_ng_template_2_div_3_Template","panel_r5","isOpen","id","contentTpl","_c0","a0","a1","opened","NgbAccordion_ng_template_2_Template","ctx_r2","_r0","type","headerTpl","destroyOnHide","NgbAlert_button_1_Template","_r2","NgbAlert_button_1_Template_button_click_0_listener","ctx_r1","closeHandler","_c3","NgbCarousel_ol_0_li_1_Template","_r7","NgbCarousel_ol_0_li_1_Template_li_click_0_listener","slide_r5","ctx_r6","select","pauseOnHover","pause","ctx_r4","activeId","NgbCarousel_ol_0_Template","ctx_r0","slides","NgbCarousel_div_2_ng_template_1_Template","NgbCarousel_div_2_Template","slide_r8","tplRef","NgbCarousel_a_3_Template","_r11","NgbCarousel_a_3_Template_a_click_0_listener","ctx_r10","prev","NgbCarousel_a_4_Template","_r13","NgbCarousel_a_4_Template_a_click_0_listener","ctx_r12","next","_c8","NgbDatepicker_ng_template_0_Template","date_r6","date","currentMonth_r7","currentMonth","selected_r8","selected","disabled_r9","disabled","focused_r10","focused","NgbDatepicker_ngb_datepicker_navigation_3_Template","_r12","NgbDatepicker_ngb_datepicker_navigation_3_Template_ngb_datepicker_navigation_navigate_0_listener","$event","ctx_r11","onNavigateEvent","NgbDatepicker_ngb_datepicker_navigation_3_Template_ngb_datepicker_navigation_select_0_listener","ctx_r13","onNavigateDateSelect","model","firstDate","months","navigation","prevDisabled","nextDisabled","selectBoxes","NgbDatepicker_ng_template_6_div_1_Template","month_r14","ctx_r16","i18n","getMonthFullName","number","year","getYearNumerals","NgbDatepicker_ng_template_6_Template","_r19","NgbDatepicker_ng_template_6_Template_ngb_datepicker_month_view_select_2_listener","ctx_r18","onDateSelect","displayMonths","dayTemplate","showWeekdays","showWeekNumbers","NgbDatepicker_ng_template_7_Template","NgbDatepickerMonthView_div_0_div_1_Template","NgbDatepickerMonthView_div_0_div_2_Template","w_r4","ctx_r3","getWeekdayShortName","NgbDatepickerMonthView_div_0_Template","month","weekdays","NgbDatepickerMonthView_ng_template_1_div_0_div_1_Template","week_r5","ctx_r7","getWeekNumerals","NgbDatepickerMonthView_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template","NgbDatepickerMonthView_ng_template_1_div_0_div_2_ng_template_1_Template","day_r10","context","NgbDatepickerMonthView_ng_template_1_div_0_div_2_Template","_r15","NgbDatepickerMonthView_ng_template_1_div_0_div_2_Template_div_click_0_listener","ctx_r14","doSelect","hidden","today","tabindex","ariaLabel","NgbDatepickerMonthView_ng_template_1_div_0_Template","days","NgbDatepickerMonthView_ng_template_1_Template","collapsed","NgbDatepickerNavigation_ngb_datepicker_navigation_select_4_Template","_r3","NgbDatepickerNavigation_ngb_datepicker_navigation_select_4_Template_ngb_datepicker_navigation_select_select_0_listener","emit","years","NgbDatepickerNavigation_5_ng_template_0_div_0_Template","NgbDatepickerNavigation_5_ng_template_0_div_3_Template","NgbDatepickerNavigation_5_ng_template_0_Template","month_r5","i_r6","index","length","NgbDatepickerNavigation_5_Template","_c17","NgbDatepickerNavigationSelect_option_2_Template","m_r2","getMonthShortName","NgbDatepickerNavigationSelect_option_5_Template","y_r3","NgbPagination_ng_template_0_Template","NgbPagination_ng_template_2_Template","NgbPagination_ng_template_4_Template","NgbPagination_ng_template_6_Template","NgbPagination_ng_template_8_Template","NgbPagination_ng_template_10_span_1_Template","NgbPagination_ng_template_10_Template","page_r17","currentPage_r18","currentPage","NgbPagination_li_13_ng_template_3_Template","_c36","NgbPagination_li_13_Template","_r22","NgbPagination_li_13_Template_a_click_1_listener","ctx_r21","selectPage","preventDefault","previousDisabled","hasPrevious","tplFirst","page","NgbPagination_li_14_ng_template_3_Template","_c39","NgbPagination_li_14_Template","_r25","NgbPagination_li_14_Template_a_click_1_listener","ctx_r24","tplPrevious","NgbPagination_li_15_a_1_ng_template_1_Template","_c40","NgbPagination_li_15_a_1_Template","ctx_r27","_r8","tplEllipsis","NgbPagination_li_15_a_2_ng_template_1_Template","_c41","a2","NgbPagination_li_15_a_2_Template","_r33","NgbPagination_li_15_a_2_Template_a_click_0_listener","pageNumber_r26","ctx_r31","ctx_r28","_r10","tplNumber","NgbPagination_li_15_Template","isEllipsis","NgbPagination_li_16_ng_template_3_Template","NgbPagination_li_16_Template","_r37","NgbPagination_li_16_Template_a_click_1_listener","ctx_r36","ctx_r15","_r4","hasNext","tplNext","NgbPagination_li_17_ng_template_3_Template","NgbPagination_li_17_Template","_r40","NgbPagination_li_17_Template_a_click_1_listener","ctx_r39","pageCount","_r6","tplLast","NgbPopoverWindow_h3_1_ng_template_1_Template","NgbPopoverWindow_h3_1_ng_template_3_Template","NgbPopoverWindow_h3_1_Template","_r1","isTitleTemplate","NgbProgressbar_span_2_Template","getPercentValue","NgbRating_ng_template_0_Template","fill_r3","fill","NgbRating_ng_template_2_ng_template_3_Template","NgbRating_ng_template_2_Template","NgbRating_ng_template_2_Template_span_mouseenter_2_listener","index_r4","enter","NgbRating_ng_template_2_Template_span_click_2_listener","ctx_r8","handleClick","nextRate","readonly","starTemplate","starTemplateFromContent","contexts","NgbTabset_li_1_ng_template_3_Template","NgbTabset_li_1_Template","_r5","NgbTabset_li_1_Template_a_click_1_listener","tab_r2","undefined","NgbTabset_ng_template_3_div_0_ng_template_1_Template","NgbTabset_ng_template_3_div_0_Template","tab_r6","NgbTabset_ng_template_3_Template","NgbTimepicker_button_3_Template","_r9","NgbTimepicker_button_3_Template_button_click_0_listener","changeHour","hourStep","isSmallSize","isLargeSize","NgbTimepicker_button_6_Template","NgbTimepicker_button_6_Template_button_click_0_listener","NgbTimepicker_button_10_Template","NgbTimepicker_button_10_Template_button_click_0_listener","changeMinute","minuteStep","NgbTimepicker_button_13_Template","NgbTimepicker_button_13_Template_button_click_0_listener","NgbTimepicker_div_14_Template","NgbTimepicker_div_15_button_1_Template","NgbTimepicker_div_15_button_1_Template_button_click_0_listener","changeSecond","secondStep","NgbTimepicker_div_15_button_4_Template","_r21","NgbTimepicker_div_15_button_4_Template_button_click_0_listener","ctx_r20","ctx_r17","NgbTimepicker_div_15_Template","_r23","NgbTimepicker_div_15_Template_input_change_2_listener","ctx_r22","updateSecond","target","value","NgbTimepicker_div_15_Template_input_keydown_ArrowUp_2_listener","NgbTimepicker_div_15_Template_input_keydown_ArrowDown_2_listener","ctx_r25","ctx_r5","spinners","formatMinSec","second","readonlyInputs","NgbTimepicker_div_16_Template","NgbTimepicker_div_17_ng_container_2_Template","NgbTimepicker_div_17_ng_template_3_Template","NgbTimepicker_div_17_Template","_r30","NgbTimepicker_div_17_Template_button_click_1_listener","ctx_r29","toggleMeridian","_r27","hour","NgbHighlight_ng_template_0_span_0_Template","part_r1","highlightClass","NgbHighlight_ng_template_0_ng_template_1_Template","NgbHighlight_ng_template_0_Template","isOdd_r2","odd","NgbTypeaheadWindow_ng_template_0_Template","result_r3","result","term_r4","term","formatter_r5","formatter","NgbTypeaheadWindow_ng_template_2_ng_template_1_Template","_c76","NgbTypeaheadWindow_ng_template_2_Template","NgbTypeaheadWindow_ng_template_2_Template_button_mouseenter_0_listener","idx_r7","ctx_r9","markActive","NgbTypeaheadWindow_ng_template_2_Template_button_click_0_listener","result_r6","activeIdx","resultTemplate","toInteger","parseInt","toString","getValueInRange","max","min","Math","isString","isNumber","isNaN","isInteger","isFinite","floor","isDefined","padNumber","slice","regExpEscape","text","replace","hasClassName","element","className","split","indexOf","Element","prototype","closest","matches","msMatchesSelector","webkitMatchesSelector","s","el","document","documentElement","contains","parentElement","parentNode","nodeType","selector","NgbAccordionConfig","closeOthers","ɵfac","NgbAccordionConfig_Factory","t","ɵprov","token","factory","ngInjectableDef","args","nextId","NgbPanelToggle","accordion","panel","NgbPanelToggle_Factory","NgbAccordion","NgbPanel","ɵdir","selectors","hostAttrs","hostVars","hostBindings","NgbPanelToggle_HostBindings","NgbPanelToggle_click_HostBindingHandler","toggle","inputs","ngbPanelToggle","ctorParameters","decorators","propDecorators","host","NgbPanelHeader","NgbPanelHeader_Factory","NgbPanelTitle","NgbPanelTitle_Factory","NgbPanelContent","NgbPanelContent_Factory","titleTpls","first","headerTpls","contentTpls","NgbPanel_Factory","contentQueries","NgbPanel_ContentQueries","dirIndex","_t","descendants","config","activeIds","panelChange","closeOtherPanels","panelId","_changeOpenState","_findPanelById","panels","forEach","_closeOthers","_updateActiveIds","defaultPrevented","find","p","filter","map","NgbAccordion_Factory","ɵcmp","NgbAccordion_ContentQueries","NgbAccordion_HostBindings","outputs","exportAs","decls","vars","consts","template","NgbAccordion_Template","directives","encapsulation","NGB_ACCORDION_DIRECTIVES","NgbAccordionModule","ngModule","ɵmod","ɵinj","NgbAccordionModule_Factory","imports","ngJitMode","declarations","exports","NgbAlertConfig","dismissible","NgbAlertConfig_Factory","NgbAlert","_renderer","_element","close","changes","typeChange","firstChange","removeClass","nativeElement","previousValue","addClass","currentValue","NgbAlert_Factory","NgbAlert_HostBindings","features","ngContentSelectors","i18n_1","ngI18nClosureMode","MSG_EXTERNAL_ngb_alert_close$$FESM2015_NG_BOOTSTRAP_JS__2","goog","getMsg","$localize","NgbAlert_Template","styles","changeDetection","OnPush","None","NgbAlertModule","NgbAlertModule_Factory","entryComponents","NgbButtonLabel","NgbButtonLabel_Factory","NgbButtonLabel_HostBindings","active","NGB_CHECKBOX_VALUE_ACCESSOR","provide","useExisting","NgbCheckBox","multi","_label","_cd","valueChecked","valueUnChecked","onChange","_","onTouched","modelToPropagate","checked","writeValue","fn","isDisabled","markForCheck","isFocused","NgbCheckBox_Factory","NgbCheckBox_HostBindings","NgbCheckBox_change_HostBindingHandler","onInputChange","NgbCheckBox_focus_HostBindingHandler","NgbCheckBox_blur_HostBindingHandler","providers","NGB_RADIO_VALUE_ACCESSOR","NgbRadioGroup","nextId$1","_radios","Set","_value","name","radio","_updateRadiosValue","add","_disabled","_updateRadiosDisabled","updateValue","updateDisabled","setDisabledState","NgbRadioGroup_Factory","NgbRadio","_group","register","unregister","onRadioChange","_checked","stringValue","setProperty","onRadioValueUpdate","NgbRadio_Factory","NgbRadio_HostBindings","NgbRadio_change_HostBindingHandler","NgbRadio_focus_HostBindingHandler","NgbRadio_blur_HostBindingHandler","nameAttr","NGB_BUTTON_DIRECTIVES","NgbButtonsModule","NgbButtonsModule_Factory","NgbCarouselConfig","interval","wrap","keyboard","showNavigationArrows","showNavigationIndicators","NgbCarouselConfig_Factory","nextId$2","NgbSlide","NgbSlide_Factory","NgbCarousel","_platformId","_ngZone","_destroy$","_start$","_stop$","slide","runOutsideAngular","pipe","subscribe","run","activeSlide","_getSlideById","isFirstChange","slideId","_cycleToSelected","_getSlideEventDirection","_getPrevSlide","NgbSlideEventDirection","RIGHT","_getNextSlide","LEFT","slideIdx","direction","selectedSlide","current","currentActiveSlideId","nextActiveSlideId","currentActiveSlideIdx","_getSlideIdxById","nextActiveSlideIdx","toArray","currentSlideId","slideArr","currentSlideIdx","isLastSlide","isFirstSlide","NgbCarousel_Factory","NgbCarousel_ContentQueries","NgbCarousel_HostBindings","NgbCarousel_mouseenter_HostBindingHandler","NgbCarousel_mouseleave_HostBindingHandler","cycle","NgbCarousel_keydown_arrowLeft_HostBindingHandler","NgbCarousel_keydown_arrowRight_HostBindingHandler","i18n_4","MSG_EXTERNAL_ngb_carousel_previous$$FESM2015_NG_BOOTSTRAP_JS__5","i18n_6","MSG_EXTERNAL_ngb_carousel_next$$FESM2015_NG_BOOTSTRAP_JS__7","NgbCarousel_Template","NGB_CAROUSEL_DIRECTIVES","NgbCarouselModule","NgbCarouselModule_Factory","NgbCollapse","NgbCollapse_Factory","NgbCollapse_HostBindings","NgbCollapseModule","NgbCollapseModule_Factory","NgbDate","day","other","fromJSDate","jsDate","getFullYear","getMonth","getDate","toJSDate","Date","getTime","setFullYear","NGB_DATEPICKER_CALENDAR_FACTORY","NgbCalendarGregorian","NgbCalendar","NgbCalendar_Factory","useFactory","period","setDate","getNext","getDay","week","firstDayOfWeek","thursdayIndex","time","setMonth","round","NgbCalendarGregorian_Factory","ɵNgbCalendarGregorian_BaseFactory","isChangedDate","dateComparator","isChangedMonth","equals","checkMinBeforeMax","minDate","maxDate","before","Error","checkDateInRange","after","isDateSelectable","state","markDisabled","generateSelectBoxMonths","calendar","getMonths","findIndex","generateSelectBoxYears","start","end","Array","from","e","i","nextMonthDisabled","prevMonthDisabled","prevDate","getPrev","buildMonths","force","monthsToReuse","splice","firstDates","reusedIndex","buildMonth","shift","dayTemplateData","outsideDays","calendarToday","getToday","lastDate","weeks","getFirstViewDate","getWeeksPerMonth","weekObject","getDaysPerWeek","getWeekday","newDate","nextDate","getDayAriaLabel","contextUserData","dayObject","Object","assign","data","getWeekNumber","daysPerWeek","firstMonthDate","dayOfWeek","NGB_DATEPICKER_18N_FACTORY","locale","NgbDatepickerI18nDefault","NgbDatepickerI18n","weekNumber","NgbDatepickerI18n_Factory","r","deps","_locale","weekdaysStartingOnSunday","Standalone","Short","_weekdaysShort","_monthsShort","Abbreviated","_monthsFull","Wide","weekday","NgbDatepickerI18nDefault_Factory","String","NgbDatepickerService","_calendar","_i18n","_model$","_select$","_state","focusVisible","selectedDate","isValid","focusDate","_nextState","focus","emitEvent","toValidDate","options","defaultValue","ngbDate","patch","newState","_updateState","_patchContexts","startDate","forceRebuild","yearChanged","monthChanged","NgbDatepickerService_Factory","Key","Tab","Enter","Escape","Space","PageUp","PageDown","End","Home","ArrowLeft","ArrowUp","ArrowRight","ArrowDown","NgbDatepickerKeyMapService","_service","model$","_minDate","_maxDate","_firstViewDate","_lastViewDate","event","which","focusMove","shiftKey","focusSelect","stopPropagation","NgbDatepickerKeyMapService_Factory","NavigationEvent","PREV","NEXT","NgbDatepickerConfig","NgbDatepickerConfig_Factory","NGB_DATEPICKER_DATE_ADAPTER_FACTORY","NgbDateStructAdapter","NgbDateAdapter","NgbDateAdapter_Factory","NgbDateStructAdapter_Factory","ɵNgbDateStructAdapter_BaseFactory","NGB_DATEPICKER_VALUE_ACCESSOR","NgbDatepicker","_keyMapService","_elementRef","_ngbDateAdapter","_destroyed$","navigate","input","select$","oldDate","navigationPrevented","open","newSelectedDate","newFocusedDate","oldFocusedDate","_controlValue","toModel","onStable","asObservable","elementToFocus","querySelector","focusIns$","_monthsEl","focusOuts$","relatedTarget","navigateTo","processKey","fromModel","NgbDatepicker_Factory","viewQuery","NgbDatepicker_Query","footerTemplate","NgbDatepicker_Template","NgbDatepicker_Template_div_keydown_4_listener","onKeyDown","NgbDatepickerDayView","NgbDatepickerNavigation","NgbDatepickerMonthView","NgbDatepickerMonthView_Factory","NgbDatepickerMonthView_Template","NgbDatepickerNavigation_Factory","showSelect","i18n_9","MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_10","i18n_11","MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_12","i18n_13","MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_14","i18n_15","MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_16","NgbDatepickerNavigation_Template","NgbDatepickerNavigation_Template_button_click_1_listener","NgbDatepickerNavigation_Template_button_click_7_listener","NgbDatepickerNavigationSelect","isContainedIn","array","some","item","matchesSelectorIfAny","iOS","navigator","userAgent","test","ngbAutoClose","zone","closed$","insideElements","ignoreElements","insideSelector","shouldCloseOnClick","MouseEvent","button","escapes$","mouseDowns$","closeableClicks$","shouldClose","FOCUSABLE_ELEMENTS_SELECTOR","join","getFocusableBoundaryElements","list","querySelectorAll","tabIndex","ngbFocusTrap","stopFocusTrap$","refocusOnClick","lastFocusedElement$","tabEvent","focusedElement","last","arr","lastFocusedElement","Positioning","getComputedStyle","prop","getAllStyles","getStyle","offsetParentEl","offsetParent","isStaticPositioned","elPosition","parentOffset","width","height","top","bottom","left","right","getBoundingClientRect","offset","clientTop","clientLeft","elBcr","viewportOffset","pageYOffset","pageXOffset","elOffset","offsetHeight","offsetWidth","hostElement","targetElement","placement","appendToBody","placementPrimary","placementSecondary","hostElPosition","position","targetElStyles","marginTop","parseFloat","marginBottom","marginLeft","marginRight","topPosition","leftPosition","style","transform","targetElBCR","html","windowHeight","innerHeight","clientHeight","windowWidth","innerWidth","clientWidth","placementSeparator","positionService","positionElements","baseClass","placementVals","isArray","allowedPlacements","classList","addClassesToTarget","targetPlacement","primary","secondary","classes","push","classname","placementToRemove","remove","hasAuto","val","obj","search","testPlacement","isInViewport","addedClasses","NGB_DATEPICKER_PARSER_FORMATTER_FACTORY","NgbDateISOParserFormatter","NgbDateParserFormatter","NgbDateParserFormatter_Factory","dateParts","trim","NgbDateISOParserFormatter_Factory","ɵNgbDateISOParserFormatter_BaseFactory","NGB_DATEPICKER_VALUE_ACCESSOR$1","NgbInputDatepicker","NGB_DATEPICKER_VALIDATOR","_parserFormatter","_elRef","_vcRef","_cfr","_dateAdapter","_document","_changeDetector","_cRef","autoClose","dateSelect","closed","_onChange","_onTouched","_validatorChange","_zoneSubscription","_updatePopupPosition","c","_fromDateStruct","invalid","requiredBefore","requiredAfter","_model","_writeModelValue","updateView","inputValueChanged","_inputValue","parse","cf","resolveComponentFactory","createComponent","_applyPopupStyling","location","_applyDatepickerInputs","instance","_subscribeForDatepickerOutputs","ngOnInit","registerOnChange","changeDetectorRef","detectChanges","container","appendChild","hostView","unsubscribe","datepickerInstance","optionName","navigateEvent","format","positionTarget","HTMLElement","NgbInputDatepicker_Factory","NgbInputDatepicker_HostBindings","NgbInputDatepicker_input_HostBindingHandler","manualDateChange","NgbInputDatepicker_change_HostBindingHandler","NgbInputDatepicker_blur_HostBindingHandler","onBlur","NgbDatepickerDayView_Factory","NgbDatepickerDayView_HostBindings","isMuted","attrs","NgbDatepickerDayView_Template","getDayNumerals","NgbDatepickerNavigationSelect_Factory","i18n_18","MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_19","i18n_20","MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_21","i18n_22","MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_23","i18n_24","MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_25","NgbDatepickerNavigationSelect_Template","NgbDatepickerNavigationSelect_Template_select_change_0_listener","changeMonth","NgbDatepickerNavigationSelect_Template_select_change_3_listener","changeYear","NgbCalendarHijri","_setYear","_setMonth","_setDay","toGregorian","MuhDate","fromGregorian","mDays","getDaysPerMonth","NgbCalendarHijri_Factory","ɵNgbCalendarHijri_BaseFactory","isIslamicLeapYear","hYear","isGregorianLeapYear","gDate","getIslamicMonthStart","hMonth","ceil","getIslamicYearStart","mod","a","b","GREGORIAN_EPOCH","ISLAMIC_EPOCH","NgbCalendarIslamicCivil","gYear","gMonth","gDay","julianDay","hDay","hDate","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","gYearStart","yearday","tjd","leapadj","tjd2","NgbCalendarIslamicCivil_Factory","ɵNgbCalendarIslamicCivil_BaseFactory","GREGORIAN_FIRST_DATE","GREGORIAN_LAST_DATE","HIJRI_BEGIN","HIJRI_END","ONE_DAY","MONTH_LENGTH","getDaysDiff","date1","date2","diff","abs","NgbCalendarIslamicUmalqura","daysDiff","j","numOfDays","dayDiff","y","m","pos","NgbCalendarIslamicUmalqura_Factory","ɵNgbCalendarIslamicUmalqura_BaseFactory","jalaliDate","jdn","jalaliToJulian","julianToGregorian","setHours","gdate","g2d","gregorianToJulian","julianToJalali","setJalaliYear","yearValue","setJalaliMonth","setJalaliDay","mod$1","div","trunc","jalCal","jalaliYear","breaks","breaksLength","leapJ","jp","jump","jm","n","leapG","march","leap","gy","julianDayNumber","gm","gd","d","gregorianDay","jalaliDay","jalaliMonth","numberOfDays","jYear","jMonth","jDay","NgbCalendarPersian","NgbCalendarPersian_Factory","ɵNgbCalendarPersian_BaseFactory","PARTS_PER_HOUR","PARTS_PER_DAY","PARTS_FRACTIONAL_MONTH","PARTS_PER_MONTH","BAHARAD","HEBREW_DAY_ON_JAN_1_1970","GREGORIAN_EPOCH$1","isGregorianLeapYear$1","numberOfFirstDayInYear","monthsBeforeYear","fractionalMonthsBeforeYear","dayNumber","timeOfDay","isHebrewLeapYear","getDaysInGregorianMonth","getHebrewMonths","getDaysInHebrewYear","getDaysInHebrewMonth","yearLength","yearType","leapYear","daysInMonth","getDayNumberInHebrewYear","numberOfDay","setHebrewMonth","setHebrewDay","fromGregorian$1","daysSinceHebEpoch","monthsSinceHebEpoch","firstDayOfThisYear","dayOfYear","toGregorian$1","hebrewDate","diffDays","hebrewNumerals","numerals","hArray0_9","hArray10_19","hArray20_90","hArray100_900","hArray1000_9000","geresh","gershaim","mem","step","unshift","NgbCalendarHebrew","NgbCalendarHebrew_Factory","ɵNgbCalendarHebrew_BaseFactory","WEEKDAYS","MONTHS","MONTHS_LEAP","NgbDatepickerI18nHebrew","NgbDatepickerI18nHebrew_Factory","ɵNgbDatepickerI18nHebrew_BaseFactory","NgbDateNativeAdapter","_fromNativeDate","_toNativeDate","NgbDateNativeAdapter_Factory","ɵNgbDateNativeAdapter_BaseFactory","NgbDateNativeUTCAdapter","getUTCFullYear","getUTCMonth","getUTCDate","UTC","setUTCFullYear","NgbDateNativeUTCAdapter_Factory","ɵNgbDateNativeUTCAdapter_BaseFactory","NgbDatepickerModule","NgbDatepickerModule_Factory","NgbDropdownConfig","NgbDropdownConfig_Factory","NgbNavbar","NgbNavbar_Factory","NgbDropdownItem","elementRef","NgbDropdownItem_Factory","NgbDropdownItem_HostBindings","NgbDropdownMenu","dropdown","NgbDropdownMenu_Factory","NgbDropdown","NgbDropdownMenu_ContentQueries","menuItems","NgbDropdownMenu_HostBindings","NgbDropdownMenu_keydown_ArrowUp_HostBindingHandler","NgbDropdownMenu_keydown_ArrowDown_HostBindingHandler","NgbDropdownMenu_keydown_Home_HostBindingHandler","NgbDropdownMenu_keydown_End_HostBindingHandler","NgbDropdownMenu_keydown_Enter_HostBindingHandler","NgbDropdownMenu_keydown_Space_HostBindingHandler","NgbDropdownAnchor","anchorEl","NgbDropdownAnchor_Factory","NgbDropdownAnchor_HostBindings","NgbDropdownToggle","NgbDropdownToggle_Factory","NgbDropdownToggle_HostBindings","NgbDropdownToggle_click_HostBindingHandler","NgbDropdownToggle_keydown_ArrowUp_HostBindingHandler","NgbDropdownToggle_keydown_ArrowDown_HostBindingHandler","NgbDropdownToggle_keydown_Home_HostBindingHandler","NgbDropdownToggle_keydown_End_HostBindingHandler","ngbNavbar","_closed$","_open","openChange","display","_positionMenu","_applyPlacementClasses","_setCloseHandlers","_applyContainer","_menu","_menuElement","_anchor","getNativeElement","_resetContainer","key","itemElements","_getMenuElements","isEventFromItems","isEventFromToggle","_isEventFromToggle","itemElement","activeElement","_isDropup","_bodyContainer","_getFirstPlacement","renderer","dropdownElement","dropdownMenuElement","removeStyle","removeChild","body","bodyContainer","createElement","setStyle","dropdownClass","NgbDropdown_Factory","NgbDropdown_ContentQueries","NgbDropdown_HostBindings","read","NGB_DROPDOWN_DIRECTIVES","NgbDropdownModule","NgbDropdownModule_Factory","NgbModalConfig","backdrop","NgbModalConfig_Factory","ContentRef","nodes","viewRef","componentRef","PopupService","_type","_injector","_viewContainerRef","_componentFactoryResolver","_applicationRef","content","_windowRef","_contentRef","_getContentRef","detachView","destroy","createEmbeddedView","attachView","rootNodes","createText","noop","ScrollBar","_isPresent","_adjustBody","_getWidth","userSetPadding","paddingRight","paddingAmount","rect","measurer","ScrollBar_Factory","NgbModalBackdrop","NgbModalBackdrop_Factory","NgbModalBackdrop_HostBindings","backdropClass","NgbModalBackdrop_Template","NgbActiveModal","reason","NgbModalRef","_windowCmptRef","_backdropCmptRef","_beforeDismiss","dismissEvent","dismiss","Promise","resolve","reject","_resolve","_reject","then","_removeModalElements","_dismiss","windowNativeEl","backdropNativeEl","ModalDismissReasons","BACKDROP_CLICK","ESC","NgbModalWindow","_elWithFocus","autoFocusable","firstFocusable","elWithFocus","NgbModalWindow_Factory","NgbModalWindow_HostBindings","NgbModalWindow_keyup_esc_HostBindingHandler","escKey","NgbModalWindow_click_HostBindingHandler","backdropClick","ariaLabelledBy","windowClass","centered","size","NgbModalWindow_Template","NgbModalStack","_scrollBar","_rendererFactory","_activeWindowCmptHasChanged","_ariaHiddenValues","Map","_backdropAttributes","_modalRefs","_windowAttributes","_windowCmpts","activeWindowCmpt","_revertAriaHidden","_setAriaHidden","moduleCFR","contentInjector","containerEl","createRenderer","revertPaddingForScrollBar","compensate","removeBodyClass","activeModal","contentRef","injector","backdropCmptRef","_attachBackdrop","windowCmptRef","_attachWindowComponent","ngbModalRef","beforeDismiss","_registerModalRef","_registerWindowCmpt","_applyWindowOptions","_applyBackdropOptions","backdropFactory","create","windowFactory","windowInstance","backdropInstance","_createFromTemplateRef","_createFromString","_createFromComponent","createTextNode","contentCmptFactory","modalContentInjector","useValue","parent","children","sibling","nodeName","set","getAttribute","setAttribute","removeAttribute","clear","unregisterModalRef","ngbWindowCmpt","onDestroy","NgbModalStack_Factory","NgbModal","_moduleCFR","_modalStack","_config","combinedOptions","dismissAll","hasOpenModals","NgbModal_Factory","NgbModalModule","NgbModalModule_Factory","NgbPaginationConfig","boundaryLinks","directionLinks","ellipses","maxSize","pageSize","rotate","NgbPaginationConfig_Factory","NgbPaginationEllipsis","NgbPaginationEllipsis_Factory","NgbPaginationFirst","NgbPaginationFirst_Factory","NgbPaginationLast","NgbPaginationLast_Factory","NgbPaginationNext","NgbPaginationNext_Factory","NgbPaginationNumber","NgbPaginationNumber_Factory","NgbPaginationPrevious","NgbPaginationPrevious_Factory","NgbPagination","pages","pageChange","pageNumber","_updatePages","leftOffset","rightOffset","newPageNo","prevPageNo","collectionSize","newPage","_setPageInRange","_applyRotation","_applyPagination","_applyEllipses","NgbPagination_Factory","NgbPagination_ContentQueries","i18n_26","MSG_EXTERNAL_ngb_pagination_first$$FESM2015_NG_BOOTSTRAP_JS__27","i18n_28","MSG_EXTERNAL_ngb_pagination_previous$$FESM2015_NG_BOOTSTRAP_JS__29","i18n_30","MSG_EXTERNAL_ngb_pagination_next$$FESM2015_NG_BOOTSTRAP_JS__31","i18n_32","MSG_EXTERNAL_ngb_pagination_last$$FESM2015_NG_BOOTSTRAP_JS__33","i18n_34","MSG_EXTERNAL_ngb_pagination_first_aria$$FESM2015_NG_BOOTSTRAP_JS__35","i18n_37","MSG_EXTERNAL_ngb_pagination_previous_aria$$FESM2015_NG_BOOTSTRAP_JS__38","i18n_42","MSG_EXTERNAL_ngb_pagination_next_aria$$FESM2015_NG_BOOTSTRAP_JS__43","i18n_44","MSG_EXTERNAL_ngb_pagination_last_aria$$FESM2015_NG_BOOTSTRAP_JS__45","NgbPagination_Template","DIRECTIVES","NgbPaginationModule","NgbPaginationModule_Factory","Trigger","DEFAULT_ALIASES","parseTriggers","triggers","aliases","trimmedTriggers","parsedTriggers","trigger","triggerPair","alias","manualTriggers","isManual","observeTriggers","isOpenedFn","subscriber","listeners","openFn","closeFn","toggleFn","listen","unsubscribeFn","delayOrNoop","triggerDelay","openDelay","closeDelay","input$","pending","filteredInput$","currentlyOpen","delayedOpen$","delayedClose$","listenToTriggers","subscription","NgbPopoverConfig","disablePopover","NgbPopoverConfig_Factory","nextId$3","NgbPopoverWindow","NgbPopoverWindow_Factory","NgbPopoverWindow_HostBindings","popoverClass","NgbPopoverWindow_Template","NgbPopover","componentFactoryResolver","viewContainerRef","shown","_ngbPopoverWindowId","_popupService","ngbPopover","popoverTitle","_isDisabled","_unregisterListenersFn","bind","NgbPopover_Factory","NgbPopoverModule","NgbPopoverModule_Factory","NgbProgressbarConfig","animated","striped","showValue","NgbProgressbarConfig_Factory","NgbProgressbar","getValue","NgbProgressbar_Factory","i18n_46","MSG_EXTERNAL_ngb_progressbar_value$$FESM2015_NG_BOOTSTRAP_JS__47","NgbProgressbar_Template","NgbProgressbarModule","NgbProgressbarModule_Factory","NgbRatingConfig","resettable","NgbRatingConfig_Factory","NGB_RATING_VALUE_ACCESSOR","NgbRating","_changeDetectorRef","hover","leave","rateChange","update","rate","v","k","internalChange","newRate","toFixed","nextValue","_getFillValue","NgbRating_Factory","NgbRating_ContentQueries","NgbRating_HostBindings","NgbRating_blur_HostBindingHandler","handleBlur","NgbRating_keydown_HostBindingHandler","handleKeyDown","NgbRating_mouseleave_HostBindingHandler","reset","ariaValueText","NgbRating_Template","NgbRatingModule","NgbRatingModule_Factory","NgbTabsetConfig","justify","orientation","NgbTabsetConfig_Factory","nextId$4","NgbTabTitle","NgbTabTitle_Factory","NgbTabContent","NgbTabContent_Factory","NgbTab","NgbTab_Factory","NgbTab_ContentQueries","NgbTabset","tabChange","tabId","selectedTab","_getTabById","activeTab","tabs","tabsWithId","tab","justifyClass","NgbTabset_Factory","NgbTabset_ContentQueries","NgbTabset_Template","NGB_TABSET_DIRECTIVES","NgbTabsetModule","NgbTabsetModule_Factory","NgbTime","minute","updateHour","NaN","updateMinute","checkSecs","NgbTimepickerConfig","meridian","seconds","NgbTimepickerConfig_Factory","NGB_DATEPICKER_TIME_ADAPTER_FACTORY","NgbTimeStructAdapter","NgbTimeAdapter","NgbTimeAdapter_Factory","NgbTimeStructAdapter_Factory","ɵNgbTimeStructAdapter_BaseFactory","NGB_TIMEPICKER_VALUE_ACCESSOR","NgbTimepicker","_ngbTimeAdapter","structValue","propagateModelChange","newVal","isPM","enteredHour","touched","_hourStep","_minuteStep","_secondStep","NgbTimepicker_Factory","i18n_48","MSG_EXTERNAL_ngb_timepicker_HH$$FESM2015_NG_BOOTSTRAP_JS_49","i18n_50","MSG_EXTERNAL_ngb_timepicker_hours$$FESM2015_NG_BOOTSTRAP_JS_51","i18n_52","MSG_EXTERNAL_ngb_timepicker_MM$$FESM2015_NG_BOOTSTRAP_JS_53","i18n_54","MSG_EXTERNAL_ngb_timepicker_minutes$$FESM2015_NG_BOOTSTRAP_JS_55","i18n_56","MSG_EXTERNAL_ngb_timepicker_increment_hours$$FESM2015_NG_BOOTSTRAP_JS__57","i18n_58","MSG_EXTERNAL_ngb_timepicker_decrement_hours$$FESM2015_NG_BOOTSTRAP_JS__59","i18n_60","MSG_EXTERNAL_ngb_timepicker_increment_minutes$$FESM2015_NG_BOOTSTRAP_JS__61","i18n_62","MSG_EXTERNAL_ngb_timepicker_decrement_minutes$$FESM2015_NG_BOOTSTRAP_JS__63","i18n_64","MSG_EXTERNAL_ngb_timepicker_SS$$FESM2015_NG_BOOTSTRAP_JS__65","i18n_66","MSG_EXTERNAL_ngb_timepicker_seconds$$FESM2015_NG_BOOTSTRAP_JS__67","i18n_68","MSG_EXTERNAL_ngb_timepicker_increment_seconds$$FESM2015_NG_BOOTSTRAP_JS___69","i18n_70","MSG_EXTERNAL_ngb_timepicker_decrement_seconds$$FESM2015_NG_BOOTSTRAP_JS___71","i18n_72","MSG_EXTERNAL_ngb_timepicker_PM$$FESM2015_NG_BOOTSTRAP_JS___73","i18n_74","MSG_EXTERNAL_ngb_timepicker_AM$$FESM2015_NG_BOOTSTRAP_JS___75","NgbTimepicker_Template","NgbTimepicker_Template_input_change_4_listener","NgbTimepicker_Template_input_keydown_ArrowUp_4_listener","NgbTimepicker_Template_input_keydown_ArrowDown_4_listener","NgbTimepicker_Template_input_change_11_listener","NgbTimepicker_Template_input_keydown_ArrowUp_11_listener","NgbTimepicker_Template_input_keydown_ArrowDown_11_listener","formatHour","NgbTimepickerModule","NgbTimepickerModule_Factory","NgbTooltipConfig","disableTooltip","NgbTooltipConfig_Factory","nextId$5","NgbTooltipWindow","NgbTooltipWindow_Factory","NgbTooltipWindow_HostBindings","tooltipClass","NgbTooltipWindow_Template","NgbTooltip","_ngbTooltipWindowId","_ngbTooltip","NgbTooltip_Factory","ngbTooltip","NgbTooltipModule","NgbTooltipModule_Factory","NgbHighlight","resultStr","parts","resultTerms","x","regexStr","RegExp","NgbHighlight_Factory","NgbHighlight_Template","NgbTypeaheadWindow","focusFirst","selectEvent","activeChangeEvent","results","_activeChanged","resetActive","NgbTypeaheadWindow_Factory","NgbTypeaheadWindow_HostBindings","NgbTypeaheadWindow_mousedown_HostBindingHandler","NgbTypeaheadWindow_Template","ARIA_LIVE_DELAY","ARIA_LIVE_DELAY_FACTORY","getLiveElement","lazyCreate","Live","_delay","delay$$1","textContent","setText","setTimeout","Live_Factory","NgbTypeaheadConfig","editable","showHint","NgbTypeaheadConfig_Factory","NGB_TYPEAHEAD_VALUE_ACCESSOR","NgbTypeahead","nextWindowId","ngZone","_live","autocomplete","selectItem","popupId","_valueChanges","_resubscribeTypeahead","isPopupOpen","inputValues$","_inputValueBackup","results$","ngbTypeahead","processedResults$","userInput$","_subscription","_subscribeToUserInput","_closePopup","_unsubscribeFromUserInput","_writeInputValue","_formatItemForInput","_showHint","getActive","_selectResult","_selectResultClosePopup","activeDescendant","dismissPopup","hasActive","userInputLowerCase","toLowerCase","formattedVal","substr","apply","inputFormatter","_openPopup","resultFormatter","count","say","NgbTypeahead_Factory","NgbTypeahead_HostBindings","NgbTypeahead_blur_HostBindingHandler","NgbTypeahead_keydown_HostBindingHandler","NgbTypeaheadModule","NgbTypeaheadModule_Factory","NGB_MODULES","NgbModule","NgbModule_Factory"],"mappings":"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","file":"default~entity-entity-module~model-model-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport {ActivatedRouteSnapshot, CanDeactivate, RouterStateSnapshot} from '@angular/router';\nimport { Observable } from 'rxjs';\n\nexport interface CanComponentDeactivate {\n  canDeactivate: () => Observable<boolean> | Promise<boolean> | boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WorkProtectionGuard implements CanDeactivate<CanComponentDeactivate>  {\n\n  canDeactivate(component: CanComponentDeactivate,\n                currentRoute: ActivatedRouteSnapshot,\n                currentState: RouterStateSnapshot,\n                nextState?: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    return component.canDeactivate ? component.canDeactivate() : true;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {Observable, of} from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DialogService {\n\n  /**\n   * Ask user to confirm an action. `message` explains the action and choices.\n   * Returns observable resolving to `true`=confirm or `false`=cancel\n   */\n  confirm(message?: string): Observable<boolean> {\n    const confirmation = window.confirm(message || 'Is it OK?');\n\n    return of(confirmation);\n  }\n}\n","import { Injectable, Component, Input, TemplateRef, Output, EventEmitter, ViewEncapsulation, ChangeDetectionStrategy, Inject, InjectionToken, LOCALE_ID, NgModule, ChangeDetectorRef, ContentChildren, Directive, NgZone, PLATFORM_ID, Injector, Renderer2, ElementRef, ViewContainerRef, ComponentFactoryResolver, ApplicationRef, ContentChild, forwardRef, Optional, Host, defineInjectable, inject, RendererFactory2, INJECTOR, ViewChild } from '@angular/core';\nimport { CommonModule, isPlatformBrowser, FormStyle, getLocaleDayNames, getLocaleMonthNames, TranslationWidth, formatDate, DOCUMENT } from '@angular/common';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, FormsModule } from '@angular/forms';\nimport { merge, Subject, timer, fromEvent, race, Observable, BehaviorSubject } from 'rxjs';\nimport { filter, map, switchMap, takeUntil, take, delay, withLatestFrom, share, tap } from 'rxjs/operators';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} value\n * @return {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from '@angular/forms';\n\nfunction NgbAccordion_ng_template_0_ng_template_2_Template(rf, ctx) { }\nfunction NgbAccordion_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"button\", 3);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_0_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const panel_r3 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngbPanelToggle\", panel_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", panel_r3.title, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", panel_r3.titleTpl == null ? null : panel_r3.titleTpl.templateRef);\n} }\nfunction NgbAccordion_ng_template_2_ng_template_2_Template(rf, ctx) { }\nfunction NgbAccordion_ng_template_2_div_3_ng_template_2_Template(rf, ctx) { }\nfunction NgbAccordion_ng_template_2_div_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 10);\n    ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_2_div_3_ng_template_2_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const panel_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵclassProp(\"show\", panel_r5.isOpen);\n    ɵngcc0.ɵɵpropertyInterpolate(\"id\", panel_r5.id);\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", panel_r5.id + \"-header\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", panel_r5.contentTpl == null ? null : panel_r5.contentTpl.templateRef);\n} }\nconst _c0 = function (a0, a1) { return { $implicit: a0, opened: a1 }; };\nfunction NgbAccordion_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 5);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 6);\n    ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_2_ng_template_2_Template, 0, 0, \"ng-template\", 7);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NgbAccordion_ng_template_2_div_3_Template, 3, 5, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const panel_r5 = ctx.$implicit;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    const _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassMap(\"card-header \" + (panel_r5.type ? \"bg-\" + panel_r5.type : ctx_r2.type ? \"bg-\" + ctx_r2.type : \"\"));\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"\", panel_r5.id, \"-header\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (panel_r5.headerTpl == null ? null : panel_r5.headerTpl.templateRef) || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(6, _c0, panel_r5, panel_r5.isOpen));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r2.destroyOnHide || panel_r5.isOpen);\n} }\nfunction NgbAlert_button_1_Template(rf, ctx) { if (rf & 1) {\n    const _r2 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 1);\n    ɵngcc0.ɵɵi18nAttributes(1, 2);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbAlert_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r2); const ctx_r1 = ɵngcc0.ɵɵnextContext(); return ctx_r1.closeHandler(); });\n    ɵngcc0.ɵɵelementStart(2, \"span\", 3);\n    ɵngcc0.ɵɵtext(3, \"\\u00D7\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c3 = [\"*\"];\nfunction NgbCarousel_ol_0_li_1_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbCarousel_ol_0_li_1_Template_li_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r7); const slide_r5 = ctx.$implicit; const ctx_r6 = ɵngcc0.ɵɵnextContext(2); ctx_r6.select(slide_r5.id); return ctx_r6.pauseOnHover && ctx_r6.pause(); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const slide_r5 = ctx.$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"active\", slide_r5.id === ctx_r4.activeId);\n    ɵngcc0.ɵɵproperty(\"id\", slide_r5.id);\n} }\nfunction NgbCarousel_ol_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"ol\", 5);\n    ɵngcc0.ɵɵtemplate(1, NgbCarousel_ol_0_li_1_Template, 1, 3, \"li\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.slides);\n} }\nfunction NgbCarousel_div_2_ng_template_1_Template(rf, ctx) { }\nfunction NgbCarousel_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(1, NgbCarousel_div_2_ng_template_1_Template, 0, 0, \"ng-template\", 9);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const slide_r8 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", slide_r8.id === ctx_r1.activeId);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", slide_r8.tplRef);\n} }\nfunction NgbCarousel_a_3_Template(rf, ctx) { if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 10);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbCarousel_a_3_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.prev(); });\n    ɵngcc0.ɵɵelement(1, \"span\", 11);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 12);\n    ɵngcc0.ɵɵi18n(3, 13);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NgbCarousel_a_4_Template(rf, ctx) { if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 14);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbCarousel_a_4_Template_a_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.next(); });\n    ɵngcc0.ɵɵelement(1, \"span\", 15);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 12);\n    ɵngcc0.ɵɵi18n(3, 16);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} }\nconst _c8 = [\"months\"];\nfunction NgbDatepicker_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 7);\n} if (rf & 2) {\n    const date_r6 = ctx.date;\n    const currentMonth_r7 = ctx.currentMonth;\n    const selected_r8 = ctx.selected;\n    const disabled_r9 = ctx.disabled;\n    const focused_r10 = ctx.focused;\n    ɵngcc0.ɵɵproperty(\"date\", date_r6)(\"currentMonth\", currentMonth_r7)(\"selected\", selected_r8)(\"disabled\", disabled_r9)(\"focused\", focused_r10);\n} }\nfunction NgbDatepicker_ngb_datepicker_navigation_3_Template(rf, ctx) { if (rf & 1) {\n    const _r12 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"ngb-datepicker-navigation\", 8);\n    ɵngcc0.ɵɵlistener(\"navigate\", function NgbDatepicker_ngb_datepicker_navigation_3_Template_ngb_datepicker_navigation_navigate_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.onNavigateEvent($event); })(\"select\", function NgbDatepicker_ngb_datepicker_navigation_3_Template_ngb_datepicker_navigation_select_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r12); const ctx_r13 = ɵngcc0.ɵɵnextContext(); return ctx_r13.onNavigateDateSelect($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"date\", ctx_r2.model.firstDate)(\"months\", ctx_r2.model.months)(\"disabled\", ctx_r2.model.disabled)(\"showSelect\", ctx_r2.model.navigation === \"select\")(\"prevDisabled\", ctx_r2.model.prevDisabled)(\"nextDisabled\", ctx_r2.model.nextDisabled)(\"selectBoxes\", ctx_r2.model.selectBoxes);\n} }\nfunction NgbDatepicker_ng_template_6_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const month_r14 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r16 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", ctx_r16.i18n.getMonthFullName(month_r14.number, month_r14.year), \" \", ctx_r16.i18n.getYearNumerals(month_r14.year), \" \");\n} }\nfunction NgbDatepicker_ng_template_6_Template(rf, ctx) { if (rf & 1) {\n    const _r19 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(1, NgbDatepicker_ng_template_6_div_1_Template, 2, 2, \"div\", 10);\n    ɵngcc0.ɵɵelementStart(2, \"ngb-datepicker-month-view\", 11);\n    ɵngcc0.ɵɵlistener(\"select\", function NgbDatepicker_ng_template_6_Template_ngb_datepicker_month_view_select_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(); return ctx_r18.onDateSelect($event); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const month_r14 = ctx.$implicit;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext();\n    const _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r4.navigation === \"none\" || ctx_r4.displayMonths > 1 && ctx_r4.navigation === \"select\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"month\", month_r14)(\"dayTemplate\", ctx_r4.dayTemplate || _r0)(\"showWeekdays\", ctx_r4.showWeekdays)(\"showWeekNumbers\", ctx_r4.showWeekNumbers);\n} }\nfunction NgbDatepicker_ng_template_7_Template(rf, ctx) { }\nfunction NgbDatepickerMonthView_div_0_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 5);\n} }\nfunction NgbDatepickerMonthView_div_0_div_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const w_r4 = ctx.$implicit;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ctx_r3.i18n.getWeekdayShortName(w_r4), \" \");\n} }\nfunction NgbDatepickerMonthView_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonthView_div_0_div_1_Template, 1, 0, \"div\", 3);\n    ɵngcc0.ɵɵtemplate(2, NgbDatepickerMonthView_div_0_div_2_Template, 2, 1, \"div\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r0.showWeekNumbers);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.month.weekdays);\n} }\nfunction NgbDatepickerMonthView_ng_template_1_div_0_div_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const week_r5 = ɵngcc0.ɵɵnextContext(2).$implicit;\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r7.i18n.getWeekNumerals(week_r5.number));\n} }\nfunction NgbDatepickerMonthView_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template(rf, ctx) { }\nfunction NgbDatepickerMonthView_ng_template_1_div_0_div_2_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerMonthView_ng_template_1_div_0_div_2_ng_template_1_ng_template_0_Template, 0, 0, \"ng-template\", 14);\n} if (rf & 2) {\n    const day_r10 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r11 = ɵngcc0.ɵɵnextContext(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r11.dayTemplate)(\"ngTemplateOutletContext\", day_r10.context);\n} }\nfunction NgbDatepickerMonthView_ng_template_1_div_0_div_2_Template(rf, ctx) { if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbDatepickerMonthView_ng_template_1_div_0_div_2_Template_div_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); const day_r10 = ctx.$implicit; const ctx_r14 = ɵngcc0.ɵɵnextContext(3); return ctx_r14.doSelect(day_r10); });\n    ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonthView_ng_template_1_div_0_div_2_ng_template_1_Template, 1, 2, \"ng-template\", 13);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const day_r10 = ctx.$implicit;\n    ɵngcc0.ɵɵclassProp(\"disabled\", day_r10.context.disabled)(\"hidden\", day_r10.hidden)(\"ngb-dp-today\", day_r10.context.today);\n    ɵngcc0.ɵɵproperty(\"tabindex\", day_r10.tabindex);\n    ɵngcc0.ɵɵattribute(\"aria-label\", day_r10.ariaLabel);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !day_r10.hidden);\n} }\nfunction NgbDatepickerMonthView_ng_template_1_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonthView_ng_template_1_div_0_div_1_Template, 2, 1, \"div\", 9);\n    ɵngcc0.ɵɵtemplate(2, NgbDatepickerMonthView_ng_template_1_div_0_div_2_Template, 2, 9, \"div\", 10);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const week_r5 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r6 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r6.showWeekNumbers);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", week_r5.days);\n} }\nfunction NgbDatepickerMonthView_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerMonthView_ng_template_1_div_0_Template, 3, 2, \"div\", 7);\n} if (rf & 2) {\n    const week_r5 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngIf\", !week_r5.collapsed);\n} }\nfunction NgbDatepickerNavigation_ngb_datepicker_navigation_select_4_Template(rf, ctx) { if (rf & 1) {\n    const _r3 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"ngb-datepicker-navigation-select\", 8);\n    ɵngcc0.ɵɵlistener(\"select\", function NgbDatepickerNavigation_ngb_datepicker_navigation_select_4_Template_ngb_datepicker_navigation_select_select_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r3); const ctx_r2 = ɵngcc0.ɵɵnextContext(); return ctx_r2.select.emit($event); });\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"date\", ctx_r0.date)(\"disabled\", ctx_r0.disabled)(\"months\", ctx_r0.selectBoxes.months)(\"years\", ctx_r0.selectBoxes.years);\n} }\nfunction NgbDatepickerNavigation_5_ng_template_0_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 0);\n} }\nfunction NgbDatepickerNavigation_5_ng_template_0_div_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 0);\n} }\nfunction NgbDatepickerNavigation_5_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerNavigation_5_ng_template_0_div_0_Template, 1, 0, \"div\", 10);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 11);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(3, NgbDatepickerNavigation_5_ng_template_0_div_3_Template, 1, 0, \"div\", 10);\n} if (rf & 2) {\n    const month_r5 = ctx.$implicit;\n    const i_r6 = ctx.index;\n    const ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", i_r6 > 0);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate2(\" \", ctx_r4.i18n.getMonthFullName(month_r5.number, month_r5.year), \" \", ctx_r4.i18n.getYearNumerals(month_r5.year), \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", i_r6 !== ctx_r4.months.length - 1);\n} }\nfunction NgbDatepickerNavigation_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbDatepickerNavigation_5_ng_template_0_Template, 4, 4, \"ng-template\", 9);\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r1.months);\n} }\nconst _c17 = [\"ngbDatepickerDayView\", \"\"];\nfunction NgbDatepickerNavigationSelect_option_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const m_r2 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", m_r2);\n    ɵngcc0.ɵɵattribute(\"aria-label\", ctx_r0.i18n.getMonthFullName(m_r2, ctx_r0.date == null ? null : ctx_r0.date.year));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r0.i18n.getMonthShortName(m_r2, ctx_r0.date == null ? null : ctx_r0.date.year));\n} }\nfunction NgbDatepickerNavigationSelect_option_5_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"option\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const y_r3 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"value\", y_r3);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r1.i18n.getYearNumerals(y_r3));\n} }\nfunction NgbPagination_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵi18n(1, 9);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NgbPagination_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵi18n(1, 10);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NgbPagination_ng_template_4_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵi18n(1, 11);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NgbPagination_ng_template_6_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 8);\n    ɵngcc0.ɵɵi18n(1, 12);\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NgbPagination_ng_template_8_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0, \"...\");\n} }\nfunction NgbPagination_ng_template_10_span_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 14);\n    ɵngcc0.ɵɵtext(1, \"(current)\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NgbPagination_ng_template_10_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_ng_template_10_span_1_Template, 2, 0, \"span\", 13);\n} if (rf & 2) {\n    const page_r17 = ctx.$implicit;\n    const currentPage_r18 = ctx.currentPage;\n    ɵngcc0.ɵɵtextInterpolate1(\" \", page_r17, \" \");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", page_r17 === currentPage_r18);\n} }\nfunction NgbPagination_li_13_ng_template_3_Template(rf, ctx) { }\nconst _c36 = function (a0, a1) { return { disabled: a0, currentPage: a1 }; };\nfunction NgbPagination_li_13_Template(rf, ctx) { if (rf & 1) {\n    const _r22 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 16);\n    ɵngcc0.ɵɵi18nAttributes(2, 17);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_13_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r22); const ctx_r21 = ɵngcc0.ɵɵnextContext(); ctx_r21.selectPage(1); return $event.preventDefault(); });\n    ɵngcc0.ɵɵtemplate(3, NgbPagination_li_13_ng_template_3_Template, 0, 0, \"ng-template\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r12 = ɵngcc0.ɵɵnextContext();\n    const _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r12.previousDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r12.hasPrevious() ? null : \"-1\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r12.tplFirst == null ? null : ctx_r12.tplFirst.templateRef) || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(5, _c36, ctx_r12.previousDisabled(), ctx_r12.page));\n} }\nfunction NgbPagination_li_14_ng_template_3_Template(rf, ctx) { }\nconst _c39 = function (a0) { return { disabled: a0 }; };\nfunction NgbPagination_li_14_Template(rf, ctx) { if (rf & 1) {\n    const _r25 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 16);\n    ɵngcc0.ɵɵi18nAttributes(2, 19);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_14_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r25); const ctx_r24 = ɵngcc0.ɵɵnextContext(); ctx_r24.selectPage(ctx_r24.page - 1); return $event.preventDefault(); });\n    ɵngcc0.ɵɵtemplate(3, NgbPagination_li_14_ng_template_3_Template, 0, 0, \"ng-template\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r13 = ɵngcc0.ɵɵnextContext();\n    const _r2 = ɵngcc0.ɵɵreference(3);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r13.previousDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r13.hasPrevious() ? null : \"-1\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r13.tplPrevious == null ? null : ctx_r13.tplPrevious.templateRef) || _r2)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(5, _c39, ctx_r13.previousDisabled()));\n} }\nfunction NgbPagination_li_15_a_1_ng_template_1_Template(rf, ctx) { }\nconst _c40 = function (a1) { return { disabled: true, currentPage: a1 }; };\nfunction NgbPagination_li_15_a_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"a\", 22);\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_li_15_a_1_ng_template_1_Template, 0, 0, \"ng-template\", 18);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r27 = ɵngcc0.ɵɵnextContext(2);\n    const _r8 = ɵngcc0.ɵɵreference(9);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r27.tplEllipsis == null ? null : ctx_r27.tplEllipsis.templateRef) || _r8)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction1(2, _c40, ctx_r27.page));\n} }\nfunction NgbPagination_li_15_a_2_ng_template_1_Template(rf, ctx) { }\nconst _c41 = function (a0, a1, a2) { return { disabled: a0, $implicit: a1, currentPage: a2 }; };\nfunction NgbPagination_li_15_a_2_Template(rf, ctx) { if (rf & 1) {\n    const _r33 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"a\", 23);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_15_a_2_Template_a_click_0_listener($event) { ɵngcc0.ɵɵrestoreView(_r33); const pageNumber_r26 = ɵngcc0.ɵɵnextContext().$implicit; const ctx_r31 = ɵngcc0.ɵɵnextContext(); ctx_r31.selectPage(pageNumber_r26); return $event.preventDefault(); });\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_li_15_a_2_ng_template_1_Template, 0, 0, \"ng-template\", 18);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageNumber_r26 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r28 = ɵngcc0.ɵɵnextContext();\n    const _r10 = ɵngcc0.ɵɵreference(11);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r28.tplNumber == null ? null : ctx_r28.tplNumber.templateRef) || _r10)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(2, _c41, ctx_r28.disabled, pageNumber_r26, ctx_r28.page));\n} }\nfunction NgbPagination_li_15_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵtemplate(1, NgbPagination_li_15_a_1_Template, 2, 4, \"a\", 20);\n    ɵngcc0.ɵɵtemplate(2, NgbPagination_li_15_a_2_Template, 2, 6, \"a\", 21);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const pageNumber_r26 = ctx.$implicit;\n    const ctx_r14 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"active\", pageNumber_r26 === ctx_r14.page)(\"disabled\", ctx_r14.isEllipsis(pageNumber_r26) || ctx_r14.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r14.isEllipsis(pageNumber_r26));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r14.isEllipsis(pageNumber_r26));\n} }\nfunction NgbPagination_li_16_ng_template_3_Template(rf, ctx) { }\nfunction NgbPagination_li_16_Template(rf, ctx) { if (rf & 1) {\n    const _r37 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 16);\n    ɵngcc0.ɵɵi18nAttributes(2, 24);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_16_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r37); const ctx_r36 = ɵngcc0.ɵɵnextContext(); ctx_r36.selectPage(ctx_r36.page + 1); return $event.preventDefault(); });\n    ɵngcc0.ɵɵtemplate(3, NgbPagination_li_16_ng_template_3_Template, 0, 0, \"ng-template\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r15 = ɵngcc0.ɵɵnextContext();\n    const _r4 = ɵngcc0.ɵɵreference(5);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r15.nextDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r15.hasNext() ? null : \"-1\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r15.tplNext == null ? null : ctx_r15.tplNext.templateRef) || _r4)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(5, _c36, ctx_r15.nextDisabled(), ctx_r15.page));\n} }\nfunction NgbPagination_li_17_ng_template_3_Template(rf, ctx) { }\nfunction NgbPagination_li_17_Template(rf, ctx) { if (rf & 1) {\n    const _r40 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 15);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 16);\n    ɵngcc0.ɵɵi18nAttributes(2, 25);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbPagination_li_17_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r40); const ctx_r39 = ɵngcc0.ɵɵnextContext(); ctx_r39.selectPage(ctx_r39.pageCount); return $event.preventDefault(); });\n    ɵngcc0.ɵɵtemplate(3, NgbPagination_li_17_ng_template_3_Template, 0, 0, \"ng-template\", 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext();\n    const _r6 = ɵngcc0.ɵɵreference(7);\n    ɵngcc0.ɵɵclassProp(\"disabled\", ctx_r16.nextDisabled());\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵattribute(\"tabindex\", ctx_r16.hasNext() ? null : \"-1\");\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", (ctx_r16.tplLast == null ? null : ctx_r16.tplLast.templateRef) || _r6)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(5, _c36, ctx_r16.nextDisabled(), ctx_r16.page));\n} }\nfunction NgbPopoverWindow_h3_1_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵtextInterpolate(ctx_r2.title);\n} }\nfunction NgbPopoverWindow_h3_1_ng_template_3_Template(rf, ctx) { }\nfunction NgbPopoverWindow_h3_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"h3\", 3);\n    ɵngcc0.ɵɵtemplate(1, NgbPopoverWindow_h3_1_ng_template_1_Template, 1, 1, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵtemplate(3, NgbPopoverWindow_h3_1_ng_template_3_Template, 0, 0, \"ng-template\", 5);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const _r1 = ɵngcc0.ɵɵreference(2);\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(3);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.isTitleTemplate() ? ctx_r0.title : _r1)(\"ngTemplateOutletContext\", ctx_r0.context);\n} }\nfunction NgbProgressbar_span_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵi18n(1, 3);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵi18nExp(ctx_r0.getPercentValue());\n    ɵngcc0.ɵɵi18nApply(1);\n} }\nfunction NgbRating_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const fill_r3 = ctx.fill;\n    ɵngcc0.ɵɵtextInterpolate(fill_r3 === 100 ? \"\\u2605\" : \"\\u2606\");\n} }\nfunction NgbRating_ng_template_2_ng_template_3_Template(rf, ctx) { }\nfunction NgbRating_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    const _r7 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"span\", 2);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(2, \"span\", 3);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function NgbRating_ng_template_2_Template_span_mouseenter_2_listener() { ɵngcc0.ɵɵrestoreView(_r7); const index_r4 = ctx.index; const ctx_r6 = ɵngcc0.ɵɵnextContext(); return ctx_r6.enter(index_r4 + 1); })(\"click\", function NgbRating_ng_template_2_Template_span_click_2_listener() { ɵngcc0.ɵɵrestoreView(_r7); const index_r4 = ctx.index; const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.handleClick(index_r4 + 1); });\n    ɵngcc0.ɵɵtemplate(3, NgbRating_ng_template_2_ng_template_3_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const index_r4 = ctx.index;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    const _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\"(\", index_r4 < ctx_r2.nextRate ? \"*\" : \" \", \")\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"cursor\", ctx_r2.readonly || ctx_r2.disabled ? \"default\" : \"pointer\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.starTemplate || ctx_r2.starTemplateFromContent || _r0)(\"ngTemplateOutletContext\", ctx_r2.contexts[index_r4]);\n} }\nfunction NgbTabset_li_1_ng_template_3_Template(rf, ctx) { }\nfunction NgbTabset_li_1_Template(rf, ctx) { if (rf & 1) {\n    const _r5 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"li\", 4);\n    ɵngcc0.ɵɵelementStart(1, \"a\", 5);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTabset_li_1_Template_a_click_1_listener($event) { ɵngcc0.ɵɵrestoreView(_r5); const tab_r2 = ctx.$implicit; const ctx_r4 = ɵngcc0.ɵɵnextContext(); ctx_r4.select(tab_r2.id); return $event.preventDefault(); });\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵtemplate(3, NgbTabset_li_1_ng_template_3_Template, 0, 0, \"ng-template\", 6);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r2 = ctx.$implicit;\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"active\", tab_r2.id === ctx_r0.activeId)(\"disabled\", tab_r2.disabled);\n    ɵngcc0.ɵɵproperty(\"id\", tab_r2.id);\n    ɵngcc0.ɵɵattribute(\"tabindex\", tab_r2.disabled ? \"-1\" : undefined)(\"aria-controls\", !ctx_r0.destroyOnHide || tab_r2.id === ctx_r0.activeId ? tab_r2.id + \"-panel\" : null)(\"aria-selected\", tab_r2.id === ctx_r0.activeId)(\"aria-disabled\", tab_r2.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", tab_r2.title, \"\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", tab_r2.titleTpl == null ? null : tab_r2.titleTpl.templateRef);\n} }\nfunction NgbTabset_ng_template_3_div_0_ng_template_1_Template(rf, ctx) { }\nfunction NgbTabset_ng_template_3_div_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8);\n    ɵngcc0.ɵɵtemplate(1, NgbTabset_ng_template_3_div_0_ng_template_1_Template, 0, 0, \"ng-template\", 6);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const tab_r6 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMapInterpolate1(\"tab-pane \", tab_r6.id === ctx_r7.activeId ? \"active\" : null, \"\");\n    ɵngcc0.ɵɵpropertyInterpolate1(\"id\", \"\", tab_r6.id, \"-panel\");\n    ɵngcc0.ɵɵattribute(\"aria-labelledby\", tab_r6.id);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", tab_r6.contentTpl == null ? null : tab_r6.contentTpl.templateRef);\n} }\nfunction NgbTabset_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbTabset_ng_template_3_div_0_Template, 2, 6, \"div\", 7);\n} if (rf & 2) {\n    const tab_r6 = ctx.$implicit;\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngIf\", !ctx_r1.destroyOnHide || tab_r6.id === ctx_r1.activeId);\n} }\nfunction NgbTimepicker_button_3_Template(rf, ctx) { if (rf & 1) {\n    const _r9 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_3_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r9); const ctx_r8 = ɵngcc0.ɵɵnextContext(); return ctx_r8.changeHour(ctx_r8.hourStep); });\n    ɵngcc0.ɵɵelement(1, \"span\", 13);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 14);\n    ɵngcc0.ɵɵi18n(3, 15);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r0.isSmallSize)(\"btn-lg\", ctx_r0.isLargeSize)(\"disabled\", ctx_r0.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r0.disabled);\n} }\nfunction NgbTimepicker_button_6_Template(rf, ctx) { if (rf & 1) {\n    const _r11 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_6_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r11); const ctx_r10 = ɵngcc0.ɵɵnextContext(); return ctx_r10.changeHour(-ctx_r10.hourStep); });\n    ɵngcc0.ɵɵelement(1, \"span\", 16);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 14);\n    ɵngcc0.ɵɵi18n(3, 17);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r1.isSmallSize)(\"btn-lg\", ctx_r1.isLargeSize)(\"disabled\", ctx_r1.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r1.disabled);\n} }\nfunction NgbTimepicker_button_10_Template(rf, ctx) { if (rf & 1) {\n    const _r13 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_10_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r13); const ctx_r12 = ɵngcc0.ɵɵnextContext(); return ctx_r12.changeMinute(ctx_r12.minuteStep); });\n    ɵngcc0.ɵɵelement(1, \"span\", 13);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 14);\n    ɵngcc0.ɵɵi18n(3, 18);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r2.isSmallSize)(\"btn-lg\", ctx_r2.isLargeSize)(\"disabled\", ctx_r2.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r2.disabled);\n} }\nfunction NgbTimepicker_button_13_Template(rf, ctx) { if (rf & 1) {\n    const _r15 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_button_13_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r15); const ctx_r14 = ɵngcc0.ɵɵnextContext(); return ctx_r14.changeMinute(-ctx_r14.minuteStep); });\n    ɵngcc0.ɵɵelement(1, \"span\", 16);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 14);\n    ɵngcc0.ɵɵi18n(3, 19);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r3.isSmallSize)(\"btn-lg\", ctx_r3.isLargeSize)(\"disabled\", ctx_r3.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r3.disabled);\n} }\nfunction NgbTimepicker_div_14_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 6);\n    ɵngcc0.ɵɵtext(1, \":\");\n    ɵngcc0.ɵɵelementEnd();\n} }\nfunction NgbTimepicker_div_15_button_1_Template(rf, ctx) { if (rf & 1) {\n    const _r19 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_div_15_button_1_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r19); const ctx_r18 = ɵngcc0.ɵɵnextContext(2); return ctx_r18.changeSecond(ctx_r18.secondStep); });\n    ɵngcc0.ɵɵelement(1, \"span\", 13);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 14);\n    ɵngcc0.ɵɵi18n(3, 22);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r16 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r16.isSmallSize)(\"btn-lg\", ctx_r16.isLargeSize)(\"disabled\", ctx_r16.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r16.disabled);\n} }\nfunction NgbTimepicker_div_15_button_4_Template(rf, ctx) { if (rf & 1) {\n    const _r21 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 12);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_div_15_button_4_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r21); const ctx_r20 = ɵngcc0.ɵɵnextContext(2); return ctx_r20.changeSecond(-ctx_r20.secondStep); });\n    ɵngcc0.ɵɵelement(1, \"span\", 16);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 14);\n    ɵngcc0.ɵɵi18n(3, 23);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r17.isSmallSize)(\"btn-lg\", ctx_r17.isLargeSize)(\"disabled\", ctx_r17.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r17.disabled);\n} }\nfunction NgbTimepicker_div_15_Template(rf, ctx) { if (rf & 1) {\n    const _r23 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 20);\n    ɵngcc0.ɵɵtemplate(1, NgbTimepicker_div_15_button_1_Template, 4, 7, \"button\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"input\", 4);\n    ɵngcc0.ɵɵi18nAttributes(3, 21);\n    ɵngcc0.ɵɵlistener(\"change\", function NgbTimepicker_div_15_Template_input_change_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r23); const ctx_r22 = ɵngcc0.ɵɵnextContext(); return ctx_r22.updateSecond($event.target.value); })(\"keydown.ArrowUp\", function NgbTimepicker_div_15_Template_input_keydown_ArrowUp_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r23); const ctx_r24 = ɵngcc0.ɵɵnextContext(); ctx_r24.changeSecond(ctx_r24.secondStep); return $event.preventDefault(); })(\"keydown.ArrowDown\", function NgbTimepicker_div_15_Template_input_keydown_ArrowDown_2_listener($event) { ɵngcc0.ɵɵrestoreView(_r23); const ctx_r25 = ɵngcc0.ɵɵnextContext(); ctx_r25.changeSecond(-ctx_r25.secondStep); return $event.preventDefault(); });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(4, NgbTimepicker_div_15_button_4_Template, 4, 7, \"button\", 3);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const ctx_r5 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.spinners);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx_r5.isSmallSize)(\"form-control-lg\", ctx_r5.isLargeSize);\n    ɵngcc0.ɵɵproperty(\"value\", ctx_r5.formatMinSec(ctx_r5.model == null ? null : ctx_r5.model.second))(\"readOnly\", ctx_r5.readonlyInputs)(\"disabled\", ctx_r5.disabled);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", ctx_r5.spinners);\n} }\nfunction NgbTimepicker_div_16_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 6);\n} }\nfunction NgbTimepicker_div_17_ng_container_2_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementContainerStart(0);\n    ɵngcc0.ɵɵi18n(1, 28);\n    ɵngcc0.ɵɵelementContainerEnd();\n} }\nfunction NgbTimepicker_div_17_ng_template_3_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵi18n(0, 29);\n} }\nfunction NgbTimepicker_div_17_Template(rf, ctx) { if (rf & 1) {\n    const _r30 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"div\", 24);\n    ɵngcc0.ɵɵelementStart(1, \"button\", 25);\n    ɵngcc0.ɵɵlistener(\"click\", function NgbTimepicker_div_17_Template_button_click_1_listener() { ɵngcc0.ɵɵrestoreView(_r30); const ctx_r29 = ɵngcc0.ɵɵnextContext(); return ctx_r29.toggleMeridian(); });\n    ɵngcc0.ɵɵtemplate(2, NgbTimepicker_div_17_ng_container_2_Template, 2, 0, \"ng-container\", 26);\n    ɵngcc0.ɵɵtemplate(3, NgbTimepicker_div_17_ng_template_3_Template, 1, 0, \"ng-template\", null, 27, ɵngcc0.ɵɵtemplateRefExtractor);\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const _r27 = ɵngcc0.ɵɵreference(4);\n    const ctx_r7 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵclassProp(\"btn-sm\", ctx_r7.isSmallSize)(\"btn-lg\", ctx_r7.isLargeSize)(\"disabled\", ctx_r7.disabled);\n    ɵngcc0.ɵɵproperty(\"disabled\", ctx_r7.disabled);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", (ctx_r7.model == null ? null : ctx_r7.model.hour) >= 12)(\"ngIfElse\", _r27);\n} }\nfunction NgbHighlight_ng_template_0_span_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\");\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const part_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    const ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵclassMap(ctx_r3.highlightClass);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(part_r1);\n} }\nfunction NgbHighlight_ng_template_0_ng_template_1_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtext(0);\n} if (rf & 2) {\n    const part_r1 = ɵngcc0.ɵɵnextContext().$implicit;\n    ɵngcc0.ɵɵtextInterpolate(part_r1);\n} }\nfunction NgbHighlight_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, NgbHighlight_ng_template_0_span_0_Template, 2, 3, \"span\", 1);\n    ɵngcc0.ɵɵtemplate(1, NgbHighlight_ng_template_0_ng_template_1_Template, 1, 1, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n} if (rf & 2) {\n    const isOdd_r2 = ctx.odd;\n    const _r4 = ɵngcc0.ɵɵreference(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", isOdd_r2)(\"ngIfElse\", _r4);\n} }\nfunction NgbTypeaheadWindow_ng_template_0_Template(rf, ctx) { if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"ngb-highlight\", 2);\n} if (rf & 2) {\n    const result_r3 = ctx.result;\n    const term_r4 = ctx.term;\n    const formatter_r5 = ctx.formatter;\n    ɵngcc0.ɵɵproperty(\"result\", formatter_r5(result_r3))(\"term\", term_r4);\n} }\nfunction NgbTypeaheadWindow_ng_template_2_ng_template_1_Template(rf, ctx) { }\nconst _c76 = function (a0, a1, a2) { return { result: a0, term: a1, formatter: a2 }; };\nfunction NgbTypeaheadWindow_ng_template_2_Template(rf, ctx) { if (rf & 1) {\n    const _r10 = ɵngcc0.ɵɵgetCurrentView();\n    ɵngcc0.ɵɵelementStart(0, \"button\", 3);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function NgbTypeaheadWindow_ng_template_2_Template_button_mouseenter_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const idx_r7 = ctx.index; const ctx_r9 = ɵngcc0.ɵɵnextContext(); return ctx_r9.markActive(idx_r7); })(\"click\", function NgbTypeaheadWindow_ng_template_2_Template_button_click_0_listener() { ɵngcc0.ɵɵrestoreView(_r10); const result_r6 = ctx.$implicit; const ctx_r11 = ɵngcc0.ɵɵnextContext(); return ctx_r11.select(result_r6); });\n    ɵngcc0.ɵɵtemplate(1, NgbTypeaheadWindow_ng_template_2_ng_template_1_Template, 0, 0, \"ng-template\", 4);\n    ɵngcc0.ɵɵelementEnd();\n} if (rf & 2) {\n    const result_r6 = ctx.$implicit;\n    const idx_r7 = ctx.index;\n    const ctx_r2 = ɵngcc0.ɵɵnextContext();\n    const _r0 = ɵngcc0.ɵɵreference(1);\n    ɵngcc0.ɵɵclassProp(\"active\", idx_r7 === ctx_r2.activeIdx);\n    ɵngcc0.ɵɵproperty(\"id\", ctx_r2.id + \"-\" + idx_r7);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.resultTemplate || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(5, _c76, result_r6, ctx_r2.term, ctx_r2.formatter));\n} }\nfunction toInteger(value) {\n    return parseInt(`${value}`, 10);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction toString(value) {\n    return (value !== undefined && value !== null) ? `${value}` : '';\n}\n/**\n * @param {?} value\n * @param {?} max\n * @param {?=} min\n * @return {?}\n */\nfunction getValueInRange(value, max, min = 0) {\n    return Math.max(Math.min(value, max), min);\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isString(value) {\n    return typeof value === 'string';\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isNumber(value) {\n    return !isNaN(toInteger(value));\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isInteger(value) {\n    return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction isDefined(value) {\n    return value !== undefined && value !== null;\n}\n/**\n * @param {?} value\n * @return {?}\n */\nfunction padNumber(value) {\n    if (isNumber(value)) {\n        return `0${value}`.slice(-2);\n    }\n    else {\n        return '';\n    }\n}\n/**\n * @param {?} text\n * @return {?}\n */\nfunction regExpEscape(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n/**\n * @param {?} element\n * @param {?} className\n * @return {?}\n */\nfunction hasClassName(element, className) {\n    return element && element.className && element.className.split &&\n        element.className.split(/\\s+/).indexOf(className) >= 0;\n}\nif (typeof Element !== 'undefined' && !Element.prototype.closest) {\n    // Polyfill for ie10+\n    if (!Element.prototype.matches) {\n        // IE uses the non-standard name: msMatchesSelector\n        Element.prototype.matches = ((/** @type {?} */ (Element.prototype))).msMatchesSelector || Element.prototype.webkitMatchesSelector;\n    }\n    Element.prototype.closest = function (s) {\n        /** @type {?} */\n        let el = this;\n        if (!document.documentElement.contains(el)) {\n            return null;\n        }\n        do {\n            if (el.matches(s)) {\n                return el;\n            }\n            el = el.parentElement || el.parentNode;\n        } while (el !== null && el.nodeType === 1);\n        return null;\n    };\n}\n/**\n * @param {?} element\n * @param {?} selector\n * @return {?}\n */\nfunction closest(element, selector) {\n    if (!selector) {\n        return null;\n    }\n    return element.closest(selector);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [NgbAccordion](#/components/accordion/api#NgbAccordion) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all accordions used in the application.\n */\nclass NgbAccordionConfig {\n    constructor() {\n        this.closeOthers = false;\n    }\n}\nNgbAccordionConfig.ɵfac = function NgbAccordionConfig_Factory(t) { return new (t || NgbAccordionConfig)(); };\nNgbAccordionConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbAccordionConfig, factory: NgbAccordionConfig.ɵfac, providedIn: 'root' });\n/** @nocollapse */ NgbAccordionConfig.ngInjectableDef = defineInjectable({ factory: function NgbAccordionConfig_Factory() { return new NgbAccordionConfig(); }, token: NgbAccordionConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbAccordionConfig, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId = 0;\n/**\n * A directive to put on a button that toggles panel opening and closing.\n *\n * To be used inside the [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader)\n *\n * \\@since 4.1.0\n */\nclass NgbPanelToggle {\n    /**\n     * @param {?} accordion\n     * @param {?} panel\n     */\n    constructor(accordion, panel) {\n        this.accordion = accordion;\n        this.panel = panel;\n    }\n    /**\n     * @param {?} panel\n     * @return {?}\n     */\n    set ngbPanelToggle(panel) {\n        if (panel) {\n            this.panel = panel;\n        }\n    }\n}\nNgbPanelToggle.ɵfac = function NgbPanelToggle_Factory(t) { return new (t || NgbPanelToggle)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgbAccordion)), ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgbPanel), 9)); };\nNgbPanelToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbPanelToggle, selectors: [[\"button\", \"ngbPanelToggle\", \"\"]], hostAttrs: [\"type\", \"button\"], hostVars: 5, hostBindings: function NgbPanelToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NgbPanelToggle_click_HostBindingHandler() { return ctx.accordion.toggle(ctx.panel.id); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.panel.disabled);\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.panel.isOpen)(\"aria-controls\", ctx.panel.id);\n        ɵngcc0.ɵɵclassProp(\"collapsed\", !ctx.panel.isOpen);\n    } }, inputs: { ngbPanelToggle: \"ngbPanelToggle\" } });\n/** @nocollapse */\nNgbPanelToggle.ctorParameters = () => [\n    { type: NgbAccordion, decorators: [{ type: Inject, args: [forwardRef(() => NgbAccordion),] }] },\n    { type: NgbPanel, decorators: [{ type: Optional }, { type: Host }, { type: Inject, args: [forwardRef(() => NgbPanel),] }] }\n];\nNgbPanelToggle.propDecorators = {\n    ngbPanelToggle: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPanelToggle, [{\n        type: Directive,\n        args: [{\n                selector: 'button[ngbPanelToggle]',\n                host: {\n                    'type': 'button',\n                    '[disabled]': 'panel.disabled',\n                    '[class.collapsed]': '!panel.isOpen',\n                    '[attr.aria-expanded]': 'panel.isOpen',\n                    '[attr.aria-controls]': 'panel.id',\n                    '(click)': 'accordion.toggle(panel.id)'\n                }\n            }]\n    }], function () { return [{ type: NgbAccordion, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => NgbAccordion)]\n            }] }, { type: NgbPanel, decorators: [{\n                type: Optional\n            }, {\n                type: Host\n            }, {\n                type: Inject,\n                args: [forwardRef(() => NgbPanel)]\n            }] }]; }, { ngbPanelToggle: [{\n            type: Input\n        }] }); })();\n/**\n * A directive that wraps an accordion panel header with any HTML markup and a toggling button\n * marked with [`NgbPanelToggle`](#/components/accordion/api#NgbPanelToggle).\n * See the [header customization demo](#/components/accordion/examples#header) for more details.\n *\n * You can also use [`NgbPanelTitle`](#/components/accordion/api#NgbPanelTitle) to customize only the panel title.\n *\n * \\@since 4.1.0\n */\nclass NgbPanelHeader {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPanelHeader.ɵfac = function NgbPanelHeader_Factory(t) { return new (t || NgbPanelHeader)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };\nNgbPanelHeader.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbPanelHeader, selectors: [[\"ng-template\", \"ngbPanelHeader\", \"\"]] });\n/** @nocollapse */\nNgbPanelHeader.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPanelHeader, [{\n        type: Directive,\n        args: [{ selector: 'ng-template[ngbPanelHeader]' }]\n    }], function () { return [{ type: TemplateRef }]; }, null); })();\n/**\n * A directive that wraps only the panel title with HTML markup inside.\n *\n * You can also use [`NgbPanelHeader`](#/components/accordion/api#NgbPanelHeader) to customize the full panel header.\n */\nclass NgbPanelTitle {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPanelTitle.ɵfac = function NgbPanelTitle_Factory(t) { return new (t || NgbPanelTitle)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };\nNgbPanelTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbPanelTitle, selectors: [[\"ng-template\", \"ngbPanelTitle\", \"\"]] });\n/** @nocollapse */\nNgbPanelTitle.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPanelTitle, [{\n        type: Directive,\n        args: [{ selector: 'ng-template[ngbPanelTitle]' }]\n    }], function () { return [{ type: TemplateRef }]; }, null); })();\n/**\n * A directive that wraps the accordion panel content.\n */\nclass NgbPanelContent {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPanelContent.ɵfac = function NgbPanelContent_Factory(t) { return new (t || NgbPanelContent)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };\nNgbPanelContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbPanelContent, selectors: [[\"ng-template\", \"ngbPanelContent\", \"\"]] });\n/** @nocollapse */\nNgbPanelContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPanelContent, [{\n        type: Directive,\n        args: [{ selector: 'ng-template[ngbPanelContent]' }]\n    }], function () { return [{ type: TemplateRef }]; }, null); })();\n/**\n * A directive that wraps an individual accordion panel with title and collapsible content.\n */\nclass NgbPanel {\n    constructor() {\n        /**\n         *  If `true`, the panel is disabled an can't be toggled.\n         */\n        this.disabled = false;\n        /**\n         *  An optional id for the panel that must be unique on the page.\n         *\n         *  If not provided, it will be auto-generated in the `ngb-panel-xxx` format.\n         */\n        this.id = `ngb-panel-${nextId++}`;\n        this.isOpen = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n        // only @ContentChildren allows us to specify the {descendants: false} option.\n        // Without {descendants: false} we are hitting bugs described in:\n        // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n        this.titleTpl = this.titleTpls.first;\n        this.headerTpl = this.headerTpls.first;\n        this.contentTpl = this.contentTpls.first;\n    }\n}\nNgbPanel.ɵfac = function NgbPanel_Factory(t) { return new (t || NgbPanel)(); };\nNgbPanel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbPanel, selectors: [[\"ngb-panel\"]], contentQueries: function NgbPanel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanelTitle, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanelHeader, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanelContent, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.titleTpls = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.headerTpls = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTpls = _t);\n    } }, inputs: { disabled: \"disabled\", id: \"id\", title: \"title\", type: \"type\" } });\nNgbPanel.propDecorators = {\n    disabled: [{ type: Input }],\n    id: [{ type: Input }],\n    title: [{ type: Input }],\n    type: [{ type: Input }],\n    titleTpls: [{ type: ContentChildren, args: [NgbPanelTitle, { descendants: false },] }],\n    headerTpls: [{ type: ContentChildren, args: [NgbPanelHeader, { descendants: false },] }],\n    contentTpls: [{ type: ContentChildren, args: [NgbPanelContent, { descendants: false },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPanel, [{\n        type: Directive,\n        args: [{ selector: 'ngb-panel' }]\n    }], function () { return []; }, { disabled: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], title: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], titleTpls: [{\n            type: ContentChildren,\n            args: [NgbPanelTitle, { descendants: false }]\n        }], headerTpls: [{\n            type: ContentChildren,\n            args: [NgbPanelHeader, { descendants: false }]\n        }], contentTpls: [{\n            type: ContentChildren,\n            args: [NgbPanelContent, { descendants: false }]\n        }] }); })();\n/**\n * Accordion is a collection of collapsible panels (bootstrap cards).\n *\n * It can ensure only one panel is opened at a time and allows to customize panel\n * headers.\n */\nclass NgbAccordion {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        /**\n         * An array or comma separated strings of panel ids that should be opened **initially**.\n         *\n         * For subsequent changes use methods like `expand()`, `collapse()`, etc. and\n         * the `(panelChange)` event.\n         */\n        this.activeIds = [];\n        /**\n         * If `true`, panel content will be detached from DOM and not simply hidden when the panel is collapsed.\n         */\n        this.destroyOnHide = true;\n        /**\n         * Event emitted right before the panel toggle happens.\n         *\n         * See [NgbPanelChangeEvent](#/components/accordion/api#NgbPanelChangeEvent) for payload details.\n         */\n        this.panelChange = new EventEmitter();\n        this.type = config.type;\n        this.closeOtherPanels = config.closeOthers;\n    }\n    /**\n     * Checks if a panel with a given id is expanded.\n     * @param {?} panelId\n     * @return {?}\n     */\n    isExpanded(panelId) { return this.activeIds.indexOf(panelId) > -1; }\n    /**\n     * Expands a panel with a given id.\n     *\n     * Has no effect if the panel is already expanded or disabled.\n     * @param {?} panelId\n     * @return {?}\n     */\n    expand(panelId) { this._changeOpenState(this._findPanelById(panelId), true); }\n    /**\n     * Expands all panels, if `[closeOthers]` is `false`.\n     *\n     * If `[closeOthers]` is `true`, it will expand the first panel, unless there is already a panel opened.\n     * @return {?}\n     */\n    expandAll() {\n        if (this.closeOtherPanels) {\n            if (this.activeIds.length === 0 && this.panels.length) {\n                this._changeOpenState(this.panels.first, true);\n            }\n        }\n        else {\n            this.panels.forEach(panel => this._changeOpenState(panel, true));\n        }\n    }\n    /**\n     * Collapses a panel with the given id.\n     *\n     * Has no effect if the panel is already collapsed or disabled.\n     * @param {?} panelId\n     * @return {?}\n     */\n    collapse(panelId) { this._changeOpenState(this._findPanelById(panelId), false); }\n    /**\n     * Collapses all opened panels.\n     * @return {?}\n     */\n    collapseAll() {\n        this.panels.forEach((panel) => { this._changeOpenState(panel, false); });\n    }\n    /**\n     * Toggles a panel with the given id.\n     *\n     * Has no effect if the panel is disabled.\n     * @param {?} panelId\n     * @return {?}\n     */\n    toggle(panelId) {\n        /** @type {?} */\n        const panel = this._findPanelById(panelId);\n        if (panel) {\n            this._changeOpenState(panel, !panel.isOpen);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // active id updates\n        if (isString(this.activeIds)) {\n            this.activeIds = this.activeIds.split(/\\s*,\\s*/);\n        }\n        // update panels open states\n        this.panels.forEach(panel => panel.isOpen = !panel.disabled && this.activeIds.indexOf(panel.id) > -1);\n        // closeOthers updates\n        if (this.activeIds.length > 1 && this.closeOtherPanels) {\n            this._closeOthers(this.activeIds[0]);\n            this._updateActiveIds();\n        }\n    }\n    /**\n     * @param {?} panel\n     * @param {?} nextState\n     * @return {?}\n     */\n    _changeOpenState(panel, nextState) {\n        if (panel && !panel.disabled && panel.isOpen !== nextState) {\n            /** @type {?} */\n            let defaultPrevented = false;\n            this.panelChange.emit({ panelId: panel.id, nextState: nextState, preventDefault: () => { defaultPrevented = true; } });\n            if (!defaultPrevented) {\n                panel.isOpen = nextState;\n                if (nextState && this.closeOtherPanels) {\n                    this._closeOthers(panel.id);\n                }\n                this._updateActiveIds();\n            }\n        }\n    }\n    /**\n     * @param {?} panelId\n     * @return {?}\n     */\n    _closeOthers(panelId) {\n        this.panels.forEach(panel => {\n            if (panel.id !== panelId) {\n                panel.isOpen = false;\n            }\n        });\n    }\n    /**\n     * @param {?} panelId\n     * @return {?}\n     */\n    _findPanelById(panelId) { return this.panels.find(p => p.id === panelId); }\n    /**\n     * @return {?}\n     */\n    _updateActiveIds() {\n        this.activeIds = this.panels.filter(panel => panel.isOpen && !panel.disabled).map(panel => panel.id);\n    }\n}\nNgbAccordion.ɵfac = function NgbAccordion_Factory(t) { return new (t || NgbAccordion)(ɵngcc0.ɵɵdirectiveInject(NgbAccordionConfig)); };\nNgbAccordion.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbAccordion, selectors: [[\"ngb-accordion\"]], contentQueries: function NgbAccordion_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPanel, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.panels = _t);\n    } }, hostAttrs: [\"role\", \"tablist\", 1, \"accordion\"], hostVars: 1, hostBindings: function NgbAccordion_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-multiselectable\", !ctx.closeOtherPanels);\n    } }, inputs: { activeIds: \"activeIds\", destroyOnHide: \"destroyOnHide\", type: \"type\", closeOtherPanels: [\"closeOthers\", \"closeOtherPanels\"] }, outputs: { panelChange: \"panelChange\" }, exportAs: [\"ngbAccordion\"], decls: 3, vars: 1, consts: [[\"ngbPanelHeader\", \"\"], [\"t\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"btn\", \"btn-link\", 3, \"ngbPanelToggle\"], [3, \"ngTemplateOutlet\"], [1, \"card\"], [\"role\", \"tab\", 3, \"id\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"role\", \"tabpanel\", \"class\", \"collapse\", 3, \"id\", \"show\", 4, \"ngIf\"], [\"role\", \"tabpanel\", 1, \"collapse\", 3, \"id\"], [1, \"card-body\"]], template: function NgbAccordion_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgbAccordion_ng_template_0_Template, 3, 3, \"ng-template\", 0, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(2, NgbAccordion_ng_template_2_Template, 4, 9, \"ng-template\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.panels);\n    } }, directives: [NgbPanelHeader, ɵngcc1.NgForOf, NgbPanelToggle, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf], encapsulation: 2 });\n/** @nocollapse */\nNgbAccordion.ctorParameters = () => [\n    { type: NgbAccordionConfig }\n];\nNgbAccordion.propDecorators = {\n    panels: [{ type: ContentChildren, args: [NgbPanel,] }],\n    activeIds: [{ type: Input }],\n    closeOtherPanels: [{ type: Input, args: ['closeOthers',] }],\n    destroyOnHide: [{ type: Input }],\n    type: [{ type: Input }],\n    panelChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbAccordion, [{\n        type: Component,\n        args: [{\n                selector: 'ngb-accordion',\n                exportAs: 'ngbAccordion',\n                host: { 'class': 'accordion', 'role': 'tablist', '[attr.aria-multiselectable]': '!closeOtherPanels' },\n                template: `\n    <ng-template #t ngbPanelHeader let-panel>\n      <button class=\"btn btn-link\" [ngbPanelToggle]=\"panel\">\n        {{panel.title}}<ng-template [ngTemplateOutlet]=\"panel.titleTpl?.templateRef\"></ng-template>\n      </button>\n    </ng-template>\n    <ng-template ngFor let-panel [ngForOf]=\"panels\">\n      <div class=\"card\">\n        <div role=\"tab\" id=\"{{panel.id}}-header\" [class]=\"'card-header ' + (panel.type ? 'bg-'+panel.type: type ? 'bg-'+type : '')\">\n          <ng-template [ngTemplateOutlet]=\"panel.headerTpl?.templateRef || t\"\n                       [ngTemplateOutletContext]=\"{$implicit: panel, opened: panel.isOpen}\"></ng-template>\n        </div>\n        <div id=\"{{panel.id}}\" role=\"tabpanel\" [attr.aria-labelledby]=\"panel.id + '-header'\"\n             class=\"collapse\" [class.show]=\"panel.isOpen\" *ngIf=\"!destroyOnHide || panel.isOpen\">\n          <div class=\"card-body\">\n               <ng-template [ngTemplateOutlet]=\"panel.contentTpl?.templateRef\"></ng-template>\n          </div>\n        </div>\n      </div>\n    </ng-template>\n  `\n            }]\n    }], function () { return [{ type: NgbAccordionConfig }]; }, { activeIds: [{\n            type: Input\n        }], destroyOnHide: [{\n            type: Input\n        }], panelChange: [{\n            type: Output\n        }], type: [{\n            type: Input\n        }], closeOtherPanels: [{\n            type: Input,\n            args: ['closeOthers']\n        }], panels: [{\n            type: ContentChildren,\n            args: [NgbPanel]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_ACCORDION_DIRECTIVES = [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle];\nclass NgbAccordionModule {\n    /**\n     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n     * Will be removed in 4.0.0.\n     *\n     * @deprecated 3.0.0\n     * @return {?}\n     */\n    static forRoot() { return { ngModule: NgbAccordionModule }; }\n}\nNgbAccordionModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbAccordionModule });\nNgbAccordionModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbAccordionModule_Factory(t) { return new (t || NgbAccordionModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbAccordionModule, { declarations: function () { return [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbAccordionModule, [{\n        type: NgModule,\n        args: [{ declarations: NGB_ACCORDION_DIRECTIVES, exports: NGB_ACCORDION_DIRECTIVES, imports: [CommonModule] }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [NgbAlert](#/components/alert/api#NgbAlert) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all alerts used in the application.\n */\nclass NgbAlertConfig {\n    constructor() {\n        this.dismissible = true;\n        this.type = 'warning';\n    }\n}\nNgbAlertConfig.ɵfac = function NgbAlertConfig_Factory(t) { return new (t || NgbAlertConfig)(); };\nNgbAlertConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbAlertConfig, factory: NgbAlertConfig.ɵfac, providedIn: 'root' });\n/** @nocollapse */ NgbAlertConfig.ngInjectableDef = defineInjectable({ factory: function NgbAlertConfig_Factory() { return new NgbAlertConfig(); }, token: NgbAlertConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbAlertConfig, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Alert is a component to provide contextual feedback messages for user.\n *\n * It supports several alert types and can be dismissed.\n */\nclass NgbAlert {\n    /**\n     * @param {?} config\n     * @param {?} _renderer\n     * @param {?} _element\n     */\n    constructor(config, _renderer, _element) {\n        this._renderer = _renderer;\n        this._element = _element;\n        /**\n         * An event emitted when the close button is clicked. It has no payload and only relevant for dismissible alerts.\n         */\n        this.close = new EventEmitter();\n        this.dismissible = config.dismissible;\n        this.type = config.type;\n    }\n    /**\n     * @return {?}\n     */\n    closeHandler() { this.close.emit(null); }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const typeChange = changes['type'];\n        if (typeChange && !typeChange.firstChange) {\n            this._renderer.removeClass(this._element.nativeElement, `alert-${typeChange.previousValue}`);\n            this._renderer.addClass(this._element.nativeElement, `alert-${typeChange.currentValue}`);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() { this._renderer.addClass(this._element.nativeElement, `alert-${this.type}`); }\n}\nNgbAlert.ɵfac = function NgbAlert_Factory(t) { return new (t || NgbAlert)(ɵngcc0.ɵɵdirectiveInject(NgbAlertConfig), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ElementRef)); };\nNgbAlert.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbAlert, selectors: [[\"ngb-alert\"]], hostAttrs: [\"role\", \"alert\", 1, \"alert\"], hostVars: 2, hostBindings: function NgbAlert_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"alert-dismissible\", ctx.dismissible);\n    } }, inputs: { dismissible: \"dismissible\", type: \"type\" }, outputs: { close: \"close\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], ngContentSelectors: _c3, decls: 2, vars: 1, consts: function () { var i18n_1; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_alert_close$$FESM2015_NG_BOOTSTRAP_JS__2 = goog.getMsg(\"Close\");\n        i18n_1 = MSG_EXTERNAL_ngb_alert_close$$FESM2015_NG_BOOTSTRAP_JS__2;\n    }\n    else {\n        i18n_1 = $localize `:@@ngb.alert.close␟f4e529ae5ffd73001d1ff4bbdeeb0a72e342e5c8␟7819314041543176992:Close`;\n    } return [[\"type\", \"button\", \"class\", \"close\", 3, \"click\", 4, \"ngIf\", 6, \"aria-label\"], [\"type\", \"button\", 1, \"close\", 3, \"click\", 6, \"aria-label\"], [\"aria-label\", i18n_1], [\"aria-hidden\", \"true\"]]; }, template: function NgbAlert_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵprojection(0);\n        ɵngcc0.ɵɵtemplate(1, NgbAlert_button_1_Template, 4, 0, \"button\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.dismissible);\n    } }, directives: [ɵngcc1.NgIf], styles: [\"ngb-alert{display:block}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nNgbAlert.ctorParameters = () => [\n    { type: NgbAlertConfig },\n    { type: Renderer2 },\n    { type: ElementRef }\n];\nNgbAlert.propDecorators = {\n    dismissible: [{ type: Input }],\n    type: [{ type: Input }],\n    close: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbAlert, [{\n        type: Component,\n        args: [{\n                selector: 'ngb-alert',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                host: { 'role': 'alert', 'class': 'alert', '[class.alert-dismissible]': 'dismissible' },\n                template: `\n    <ng-content></ng-content>\n    <button *ngIf=\"dismissible\" type=\"button\" class=\"close\" aria-label=\"Close\" i18n-aria-label=\"@@ngb.alert.close\"\n      (click)=\"closeHandler()\">\n      <span aria-hidden=\"true\">&times;</span>\n    </button>\n    `,\n                styles: [\"ngb-alert{display:block}\"]\n            }]\n    }], function () { return [{ type: NgbAlertConfig }, { type: Renderer2 }, { type: ElementRef }]; }, { close: [{\n            type: Output\n        }], dismissible: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbAlertModule {\n    /**\n     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n     * Will be removed in 4.0.0.\n     *\n     * @deprecated 3.0.0\n     * @return {?}\n     */\n    static forRoot() { return { ngModule: NgbAlertModule }; }\n}\nNgbAlertModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbAlertModule });\nNgbAlertModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbAlertModule_Factory(t) { return new (t || NgbAlertModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbAlertModule, { declarations: function () { return [NgbAlert]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgbAlert]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbAlertModule, [{\n        type: NgModule,\n        args: [{ declarations: [NgbAlert], exports: [NgbAlert], imports: [CommonModule], entryComponents: [NgbAlert] }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbButtonLabel {\n}\nNgbButtonLabel.ɵfac = function NgbButtonLabel_Factory(t) { return new (t || NgbButtonLabel)(); };\nNgbButtonLabel.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbButtonLabel, selectors: [[\"\", \"ngbButtonLabel\", \"\"]], hostVars: 8, hostBindings: function NgbButtonLabel_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"btn\", true)(\"active\", ctx.active)(\"disabled\", ctx.disabled)(\"focus\", ctx.focused);\n    } } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbButtonLabel, [{\n        type: Directive,\n        args: [{\n                selector: '[ngbButtonLabel]',\n                host: { '[class.btn]': 'true', '[class.active]': 'active', '[class.disabled]': 'disabled', '[class.focus]': 'focused' }\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_CHECKBOX_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgbCheckBox),\n    multi: true\n};\n/**\n * Allows to easily create Bootstrap-style checkbox buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\nclass NgbCheckBox {\n    /**\n     * @param {?} _label\n     * @param {?} _cd\n     */\n    constructor(_label, _cd) {\n        this._label = _label;\n        this._cd = _cd;\n        /**\n         * If `true`, the checkbox button will be disabled\n         */\n        this.disabled = false;\n        /**\n         * The form control value when the checkbox is checked.\n         */\n        this.valueChecked = true;\n        /**\n         * The form control value when the checkbox is unchecked.\n         */\n        this.valueUnChecked = false;\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n    }\n    /**\n     * @param {?} isFocused\n     * @return {?}\n     */\n    set focused(isFocused) {\n        this._label.focused = isFocused;\n        if (!isFocused) {\n            this.onTouched();\n        }\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    onInputChange($event) {\n        /** @type {?} */\n        const modelToPropagate = $event.target.checked ? this.valueChecked : this.valueUnChecked;\n        this.onChange(modelToPropagate);\n        this.onTouched();\n        this.writeValue(modelToPropagate);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) { this.onChange = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._label.disabled = isDisabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.checked = value === this.valueChecked;\n        this._label.active = this.checked;\n        // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n        this._cd.markForCheck();\n    }\n}\nNgbCheckBox.ɵfac = function NgbCheckBox_Factory(t) { return new (t || NgbCheckBox)(ɵngcc0.ɵɵdirectiveInject(NgbButtonLabel), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); };\nNgbCheckBox.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbCheckBox, selectors: [[\"\", \"ngbButton\", \"\", \"type\", \"checkbox\"]], hostAttrs: [\"autocomplete\", \"off\"], hostVars: 2, hostBindings: function NgbCheckBox_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function NgbCheckBox_change_HostBindingHandler($event) { return ctx.onInputChange($event); })(\"focus\", function NgbCheckBox_focus_HostBindingHandler() { return ctx.focused = true; })(\"blur\", function NgbCheckBox_blur_HostBindingHandler() { return ctx.focused = false; });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\", valueChecked: \"valueChecked\", valueUnChecked: \"valueUnChecked\" }, features: [ɵngcc0.ɵɵProvidersFeature([NGB_CHECKBOX_VALUE_ACCESSOR])] });\n/** @nocollapse */\nNgbCheckBox.ctorParameters = () => [\n    { type: NgbButtonLabel },\n    { type: ChangeDetectorRef }\n];\nNgbCheckBox.propDecorators = {\n    disabled: [{ type: Input }],\n    valueChecked: [{ type: Input }],\n    valueUnChecked: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbCheckBox, [{\n        type: Directive,\n        args: [{\n                selector: '[ngbButton][type=checkbox]',\n                host: {\n                    'autocomplete': 'off',\n                    '[checked]': 'checked',\n                    '[disabled]': 'disabled',\n                    '(change)': 'onInputChange($event)',\n                    '(focus)': 'focused = true',\n                    '(blur)': 'focused = false'\n                },\n                providers: [NGB_CHECKBOX_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: NgbButtonLabel }, { type: ChangeDetectorRef }]; }, { disabled: [{\n            type: Input\n        }], valueChecked: [{\n            type: Input\n        }], valueUnChecked: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_RADIO_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgbRadioGroup),\n    multi: true\n};\n/** @type {?} */\nlet nextId$1 = 0;\n/**\n * Allows to easily create Bootstrap-style radio buttons.\n *\n * Integrates with forms, so the value of a checked button is bound to the underlying form control\n * either in a reactive or template-driven way.\n */\nclass NgbRadioGroup {\n    constructor() {\n        this._radios = new Set();\n        this._value = null;\n        /**\n         * Name of the radio group applied to radio input elements.\n         *\n         * Will be applied to all radio input elements inside the group,\n         * unless [`NgbRadio`](#/components/buttons/api#NgbRadio)'s specify names themselves.\n         *\n         * If not provided, will be generated in the `ngb-radio-xx` format.\n         */\n        this.name = `ngb-radio-${nextId$1++}`;\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    set disabled(isDisabled) { this.setDisabledState(isDisabled); }\n    /**\n     * @param {?} radio\n     * @return {?}\n     */\n    onRadioChange(radio) {\n        this.writeValue(radio.value);\n        this.onChange(radio.value);\n    }\n    /**\n     * @return {?}\n     */\n    onRadioValueUpdate() { this._updateRadiosValue(); }\n    /**\n     * @param {?} radio\n     * @return {?}\n     */\n    register(radio) { this._radios.add(radio); }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) { this.onChange = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._disabled = isDisabled;\n        this._updateRadiosDisabled();\n    }\n    /**\n     * @param {?} radio\n     * @return {?}\n     */\n    unregister(radio) { this._radios.delete(radio); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._value = value;\n        this._updateRadiosValue();\n    }\n    /**\n     * @return {?}\n     */\n    _updateRadiosValue() { this._radios.forEach((radio) => radio.updateValue(this._value)); }\n    /**\n     * @return {?}\n     */\n    _updateRadiosDisabled() { this._radios.forEach((radio) => radio.updateDisabled()); }\n}\nNgbRadioGroup.ɵfac = function NgbRadioGroup_Factory(t) { return new (t || NgbRadioGroup)(); };\nNgbRadioGroup.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbRadioGroup, selectors: [[\"\", \"ngbRadioGroup\", \"\"]], hostAttrs: [\"role\", \"radiogroup\"], inputs: { name: \"name\" }, features: [ɵngcc0.ɵɵProvidersFeature([NGB_RADIO_VALUE_ACCESSOR])] });\nNgbRadioGroup.propDecorators = {\n    name: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbRadioGroup, [{\n        type: Directive,\n        args: [{ selector: '[ngbRadioGroup]', host: { 'role': 'radiogroup' }, providers: [NGB_RADIO_VALUE_ACCESSOR] }]\n    }], function () { return []; }, { name: [{\n            type: Input\n        }] }); })();\n/**\n * A directive that marks an input of type \"radio\" as a part of the\n * [`NgbRadioGroup`](#/components/buttons/api#NgbRadioGroup).\n */\nclass NgbRadio {\n    /**\n     * @param {?} _group\n     * @param {?} _label\n     * @param {?} _renderer\n     * @param {?} _element\n     * @param {?} _cd\n     */\n    constructor(_group, _label, _renderer, _element, _cd) {\n        this._group = _group;\n        this._label = _label;\n        this._renderer = _renderer;\n        this._element = _element;\n        this._cd = _cd;\n        this._value = null;\n        this._group.register(this);\n        this.updateDisabled();\n    }\n    /**\n     * The form control value when current radio button is checked.\n     * @param {?} value\n     * @return {?}\n     */\n    set value(value) {\n        this._value = value;\n        /** @type {?} */\n        const stringValue = value ? value.toString() : '';\n        this._renderer.setProperty(this._element.nativeElement, 'value', stringValue);\n        this._group.onRadioValueUpdate();\n    }\n    /**\n     * If `true`, current radio button will be disabled.\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    set disabled(isDisabled) {\n        this._disabled = isDisabled !== false;\n        this.updateDisabled();\n    }\n    /**\n     * @param {?} isFocused\n     * @return {?}\n     */\n    set focused(isFocused) {\n        if (this._label) {\n            this._label.focused = isFocused;\n        }\n        if (!isFocused) {\n            this._group.onTouched();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get checked() { return this._checked; }\n    /**\n     * @return {?}\n     */\n    get disabled() { return this._group.disabled || this._disabled; }\n    /**\n     * @return {?}\n     */\n    get value() { return this._value; }\n    /**\n     * @return {?}\n     */\n    get nameAttr() { return this.name || this._group.name; }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { this._group.unregister(this); }\n    /**\n     * @return {?}\n     */\n    onChange() { this._group.onRadioChange(this); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    updateValue(value) {\n        // label won't be updated, if it is inside the OnPush component when [ngModel] changes\n        if (this.value !== value) {\n            this._cd.markForCheck();\n        }\n        this._checked = this.value === value;\n        this._label.active = this._checked;\n    }\n    /**\n     * @return {?}\n     */\n    updateDisabled() { this._label.disabled = this.disabled; }\n}\nNgbRadio.ɵfac = function NgbRadio_Factory(t) { return new (t || NgbRadio)(ɵngcc0.ɵɵdirectiveInject(NgbRadioGroup), ɵngcc0.ɵɵdirectiveInject(NgbButtonLabel), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); };\nNgbRadio.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbRadio, selectors: [[\"\", \"ngbButton\", \"\", \"type\", \"radio\"]], hostVars: 3, hostBindings: function NgbRadio_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"change\", function NgbRadio_change_HostBindingHandler() { return ctx.onChange(); })(\"focus\", function NgbRadio_focus_HostBindingHandler() { return ctx.focused = true; })(\"blur\", function NgbRadio_blur_HostBindingHandler() { return ctx.focused = false; });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"checked\", ctx.checked)(\"disabled\", ctx.disabled)(\"name\", ctx.nameAttr);\n    } }, inputs: { value: \"value\", disabled: \"disabled\", name: \"name\" } });\n/** @nocollapse */\nNgbRadio.ctorParameters = () => [\n    { type: NgbRadioGroup },\n    { type: NgbButtonLabel },\n    { type: Renderer2 },\n    { type: ElementRef },\n    { type: ChangeDetectorRef }\n];\nNgbRadio.propDecorators = {\n    name: [{ type: Input }],\n    value: [{ type: Input, args: ['value',] }],\n    disabled: [{ type: Input, args: ['disabled',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbRadio, [{\n        type: Directive,\n        args: [{\n                selector: '[ngbButton][type=radio]',\n                host: {\n                    '[checked]': 'checked',\n                    '[disabled]': 'disabled',\n                    '[name]': 'nameAttr',\n                    '(change)': 'onChange()',\n                    '(focus)': 'focused = true',\n                    '(blur)': 'focused = false'\n                }\n            }]\n    }], function () { return [{ type: NgbRadioGroup }, { type: NgbButtonLabel }, { type: Renderer2 }, { type: ElementRef }, { type: ChangeDetectorRef }]; }, { value: [{\n            type: Input,\n            args: ['value']\n        }], disabled: [{\n            type: Input,\n            args: ['disabled']\n        }], name: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_BUTTON_DIRECTIVES = [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio];\nclass NgbButtonsModule {\n    /**\n     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n     * Will be removed in 4.0.0.\n     *\n     * @deprecated 3.0.0\n     * @return {?}\n     */\n    static forRoot() { return { ngModule: NgbButtonsModule }; }\n}\nNgbButtonsModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbButtonsModule });\nNgbButtonsModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbButtonsModule_Factory(t) { return new (t || NgbButtonsModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbButtonsModule, { declarations: [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio], exports: [NgbButtonLabel, NgbCheckBox, NgbRadioGroup, NgbRadio] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbButtonsModule, [{\n        type: NgModule,\n        args: [{ declarations: NGB_BUTTON_DIRECTIVES, exports: NGB_BUTTON_DIRECTIVES }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [NgbCarousel](#/components/carousel/api#NgbCarousel) component.\n *\n * You can inject this service, typically in your root component, and customize its properties\n * to provide default values for all carousels used in the application.\n */\nclass NgbCarouselConfig {\n    constructor() {\n        this.interval = 5000;\n        this.wrap = true;\n        this.keyboard = true;\n        this.pauseOnHover = true;\n        this.showNavigationArrows = true;\n        this.showNavigationIndicators = true;\n    }\n}\nNgbCarouselConfig.ɵfac = function NgbCarouselConfig_Factory(t) { return new (t || NgbCarouselConfig)(); };\nNgbCarouselConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbCarouselConfig, factory: NgbCarouselConfig.ɵfac, providedIn: 'root' });\n/** @nocollapse */ NgbCarouselConfig.ngInjectableDef = defineInjectable({ factory: function NgbCarouselConfig_Factory() { return new NgbCarouselConfig(); }, token: NgbCarouselConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbCarouselConfig, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$2 = 0;\n/**\n * A directive that wraps the individual carousel slide.\n */\nclass NgbSlide {\n    /**\n     * @param {?} tplRef\n     */\n    constructor(tplRef) {\n        this.tplRef = tplRef;\n        /**\n         * Slide id that must be unique for the entire document.\n         *\n         * If not provided, will be generated in the `ngb-slide-xx` format.\n         */\n        this.id = `ngb-slide-${nextId$2++}`;\n    }\n}\nNgbSlide.ɵfac = function NgbSlide_Factory(t) { return new (t || NgbSlide)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };\nNgbSlide.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbSlide, selectors: [[\"ng-template\", \"ngbSlide\", \"\"]], inputs: { id: \"id\" } });\n/** @nocollapse */\nNgbSlide.ctorParameters = () => [\n    { type: TemplateRef }\n];\nNgbSlide.propDecorators = {\n    id: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbSlide, [{\n        type: Directive,\n        args: [{ selector: 'ng-template[ngbSlide]' }]\n    }], function () { return [{ type: TemplateRef }]; }, { id: [{\n            type: Input\n        }] }); })();\n/**\n * Carousel is a component to easily create and control slideshows.\n *\n * Allows to set intervals, change the way user interacts with the slides and provides a programmatic API.\n */\nclass NgbCarousel {\n    /**\n     * @param {?} config\n     * @param {?} _platformId\n     * @param {?} _ngZone\n     * @param {?} _cd\n     */\n    constructor(config, _platformId, _ngZone, _cd) {\n        this._platformId = _platformId;\n        this._ngZone = _ngZone;\n        this._cd = _cd;\n        this._destroy$ = new Subject();\n        this._start$ = new Subject();\n        this._stop$ = new Subject();\n        /**\n         * An event emitted right after the slide transition is completed.\n         *\n         * See [`NgbSlideEvent`](#/components/carousel/api#NgbSlideEvent) for payload details.\n         */\n        this.slide = new EventEmitter();\n        this.interval = config.interval;\n        this.wrap = config.wrap;\n        this.keyboard = config.keyboard;\n        this.pauseOnHover = config.pauseOnHover;\n        this.showNavigationArrows = config.showNavigationArrows;\n        this.showNavigationIndicators = config.showNavigationIndicators;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        // setInterval() doesn't play well with SSR and protractor,\n        // so we should run it in the browser and outside Angular\n        if (isPlatformBrowser(this._platformId)) {\n            this._ngZone.runOutsideAngular(() => {\n                this._start$\n                    .pipe(map(() => this.interval), filter(interval => interval > 0 && this.slides.length > 0), switchMap(interval => timer(interval).pipe(takeUntil(merge(this._stop$, this._destroy$)))))\n                    .subscribe(() => this._ngZone.run(() => this.next()));\n                this._start$.next();\n            });\n        }\n        this.slides.changes.pipe(takeUntil(this._destroy$)).subscribe(() => this._cd.markForCheck());\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        /** @type {?} */\n        let activeSlide = this._getSlideById(this.activeId);\n        this.activeId = activeSlide ? activeSlide.id : (this.slides.length ? this.slides.first.id : null);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { this._destroy$.next(); }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if ('interval' in changes && !changes['interval'].isFirstChange()) {\n            this._start$.next();\n        }\n    }\n    /**\n     * Navigates to a slide with the specified identifier.\n     * @param {?} slideId\n     * @return {?}\n     */\n    select(slideId) { this._cycleToSelected(slideId, this._getSlideEventDirection(this.activeId, slideId)); }\n    /**\n     * Navigates to the previous slide.\n     * @return {?}\n     */\n    prev() { this._cycleToSelected(this._getPrevSlide(this.activeId), NgbSlideEventDirection.RIGHT); }\n    /**\n     * Navigates to the next slide.\n     * @return {?}\n     */\n    next() { this._cycleToSelected(this._getNextSlide(this.activeId), NgbSlideEventDirection.LEFT); }\n    /**\n     * Pauses cycling through the slides.\n     * @return {?}\n     */\n    pause() { this._stop$.next(); }\n    /**\n     * Restarts cycling through the slides from left to right.\n     * @return {?}\n     */\n    cycle() { this._start$.next(); }\n    /**\n     * @param {?} slideIdx\n     * @param {?} direction\n     * @return {?}\n     */\n    _cycleToSelected(slideIdx, direction) {\n        /** @type {?} */\n        let selectedSlide = this._getSlideById(slideIdx);\n        if (selectedSlide && selectedSlide.id !== this.activeId) {\n            this.slide.emit({ prev: this.activeId, current: selectedSlide.id, direction: direction });\n            this._start$.next();\n            this.activeId = selectedSlide.id;\n        }\n        // we get here after the interval fires or any external API call like next(), prev() or select()\n        this._cd.markForCheck();\n    }\n    /**\n     * @param {?} currentActiveSlideId\n     * @param {?} nextActiveSlideId\n     * @return {?}\n     */\n    _getSlideEventDirection(currentActiveSlideId, nextActiveSlideId) {\n        /** @type {?} */\n        const currentActiveSlideIdx = this._getSlideIdxById(currentActiveSlideId);\n        /** @type {?} */\n        const nextActiveSlideIdx = this._getSlideIdxById(nextActiveSlideId);\n        return currentActiveSlideIdx > nextActiveSlideIdx ? NgbSlideEventDirection.RIGHT : NgbSlideEventDirection.LEFT;\n    }\n    /**\n     * @param {?} slideId\n     * @return {?}\n     */\n    _getSlideById(slideId) { return this.slides.find(slide => slide.id === slideId); }\n    /**\n     * @param {?} slideId\n     * @return {?}\n     */\n    _getSlideIdxById(slideId) {\n        return this.slides.toArray().indexOf(this._getSlideById(slideId));\n    }\n    /**\n     * @param {?} currentSlideId\n     * @return {?}\n     */\n    _getNextSlide(currentSlideId) {\n        /** @type {?} */\n        const slideArr = this.slides.toArray();\n        /** @type {?} */\n        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        /** @type {?} */\n        const isLastSlide = currentSlideIdx === slideArr.length - 1;\n        return isLastSlide ? (this.wrap ? slideArr[0].id : slideArr[slideArr.length - 1].id) :\n            slideArr[currentSlideIdx + 1].id;\n    }\n    /**\n     * @param {?} currentSlideId\n     * @return {?}\n     */\n    _getPrevSlide(currentSlideId) {\n        /** @type {?} */\n        const slideArr = this.slides.toArray();\n        /** @type {?} */\n        const currentSlideIdx = this._getSlideIdxById(currentSlideId);\n        /** @type {?} */\n        const isFirstSlide = currentSlideIdx === 0;\n        return isFirstSlide ? (this.wrap ? slideArr[slideArr.length - 1].id : slideArr[0].id) :\n            slideArr[currentSlideIdx - 1].id;\n    }\n}\nNgbCarousel.ɵfac = function NgbCarousel_Factory(t) { return new (t || NgbCarousel)(ɵngcc0.ɵɵdirectiveInject(NgbCarouselConfig), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); };\nNgbCarousel.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbCarousel, selectors: [[\"ngb-carousel\"]], contentQueries: function NgbCarousel_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbSlide, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.slides = _t);\n    } }, hostAttrs: [\"tabIndex\", \"0\", 1, \"carousel\", \"slide\"], hostVars: 2, hostBindings: function NgbCarousel_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mouseenter\", function NgbCarousel_mouseenter_HostBindingHandler() { return ctx.pauseOnHover && ctx.pause(); })(\"mouseleave\", function NgbCarousel_mouseleave_HostBindingHandler() { return ctx.pauseOnHover && ctx.cycle(); })(\"keydown.arrowLeft\", function NgbCarousel_keydown_arrowLeft_HostBindingHandler() { return ctx.keyboard && ctx.prev(); })(\"keydown.arrowRight\", function NgbCarousel_keydown_arrowRight_HostBindingHandler() { return ctx.keyboard && ctx.next(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"display\", \"block\");\n    } }, inputs: { interval: \"interval\", wrap: \"wrap\", keyboard: \"keyboard\", pauseOnHover: \"pauseOnHover\", showNavigationArrows: \"showNavigationArrows\", showNavigationIndicators: \"showNavigationIndicators\", activeId: \"activeId\" }, outputs: { slide: \"slide\" }, exportAs: [\"ngbCarousel\"], features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 5, vars: 4, consts: function () { var i18n_4; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_carousel_previous$$FESM2015_NG_BOOTSTRAP_JS__5 = goog.getMsg(\"Previous\");\n        i18n_4 = MSG_EXTERNAL_ngb_carousel_previous$$FESM2015_NG_BOOTSTRAP_JS__5;\n    }\n    else {\n        i18n_4 = $localize `:@@ngb.carousel.previous␟680d5c75b7fd8d37961083608b9fcdc4167b4c43␟4452427314943113135:Previous`;\n    } var i18n_6; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_carousel_next$$FESM2015_NG_BOOTSTRAP_JS__7 = goog.getMsg(\"Next\");\n        i18n_6 = MSG_EXTERNAL_ngb_carousel_next$$FESM2015_NG_BOOTSTRAP_JS__7;\n    }\n    else {\n        i18n_6 = $localize `:@@ngb.carousel.next␟f732c304c7433e5a83ffcd862c3dce709a0f4982␟3885497195825665706:Next`;\n    } return [[\"class\", \"carousel-indicators\", 4, \"ngIf\"], [1, \"carousel-inner\"], [\"class\", \"carousel-item\", 3, \"active\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"carousel-control-prev\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [\"class\", \"carousel-control-next\", \"role\", \"button\", 3, \"click\", 4, \"ngIf\"], [1, \"carousel-indicators\"], [3, \"id\", \"active\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"id\", \"click\"], [1, \"carousel-item\"], [3, \"ngTemplateOutlet\"], [\"role\", \"button\", 1, \"carousel-control-prev\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-prev-icon\"], [1, \"sr-only\"], i18n_4, [\"role\", \"button\", 1, \"carousel-control-next\", 3, \"click\"], [\"aria-hidden\", \"true\", 1, \"carousel-control-next-icon\"], i18n_6]; }, template: function NgbCarousel_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgbCarousel_ol_0_Template, 2, 1, \"ol\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, NgbCarousel_div_2_Template, 2, 3, \"div\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(3, NgbCarousel_a_3_Template, 4, 0, \"a\", 3);\n        ɵngcc0.ɵɵtemplate(4, NgbCarousel_a_4_Template, 4, 0, \"a\", 4);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showNavigationIndicators);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.slides);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showNavigationArrows);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showNavigationArrows);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nNgbCarousel.ctorParameters = () => [\n    { type: NgbCarouselConfig },\n    { type: undefined, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef }\n];\nNgbCarousel.propDecorators = {\n    slides: [{ type: ContentChildren, args: [NgbSlide,] }],\n    activeId: [{ type: Input }],\n    interval: [{ type: Input }],\n    wrap: [{ type: Input }],\n    keyboard: [{ type: Input }],\n    pauseOnHover: [{ type: Input }],\n    showNavigationArrows: [{ type: Input }],\n    showNavigationIndicators: [{ type: Input }],\n    slide: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbCarousel, [{\n        type: Component,\n        args: [{\n                selector: 'ngb-carousel',\n                exportAs: 'ngbCarousel',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'carousel slide',\n                    '[style.display]': '\"block\"',\n                    'tabIndex': '0',\n                    '(mouseenter)': 'pauseOnHover && pause()',\n                    '(mouseleave)': 'pauseOnHover && cycle()',\n                    '(keydown.arrowLeft)': 'keyboard && prev()',\n                    '(keydown.arrowRight)': 'keyboard && next()'\n                },\n                template: `\n    <ol class=\"carousel-indicators\" *ngIf=\"showNavigationIndicators\">\n      <li *ngFor=\"let slide of slides\" [id]=\"slide.id\" [class.active]=\"slide.id === activeId\"\n          (click)=\"select(slide.id); pauseOnHover && pause()\"></li>\n    </ol>\n    <div class=\"carousel-inner\">\n      <div *ngFor=\"let slide of slides\" class=\"carousel-item\" [class.active]=\"slide.id === activeId\">\n        <ng-template [ngTemplateOutlet]=\"slide.tplRef\"></ng-template>\n      </div>\n    </div>\n    <a class=\"carousel-control-prev\" role=\"button\" (click)=\"prev()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.previous\">Previous</span>\n    </a>\n    <a class=\"carousel-control-next\" role=\"button\" (click)=\"next()\" *ngIf=\"showNavigationArrows\">\n      <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n      <span class=\"sr-only\" i18n=\"@@ngb.carousel.next\">Next</span>\n    </a>\n  `\n            }]\n    }], function () { return [{ type: NgbCarouselConfig }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }, { type: NgZone }, { type: ChangeDetectorRef }]; }, { slide: [{\n            type: Output\n        }], interval: [{\n            type: Input\n        }], wrap: [{\n            type: Input\n        }], keyboard: [{\n            type: Input\n        }], pauseOnHover: [{\n            type: Input\n        }], showNavigationArrows: [{\n            type: Input\n        }], showNavigationIndicators: [{\n            type: Input\n        }], activeId: [{\n            type: Input\n        }], slides: [{\n            type: ContentChildren,\n            args: [NgbSlide]\n        }] }); })();\n/** @enum {string} */\nconst NgbSlideEventDirection = {\n    LEFT: (/** @type {?} */ ('left')),\n    RIGHT: (/** @type {?} */ ('right')),\n};\n/** @type {?} */\nconst NGB_CAROUSEL_DIRECTIVES = [NgbCarousel, NgbSlide];\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbCarouselModule {\n    /**\n     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n     * Will be removed in 4.0.0.\n     *\n     * @deprecated 3.0.0\n     * @return {?}\n     */\n    static forRoot() { return { ngModule: NgbCarouselModule }; }\n}\nNgbCarouselModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbCarouselModule });\nNgbCarouselModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbCarouselModule_Factory(t) { return new (t || NgbCarouselModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbCarouselModule, { declarations: function () { return [NgbCarousel, NgbSlide]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgbCarousel, NgbSlide]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbCarouselModule, [{\n        type: NgModule,\n        args: [{ declarations: NGB_CAROUSEL_DIRECTIVES, exports: NGB_CAROUSEL_DIRECTIVES, imports: [CommonModule] }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A directive to provide a simple way of hiding and showing elements on the page.\n */\nclass NgbCollapse {\n    constructor() {\n        /**\n         * If `true`, will collapse the element or show it otherwise.\n         */\n        this.collapsed = false;\n    }\n}\nNgbCollapse.ɵfac = function NgbCollapse_Factory(t) { return new (t || NgbCollapse)(); };\nNgbCollapse.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbCollapse, selectors: [[\"\", \"ngbCollapse\", \"\"]], hostVars: 4, hostBindings: function NgbCollapse_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"collapse\", true)(\"show\", !ctx.collapsed);\n    } }, inputs: { collapsed: [\"ngbCollapse\", \"collapsed\"] }, exportAs: [\"ngbCollapse\"] });\nNgbCollapse.propDecorators = {\n    collapsed: [{ type: Input, args: ['ngbCollapse',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbCollapse, [{\n        type: Directive,\n        args: [{\n                selector: '[ngbCollapse]',\n                exportAs: 'ngbCollapse',\n                host: { '[class.collapse]': 'true', '[class.show]': '!collapsed' }\n            }]\n    }], function () { return []; }, { collapsed: [{\n            type: Input,\n            args: ['ngbCollapse']\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbCollapseModule {\n    /**\n     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n     * Will be removed in 4.0.0.\n     *\n     * @deprecated 3.0.0\n     * @return {?}\n     */\n    static forRoot() { return { ngModule: NgbCollapseModule }; }\n}\nNgbCollapseModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbCollapseModule });\nNgbCollapseModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbCollapseModule_Factory(t) { return new (t || NgbCollapseModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbCollapseModule, { declarations: [NgbCollapse], exports: [NgbCollapse] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbCollapseModule, [{\n        type: NgModule,\n        args: [{ declarations: [NgbCollapse], exports: [NgbCollapse] }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A simple class that represents a date that datepicker also uses internally.\n *\n * It is the implementation of the `NgbDateStruct` interface that adds some convenience methods,\n * like `.equals()`, `.before()`, etc.\n *\n * All datepicker APIs consume `NgbDateStruct`, but return `NgbDate`.\n *\n * In many cases it is simpler to manipulate these objects together with\n * [`NgbCalendar`](#/components/datepicker/api#NgbCalendar) than native JS Dates.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n *\n * \\@since 3.0.0\n */\nclass NgbDate {\n    /**\n     * A **static method** that creates a new date object from the `NgbDateStruct`,\n     *\n     * ex. `NgbDate.from({year: 2000, month: 5, day: 1})`.\n     *\n     * If the `date` is already of `NgbDate` type, the method will return the same object.\n     * @param {?} date\n     * @return {?}\n     */\n    static from(date) {\n        if (date instanceof NgbDate) {\n            return date;\n        }\n        return date ? new NgbDate(date.year, date.month, date.day) : null;\n    }\n    /**\n     * @param {?} year\n     * @param {?} month\n     * @param {?} day\n     */\n    constructor(year, month, day) {\n        this.year = isInteger(year) ? year : null;\n        this.month = isInteger(month) ? month : null;\n        this.day = isInteger(day) ? day : null;\n    }\n    /**\n     * Checks if the current date is equal to another date.\n     * @param {?} other\n     * @return {?}\n     */\n    equals(other) {\n        return other && this.year === other.year && this.month === other.month && this.day === other.day;\n    }\n    /**\n     * Checks if the current date is before another date.\n     * @param {?} other\n     * @return {?}\n     */\n    before(other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day < other.day;\n            }\n            else {\n                return this.month < other.month;\n            }\n        }\n        else {\n            return this.year < other.year;\n        }\n    }\n    /**\n     * Checks if the current date is after another date.\n     * @param {?} other\n     * @return {?}\n     */\n    after(other) {\n        if (!other) {\n            return false;\n        }\n        if (this.year === other.year) {\n            if (this.month === other.month) {\n                return this.day === other.day ? false : this.day > other.day;\n            }\n            else {\n                return this.month > other.month;\n            }\n        }\n        else {\n            return this.year > other.year;\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} jsDate\n * @return {?}\n */\nfunction fromJSDate(jsDate) {\n    return new NgbDate(jsDate.getFullYear(), jsDate.getMonth() + 1, jsDate.getDate());\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction toJSDate(date) {\n    /** @type {?} */\n    const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n    // this is done avoid 30 -> 1930 conversion\n    if (!isNaN(jsDate.getTime())) {\n        jsDate.setFullYear(date.year);\n    }\n    return jsDate;\n}\n/**\n * @return {?}\n */\nfunction NGB_DATEPICKER_CALENDAR_FACTORY() {\n    return new NgbCalendarGregorian();\n}\n/**\n * A service that represents the calendar used by the datepicker.\n *\n * The default implementation uses the Gregorian calendar. You can inject it in your own\n * implementations if necessary to simplify `NgbDate` calculations.\n * @abstract\n */\nclass NgbCalendar {\n}\nNgbCalendar.ɵfac = function NgbCalendar_Factory(t) { return new (t || NgbCalendar)(); };\nNgbCalendar.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbCalendar, factory: function () { return NGB_DATEPICKER_CALENDAR_FACTORY(); }, providedIn: 'root' });\n/** @nocollapse */ NgbCalendar.ngInjectableDef = defineInjectable({ factory: NGB_DATEPICKER_CALENDAR_FACTORY, token: NgbCalendar, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbCalendar, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_CALENDAR_FACTORY }]\n    }], null, null); })();\nclass NgbCalendarGregorian extends NgbCalendar {\n    /**\n     * @return {?}\n     */\n    getDaysPerWeek() { return 7; }\n    /**\n     * @return {?}\n     */\n    getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n    /**\n     * @return {?}\n     */\n    getWeeksPerMonth() { return 6; }\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    getNext(date, period = 'd', number = 1) {\n        /** @type {?} */\n        let jsDate = toJSDate(date);\n        switch (period) {\n            case 'y':\n                return new NgbDate(date.year + number, 1, 1);\n            case 'm':\n                jsDate = new Date(date.year, date.month + number - 1, 1, 12);\n                break;\n            case 'd':\n                jsDate.setDate(jsDate.getDate() + number);\n                break;\n            default:\n                return date;\n        }\n        return fromJSDate(jsDate);\n    }\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    getPrev(date, period = 'd', number = 1) { return this.getNext(date, period, -number); }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getWeekday(date) {\n        /** @type {?} */\n        let jsDate = toJSDate(date);\n        /** @type {?} */\n        let day = jsDate.getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    /**\n     * @param {?} week\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        /** @type {?} */\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        /** @type {?} */\n        let date = week[thursdayIndex];\n        /** @type {?} */\n        const jsDate = toJSDate(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        // Thursday\n        /** @type {?} */\n        const time = jsDate.getTime();\n        jsDate.setMonth(0); // Compare with Jan 1\n        jsDate.setDate(1);\n        return Math.floor(Math.round((time - jsDate.getTime()) / 86400000) / 7) + 1;\n    }\n    /**\n     * @return {?}\n     */\n    getToday() { return fromJSDate(new Date()); }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        if (!date || !isInteger(date.year) || !isInteger(date.month) || !isInteger(date.day)) {\n            return false;\n        }\n        // year 0 doesn't exist in Gregorian calendar\n        if (date.year === 0) {\n            return false;\n        }\n        /** @type {?} */\n        const jsDate = toJSDate(date);\n        return !isNaN(jsDate.getTime()) && jsDate.getFullYear() === date.year && jsDate.getMonth() + 1 === date.month &&\n            jsDate.getDate() === date.day;\n    }\n}\nNgbCalendarGregorian.ɵfac = function NgbCalendarGregorian_Factory(t) { return ɵNgbCalendarGregorian_BaseFactory(t || NgbCalendarGregorian); };\nNgbCalendarGregorian.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbCalendarGregorian, factory: NgbCalendarGregorian.ɵfac });\nconst ɵNgbCalendarGregorian_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarGregorian);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbCalendarGregorian, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} prev\n * @param {?} next\n * @return {?}\n */\nfunction isChangedDate(prev, next) {\n    return !dateComparator(prev, next);\n}\n/**\n * @param {?} prev\n * @param {?} next\n * @return {?}\n */\nfunction isChangedMonth(prev, next) {\n    return !prev && !next ? false : !prev || !next ? true : prev.year !== next.year || prev.month !== next.month;\n}\n/**\n * @param {?} prev\n * @param {?} next\n * @return {?}\n */\nfunction dateComparator(prev, next) {\n    return (!prev && !next) || (!!prev && !!next && prev.equals(next));\n}\n/**\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction checkMinBeforeMax(minDate, maxDate) {\n    if (maxDate && minDate && maxDate.before(minDate)) {\n        throw new Error(`'maxDate' ${maxDate} should be greater than 'minDate' ${minDate}`);\n    }\n}\n/**\n * @param {?} date\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction checkDateInRange(date, minDate, maxDate) {\n    if (date && minDate && date.before(minDate)) {\n        return minDate;\n    }\n    if (date && maxDate && date.after(maxDate)) {\n        return maxDate;\n    }\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} state\n * @return {?}\n */\nfunction isDateSelectable(date, state) {\n    const { minDate, maxDate, disabled, markDisabled } = state;\n    // clang-format off\n    return !(!isDefined(date) ||\n        disabled ||\n        (markDisabled && markDisabled(date, { year: date.year, month: date.month })) ||\n        (minDate && date.before(minDate)) ||\n        (maxDate && date.after(maxDate)));\n    // clang-format on\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction generateSelectBoxMonths(calendar, date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    /** @type {?} */\n    let months = calendar.getMonths(date.year);\n    if (minDate && date.year === minDate.year) {\n        /** @type {?} */\n        const index = months.findIndex(month => month === minDate.month);\n        months = months.slice(index);\n    }\n    if (maxDate && date.year === maxDate.year) {\n        /** @type {?} */\n        const index = months.findIndex(month => month === maxDate.month);\n        months = months.slice(0, index + 1);\n    }\n    return months;\n}\n/**\n * @param {?} date\n * @param {?} minDate\n * @param {?} maxDate\n * @return {?}\n */\nfunction generateSelectBoxYears(date, minDate, maxDate) {\n    if (!date) {\n        return [];\n    }\n    /** @type {?} */\n    const start = minDate && minDate.year || date.year - 10;\n    /** @type {?} */\n    const end = maxDate && maxDate.year || date.year + 10;\n    return Array.from({ length: end - start + 1 }, (e, i) => start + i);\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} maxDate\n * @return {?}\n */\nfunction nextMonthDisabled(calendar, date, maxDate) {\n    return maxDate && calendar.getNext(date, 'm').after(maxDate);\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} minDate\n * @return {?}\n */\nfunction prevMonthDisabled(calendar, date, minDate) {\n    /** @type {?} */\n    const prevDate = calendar.getPrev(date, 'm');\n    return minDate && (prevDate.year === minDate.year && prevDate.month < minDate.month ||\n        prevDate.year < minDate.year && minDate.month === 1);\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} state\n * @param {?} i18n\n * @param {?} force\n * @return {?}\n */\nfunction buildMonths(calendar, date, state, i18n, force) {\n    const { displayMonths, months } = state;\n    // move old months to a temporary array\n    /** @type {?} */\n    const monthsToReuse = months.splice(0, months.length);\n    // generate new first dates, nullify or reuse months\n    /** @type {?} */\n    const firstDates = Array.from({ length: displayMonths }, (_, i) => {\n        /** @type {?} */\n        const firstDate = calendar.getNext(date, 'm', i);\n        months[i] = null;\n        if (!force) {\n            /** @type {?} */\n            const reusedIndex = monthsToReuse.findIndex(month => month.firstDate.equals(firstDate));\n            // move reused month back to months\n            if (reusedIndex !== -1) {\n                months[i] = monthsToReuse.splice(reusedIndex, 1)[0];\n            }\n        }\n        return firstDate;\n    });\n    // rebuild nullified months\n    firstDates.forEach((firstDate, i) => {\n        if (months[i] === null) {\n            months[i] = buildMonth(calendar, firstDate, state, i18n, monthsToReuse.shift() || (/** @type {?} */ ({})));\n        }\n    });\n    return months;\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} state\n * @param {?} i18n\n * @param {?=} month\n * @return {?}\n */\nfunction buildMonth(calendar, date, state, i18n, month = (/** @type {?} */ ({}))) {\n    const { dayTemplateData, minDate, maxDate, firstDayOfWeek, markDisabled, outsideDays } = state;\n    /** @type {?} */\n    const calendarToday = calendar.getToday();\n    month.firstDate = null;\n    month.lastDate = null;\n    month.number = date.month;\n    month.year = date.year;\n    month.weeks = month.weeks || [];\n    month.weekdays = month.weekdays || [];\n    date = getFirstViewDate(calendar, date, firstDayOfWeek);\n    // month has weeks\n    for (let week = 0; week < calendar.getWeeksPerMonth(); week++) {\n        /** @type {?} */\n        let weekObject = month.weeks[week];\n        if (!weekObject) {\n            weekObject = month.weeks[week] = { number: 0, days: [], collapsed: true };\n        }\n        /** @type {?} */\n        const days = weekObject.days;\n        // week has days\n        for (let day = 0; day < calendar.getDaysPerWeek(); day++) {\n            if (week === 0) {\n                month.weekdays[day] = calendar.getWeekday(date);\n            }\n            /** @type {?} */\n            const newDate = new NgbDate(date.year, date.month, date.day);\n            /** @type {?} */\n            const nextDate = calendar.getNext(newDate);\n            /** @type {?} */\n            const ariaLabel = i18n.getDayAriaLabel(newDate);\n            // marking date as disabled\n            /** @type {?} */\n            let disabled = !!((minDate && newDate.before(minDate)) || (maxDate && newDate.after(maxDate)));\n            if (!disabled && markDisabled) {\n                disabled = markDisabled(newDate, { month: month.number, year: month.year });\n            }\n            // today\n            /** @type {?} */\n            let today = newDate.equals(calendarToday);\n            // adding user-provided data to the context\n            /** @type {?} */\n            let contextUserData = dayTemplateData ? dayTemplateData(newDate, { month: month.number, year: month.year }) : undefined;\n            // saving first date of the month\n            if (month.firstDate === null && newDate.month === month.number) {\n                month.firstDate = newDate;\n            }\n            // saving last date of the month\n            if (newDate.month === month.number && nextDate.month !== month.number) {\n                month.lastDate = newDate;\n            }\n            /** @type {?} */\n            let dayObject = days[day];\n            if (!dayObject) {\n                dayObject = days[day] = (/** @type {?} */ ({}));\n            }\n            dayObject.date = newDate;\n            dayObject.context = Object.assign(dayObject.context || {}, {\n                $implicit: newDate,\n                date: newDate,\n                data: contextUserData,\n                currentMonth: month.number, disabled,\n                focused: false,\n                selected: false, today\n            });\n            dayObject.tabindex = -1;\n            dayObject.ariaLabel = ariaLabel;\n            dayObject.hidden = false;\n            date = nextDate;\n        }\n        weekObject.number = calendar.getWeekNumber(days.map(day => day.date), firstDayOfWeek);\n        // marking week as collapsed\n        weekObject.collapsed = outsideDays === 'collapsed' && days[0].date.month !== month.number &&\n            days[days.length - 1].date.month !== month.number;\n    }\n    return month;\n}\n/**\n * @param {?} calendar\n * @param {?} date\n * @param {?} firstDayOfWeek\n * @return {?}\n */\nfunction getFirstViewDate(calendar, date, firstDayOfWeek) {\n    /** @type {?} */\n    const daysPerWeek = calendar.getDaysPerWeek();\n    /** @type {?} */\n    const firstMonthDate = new NgbDate(date.year, date.month, 1);\n    /** @type {?} */\n    const dayOfWeek = calendar.getWeekday(firstMonthDate) % daysPerWeek;\n    return calendar.getPrev(firstMonthDate, 'd', (daysPerWeek + dayOfWeek - firstDayOfWeek) % daysPerWeek);\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @param {?} locale\n * @return {?}\n */\nfunction NGB_DATEPICKER_18N_FACTORY(locale) {\n    return new NgbDatepickerI18nDefault(locale);\n}\n/**\n * A service supplying i18n data to the datepicker component.\n *\n * The default implementation of this service uses the Angular locale and registered locale data for\n * weekdays and month names (as explained in the Angular i18n guide).\n *\n * It also provides a way to i18n data that depends on calendar calculations, like aria labels, day, week and year\n * numerals. For other static labels the datepicker uses the default Angular i18n.\n *\n * See the [i18n demo](#/components/datepicker/examples#i18n) and\n * [Hebrew calendar demo](#/components/datepicker/calendars#hebrew) on how to extend this class and define\n * a custom provider for i18n.\n * @abstract\n */\nclass NgbDatepickerI18n {\n    /**\n     * Returns the textual representation of a day that is rendered in a day cell.\n     *\n     * \\@since 3.0.0\n     * @param {?} date\n     * @return {?}\n     */\n    getDayNumerals(date) { return `${date.day}`; }\n    /**\n     * Returns the textual representation of a week number rendered by datepicker.\n     *\n     * \\@since 3.0.0\n     * @param {?} weekNumber\n     * @return {?}\n     */\n    getWeekNumerals(weekNumber) { return `${weekNumber}`; }\n    /**\n     * Returns the textual representation of a year that is rendered in the datepicker year select box.\n     *\n     * \\@since 3.0.0\n     * @param {?} year\n     * @return {?}\n     */\n    getYearNumerals(year) { return `${year}`; }\n}\nNgbDatepickerI18n.ɵfac = function NgbDatepickerI18n_Factory(t) { return new (t || NgbDatepickerI18n)(); };\nNgbDatepickerI18n.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbDatepickerI18n, factory: function NgbDatepickerI18n_Factory(t) { var r = null; if (t) {\n        r = new t();\n    }\n    else {\n        r = NGB_DATEPICKER_18N_FACTORY(ɵngcc0.ɵɵinject(LOCALE_ID));\n    } return r; }, providedIn: 'root' });\n/** @nocollapse */ NgbDatepickerI18n.ngInjectableDef = defineInjectable({ factory: function NgbDatepickerI18n_Factory() { return NGB_DATEPICKER_18N_FACTORY(inject(LOCALE_ID)); }, token: NgbDatepickerI18n, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDatepickerI18n, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_18N_FACTORY, deps: [LOCALE_ID] }]\n    }], null, null); })();\nclass NgbDatepickerI18nDefault extends NgbDatepickerI18n {\n    /**\n     * @param {?} _locale\n     */\n    constructor(_locale) {\n        super();\n        this._locale = _locale;\n        /** @type {?} */\n        const weekdaysStartingOnSunday = getLocaleDayNames(_locale, FormStyle.Standalone, TranslationWidth.Short);\n        this._weekdaysShort = weekdaysStartingOnSunday.map((day, index) => weekdaysStartingOnSunday[(index + 1) % 7]);\n        this._monthsShort = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Abbreviated);\n        this._monthsFull = getLocaleMonthNames(_locale, FormStyle.Standalone, TranslationWidth.Wide);\n    }\n    /**\n     * @param {?} weekday\n     * @return {?}\n     */\n    getWeekdayShortName(weekday) { return this._weekdaysShort[weekday - 1]; }\n    /**\n     * @param {?} month\n     * @return {?}\n     */\n    getMonthShortName(month) { return this._monthsShort[month - 1]; }\n    /**\n     * @param {?} month\n     * @return {?}\n     */\n    getMonthFullName(month) { return this._monthsFull[month - 1]; }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayAriaLabel(date) {\n        /** @type {?} */\n        const jsDate = new Date(date.year, date.month - 1, date.day);\n        return formatDate(jsDate, 'fullDate', this._locale);\n    }\n}\nNgbDatepickerI18nDefault.ɵfac = function NgbDatepickerI18nDefault_Factory(t) { return new (t || NgbDatepickerI18nDefault)(ɵngcc0.ɵɵinject(LOCALE_ID)); };\nNgbDatepickerI18nDefault.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbDatepickerI18nDefault, factory: NgbDatepickerI18nDefault.ɵfac });\n/** @nocollapse */\nNgbDatepickerI18nDefault.ctorParameters = () => [\n    { type: String, decorators: [{ type: Inject, args: [LOCALE_ID,] }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDatepickerI18nDefault, [{\n        type: Injectable\n    }], function () { return [{ type: String, decorators: [{\n                type: Inject,\n                args: [LOCALE_ID]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbDatepickerService {\n    /**\n     * @param {?} _calendar\n     * @param {?} _i18n\n     */\n    constructor(_calendar, _i18n) {\n        this._calendar = _calendar;\n        this._i18n = _i18n;\n        this._model$ = new Subject();\n        this._select$ = new Subject();\n        this._state = {\n            disabled: false,\n            displayMonths: 1,\n            firstDayOfWeek: 1,\n            focusVisible: false,\n            months: [],\n            navigation: 'select',\n            outsideDays: 'visible',\n            prevDisabled: false,\n            nextDisabled: false,\n            selectBoxes: { years: [], months: [] },\n            selectedDate: null\n        };\n    }\n    /**\n     * @return {?}\n     */\n    get model$() { return this._model$.pipe(filter(model => model.months.length > 0)); }\n    /**\n     * @return {?}\n     */\n    get select$() { return this._select$.pipe(filter(date => date !== null)); }\n    /**\n     * @param {?} dayTemplateData\n     * @return {?}\n     */\n    set dayTemplateData(dayTemplateData) {\n        if (this._state.dayTemplateData !== dayTemplateData) {\n            this._nextState({ dayTemplateData });\n        }\n    }\n    /**\n     * @param {?} disabled\n     * @return {?}\n     */\n    set disabled(disabled) {\n        if (this._state.disabled !== disabled) {\n            this._nextState({ disabled });\n        }\n    }\n    /**\n     * @param {?} displayMonths\n     * @return {?}\n     */\n    set displayMonths(displayMonths) {\n        displayMonths = toInteger(displayMonths);\n        if (isInteger(displayMonths) && displayMonths > 0 && this._state.displayMonths !== displayMonths) {\n            this._nextState({ displayMonths });\n        }\n    }\n    /**\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    set firstDayOfWeek(firstDayOfWeek) {\n        firstDayOfWeek = toInteger(firstDayOfWeek);\n        if (isInteger(firstDayOfWeek) && firstDayOfWeek >= 0 && this._state.firstDayOfWeek !== firstDayOfWeek) {\n            this._nextState({ firstDayOfWeek });\n        }\n    }\n    /**\n     * @param {?} focusVisible\n     * @return {?}\n     */\n    set focusVisible(focusVisible) {\n        if (this._state.focusVisible !== focusVisible && !this._state.disabled) {\n            this._nextState({ focusVisible });\n        }\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    set maxDate(date) {\n        /** @type {?} */\n        const maxDate = this.toValidDate(date, null);\n        if (isChangedDate(this._state.maxDate, maxDate)) {\n            this._nextState({ maxDate });\n        }\n    }\n    /**\n     * @param {?} markDisabled\n     * @return {?}\n     */\n    set markDisabled(markDisabled) {\n        if (this._state.markDisabled !== markDisabled) {\n            this._nextState({ markDisabled });\n        }\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    set minDate(date) {\n        /** @type {?} */\n        const minDate = this.toValidDate(date, null);\n        if (isChangedDate(this._state.minDate, minDate)) {\n            this._nextState({ minDate });\n        }\n    }\n    /**\n     * @param {?} navigation\n     * @return {?}\n     */\n    set navigation(navigation) {\n        if (this._state.navigation !== navigation) {\n            this._nextState({ navigation });\n        }\n    }\n    /**\n     * @param {?} outsideDays\n     * @return {?}\n     */\n    set outsideDays(outsideDays) {\n        if (this._state.outsideDays !== outsideDays) {\n            this._nextState({ outsideDays });\n        }\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    focus(date) {\n        if (!this._state.disabled && this._calendar.isValid(date) && isChangedDate(this._state.focusDate, date)) {\n            this._nextState({ focusDate: date });\n        }\n    }\n    /**\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    focusMove(period, number) {\n        this.focus(this._calendar.getNext(this._state.focusDate, period, number));\n    }\n    /**\n     * @return {?}\n     */\n    focusSelect() {\n        if (isDateSelectable(this._state.focusDate, this._state)) {\n            this.select(this._state.focusDate, { emitEvent: true });\n        }\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    open(date) {\n        /** @type {?} */\n        const firstDate = this.toValidDate(date, this._calendar.getToday());\n        if (!this._state.disabled && (!this._state.firstDate || isChangedMonth(this._state.firstDate, date))) {\n            this._nextState({ firstDate });\n        }\n    }\n    /**\n     * @param {?} date\n     * @param {?=} options\n     * @return {?}\n     */\n    select(date, options = {}) {\n        /** @type {?} */\n        const selectedDate = this.toValidDate(date, null);\n        if (!this._state.disabled) {\n            if (isChangedDate(this._state.selectedDate, selectedDate)) {\n                this._nextState({ selectedDate });\n            }\n            if (options.emitEvent && isDateSelectable(selectedDate, this._state)) {\n                this._select$.next(selectedDate);\n            }\n        }\n    }\n    /**\n     * @param {?} date\n     * @param {?=} defaultValue\n     * @return {?}\n     */\n    toValidDate(date, defaultValue) {\n        /** @type {?} */\n        const ngbDate = NgbDate.from(date);\n        if (defaultValue === undefined) {\n            defaultValue = this._calendar.getToday();\n        }\n        return this._calendar.isValid(ngbDate) ? ngbDate : defaultValue;\n    }\n    /**\n     * @param {?} patch\n     * @return {?}\n     */\n    _nextState(patch) {\n        /** @type {?} */\n        const newState = this._updateState(patch);\n        this._patchContexts(newState);\n        this._state = newState;\n        this._model$.next(this._state);\n    }\n    /**\n     * @param {?} state\n     * @return {?}\n     */\n    _patchContexts(state) {\n        const { months, displayMonths, selectedDate, focusDate, focusVisible, disabled, outsideDays } = state;\n        state.months.forEach(month => {\n            month.weeks.forEach(week => {\n                week.days.forEach(day => {\n                    // patch focus flag\n                    if (focusDate) {\n                        day.context.focused = focusDate.equals(day.date) && focusVisible;\n                    }\n                    // calculating tabindex\n                    day.tabindex = !disabled && day.date.equals(focusDate) && focusDate.month === month.number ? 0 : -1;\n                    // override context disabled\n                    if (disabled === true) {\n                        day.context.disabled = true;\n                    }\n                    // patch selection flag\n                    if (selectedDate !== undefined) {\n                        day.context.selected = selectedDate !== null && selectedDate.equals(day.date);\n                    }\n                    // visibility\n                    if (month.number !== day.date.month) {\n                        day.hidden = outsideDays === 'hidden' || outsideDays === 'collapsed' ||\n                            (displayMonths > 1 && day.date.after(months[0].firstDate) &&\n                                day.date.before(months[displayMonths - 1].lastDate));\n                    }\n                });\n            });\n        });\n    }\n    /**\n     * @param {?} patch\n     * @return {?}\n     */\n    _updateState(patch) {\n        // patching fields\n        /** @type {?} */\n        const state = Object.assign({}, this._state, patch);\n        /** @type {?} */\n        let startDate = state.firstDate;\n        // min/max dates changed\n        if ('minDate' in patch || 'maxDate' in patch) {\n            checkMinBeforeMax(state.minDate, state.maxDate);\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n        }\n        // disabled\n        if ('disabled' in patch) {\n            state.focusVisible = false;\n        }\n        // initial rebuild via 'select()'\n        if ('selectedDate' in patch && this._state.months.length === 0) {\n            startDate = state.selectedDate;\n        }\n        // terminate early if only focus visibility was changed\n        if ('focusVisible' in patch) {\n            return state;\n        }\n        // focus date changed\n        if ('focusDate' in patch) {\n            state.focusDate = checkDateInRange(state.focusDate, state.minDate, state.maxDate);\n            startDate = state.focusDate;\n            // nothing to rebuild if only focus changed and it is still visible\n            if (state.months.length !== 0 && !state.focusDate.before(state.firstDate) &&\n                !state.focusDate.after(state.lastDate)) {\n                return state;\n            }\n        }\n        // first date changed\n        if ('firstDate' in patch) {\n            state.firstDate = checkDateInRange(state.firstDate, state.minDate, state.maxDate);\n            startDate = state.firstDate;\n        }\n        // rebuilding months\n        if (startDate) {\n            /** @type {?} */\n            const forceRebuild = 'dayTemplateData' in patch || 'firstDayOfWeek' in patch || 'markDisabled' in patch ||\n                'minDate' in patch || 'maxDate' in patch || 'disabled' in patch || 'outsideDays' in patch;\n            /** @type {?} */\n            const months = buildMonths(this._calendar, startDate, state, this._i18n, forceRebuild);\n            // updating months and boundary dates\n            state.months = months;\n            state.firstDate = months.length > 0 ? months[0].firstDate : undefined;\n            state.lastDate = months.length > 0 ? months[months.length - 1].lastDate : undefined;\n            // reset selected date if 'markDisabled' returns true\n            if ('selectedDate' in patch && !isDateSelectable(state.selectedDate, state)) {\n                state.selectedDate = null;\n            }\n            // adjusting focus after months were built\n            if ('firstDate' in patch) {\n                if (state.focusDate === undefined || state.focusDate.before(state.firstDate) ||\n                    state.focusDate.after(state.lastDate)) {\n                    state.focusDate = startDate;\n                }\n            }\n            // adjusting months/years for the select box navigation\n            /** @type {?} */\n            const yearChanged = !this._state.firstDate || this._state.firstDate.year !== state.firstDate.year;\n            /** @type {?} */\n            const monthChanged = !this._state.firstDate || this._state.firstDate.month !== state.firstDate.month;\n            if (state.navigation === 'select') {\n                // years ->  boundaries (min/max were changed)\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.years.length === 0 || yearChanged) {\n                    state.selectBoxes.years = generateSelectBoxYears(state.firstDate, state.minDate, state.maxDate);\n                }\n                // months -> when current year or boundaries change\n                if ('minDate' in patch || 'maxDate' in patch || state.selectBoxes.months.length === 0 || yearChanged) {\n                    state.selectBoxes.months =\n                        generateSelectBoxMonths(this._calendar, state.firstDate, state.minDate, state.maxDate);\n                }\n            }\n            else {\n                state.selectBoxes = { years: [], months: [] };\n            }\n            // updating navigation arrows -> boundaries change (min/max) or month/year changes\n            if ((state.navigation === 'arrows' || state.navigation === 'select') &&\n                (monthChanged || yearChanged || 'minDate' in patch || 'maxDate' in patch || 'disabled' in patch)) {\n                state.prevDisabled = state.disabled || prevMonthDisabled(this._calendar, state.firstDate, state.minDate);\n                state.nextDisabled = state.disabled || nextMonthDisabled(this._calendar, state.lastDate, state.maxDate);\n            }\n        }\n        return state;\n    }\n}\nNgbDatepickerService.ɵfac = function NgbDatepickerService_Factory(t) { return new (t || NgbDatepickerService)(ɵngcc0.ɵɵinject(NgbCalendar), ɵngcc0.ɵɵinject(NgbDatepickerI18n)); };\nNgbDatepickerService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbDatepickerService, factory: NgbDatepickerService.ɵfac });\n/** @nocollapse */\nNgbDatepickerService.ctorParameters = () => [\n    { type: NgbCalendar },\n    { type: NgbDatepickerI18n }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDatepickerService, [{\n        type: Injectable\n    }], function () { return [{ type: NgbCalendar }, { type: NgbDatepickerI18n }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst Key = {\n    Tab: 9,\n    Enter: 13,\n    Escape: 27,\n    Space: 32,\n    PageUp: 33,\n    PageDown: 34,\n    End: 35,\n    Home: 36,\n    ArrowLeft: 37,\n    ArrowUp: 38,\n    ArrowRight: 39,\n    ArrowDown: 40,\n};\nKey[Key.Tab] = 'Tab';\nKey[Key.Enter] = 'Enter';\nKey[Key.Escape] = 'Escape';\nKey[Key.Space] = 'Space';\nKey[Key.PageUp] = 'PageUp';\nKey[Key.PageDown] = 'PageDown';\nKey[Key.End] = 'End';\nKey[Key.Home] = 'Home';\nKey[Key.ArrowLeft] = 'ArrowLeft';\nKey[Key.ArrowUp] = 'ArrowUp';\nKey[Key.ArrowRight] = 'ArrowRight';\nKey[Key.ArrowDown] = 'ArrowDown';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbDatepickerKeyMapService {\n    /**\n     * @param {?} _service\n     * @param {?} _calendar\n     */\n    constructor(_service, _calendar) {\n        this._service = _service;\n        this._calendar = _calendar;\n        _service.model$.subscribe(model => {\n            this._minDate = model.minDate;\n            this._maxDate = model.maxDate;\n            this._firstViewDate = model.firstDate;\n            this._lastViewDate = model.lastDate;\n        });\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    processKey(event) {\n        // tslint:disable-next-line:deprecation\n        switch (event.which) {\n            case Key.PageUp:\n                this._service.focusMove(event.shiftKey ? 'y' : 'm', -1);\n                break;\n            case Key.PageDown:\n                this._service.focusMove(event.shiftKey ? 'y' : 'm', 1);\n                break;\n            case Key.End:\n                this._service.focus(event.shiftKey ? this._maxDate : this._lastViewDate);\n                break;\n            case Key.Home:\n                this._service.focus(event.shiftKey ? this._minDate : this._firstViewDate);\n                break;\n            case Key.ArrowLeft:\n                this._service.focusMove('d', -1);\n                break;\n            case Key.ArrowUp:\n                this._service.focusMove('d', -this._calendar.getDaysPerWeek());\n                break;\n            case Key.ArrowRight:\n                this._service.focusMove('d', 1);\n                break;\n            case Key.ArrowDown:\n                this._service.focusMove('d', this._calendar.getDaysPerWeek());\n                break;\n            case Key.Enter:\n            case Key.Space:\n                this._service.focusSelect();\n                break;\n            default:\n                return;\n        }\n        // note 'return' in default case\n        event.preventDefault();\n        event.stopPropagation();\n    }\n}\nNgbDatepickerKeyMapService.ɵfac = function NgbDatepickerKeyMapService_Factory(t) { return new (t || NgbDatepickerKeyMapService)(ɵngcc0.ɵɵinject(NgbDatepickerService), ɵngcc0.ɵɵinject(NgbCalendar)); };\nNgbDatepickerKeyMapService.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbDatepickerKeyMapService, factory: NgbDatepickerKeyMapService.ɵfac });\n/** @nocollapse */\nNgbDatepickerKeyMapService.ctorParameters = () => [\n    { type: NgbDatepickerService },\n    { type: NgbCalendar }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDatepickerKeyMapService, [{\n        type: Injectable\n    }], function () { return [{ type: NgbDatepickerService }, { type: NgbCalendar }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst NavigationEvent = {\n    PREV: 0,\n    NEXT: 1,\n};\nNavigationEvent[NavigationEvent.PREV] = 'PREV';\nNavigationEvent[NavigationEvent.NEXT] = 'NEXT';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbDatepicker`](#/components/datepicker/api#NgbDatepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the datepickers used in the application.\n */\nclass NgbDatepickerConfig {\n    constructor() {\n        this.displayMonths = 1;\n        this.firstDayOfWeek = 1;\n        this.navigation = 'select';\n        this.outsideDays = 'visible';\n        this.showWeekdays = true;\n        this.showWeekNumbers = false;\n    }\n}\nNgbDatepickerConfig.ɵfac = function NgbDatepickerConfig_Factory(t) { return new (t || NgbDatepickerConfig)(); };\nNgbDatepickerConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbDatepickerConfig, factory: NgbDatepickerConfig.ɵfac, providedIn: 'root' });\n/** @nocollapse */ NgbDatepickerConfig.ngInjectableDef = defineInjectable({ factory: function NgbDatepickerConfig_Factory() { return new NgbDatepickerConfig(); }, token: NgbDatepickerConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDatepickerConfig, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction NGB_DATEPICKER_DATE_ADAPTER_FACTORY() {\n    return new NgbDateStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal datepicker `NgbDateStruct` model and\n * any provided user date model `D`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding datepicker to a form control,\n * ex. `[(ngModel)]=\"userDateModel\"`. Here `userDateModel` can be of any type.\n *\n * The default datepicker implementation assumes we use `NgbDateStruct` as a user model.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details\n * and the [custom adapter demo](#/components/datepicker/examples#adapter) for an example.\n * @abstract\n * @template D\n */\nclass NgbDateAdapter {\n}\nNgbDateAdapter.ɵfac = function NgbDateAdapter_Factory(t) { return new (t || NgbDateAdapter)(); };\nNgbDateAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbDateAdapter, factory: function () { return NGB_DATEPICKER_DATE_ADAPTER_FACTORY(); }, providedIn: 'root' });\n/** @nocollapse */ NgbDateAdapter.ngInjectableDef = defineInjectable({ factory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY, token: NgbDateAdapter, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDateAdapter, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_DATE_ADAPTER_FACTORY }]\n    }], null, null); })();\nclass NgbDateStructAdapter extends NgbDateAdapter {\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     * @param {?} date\n     * @return {?}\n     */\n    fromModel(date) {\n        return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n            { year: date.year, month: date.month, day: date.day } :\n            null;\n    }\n    /**\n     * Converts a NgbDateStruct value into NgbDateStruct value\n     * @param {?} date\n     * @return {?}\n     */\n    toModel(date) {\n        return (date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day)) ?\n            { year: date.year, month: date.month, day: date.day } :\n            null;\n    }\n}\nNgbDateStructAdapter.ɵfac = function NgbDateStructAdapter_Factory(t) { return ɵNgbDateStructAdapter_BaseFactory(t || NgbDateStructAdapter); };\nNgbDateStructAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbDateStructAdapter, factory: NgbDateStructAdapter.ɵfac });\nconst ɵNgbDateStructAdapter_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(NgbDateStructAdapter);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDateStructAdapter, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_DATEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgbDatepicker),\n    multi: true\n};\n/**\n * A highly configurable component that helps you with selecting calendar dates.\n *\n * `NgbDatepicker` is meant to be displayed inline on a page or put inside a popup.\n */\nclass NgbDatepicker {\n    /**\n     * @param {?} _keyMapService\n     * @param {?} _service\n     * @param {?} _calendar\n     * @param {?} i18n\n     * @param {?} config\n     * @param {?} _cd\n     * @param {?} _elementRef\n     * @param {?} _ngbDateAdapter\n     * @param {?} _ngZone\n     */\n    constructor(_keyMapService, _service, _calendar, i18n, config, _cd, _elementRef, _ngbDateAdapter, _ngZone) {\n        this._keyMapService = _keyMapService;\n        this._service = _service;\n        this._calendar = _calendar;\n        this.i18n = i18n;\n        this._cd = _cd;\n        this._elementRef = _elementRef;\n        this._ngbDateAdapter = _ngbDateAdapter;\n        this._ngZone = _ngZone;\n        this._destroyed$ = new Subject();\n        /**\n         * An event emitted right before the navigation happens and displayed month changes.\n         *\n         * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n         */\n        this.navigate = new EventEmitter();\n        /**\n         * An event emitted when user selects a date using keyboard or mouse.\n         *\n         * The payload of the event is currently selected `NgbDate`.\n         */\n        this.select = new EventEmitter();\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n        ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n            'maxDate', 'navigation', 'outsideDays', 'showWeekdays', 'showWeekNumbers', 'startDate']\n            .forEach(input => this[input] = config[input]);\n        _service.select$.pipe(takeUntil(this._destroyed$)).subscribe(date => { this.select.emit(date); });\n        _service.model$.pipe(takeUntil(this._destroyed$)).subscribe(model => {\n            /** @type {?} */\n            const newDate = model.firstDate;\n            /** @type {?} */\n            const oldDate = this.model ? this.model.firstDate : null;\n            /** @type {?} */\n            let navigationPrevented = false;\n            // emitting navigation event if the first month changes\n            if (!newDate.equals(oldDate)) {\n                this.navigate.emit({\n                    current: oldDate ? { year: oldDate.year, month: oldDate.month } : null,\n                    next: { year: newDate.year, month: newDate.month },\n                    preventDefault: () => navigationPrevented = true\n                });\n                // can't prevent the very first navigation\n                if (navigationPrevented && oldDate !== null) {\n                    this._service.open(oldDate);\n                    return;\n                }\n            }\n            /** @type {?} */\n            const newSelectedDate = model.selectedDate;\n            /** @type {?} */\n            const newFocusedDate = model.focusDate;\n            /** @type {?} */\n            const oldFocusedDate = this.model ? this.model.focusDate : null;\n            this.model = model;\n            // handling selection change\n            if (isChangedDate(newSelectedDate, this._controlValue)) {\n                this._controlValue = newSelectedDate;\n                this.onTouched();\n                this.onChange(this._ngbDateAdapter.toModel(newSelectedDate));\n            }\n            // handling focus change\n            if (isChangedDate(newFocusedDate, oldFocusedDate) && oldFocusedDate && model.focusVisible) {\n                this.focus();\n            }\n            _cd.markForCheck();\n        });\n    }\n    /**\n     * @return {?}\n     */\n    focus() {\n        this._ngZone.onStable.asObservable().pipe(take(1)).subscribe(() => {\n            /** @type {?} */\n            const elementToFocus = this._elementRef.nativeElement.querySelector('div.ngb-dp-day[tabindex=\"0\"]');\n            if (elementToFocus) {\n                elementToFocus.focus();\n            }\n        });\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     * @param {?=} date\n     * @return {?}\n     */\n    navigateTo(date) {\n        this._service.open(NgbDate.from(date ? date.day ? (/** @type {?} */ (date)) : Object.assign({}, date, { day: 1 }) : null));\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        this._ngZone.runOutsideAngular(() => {\n            /** @type {?} */\n            const focusIns$ = fromEvent(this._monthsEl.nativeElement, 'focusin');\n            /** @type {?} */\n            const focusOuts$ = fromEvent(this._monthsEl.nativeElement, 'focusout');\n            // we're changing 'focusVisible' only when entering or leaving months view\n            // and ignoring all focus events where both 'target' and 'related' target are day cells\n            merge(focusIns$, focusOuts$)\n                .pipe(filter(({ target, relatedTarget }) => !(hasClassName(target, 'ngb-dp-day') && hasClassName(relatedTarget, 'ngb-dp-day'))), takeUntil(this._destroyed$))\n                .subscribe(({ type }) => this._ngZone.run(() => this._service.focusVisible = type === 'focusin'));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() { this._destroyed$.next(); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        if (this.model === undefined) {\n            ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n                'outsideDays']\n                .forEach(input => this._service[input] = this[input]);\n            this.navigateTo(this.startDate);\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        ['dayTemplateData', 'displayMonths', 'markDisabled', 'firstDayOfWeek', 'navigation', 'minDate', 'maxDate',\n            'outsideDays']\n            .filter(input => input in changes)\n            .forEach(input => this._service[input] = this[input]);\n        if ('startDate' in changes) {\n            const { currentValue, previousValue } = changes.startDate;\n            if (isChangedMonth(previousValue, currentValue)) {\n                this.navigateTo(this.startDate);\n            }\n        }\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    onDateSelect(date) {\n        this._service.focus(date);\n        this._service.select(date, { emitEvent: true });\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) { this._keyMapService.processKey(event); }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    onNavigateDateSelect(date) { this._service.open(date); }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onNavigateEvent(event) {\n        switch (event) {\n            case NavigationEvent.PREV:\n                this._service.open(this._calendar.getPrev(this.model.firstDate, 'm', 1));\n                break;\n            case NavigationEvent.NEXT:\n                this._service.open(this._calendar.getNext(this.model.firstDate, 'm', 1));\n                break;\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) { this.onChange = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) { this._service.disabled = isDisabled; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._controlValue = NgbDate.from(this._ngbDateAdapter.fromModel(value));\n        this._service.select(this._controlValue);\n    }\n}\nNgbDatepicker.ɵfac = function NgbDatepicker_Factory(t) { return new (t || NgbDatepicker)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerKeyMapService), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerService), ɵngcc0.ɵɵdirectiveInject(NgbCalendar), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerConfig), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(NgbDateAdapter), ɵngcc0.ɵɵdirectiveInject(NgZone)); };\nNgbDatepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbDatepicker, selectors: [[\"ngb-datepicker\"]], viewQuery: function NgbDatepicker_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c8, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._monthsEl = _t.first);\n    } }, inputs: { dayTemplate: \"dayTemplate\", dayTemplateData: \"dayTemplateData\", displayMonths: \"displayMonths\", firstDayOfWeek: \"firstDayOfWeek\", footerTemplate: \"footerTemplate\", markDisabled: \"markDisabled\", maxDate: \"maxDate\", minDate: \"minDate\", navigation: \"navigation\", outsideDays: \"outsideDays\", showWeekdays: \"showWeekdays\", showWeekNumbers: \"showWeekNumbers\", startDate: \"startDate\" }, outputs: { navigate: \"navigate\", select: \"select\" }, exportAs: [\"ngbDatepicker\"], features: [ɵngcc0.ɵɵProvidersFeature([NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService, NgbDatepickerKeyMapService]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 8, vars: 3, consts: [[\"dt\", \"\"], [1, \"ngb-dp-header\", \"bg-light\"], [3, \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\", \"navigate\", \"select\", 4, \"ngIf\"], [1, \"ngb-dp-months\", 3, \"keydown\"], [\"months\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"ngTemplateOutlet\"], [\"ngbDatepickerDayView\", \"\", 3, \"date\", \"currentMonth\", \"selected\", \"disabled\", \"focused\"], [3, \"date\", \"months\", \"disabled\", \"showSelect\", \"prevDisabled\", \"nextDisabled\", \"selectBoxes\", \"navigate\", \"select\"], [1, \"ngb-dp-month\"], [\"class\", \"ngb-dp-month-name bg-light\", 4, \"ngIf\"], [3, \"month\", \"dayTemplate\", \"showWeekdays\", \"showWeekNumbers\", \"select\"], [1, \"ngb-dp-month-name\", \"bg-light\"]], template: function NgbDatepicker_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgbDatepicker_ng_template_0_Template, 1, 5, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(3, NgbDatepicker_ngb_datepicker_navigation_3_Template, 1, 7, \"ngb-datepicker-navigation\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(4, \"div\", 3, 4);\n        ɵngcc0.ɵɵlistener(\"keydown\", function NgbDatepicker_Template_div_keydown_4_listener($event) { return ctx.onKeyDown($event); });\n        ɵngcc0.ɵɵtemplate(6, NgbDatepicker_ng_template_6_Template, 3, 5, \"ng-template\", 5);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(7, NgbDatepicker_ng_template_7_Template, 0, 0, \"ng-template\", 6);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.navigation !== \"none\");\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.model.months);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.footerTemplate);\n    } }, directives: function () { return [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet, NgbDatepickerDayView, NgbDatepickerNavigation, NgbDatepickerMonthView]; }, styles: [\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month-view{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1050}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem}.ngb-dp-months{display:-ms-flexbox;display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nNgbDatepicker.ctorParameters = () => [\n    { type: NgbDatepickerKeyMapService },\n    { type: NgbDatepickerService },\n    { type: NgbCalendar },\n    { type: NgbDatepickerI18n },\n    { type: NgbDatepickerConfig },\n    { type: ChangeDetectorRef },\n    { type: ElementRef },\n    { type: NgbDateAdapter },\n    { type: NgZone }\n];\nNgbDatepicker.propDecorators = {\n    _monthsEl: [{ type: ViewChild, args: ['months',] }],\n    dayTemplate: [{ type: Input }],\n    dayTemplateData: [{ type: Input }],\n    displayMonths: [{ type: Input }],\n    firstDayOfWeek: [{ type: Input }],\n    footerTemplate: [{ type: Input }],\n    markDisabled: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    minDate: [{ type: Input }],\n    navigation: [{ type: Input }],\n    outsideDays: [{ type: Input }],\n    showWeekdays: [{ type: Input }],\n    showWeekNumbers: [{ type: Input }],\n    startDate: [{ type: Input }],\n    navigate: [{ type: Output }],\n    select: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDatepicker, [{\n        type: Component,\n        args: [{\n                exportAs: 'ngbDatepicker',\n                selector: 'ngb-datepicker',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <ng-template #dt let-date=\"date\" let-currentMonth=\"currentMonth\" let-selected=\"selected\" let-disabled=\"disabled\" let-focused=\"focused\">\n      <div ngbDatepickerDayView\n        [date]=\"date\"\n        [currentMonth]=\"currentMonth\"\n        [selected]=\"selected\"\n        [disabled]=\"disabled\"\n        [focused]=\"focused\">\n      </div>\n    </ng-template>\n\n    <div class=\"ngb-dp-header bg-light\">\n      <ngb-datepicker-navigation *ngIf=\"navigation !== 'none'\"\n        [date]=\"model.firstDate\"\n        [months]=\"model.months\"\n        [disabled]=\"model.disabled\"\n        [showSelect]=\"model.navigation === 'select'\"\n        [prevDisabled]=\"model.prevDisabled\"\n        [nextDisabled]=\"model.nextDisabled\"\n        [selectBoxes]=\"model.selectBoxes\"\n        (navigate)=\"onNavigateEvent($event)\"\n        (select)=\"onNavigateDateSelect($event)\">\n      </ngb-datepicker-navigation>\n    </div>\n\n    <div #months class=\"ngb-dp-months\" (keydown)=\"onKeyDown($event)\">\n      <ng-template ngFor let-month [ngForOf]=\"model.months\" let-i=\"index\">\n        <div class=\"ngb-dp-month\">\n          <div *ngIf=\"navigation === 'none' || (displayMonths > 1 && navigation === 'select')\"\n                class=\"ngb-dp-month-name bg-light\">\n            {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n          </div>\n          <ngb-datepicker-month-view\n            [month]=\"month\"\n            [dayTemplate]=\"dayTemplate || dt\"\n            [showWeekdays]=\"showWeekdays\"\n            [showWeekNumbers]=\"showWeekNumbers\"\n            (select)=\"onDateSelect($event)\">\n          </ngb-datepicker-month-view>\n        </div>\n      </ng-template>\n    </div>\n\n    <ng-template [ngTemplateOutlet]=\"footerTemplate\"></ng-template>\n  `,\n                providers: [NGB_DATEPICKER_VALUE_ACCESSOR, NgbDatepickerService, NgbDatepickerKeyMapService],\n                styles: [\"ngb-datepicker{border:1px solid #dfdfdf;border-radius:.25rem;display:inline-block}ngb-datepicker-month-view{pointer-events:auto}ngb-datepicker.dropdown-menu{padding:0}.ngb-dp-body{z-index:1050}.ngb-dp-header{border-bottom:0;border-radius:.25rem .25rem 0 0;padding-top:.25rem}.ngb-dp-months{display:-ms-flexbox;display:flex}.ngb-dp-month{pointer-events:none}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-month+.ngb-dp-month .ngb-dp-month-name,.ngb-dp-month+.ngb-dp-month .ngb-dp-week{padding-left:1rem}.ngb-dp-month:last-child .ngb-dp-week{padding-right:.25rem}.ngb-dp-month:first-child .ngb-dp-week{padding-left:.25rem}.ngb-dp-month .ngb-dp-week:last-child{padding-bottom:.25rem}\"]\n            }]\n    }], function () { return [{ type: NgbDatepickerKeyMapService }, { type: NgbDatepickerService }, { type: NgbCalendar }, { type: NgbDatepickerI18n }, { type: NgbDatepickerConfig }, { type: ChangeDetectorRef }, { type: ElementRef }, { type: NgbDateAdapter }, { type: NgZone }]; }, { navigate: [{\n            type: Output\n        }], select: [{\n            type: Output\n        }], _monthsEl: [{\n            type: ViewChild,\n            args: ['months']\n        }], dayTemplate: [{\n            type: Input\n        }], dayTemplateData: [{\n            type: Input\n        }], displayMonths: [{\n            type: Input\n        }], firstDayOfWeek: [{\n            type: Input\n        }], footerTemplate: [{\n            type: Input\n        }], markDisabled: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], navigation: [{\n            type: Input\n        }], outsideDays: [{\n            type: Input\n        }], showWeekdays: [{\n            type: Input\n        }], showWeekNumbers: [{\n            type: Input\n        }], startDate: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbDatepickerMonthView {\n    /**\n     * @param {?} i18n\n     */\n    constructor(i18n) {\n        this.i18n = i18n;\n        this.select = new EventEmitter();\n    }\n    /**\n     * @param {?} day\n     * @return {?}\n     */\n    doSelect(day) {\n        if (!day.context.disabled && !day.hidden) {\n            this.select.emit(day.date);\n        }\n    }\n}\nNgbDatepickerMonthView.ɵfac = function NgbDatepickerMonthView_Factory(t) { return new (t || NgbDatepickerMonthView)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n)); };\nNgbDatepickerMonthView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbDatepickerMonthView, selectors: [[\"ngb-datepicker-month-view\"]], hostAttrs: [\"role\", \"grid\"], inputs: { dayTemplate: \"dayTemplate\", month: \"month\", showWeekdays: \"showWeekdays\", showWeekNumbers: \"showWeekNumbers\" }, outputs: { select: \"select\" }, decls: 2, vars: 2, consts: [[\"class\", \"ngb-dp-week ngb-dp-weekdays bg-light\", 4, \"ngIf\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"ngb-dp-week\", \"ngb-dp-weekdays\", \"bg-light\"], [\"class\", \"ngb-dp-weekday ngb-dp-showweek\", 4, \"ngIf\"], [\"class\", \"ngb-dp-weekday small\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-weekday\", \"ngb-dp-showweek\"], [1, \"ngb-dp-weekday\", \"small\"], [\"class\", \"ngb-dp-week\", \"role\", \"row\", 4, \"ngIf\"], [\"role\", \"row\", 1, \"ngb-dp-week\"], [\"class\", \"ngb-dp-week-number small text-muted\", 4, \"ngIf\"], [\"class\", \"ngb-dp-day\", \"role\", \"gridcell\", 3, \"disabled\", \"tabindex\", \"hidden\", \"ngb-dp-today\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"ngb-dp-week-number\", \"small\", \"text-muted\"], [\"role\", \"gridcell\", 1, \"ngb-dp-day\", 3, \"tabindex\", \"click\"], [3, \"ngIf\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]], template: function NgbDatepickerMonthView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgbDatepickerMonthView_div_0_Template, 3, 2, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, NgbDatepickerMonthView_ng_template_1_Template, 1, 1, \"ng-template\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showWeekdays);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.month.weeks);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet], styles: [\"ngb-datepicker-month-view{display:block}.ngb-dp-week-number,.ngb-dp-weekday{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:-ms-flexbox;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default}\"], encapsulation: 2 });\n/** @nocollapse */\nNgbDatepickerMonthView.ctorParameters = () => [\n    { type: NgbDatepickerI18n }\n];\nNgbDatepickerMonthView.propDecorators = {\n    dayTemplate: [{ type: Input }],\n    month: [{ type: Input }],\n    showWeekdays: [{ type: Input }],\n    showWeekNumbers: [{ type: Input }],\n    select: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDatepickerMonthView, [{\n        type: Component,\n        args: [{\n                selector: 'ngb-datepicker-month-view',\n                host: { 'role': 'grid' },\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <div *ngIf=\"showWeekdays\" class=\"ngb-dp-week ngb-dp-weekdays bg-light\">\n      <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-weekday ngb-dp-showweek\"></div>\n      <div *ngFor=\"let w of month.weekdays\" class=\"ngb-dp-weekday small\">\n        {{ i18n.getWeekdayShortName(w) }}\n      </div>\n    </div>\n    <ng-template ngFor let-week [ngForOf]=\"month.weeks\">\n      <div *ngIf=\"!week.collapsed\" class=\"ngb-dp-week\" role=\"row\">\n        <div *ngIf=\"showWeekNumbers\" class=\"ngb-dp-week-number small text-muted\">{{ i18n.getWeekNumerals(week.number) }}</div>\n        <div *ngFor=\"let day of week.days\" (click)=\"doSelect(day)\" class=\"ngb-dp-day\" role=\"gridcell\"\n          [class.disabled]=\"day.context.disabled\"\n          [tabindex]=\"day.tabindex\"\n          [class.hidden]=\"day.hidden\"\n          [class.ngb-dp-today]=\"day.context.today\"\n          [attr.aria-label]=\"day.ariaLabel\">\n          <ng-template [ngIf]=\"!day.hidden\">\n            <ng-template [ngTemplateOutlet]=\"dayTemplate\" [ngTemplateOutletContext]=\"day.context\"></ng-template>\n          </ng-template>\n        </div>\n      </div>\n    </ng-template>\n  `,\n                styles: [\"ngb-datepicker-month-view{display:block}.ngb-dp-week-number,.ngb-dp-weekday{line-height:2rem;text-align:center;font-style:italic}.ngb-dp-weekday{color:#5bc0de;color:var(--info)}.ngb-dp-week{border-radius:.25rem;display:-ms-flexbox;display:flex}.ngb-dp-weekdays{border-bottom:1px solid rgba(0,0,0,.125);border-radius:0}.ngb-dp-day,.ngb-dp-week-number,.ngb-dp-weekday{width:2rem;height:2rem}.ngb-dp-day{cursor:pointer}.ngb-dp-day.disabled,.ngb-dp-day.hidden{cursor:default}\"]\n            }]\n    }], function () { return [{ type: NgbDatepickerI18n }]; }, { select: [{\n            type: Output\n        }], dayTemplate: [{\n            type: Input\n        }], month: [{\n            type: Input\n        }], showWeekdays: [{\n            type: Input\n        }], showWeekNumbers: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbDatepickerNavigation {\n    /**\n     * @param {?} i18n\n     */\n    constructor(i18n) {\n        this.i18n = i18n;\n        this.navigation = NavigationEvent;\n        this.months = [];\n        this.navigate = new EventEmitter();\n        this.select = new EventEmitter();\n    }\n}\nNgbDatepickerNavigation.ɵfac = function NgbDatepickerNavigation_Factory(t) { return new (t || NgbDatepickerNavigation)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n)); };\nNgbDatepickerNavigation.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbDatepickerNavigation, selectors: [[\"ngb-datepicker-navigation\"]], inputs: { months: \"months\", date: \"date\", disabled: \"disabled\", showSelect: \"showSelect\", prevDisabled: \"prevDisabled\", nextDisabled: \"nextDisabled\", selectBoxes: \"selectBoxes\" }, outputs: { navigate: \"navigate\", select: \"select\" }, decls: 10, vars: 4, consts: function () { var i18n_9; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_10 = goog.getMsg(\"Previous month\");\n        i18n_9 = MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_10;\n    }\n    else {\n        i18n_9 = $localize `:@@ngb.datepicker.previous-month␟c3b08b07b5ab98e7cdcf18df39355690ab7d3884␟8586908745456864217:Previous month`;\n    } var i18n_11; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_12 = goog.getMsg(\"Previous month\");\n        i18n_11 = MSG_EXTERNAL_ngb_datepicker_previous_month$$FESM2015_NG_BOOTSTRAP_JS_12;\n    }\n    else {\n        i18n_11 = $localize `:@@ngb.datepicker.previous-month␟c3b08b07b5ab98e7cdcf18df39355690ab7d3884␟8586908745456864217:Previous month`;\n    } var i18n_13; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_14 = goog.getMsg(\"Next month\");\n        i18n_13 = MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_14;\n    }\n    else {\n        i18n_13 = $localize `:@@ngb.datepicker.next-month␟4bd046985cfe13040d5ef0cd881edce0968a111a␟3628374603023447227:Next month`;\n    } var i18n_15; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_16 = goog.getMsg(\"Next month\");\n        i18n_15 = MSG_EXTERNAL_ngb_datepicker_next_month$$FESM2015_NG_BOOTSTRAP_JS_16;\n    }\n    else {\n        i18n_15 = $localize `:@@ngb.datepicker.next-month␟4bd046985cfe13040d5ef0cd881edce0968a111a␟3628374603023447227:Next month`;\n    } return [[1, \"ngb-dp-arrow\"], [\"type\", \"button\", 1, \"btn\", \"btn-link\", \"ngb-dp-arrow-btn\", 3, \"disabled\", \"click\", 6, \"aria-label\", \"title\"], [\"aria-label\", i18n_9, \"title\", i18n_11], [1, \"ngb-dp-navigation-chevron\"], [\"class\", \"ngb-dp-navigation-select\", 3, \"date\", \"disabled\", \"months\", \"years\", \"select\", 4, \"ngIf\"], [4, \"ngIf\"], [1, \"ngb-dp-arrow\", \"right\"], [\"aria-label\", i18n_13, \"title\", i18n_15], [1, \"ngb-dp-navigation-select\", 3, \"date\", \"disabled\", \"months\", \"years\", \"select\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"class\", \"ngb-dp-arrow\", 4, \"ngIf\"], [1, \"ngb-dp-month-name\"]]; }, template: function NgbDatepickerNavigation_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"button\", 1);\n        ɵngcc0.ɵɵi18nAttributes(2, 2);\n        ɵngcc0.ɵɵlistener(\"click\", function NgbDatepickerNavigation_Template_button_click_1_listener() { return ctx.navigate.emit(ctx.navigation.PREV); });\n        ɵngcc0.ɵɵelement(3, \"span\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(4, NgbDatepickerNavigation_ngb_datepicker_navigation_select_4_Template, 1, 4, \"ngb-datepicker-navigation-select\", 4);\n        ɵngcc0.ɵɵtemplate(5, NgbDatepickerNavigation_5_Template, 1, 1, undefined, 5);\n        ɵngcc0.ɵɵelementStart(6, \"div\", 6);\n        ɵngcc0.ɵɵelementStart(7, \"button\", 1);\n        ɵngcc0.ɵɵi18nAttributes(8, 7);\n        ɵngcc0.ɵɵlistener(\"click\", function NgbDatepickerNavigation_Template_button_click_7_listener() { return ctx.navigate.emit(ctx.navigation.NEXT); });\n        ɵngcc0.ɵɵelement(9, \"span\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.prevDisabled);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showSelect);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", !ctx.showSelect);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.nextDisabled);\n    } }, directives: function () { return [ɵngcc1.NgIf, NgbDatepickerNavigationSelect, ɵngcc1.NgForOf]; }, styles: [\"ngb-datepicker-navigation{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}.right .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{-ms-flex-pack:end;justify-content:flex-end}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:-ms-flexbox;display:flex;-ms-flex:1 1 9rem;flex:1 1 9rem}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nNgbDatepickerNavigation.ctorParameters = () => [\n    { type: NgbDatepickerI18n }\n];\nNgbDatepickerNavigation.propDecorators = {\n    date: [{ type: Input }],\n    disabled: [{ type: Input }],\n    months: [{ type: Input }],\n    showSelect: [{ type: Input }],\n    prevDisabled: [{ type: Input }],\n    nextDisabled: [{ type: Input }],\n    selectBoxes: [{ type: Input }],\n    navigate: [{ type: Output }],\n    select: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDatepickerNavigation, [{\n        type: Component,\n        args: [{\n                selector: 'ngb-datepicker-navigation',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <div class=\"ngb-dp-arrow\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"navigate.emit(navigation.PREV)\" [disabled]=\"prevDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.previous-month\" aria-label=\"Previous month\"\n              i18n-title=\"@@ngb.datepicker.previous-month\" title=\"Previous month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    <ngb-datepicker-navigation-select *ngIf=\"showSelect\" class=\"ngb-dp-navigation-select\"\n      [date]=\"date\"\n      [disabled] = \"disabled\"\n      [months]=\"selectBoxes.months\"\n      [years]=\"selectBoxes.years\"\n      (select)=\"select.emit($event)\">\n    </ngb-datepicker-navigation-select>\n\n    <ng-template *ngIf=\"!showSelect\" ngFor let-month [ngForOf]=\"months\" let-i=\"index\">\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i > 0\"></div>\n      <div class=\"ngb-dp-month-name\">\n        {{ i18n.getMonthFullName(month.number, month.year) }} {{ i18n.getYearNumerals(month.year) }}\n      </div>\n      <div class=\"ngb-dp-arrow\" *ngIf=\"i !== months.length - 1\"></div>\n    </ng-template>\n    <div class=\"ngb-dp-arrow right\">\n      <button type=\"button\" class=\"btn btn-link ngb-dp-arrow-btn\" (click)=\"navigate.emit(navigation.NEXT)\" [disabled]=\"nextDisabled\"\n              i18n-aria-label=\"@@ngb.datepicker.next-month\" aria-label=\"Next month\"\n              i18n-title=\"@@ngb.datepicker.next-month\" title=\"Next month\">\n        <span class=\"ngb-dp-navigation-chevron\"></span>\n      </button>\n    </div>\n    `,\n                styles: [\"ngb-datepicker-navigation{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-dp-navigation-chevron{border-style:solid;border-width:.2em .2em 0 0;display:inline-block;width:.75em;height:.75em;margin-left:.25em;margin-right:.15em;-webkit-transform:rotate(-135deg);transform:rotate(-135deg)}.right .ngb-dp-navigation-chevron{-webkit-transform:rotate(45deg);transform:rotate(45deg);margin-left:.15em;margin-right:.25em}.ngb-dp-arrow{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;padding-right:0;padding-left:0;margin:0;width:2rem;height:2rem}.ngb-dp-arrow.right{-ms-flex-pack:end;justify-content:flex-end}.ngb-dp-arrow-btn{padding:0 .25rem;margin:0 .5rem;border:none;background-color:transparent;z-index:1}.ngb-dp-arrow-btn:focus{outline-width:1px;outline-style:auto}@media all and (-ms-high-contrast:none),(-ms-high-contrast:active){.ngb-dp-arrow-btn:focus{outline-style:solid}}.ngb-dp-month-name{font-size:larger;height:2rem;line-height:2rem;text-align:center}.ngb-dp-navigation-select{display:-ms-flexbox;display:flex;-ms-flex:1 1 9rem;flex:1 1 9rem}\"]\n            }]\n    }], function () { return [{ type: NgbDatepickerI18n }]; }, { months: [{\n            type: Input\n        }], navigate: [{\n            type: Output\n        }], select: [{\n            type: Output\n        }], date: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], showSelect: [{\n            type: Input\n        }], prevDisabled: [{\n            type: Input\n        }], nextDisabled: [{\n            type: Input\n        }], selectBoxes: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst isContainedIn = (element, array) => array ? array.some(item => item.contains(element)) : false;\n/** @type {?} */\nconst matchesSelectorIfAny = (element, selector) => !selector || closest(element, selector) != null;\n// we'll have to use 'touch' events instead of 'mouse' events on iOS and add a more significant delay\n// to avoid re-opening when handling (click) on a toggling element\n// TODO: use proper Angular platform detection when NgbAutoClose becomes a service and we can inject PLATFORM_ID\n/** @type {?} */\nlet iOS = false;\nif (typeof navigator !== 'undefined') {\n    iOS = !!navigator.userAgent && /iPad|iPhone|iPod/.test(navigator.userAgent);\n}\n/**\n * @param {?} zone\n * @param {?} document\n * @param {?} type\n * @param {?} close\n * @param {?} closed$\n * @param {?} insideElements\n * @param {?=} ignoreElements\n * @param {?=} insideSelector\n * @return {?}\n */\nfunction ngbAutoClose(zone, document, type, close, closed$, insideElements, ignoreElements, insideSelector) {\n    // closing on ESC and outside clicks\n    if (type) {\n        zone.runOutsideAngular(() => {\n            /** @type {?} */\n            const shouldCloseOnClick = (event) => {\n                /** @type {?} */\n                const element = (/** @type {?} */ (event.target));\n                if ((event instanceof MouseEvent && event.button === 2) || isContainedIn(element, ignoreElements)) {\n                    return false;\n                }\n                if (type === 'inside') {\n                    return isContainedIn(element, insideElements) && matchesSelectorIfAny(element, insideSelector);\n                }\n                else if (type === 'outside') {\n                    return !isContainedIn(element, insideElements);\n                }\n                else /* if (type === true) */ {\n                    return matchesSelectorIfAny(element, insideSelector) || !isContainedIn(element, insideElements);\n                }\n            };\n            /** @type {?} */\n            const escapes$ = fromEvent(document, 'keydown')\n                .pipe(takeUntil(closed$), \n            // tslint:disable-next-line:deprecation\n            filter(e => e.which === Key.Escape));\n            // we have to pre-calculate 'shouldCloseOnClick' on 'mousedown/touchstart',\n            // because on 'mouseup/touchend' DOM nodes might be detached\n            /** @type {?} */\n            const mouseDowns$ = fromEvent(document, iOS ? 'touchstart' : 'mousedown')\n                .pipe(map(shouldCloseOnClick), takeUntil(closed$));\n            /** @type {?} */\n            const closeableClicks$ = fromEvent(document, iOS ? 'touchend' : 'mouseup')\n                .pipe(withLatestFrom(mouseDowns$), filter(([_, shouldClose]) => shouldClose), delay(iOS ? 16 : 0), takeUntil(closed$));\n            race([escapes$, closeableClicks$]).subscribe(() => zone.run(close));\n        });\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst FOCUSABLE_ELEMENTS_SELECTOR = [\n    'a[href]', 'button:not([disabled])', 'input:not([disabled]):not([type=\"hidden\"])', 'select:not([disabled])',\n    'textarea:not([disabled])', '[contenteditable]', '[tabindex]:not([tabindex=\"-1\"])'\n].join(', ');\n/**\n * Returns first and last focusable elements inside of a given element based on specific CSS selector\n * @param {?} element\n * @return {?}\n */\nfunction getFocusableBoundaryElements(element) {\n    /** @type {?} */\n    const list = Array.from((/** @type {?} */ (element.querySelectorAll(FOCUSABLE_ELEMENTS_SELECTOR))))\n        .filter(el => el.tabIndex !== -1);\n    return [list[0], list[list.length - 1]];\n}\n/**\n * Function that enforces browser focus to be trapped inside a DOM element.\n *\n * Works only for clicks inside the element and navigation with 'Tab', ignoring clicks outside of the element\n *\n * \\@param element The element around which focus will be trapped inside\n * \\@param stopFocusTrap$ The observable stream. When completed the focus trap will clean up listeners\n * and free internal resources\n * \\@param refocusOnClick Put the focus back to the last focused element whenever a click occurs on element (default to\n * false)\n * @type {?}\n */\nconst ngbFocusTrap = (element, stopFocusTrap$, refocusOnClick = false) => {\n    // last focused element\n    /** @type {?} */\n    const lastFocusedElement$ = fromEvent(element, 'focusin').pipe(takeUntil(stopFocusTrap$), map(e => e.target));\n    // 'tab' / 'shift+tab' stream\n    fromEvent(element, 'keydown')\n        .pipe(takeUntil(stopFocusTrap$), \n    // tslint:disable:deprecation\n    filter(e => e.which === Key.Tab), \n    // tslint:enable:deprecation\n    withLatestFrom(lastFocusedElement$))\n        .subscribe(([tabEvent, focusedElement]) => {\n        const [first, last] = getFocusableBoundaryElements(element);\n        if ((focusedElement === first || focusedElement === element) && tabEvent.shiftKey) {\n            last.focus();\n            tabEvent.preventDefault();\n        }\n        if (focusedElement === last && !tabEvent.shiftKey) {\n            first.focus();\n            tabEvent.preventDefault();\n        }\n    });\n    // inside click\n    if (refocusOnClick) {\n        fromEvent(element, 'click')\n            .pipe(takeUntil(stopFocusTrap$), withLatestFrom(lastFocusedElement$), map(arr => (/** @type {?} */ (arr[1]))))\n            .subscribe(lastFocusedElement => lastFocusedElement.focus());\n    }\n};\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n// previous version:\n// https://github.com/angular-ui/bootstrap/blob/07c31d0731f7cb068a1932b8e01d2312b796b4ec/src/position/position.js\nclass Positioning {\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    getAllStyles(element) { return window.getComputedStyle(element); }\n    /**\n     * @param {?} element\n     * @param {?} prop\n     * @return {?}\n     */\n    getStyle(element, prop) { return this.getAllStyles(element)[prop]; }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    isStaticPositioned(element) {\n        return (this.getStyle(element, 'position') || 'static') === 'static';\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    offsetParent(element) {\n        /** @type {?} */\n        let offsetParentEl = (/** @type {?} */ (element.offsetParent)) || document.documentElement;\n        while (offsetParentEl && offsetParentEl !== document.documentElement && this.isStaticPositioned(offsetParentEl)) {\n            offsetParentEl = (/** @type {?} */ (offsetParentEl.offsetParent));\n        }\n        return offsetParentEl || document.documentElement;\n    }\n    /**\n     * @param {?} element\n     * @param {?=} round\n     * @return {?}\n     */\n    position(element, round = true) {\n        /** @type {?} */\n        let elPosition;\n        /** @type {?} */\n        let parentOffset = { width: 0, height: 0, top: 0, bottom: 0, left: 0, right: 0 };\n        if (this.getStyle(element, 'position') === 'fixed') {\n            elPosition = element.getBoundingClientRect();\n            elPosition = {\n                top: elPosition.top,\n                bottom: elPosition.bottom,\n                left: elPosition.left,\n                right: elPosition.right,\n                height: elPosition.height,\n                width: elPosition.width\n            };\n        }\n        else {\n            /** @type {?} */\n            const offsetParentEl = this.offsetParent(element);\n            elPosition = this.offset(element, false);\n            if (offsetParentEl !== document.documentElement) {\n                parentOffset = this.offset(offsetParentEl, false);\n            }\n            parentOffset.top += offsetParentEl.clientTop;\n            parentOffset.left += offsetParentEl.clientLeft;\n        }\n        elPosition.top -= parentOffset.top;\n        elPosition.bottom -= parentOffset.top;\n        elPosition.left -= parentOffset.left;\n        elPosition.right -= parentOffset.left;\n        if (round) {\n            elPosition.top = Math.round(elPosition.top);\n            elPosition.bottom = Math.round(elPosition.bottom);\n            elPosition.left = Math.round(elPosition.left);\n            elPosition.right = Math.round(elPosition.right);\n        }\n        return elPosition;\n    }\n    /**\n     * @param {?} element\n     * @param {?=} round\n     * @return {?}\n     */\n    offset(element, round = true) {\n        /** @type {?} */\n        const elBcr = element.getBoundingClientRect();\n        /** @type {?} */\n        const viewportOffset = {\n            top: window.pageYOffset - document.documentElement.clientTop,\n            left: window.pageXOffset - document.documentElement.clientLeft\n        };\n        /** @type {?} */\n        let elOffset = {\n            height: elBcr.height || element.offsetHeight,\n            width: elBcr.width || element.offsetWidth,\n            top: elBcr.top + viewportOffset.top,\n            bottom: elBcr.bottom + viewportOffset.top,\n            left: elBcr.left + viewportOffset.left,\n            right: elBcr.right + viewportOffset.left\n        };\n        if (round) {\n            elOffset.height = Math.round(elOffset.height);\n            elOffset.width = Math.round(elOffset.width);\n            elOffset.top = Math.round(elOffset.top);\n            elOffset.bottom = Math.round(elOffset.bottom);\n            elOffset.left = Math.round(elOffset.left);\n            elOffset.right = Math.round(elOffset.right);\n        }\n        return elOffset;\n    }\n    /*\n        Return false if the element to position is outside the viewport\n      */\n    /**\n     * @param {?} hostElement\n     * @param {?} targetElement\n     * @param {?} placement\n     * @param {?=} appendToBody\n     * @return {?}\n     */\n    positionElements(hostElement, targetElement, placement, appendToBody) {\n        const [placementPrimary = 'top', placementSecondary = 'center'] = placement.split('-');\n        /** @type {?} */\n        const hostElPosition = appendToBody ? this.offset(hostElement, false) : this.position(hostElement, false);\n        /** @type {?} */\n        const targetElStyles = this.getAllStyles(targetElement);\n        /** @type {?} */\n        const marginTop = parseFloat(targetElStyles.marginTop);\n        /** @type {?} */\n        const marginBottom = parseFloat(targetElStyles.marginBottom);\n        /** @type {?} */\n        const marginLeft = parseFloat(targetElStyles.marginLeft);\n        /** @type {?} */\n        const marginRight = parseFloat(targetElStyles.marginRight);\n        /** @type {?} */\n        let topPosition = 0;\n        /** @type {?} */\n        let leftPosition = 0;\n        switch (placementPrimary) {\n            case 'top':\n                topPosition = (hostElPosition.top - (targetElement.offsetHeight + marginTop + marginBottom));\n                break;\n            case 'bottom':\n                topPosition = (hostElPosition.top + hostElPosition.height);\n                break;\n            case 'left':\n                leftPosition = (hostElPosition.left - (targetElement.offsetWidth + marginLeft + marginRight));\n                break;\n            case 'right':\n                leftPosition = (hostElPosition.left + hostElPosition.width);\n                break;\n        }\n        switch (placementSecondary) {\n            case 'top':\n                topPosition = hostElPosition.top;\n                break;\n            case 'bottom':\n                topPosition = hostElPosition.top + hostElPosition.height - targetElement.offsetHeight;\n                break;\n            case 'left':\n                leftPosition = hostElPosition.left;\n                break;\n            case 'right':\n                leftPosition = hostElPosition.left + hostElPosition.width - targetElement.offsetWidth;\n                break;\n            case 'center':\n                if (placementPrimary === 'top' || placementPrimary === 'bottom') {\n                    leftPosition = (hostElPosition.left + hostElPosition.width / 2 - targetElement.offsetWidth / 2);\n                }\n                else {\n                    topPosition = (hostElPosition.top + hostElPosition.height / 2 - targetElement.offsetHeight / 2);\n                }\n                break;\n        }\n        /// The translate3d/gpu acceleration render a blurry text on chrome, the next line is commented until a browser fix\n        // targetElement.style.transform = `translate3d(${Math.round(leftPosition)}px, ${Math.floor(topPosition)}px, 0px)`;\n        targetElement.style.transform = `translate(${Math.round(leftPosition)}px, ${Math.round(topPosition)}px)`;\n        // Check if the targetElement is inside the viewport\n        /** @type {?} */\n        const targetElBCR = targetElement.getBoundingClientRect();\n        /** @type {?} */\n        const html = document.documentElement;\n        /** @type {?} */\n        const windowHeight = window.innerHeight || html.clientHeight;\n        /** @type {?} */\n        const windowWidth = window.innerWidth || html.clientWidth;\n        return targetElBCR.left >= 0 && targetElBCR.top >= 0 && targetElBCR.right <= windowWidth &&\n            targetElBCR.bottom <= windowHeight;\n    }\n}\n/** @type {?} */\nconst placementSeparator = /\\s+/;\n/** @type {?} */\nconst positionService = new Positioning();\n/*\n * Accept the placement array and applies the appropriate placement dependent on the viewport.\n * Returns the applied placement.\n * In case of auto placement, placements are selected in order\n *   'top', 'bottom', 'left', 'right',\n *   'top-left', 'top-right',\n *   'bottom-left', 'bottom-right',\n *   'left-top', 'left-bottom',\n *   'right-top', 'right-bottom'.\n * */\n/**\n * @param {?} hostElement\n * @param {?} targetElement\n * @param {?} placement\n * @param {?=} appendToBody\n * @param {?=} baseClass\n * @return {?}\n */\nfunction positionElements(hostElement, targetElement, placement, appendToBody, baseClass) {\n    /** @type {?} */\n    let placementVals = Array.isArray(placement) ? placement : (/** @type {?} */ (placement.split(placementSeparator)));\n    /** @type {?} */\n    const allowedPlacements = [\n        'top', 'bottom', 'left', 'right', 'top-left', 'top-right', 'bottom-left', 'bottom-right', 'left-top', 'left-bottom',\n        'right-top', 'right-bottom'\n    ];\n    /** @type {?} */\n    const classList = targetElement.classList;\n    /** @type {?} */\n    const addClassesToTarget = (targetPlacement) => {\n        const [primary, secondary] = targetPlacement.split('-');\n        /** @type {?} */\n        const classes = [];\n        if (baseClass) {\n            classes.push(`${baseClass}-${primary}`);\n            if (secondary) {\n                classes.push(`${baseClass}-${primary}-${secondary}`);\n            }\n            classes.forEach((classname) => { classList.add(classname); });\n        }\n        return classes;\n    };\n    // Remove old placement classes to avoid issues\n    if (baseClass) {\n        allowedPlacements.forEach((placementToRemove) => { classList.remove(`${baseClass}-${placementToRemove}`); });\n    }\n    // replace auto placement with other placements\n    /** @type {?} */\n    let hasAuto = placementVals.findIndex(val => val === 'auto');\n    if (hasAuto >= 0) {\n        allowedPlacements.forEach(function (obj) {\n            if (placementVals.find(val => val.search('^' + obj) !== -1) == null) {\n                placementVals.splice(hasAuto++, 1, (/** @type {?} */ (obj)));\n            }\n        });\n    }\n    // coordinates where to position\n    // Required for transform:\n    /** @type {?} */\n    const style = targetElement.style;\n    style.position = 'absolute';\n    style.top = '0';\n    style.left = '0';\n    style['will-change'] = 'transform';\n    /** @type {?} */\n    let testPlacement;\n    /** @type {?} */\n    let isInViewport = false;\n    for (testPlacement of placementVals) {\n        /** @type {?} */\n        let addedClasses = addClassesToTarget(testPlacement);\n        if (positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody)) {\n            isInViewport = true;\n            break;\n        }\n        // Remove the baseClasses for further calculation\n        if (baseClass) {\n            addedClasses.forEach((classname) => { classList.remove(classname); });\n        }\n    }\n    if (!isInViewport) {\n        // If nothing match, the first placement is the default one\n        testPlacement = placementVals[0];\n        addClassesToTarget(testPlacement);\n        positionService.positionElements(hostElement, targetElement, testPlacement, appendToBody);\n    }\n    return testPlacement;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction NGB_DATEPICKER_PARSER_FORMATTER_FACTORY() {\n    return new NgbDateISOParserFormatter();\n}\n/**\n * An abstract service for parsing and formatting dates for the\n * [`NgbInputDatepicker`](#/components/datepicker/api#NgbInputDatepicker) directive.\n * Converts between the internal `NgbDateStruct` model presentation and a `string` that is displayed in the\n * input element.\n *\n * When user types something in the input this service attempts to parse it into a `NgbDateStruct` object.\n * And vice versa, when users selects a date in the calendar with the mouse, it must be displayed as a `string`\n * in the input.\n *\n * Default implementation uses the ISO 8601 format, but you can provide another implementation via DI\n * to use an alternative string format or a custom parsing logic.\n *\n * See the [date format overview](#/components/datepicker/overview#date-model) for more details.\n * @abstract\n */\nclass NgbDateParserFormatter {\n}\nNgbDateParserFormatter.ɵfac = function NgbDateParserFormatter_Factory(t) { return new (t || NgbDateParserFormatter)(); };\nNgbDateParserFormatter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbDateParserFormatter, factory: function () { return NGB_DATEPICKER_PARSER_FORMATTER_FACTORY(); }, providedIn: 'root' });\n/** @nocollapse */ NgbDateParserFormatter.ngInjectableDef = defineInjectable({ factory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY, token: NgbDateParserFormatter, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDateParserFormatter, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_PARSER_FORMATTER_FACTORY }]\n    }], null, null); })();\nclass NgbDateISOParserFormatter extends NgbDateParserFormatter {\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    parse(value) {\n        if (value) {\n            /** @type {?} */\n            const dateParts = value.trim().split('-');\n            if (dateParts.length === 1 && isNumber(dateParts[0])) {\n                return { year: toInteger(dateParts[0]), month: null, day: null };\n            }\n            else if (dateParts.length === 2 && isNumber(dateParts[0]) && isNumber(dateParts[1])) {\n                return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: null };\n            }\n            else if (dateParts.length === 3 && isNumber(dateParts[0]) && isNumber(dateParts[1]) && isNumber(dateParts[2])) {\n                return { year: toInteger(dateParts[0]), month: toInteger(dateParts[1]), day: toInteger(dateParts[2]) };\n            }\n        }\n        return null;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    format(date) {\n        return date ?\n            `${date.year}-${isNumber(date.month) ? padNumber(date.month) : ''}-${isNumber(date.day) ? padNumber(date.day) : ''}` :\n            '';\n    }\n}\nNgbDateISOParserFormatter.ɵfac = function NgbDateISOParserFormatter_Factory(t) { return ɵNgbDateISOParserFormatter_BaseFactory(t || NgbDateISOParserFormatter); };\nNgbDateISOParserFormatter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbDateISOParserFormatter, factory: NgbDateISOParserFormatter.ɵfac });\nconst ɵNgbDateISOParserFormatter_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(NgbDateISOParserFormatter);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDateISOParserFormatter, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_DATEPICKER_VALUE_ACCESSOR$1 = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgbInputDatepicker),\n    multi: true\n};\n/** @type {?} */\nconst NGB_DATEPICKER_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => NgbInputDatepicker),\n    multi: true\n};\n/**\n * A directive that allows to stick a datepicker popup to an input field.\n *\n * Manages interaction with the input field itself, does value formatting and provides forms integration.\n */\nclass NgbInputDatepicker {\n    /**\n     * @param {?} _parserFormatter\n     * @param {?} _elRef\n     * @param {?} _vcRef\n     * @param {?} _renderer\n     * @param {?} _cfr\n     * @param {?} _ngZone\n     * @param {?} _service\n     * @param {?} _calendar\n     * @param {?} _dateAdapter\n     * @param {?} _document\n     * @param {?} _changeDetector\n     */\n    constructor(_parserFormatter, _elRef, _vcRef, _renderer, _cfr, _ngZone, _service, _calendar, _dateAdapter, _document, _changeDetector) {\n        this._parserFormatter = _parserFormatter;\n        this._elRef = _elRef;\n        this._vcRef = _vcRef;\n        this._renderer = _renderer;\n        this._cfr = _cfr;\n        this._ngZone = _ngZone;\n        this._service = _service;\n        this._calendar = _calendar;\n        this._dateAdapter = _dateAdapter;\n        this._document = _document;\n        this._changeDetector = _changeDetector;\n        this._cRef = null;\n        this._disabled = false;\n        /**\n         * Indicates whether the datepicker popup should be closed automatically after date selection / outside click or not.\n         *\n         * * `true` - the popup will close on both date selection and outside click.\n         * * `false` - the popup can only be closed manually via `close()` or `toggle()` methods.\n         * * `\"inside\"` - the popup will close on date selection, but not outside clicks.\n         * * `\"outside\"` - the popup will close only on the outside click and not on date selection/inside clicks.\n         *\n         * \\@since 3.0.0\n         */\n        this.autoClose = true;\n        /**\n         * The preferred placement of the datepicker popup.\n         *\n         * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n         * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n         * `\"right-bottom\"`\n         *\n         * Accepts an array of strings or a string with space separated possible values.\n         *\n         * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n         *\n         * Please see the [positioning overview](#/positioning) for more details.\n         */\n        this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n        /**\n         * An event emitted when user selects a date using keyboard or mouse.\n         *\n         * The payload of the event is currently selected `NgbDate`.\n         *\n         * \\@since 1.1.1\n         */\n        this.dateSelect = new EventEmitter();\n        /**\n         * Event emitted right after the navigation happens and displayed month changes.\n         *\n         * See [`NgbDatepickerNavigateEvent`](#/components/datepicker/api#NgbDatepickerNavigateEvent) for the payload info.\n         */\n        this.navigate = new EventEmitter();\n        /**\n         * An event fired after closing datepicker window.\n         *\n         * \\@since 4.2.0\n         */\n        this.closed = new EventEmitter();\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._validatorChange = () => { };\n        this._zoneSubscription = _ngZone.onStable.subscribe(() => this._updatePopupPosition());\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = value === '' || (value && value !== 'false');\n        if (this.isOpen()) {\n            this._cRef.instance.setDisabledState(this._disabled);\n        }\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) { this._onChange = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this._onTouched = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnValidatorChange(fn) { this._validatorChange = fn; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) { this.disabled = isDisabled; }\n    /**\n     * @param {?} c\n     * @return {?}\n     */\n    validate(c) {\n        /** @type {?} */\n        const value = c.value;\n        if (value === null || value === undefined) {\n            return null;\n        }\n        /** @type {?} */\n        const ngbDate = this._fromDateStruct(this._dateAdapter.fromModel(value));\n        if (!this._calendar.isValid(ngbDate)) {\n            return { 'ngbDate': { invalid: c.value } };\n        }\n        if (this.minDate && ngbDate.before(NgbDate.from(this.minDate))) {\n            return { 'ngbDate': { requiredBefore: this.minDate } };\n        }\n        if (this.maxDate && ngbDate.after(NgbDate.from(this.maxDate))) {\n            return { 'ngbDate': { requiredAfter: this.maxDate } };\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._model = this._fromDateStruct(this._dateAdapter.fromModel(value));\n        this._writeModelValue(this._model);\n    }\n    /**\n     * @param {?} value\n     * @param {?=} updateView\n     * @return {?}\n     */\n    manualDateChange(value, updateView = false) {\n        /** @type {?} */\n        const inputValueChanged = value !== this._inputValue;\n        if (inputValueChanged) {\n            this._inputValue = value;\n            this._model = this._fromDateStruct(this._parserFormatter.parse(value));\n        }\n        if (inputValueChanged || !updateView) {\n            this._onChange(this._model ? this._dateAdapter.toModel(this._model) : (value === '' ? null : value));\n        }\n        if (updateView && this._model) {\n            this._writeModelValue(this._model);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    isOpen() { return !!this._cRef; }\n    /**\n     * Opens the datepicker popup.\n     *\n     * If the related form control contains a valid date, the corresponding month will be opened.\n     * @return {?}\n     */\n    open() {\n        if (!this.isOpen()) {\n            /** @type {?} */\n            const cf = this._cfr.resolveComponentFactory(NgbDatepicker);\n            this._cRef = this._vcRef.createComponent(cf);\n            this._applyPopupStyling(this._cRef.location.nativeElement);\n            this._applyDatepickerInputs(this._cRef.instance);\n            this._subscribeForDatepickerOutputs(this._cRef.instance);\n            this._cRef.instance.ngOnInit();\n            this._cRef.instance.writeValue(this._dateAdapter.toModel(this._model));\n            // date selection event handling\n            this._cRef.instance.registerOnChange((selectedDate) => {\n                this.writeValue(selectedDate);\n                this._onChange(selectedDate);\n                this._onTouched();\n            });\n            this._cRef.changeDetectorRef.detectChanges();\n            this._cRef.instance.setDisabledState(this.disabled);\n            if (this.container === 'body') {\n                window.document.querySelector(this.container).appendChild(this._cRef.location.nativeElement);\n            }\n            // focus handling\n            ngbFocusTrap(this._cRef.location.nativeElement, this.closed, true);\n            this._cRef.instance.focus();\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.closed, [], [this._elRef.nativeElement, this._cRef.location.nativeElement]);\n        }\n    }\n    /**\n     * Closes the datepicker popup.\n     * @return {?}\n     */\n    close() {\n        if (this.isOpen()) {\n            this._vcRef.remove(this._vcRef.indexOf(this._cRef.hostView));\n            this._cRef = null;\n            this.closed.emit();\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Toggles the datepicker popup.\n     * @return {?}\n     */\n    toggle() {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Navigates to the provided date.\n     *\n     * With the default calendar we use ISO 8601: 'month' is 1=Jan ... 12=Dec.\n     * If nothing or invalid date provided calendar will open current month.\n     *\n     * Use the `[startDate]` input as an alternative.\n     * @param {?=} date\n     * @return {?}\n     */\n    navigateTo(date) {\n        if (this.isOpen()) {\n            this._cRef.instance.navigateTo(date);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    onBlur() { this._onTouched(); }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['minDate'] || changes['maxDate']) {\n            this._validatorChange();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.close();\n        this._zoneSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} datepickerInstance\n     * @return {?}\n     */\n    _applyDatepickerInputs(datepickerInstance) {\n        ['dayTemplate', 'dayTemplateData', 'displayMonths', 'firstDayOfWeek', 'footerTemplate', 'markDisabled', 'minDate',\n            'maxDate', 'navigation', 'outsideDays', 'showNavigation', 'showWeekdays', 'showWeekNumbers']\n            .forEach((optionName) => {\n            if (this[optionName] !== undefined) {\n                datepickerInstance[optionName] = this[optionName];\n            }\n        });\n        datepickerInstance.startDate = this.startDate || this._model;\n    }\n    /**\n     * @param {?} nativeElement\n     * @return {?}\n     */\n    _applyPopupStyling(nativeElement) {\n        this._renderer.addClass(nativeElement, 'dropdown-menu');\n        this._renderer.addClass(nativeElement, 'show');\n        if (this.container === 'body') {\n            this._renderer.addClass(nativeElement, 'ngb-dp-body');\n        }\n    }\n    /**\n     * @param {?} datepickerInstance\n     * @return {?}\n     */\n    _subscribeForDatepickerOutputs(datepickerInstance) {\n        datepickerInstance.navigate.subscribe(navigateEvent => this.navigate.emit(navigateEvent));\n        datepickerInstance.select.subscribe(date => {\n            this.dateSelect.emit(date);\n            if (this.autoClose === true || this.autoClose === 'inside') {\n                this.close();\n            }\n        });\n    }\n    /**\n     * @param {?} model\n     * @return {?}\n     */\n    _writeModelValue(model) {\n        /** @type {?} */\n        const value = this._parserFormatter.format(model);\n        this._inputValue = value;\n        this._renderer.setProperty(this._elRef.nativeElement, 'value', value);\n        if (this.isOpen()) {\n            this._cRef.instance.writeValue(this._dateAdapter.toModel(model));\n            this._onTouched();\n        }\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    _fromDateStruct(date) {\n        /** @type {?} */\n        const ngbDate = date ? new NgbDate(date.year, date.month, date.day) : null;\n        return this._calendar.isValid(ngbDate) ? ngbDate : null;\n    }\n    /**\n     * @return {?}\n     */\n    _updatePopupPosition() {\n        if (!this._cRef) {\n            return;\n        }\n        /** @type {?} */\n        let hostElement;\n        if (typeof this.positionTarget === 'string') {\n            hostElement = window.document.querySelector(this.positionTarget);\n        }\n        else if (this.positionTarget instanceof HTMLElement) {\n            hostElement = this.positionTarget;\n        }\n        else {\n            hostElement = this._elRef.nativeElement;\n        }\n        if (this.positionTarget && !hostElement) {\n            throw new Error('ngbDatepicker could not find element declared in [positionTarget] to position against.');\n        }\n        positionElements(hostElement, this._cRef.location.nativeElement, this.placement, this.container === 'body');\n    }\n}\nNgbInputDatepicker.ɵfac = function NgbInputDatepicker_Factory(t) { return new (t || NgbInputDatepicker)(ɵngcc0.ɵɵdirectiveInject(NgbDateParserFormatter), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(NgbDatepickerService), ɵngcc0.ɵɵdirectiveInject(NgbCalendar), ɵngcc0.ɵɵdirectiveInject(NgbDateAdapter), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); };\nNgbInputDatepicker.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbInputDatepicker, selectors: [[\"input\", \"ngbDatepicker\", \"\"]], hostVars: 1, hostBindings: function NgbInputDatepicker_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function NgbInputDatepicker_input_HostBindingHandler($event) { return ctx.manualDateChange($event.target.value); })(\"change\", function NgbInputDatepicker_change_HostBindingHandler($event) { return ctx.manualDateChange($event.target.value, true); })(\"blur\", function NgbInputDatepicker_blur_HostBindingHandler() { return ctx.onBlur(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"disabled\", ctx.disabled);\n    } }, inputs: { autoClose: \"autoClose\", placement: \"placement\", disabled: \"disabled\", dayTemplate: \"dayTemplate\", dayTemplateData: \"dayTemplateData\", displayMonths: \"displayMonths\", firstDayOfWeek: \"firstDayOfWeek\", footerTemplate: \"footerTemplate\", markDisabled: \"markDisabled\", minDate: \"minDate\", maxDate: \"maxDate\", navigation: \"navigation\", outsideDays: \"outsideDays\", showWeekdays: \"showWeekdays\", showWeekNumbers: \"showWeekNumbers\", startDate: \"startDate\", container: \"container\", positionTarget: \"positionTarget\" }, outputs: { dateSelect: \"dateSelect\", navigate: \"navigate\", closed: \"closed\" }, exportAs: [\"ngbDatepicker\"], features: [ɵngcc0.ɵɵProvidersFeature([NGB_DATEPICKER_VALUE_ACCESSOR$1, NGB_DATEPICKER_VALIDATOR, NgbDatepickerService]), ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nNgbInputDatepicker.ctorParameters = () => [\n    { type: NgbDateParserFormatter },\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: Renderer2 },\n    { type: ComponentFactoryResolver },\n    { type: NgZone },\n    { type: NgbDatepickerService },\n    { type: NgbCalendar },\n    { type: NgbDateAdapter },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef }\n];\nNgbInputDatepicker.propDecorators = {\n    autoClose: [{ type: Input }],\n    dayTemplate: [{ type: Input }],\n    dayTemplateData: [{ type: Input }],\n    displayMonths: [{ type: Input }],\n    firstDayOfWeek: [{ type: Input }],\n    footerTemplate: [{ type: Input }],\n    markDisabled: [{ type: Input }],\n    minDate: [{ type: Input }],\n    maxDate: [{ type: Input }],\n    navigation: [{ type: Input }],\n    outsideDays: [{ type: Input }],\n    placement: [{ type: Input }],\n    showWeekdays: [{ type: Input }],\n    showWeekNumbers: [{ type: Input }],\n    startDate: [{ type: Input }],\n    container: [{ type: Input }],\n    positionTarget: [{ type: Input }],\n    dateSelect: [{ type: Output }],\n    navigate: [{ type: Output }],\n    closed: [{ type: Output }],\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbInputDatepicker, [{\n        type: Directive,\n        args: [{\n                selector: 'input[ngbDatepicker]',\n                exportAs: 'ngbDatepicker',\n                host: {\n                    '(input)': 'manualDateChange($event.target.value)',\n                    '(change)': 'manualDateChange($event.target.value, true)',\n                    '(blur)': 'onBlur()',\n                    '[disabled]': 'disabled'\n                },\n                providers: [NGB_DATEPICKER_VALUE_ACCESSOR$1, NGB_DATEPICKER_VALIDATOR, NgbDatepickerService]\n            }]\n    }], function () { return [{ type: NgbDateParserFormatter }, { type: ElementRef }, { type: ViewContainerRef }, { type: Renderer2 }, { type: ComponentFactoryResolver }, { type: NgZone }, { type: NgbDatepickerService }, { type: NgbCalendar }, { type: NgbDateAdapter }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ChangeDetectorRef }]; }, { autoClose: [{\n            type: Input\n        }], placement: [{\n            type: Input\n        }], dateSelect: [{\n            type: Output\n        }], navigate: [{\n            type: Output\n        }], closed: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], dayTemplate: [{\n            type: Input\n        }], dayTemplateData: [{\n            type: Input\n        }], displayMonths: [{\n            type: Input\n        }], firstDayOfWeek: [{\n            type: Input\n        }], footerTemplate: [{\n            type: Input\n        }], markDisabled: [{\n            type: Input\n        }], minDate: [{\n            type: Input\n        }], maxDate: [{\n            type: Input\n        }], navigation: [{\n            type: Input\n        }], outsideDays: [{\n            type: Input\n        }], showWeekdays: [{\n            type: Input\n        }], showWeekNumbers: [{\n            type: Input\n        }], startDate: [{\n            type: Input\n        }], container: [{\n            type: Input\n        }], positionTarget: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbDatepickerDayView {\n    /**\n     * @param {?} i18n\n     */\n    constructor(i18n) {\n        this.i18n = i18n;\n    }\n    /**\n     * @return {?}\n     */\n    isMuted() { return !this.selected && (this.date.month !== this.currentMonth || this.disabled); }\n}\nNgbDatepickerDayView.ɵfac = function NgbDatepickerDayView_Factory(t) { return new (t || NgbDatepickerDayView)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n)); };\nNgbDatepickerDayView.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbDatepickerDayView, selectors: [[\"\", \"ngbDatepickerDayView\", \"\"]], hostAttrs: [1, \"btn-light\"], hostVars: 10, hostBindings: function NgbDatepickerDayView_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"bg-primary\", ctx.selected)(\"text-white\", ctx.selected)(\"text-muted\", ctx.isMuted())(\"outside\", ctx.isMuted())(\"active\", ctx.focused);\n    } }, inputs: { currentMonth: \"currentMonth\", date: \"date\", disabled: \"disabled\", focused: \"focused\", selected: \"selected\" }, attrs: _c17, decls: 1, vars: 1, template: function NgbDatepickerDayView_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtext(0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵtextInterpolate(ctx.i18n.getDayNumerals(ctx.date));\n    } }, styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:0 0}[ngbDatepickerDayView].outside{opacity:.5}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nNgbDatepickerDayView.ctorParameters = () => [\n    { type: NgbDatepickerI18n }\n];\nNgbDatepickerDayView.propDecorators = {\n    currentMonth: [{ type: Input }],\n    date: [{ type: Input }],\n    disabled: [{ type: Input }],\n    focused: [{ type: Input }],\n    selected: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDatepickerDayView, [{\n        type: Component,\n        args: [{\n                selector: '[ngbDatepickerDayView]',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                host: {\n                    'class': 'btn-light',\n                    '[class.bg-primary]': 'selected',\n                    '[class.text-white]': 'selected',\n                    '[class.text-muted]': 'isMuted()',\n                    '[class.outside]': 'isMuted()',\n                    '[class.active]': 'focused'\n                },\n                template: `{{ i18n.getDayNumerals(date) }}`,\n                styles: [\"[ngbDatepickerDayView]{text-align:center;width:2rem;height:2rem;line-height:2rem;border-radius:.25rem;background:0 0}[ngbDatepickerDayView].outside{opacity:.5}\"]\n            }]\n    }], function () { return [{ type: NgbDatepickerI18n }]; }, { currentMonth: [{\n            type: Input\n        }], date: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], focused: [{\n            type: Input\n        }], selected: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbDatepickerNavigationSelect {\n    /**\n     * @param {?} i18n\n     */\n    constructor(i18n) {\n        this.i18n = i18n;\n        this.select = new EventEmitter();\n    }\n    /**\n     * @param {?} month\n     * @return {?}\n     */\n    changeMonth(month) { this.select.emit(new NgbDate(this.date.year, toInteger(month), 1)); }\n    /**\n     * @param {?} year\n     * @return {?}\n     */\n    changeYear(year) { this.select.emit(new NgbDate(toInteger(year), this.date.month, 1)); }\n}\nNgbDatepickerNavigationSelect.ɵfac = function NgbDatepickerNavigationSelect_Factory(t) { return new (t || NgbDatepickerNavigationSelect)(ɵngcc0.ɵɵdirectiveInject(NgbDatepickerI18n)); };\nNgbDatepickerNavigationSelect.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbDatepickerNavigationSelect, selectors: [[\"ngb-datepicker-navigation-select\"]], inputs: { date: \"date\", disabled: \"disabled\", months: \"months\", years: \"years\" }, outputs: { select: \"select\" }, decls: 6, vars: 6, consts: function () { var i18n_18; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_19 = goog.getMsg(\"Select month\");\n        i18n_18 = MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_19;\n    }\n    else {\n        i18n_18 = $localize `:@@ngb.datepicker.select-month␟1dbc84807f35518112f62e5775d1daebd3d8462b␟2253869508135064750:Select month`;\n    } var i18n_20; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_21 = goog.getMsg(\"Select month\");\n        i18n_20 = MSG_EXTERNAL_ngb_datepicker_select_month$$FESM2015_NG_BOOTSTRAP_JS_21;\n    }\n    else {\n        i18n_20 = $localize `:@@ngb.datepicker.select-month␟1dbc84807f35518112f62e5775d1daebd3d8462b␟2253869508135064750:Select month`;\n    } var i18n_22; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_23 = goog.getMsg(\"Select year\");\n        i18n_22 = MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_23;\n    }\n    else {\n        i18n_22 = $localize `:@@ngb.datepicker.select-year␟8ceb09d002bf0c5d1cac171dfbffe1805d2b3962␟8852264961585484321:Select year`;\n    } var i18n_24; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_25 = goog.getMsg(\"Select year\");\n        i18n_24 = MSG_EXTERNAL_ngb_datepicker_select_year$$FESM2015_NG_BOOTSTRAP_JS_25;\n    }\n    else {\n        i18n_24 = $localize `:@@ngb.datepicker.select-year␟8ceb09d002bf0c5d1cac171dfbffe1805d2b3962␟8852264961585484321:Select year`;\n    } return [[1, \"custom-select\", 3, \"disabled\", \"value\", \"change\", 6, \"aria-label\", \"title\"], [\"aria-label\", i18n_18, \"title\", i18n_20], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"aria-label\", i18n_22, \"title\", i18n_24], [3, \"value\"]]; }, template: function NgbDatepickerNavigationSelect_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"select\", 0);\n        ɵngcc0.ɵɵi18nAttributes(1, 1);\n        ɵngcc0.ɵɵlistener(\"change\", function NgbDatepickerNavigationSelect_Template_select_change_0_listener($event) { return ctx.changeMonth($event.target.value); });\n        ɵngcc0.ɵɵtemplate(2, NgbDatepickerNavigationSelect_option_2_Template, 2, 3, \"option\", 2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(3, \"select\", 0);\n        ɵngcc0.ɵɵi18nAttributes(4, 3);\n        ɵngcc0.ɵɵlistener(\"change\", function NgbDatepickerNavigationSelect_Template_select_change_3_listener($event) { return ctx.changeYear($event.target.value); });\n        ɵngcc0.ɵɵtemplate(5, NgbDatepickerNavigationSelect_option_5_Template, 2, 2, \"option\", 2);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"value\", ctx.date == null ? null : ctx.date.month);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.months);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled)(\"value\", ctx.date == null ? null : ctx.date.year);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.years);\n    } }, directives: [ɵngcc1.NgForOf, ɵngcc2.NgSelectOption, ɵngcc2.ɵangular_packages_forms_forms_x], styles: [\"ngb-datepicker-navigation-select>.custom-select{-ms-flex:1 1 auto;flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nNgbDatepickerNavigationSelect.ctorParameters = () => [\n    { type: NgbDatepickerI18n }\n];\nNgbDatepickerNavigationSelect.propDecorators = {\n    date: [{ type: Input }],\n    disabled: [{ type: Input }],\n    months: [{ type: Input }],\n    years: [{ type: Input }],\n    select: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDatepickerNavigationSelect, [{\n        type: Component,\n        args: [{\n                selector: 'ngb-datepicker-navigation-select',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.month\"\n      i18n-aria-label=\"@@ngb.datepicker.select-month\" aria-label=\"Select month\"\n      i18n-title=\"@@ngb.datepicker.select-month\" title=\"Select month\"\n      (change)=\"changeMonth($event.target.value)\">\n        <option *ngFor=\"let m of months\" [attr.aria-label]=\"i18n.getMonthFullName(m, date?.year)\"\n                [value]=\"m\">{{ i18n.getMonthShortName(m, date?.year) }}</option>\n    </select><select\n      [disabled]=\"disabled\"\n      class=\"custom-select\"\n      [value]=\"date?.year\"\n      i18n-aria-label=\"@@ngb.datepicker.select-year\" aria-label=\"Select year\"\n      i18n-title=\"@@ngb.datepicker.select-year\" title=\"Select year\"\n      (change)=\"changeYear($event.target.value)\">\n        <option *ngFor=\"let y of years\" [value]=\"y\">{{ i18n.getYearNumerals(y) }}</option>\n    </select>\n  `,\n                styles: [\"ngb-datepicker-navigation-select>.custom-select{-ms-flex:1 1 auto;flex:1 1 auto;padding:0 .5rem;font-size:.875rem;height:1.85rem}\"]\n            }]\n    }], function () { return [{ type: NgbDatepickerI18n }]; }, { select: [{\n            type: Output\n        }], date: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], months: [{\n            type: Input\n        }], years: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @abstract\n */\nclass NgbCalendarHijri extends NgbCalendar {\n    /**\n     * @return {?}\n     */\n    getDaysPerWeek() { return 7; }\n    /**\n     * @return {?}\n     */\n    getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n    /**\n     * @return {?}\n     */\n    getWeeksPerMonth() { return 6; }\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date = this._setYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = this._setMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return this._setDay(date, date.day + number);\n            default:\n                return date;\n        }\n    }\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    getPrev(date, period = 'd', number = 1) { return this.getNext(date, period, -number); }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getWeekday(date) {\n        /** @type {?} */\n        const day = this.toGregorian(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    /**\n     * @param {?} week\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        /** @type {?} */\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        /** @type {?} */\n        const date = week[thursdayIndex];\n        /** @type {?} */\n        const jsDate = this.toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        // Thursday\n        /** @type {?} */\n        const time = jsDate.getTime();\n        /** @type {?} */\n        const MuhDate = this.toGregorian(new NgbDate(date.year, 1, 1));\n        return Math.floor(Math.round((time - MuhDate.getTime()) / 86400000) / 7) + 1;\n    }\n    /**\n     * @return {?}\n     */\n    getToday() { return this.fromGregorian(new Date()); }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day) &&\n            !isNaN(this.toGregorian(date).getTime());\n    }\n    /**\n     * @param {?} date\n     * @param {?} day\n     * @return {?}\n     */\n    _setDay(date, day) {\n        day = +day;\n        /** @type {?} */\n        let mDays = this.getDaysPerMonth(date.month, date.year);\n        if (day <= 0) {\n            while (day <= 0) {\n                date = this._setMonth(date, date.month - 1);\n                mDays = this.getDaysPerMonth(date.month, date.year);\n                day += mDays;\n            }\n        }\n        else if (day > mDays) {\n            while (day > mDays) {\n                day -= mDays;\n                date = this._setMonth(date, date.month + 1);\n                mDays = this.getDaysPerMonth(date.month, date.year);\n            }\n        }\n        date.day = day;\n        return date;\n    }\n    /**\n     * @param {?} date\n     * @param {?} month\n     * @return {?}\n     */\n    _setMonth(date, month) {\n        month = +month;\n        date.year = date.year + Math.floor((month - 1) / 12);\n        date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n        return date;\n    }\n    /**\n     * @param {?} date\n     * @param {?} year\n     * @return {?}\n     */\n    _setYear(date, year) {\n        date.year = +year;\n        return date;\n    }\n}\nNgbCalendarHijri.ɵfac = function NgbCalendarHijri_Factory(t) { return ɵNgbCalendarHijri_BaseFactory(t || NgbCalendarHijri); };\nNgbCalendarHijri.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbCalendarHijri, factory: NgbCalendarHijri.ɵfac });\nconst ɵNgbCalendarHijri_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarHijri);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbCalendarHijri, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Checks if islamic year is a leap year\n * @param {?} hYear\n * @return {?}\n */\nfunction isIslamicLeapYear(hYear) {\n    return (14 + 11 * hYear) % 30 < 11;\n}\n/**\n * Checks if gregorian years is a leap year\n * @param {?} gDate\n * @return {?}\n */\nfunction isGregorianLeapYear(gDate) {\n    /** @type {?} */\n    const year = gDate.getFullYear();\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * Returns the start of Hijri Month.\n * `hMonth` is 0 for Muharram, 1 for Safar, etc.\n * `hYear` is any Hijri hYear.\n * @param {?} hYear\n * @param {?} hMonth\n * @return {?}\n */\nfunction getIslamicMonthStart(hYear, hMonth) {\n    return Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30.0);\n}\n/**\n * Returns the start of Hijri year.\n * `year` is any Hijri year.\n * @param {?} year\n * @return {?}\n */\nfunction getIslamicYearStart(year) {\n    return (year - 1) * 354 + Math.floor((3 + 11 * year) / 30.0);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction mod(a, b) {\n    return a - b * Math.floor(a / b);\n}\n/**\n * The civil calendar is one type of Hijri calendars used in islamic countries.\n * Uses a fixed cycle of alternating 29- and 30-day months,\n * with a leap day added to the last month of 11 out of every 30 years.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * All the calculations here are based on the equations from \"Calendrical Calculations\" By Edward M. Reingold, Nachum\n * Dershowitz.\n * @type {?}\n */\nconst GREGORIAN_EPOCH = 1721425.5;\n/** @type {?} */\nconst ISLAMIC_EPOCH = 1948439.5;\nclass NgbCalendarIslamicCivil extends NgbCalendarHijri {\n    /**\n     * Returns the equivalent islamic(civil) date value for a give input Gregorian date.\n     * `gDate` is a JS Date to be converted to Hijri.\n     * @param {?} gDate\n     * @return {?}\n     */\n    fromGregorian(gDate) {\n        /** @type {?} */\n        const gYear = gDate.getFullYear();\n        /** @type {?} */\n        const gMonth = gDate.getMonth();\n        /** @type {?} */\n        const gDay = gDate.getDate();\n        /** @type {?} */\n        let julianDay = GREGORIAN_EPOCH - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) +\n            -Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n            Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear(gDate) ? -1 : -2) + gDay);\n        julianDay = Math.floor(julianDay) + 0.5;\n        /** @type {?} */\n        const days = julianDay - ISLAMIC_EPOCH;\n        /** @type {?} */\n        const hYear = Math.floor((30 * days + 10646) / 10631.0);\n        /** @type {?} */\n        let hMonth = Math.ceil((days - 29 - getIslamicYearStart(hYear)) / 29.5);\n        hMonth = Math.min(hMonth, 11);\n        /** @type {?} */\n        const hDay = Math.ceil(days - getIslamicMonthStart(hYear, hMonth)) + 1;\n        return new NgbDate(hYear, hMonth + 1, hDay);\n    }\n    /**\n     * Returns the equivalent JS date value for a give input islamic(civil) date.\n     * `hDate` is an islamic(civil) date to be converted to Gregorian.\n     * @param {?} hDate\n     * @return {?}\n     */\n    toGregorian(hDate) {\n        /** @type {?} */\n        const hYear = hDate.year;\n        /** @type {?} */\n        const hMonth = hDate.month - 1;\n        /** @type {?} */\n        const hDay = hDate.day;\n        /** @type {?} */\n        const julianDay = hDay + Math.ceil(29.5 * hMonth) + (hYear - 1) * 354 + Math.floor((3 + 11 * hYear) / 30) + ISLAMIC_EPOCH - 1;\n        /** @type {?} */\n        const wjd = Math.floor(julianDay - 0.5) + 0.5;\n        /** @type {?} */\n        const depoch = wjd - GREGORIAN_EPOCH;\n        /** @type {?} */\n        const quadricent = Math.floor(depoch / 146097);\n        /** @type {?} */\n        const dqc = mod(depoch, 146097);\n        /** @type {?} */\n        const cent = Math.floor(dqc / 36524);\n        /** @type {?} */\n        const dcent = mod(dqc, 36524);\n        /** @type {?} */\n        const quad = Math.floor(dcent / 1461);\n        /** @type {?} */\n        const dquad = mod(dcent, 1461);\n        /** @type {?} */\n        const yindex = Math.floor(dquad / 365);\n        /** @type {?} */\n        let year = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n        if (!(cent === 4 || yindex === 4)) {\n            year++;\n        }\n        /** @type {?} */\n        const gYearStart = GREGORIAN_EPOCH + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400);\n        /** @type {?} */\n        const yearday = wjd - gYearStart;\n        /** @type {?} */\n        const tjd = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) + Math.floor(739 / 12 + (isGregorianLeapYear(new Date(year, 3, 1)) ? -1 : -2) + 1);\n        /** @type {?} */\n        const leapadj = wjd < tjd ? 0 : isGregorianLeapYear(new Date(year, 3, 1)) ? 1 : 2;\n        /** @type {?} */\n        const month = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n        /** @type {?} */\n        const tjd2 = GREGORIAN_EPOCH - 1 + 365 * (year - 1) + Math.floor((year - 1) / 4) - Math.floor((year - 1) / 100) +\n            Math.floor((year - 1) / 400) +\n            Math.floor((367 * month - 362) / 12 + (month <= 2 ? 0 : isGregorianLeapYear(new Date(year, month - 1, 1)) ? -1 : -2) +\n                1);\n        /** @type {?} */\n        const day = wjd - tjd2 + 1;\n        return new Date(year, month - 1, day);\n    }\n    /**\n     * Returns the number of days in a specific Hijri month.\n     * `month` is 1 for Muharram, 2 for Safar, etc.\n     * `year` is any Hijri year.\n     * @param {?} month\n     * @param {?} year\n     * @return {?}\n     */\n    getDaysPerMonth(month, year) {\n        year = year + Math.floor(month / 13);\n        month = ((month - 1) % 12) + 1;\n        /** @type {?} */\n        let length = 29 + month % 2;\n        if (month === 12 && isIslamicLeapYear(year)) {\n            length++;\n        }\n        return length;\n    }\n}\nNgbCalendarIslamicCivil.ɵfac = function NgbCalendarIslamicCivil_Factory(t) { return ɵNgbCalendarIslamicCivil_BaseFactory(t || NgbCalendarIslamicCivil); };\nNgbCalendarIslamicCivil.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbCalendarIslamicCivil, factory: NgbCalendarIslamicCivil.ɵfac });\nconst ɵNgbCalendarIslamicCivil_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarIslamicCivil);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbCalendarIslamicCivil, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Umalqura calendar is one type of Hijri calendars used in islamic countries.\n * This Calendar is used by Saudi Arabia for administrative purpose.\n * Unlike tabular calendars, the algorithm involves astronomical calculation, but it's still deterministic.\n * http://cldr.unicode.org/development/development-process/design-proposals/islamic-calendar-types\n * @type {?}\n */\nconst GREGORIAN_FIRST_DATE = new Date(1882, 10, 12);\n/** @type {?} */\nconst GREGORIAN_LAST_DATE = new Date(2174, 10, 25);\n/** @type {?} */\nconst HIJRI_BEGIN = 1300;\n/** @type {?} */\nconst HIJRI_END = 1600;\n/** @type {?} */\nconst ONE_DAY = 1000 * 60 * 60 * 24;\n/** @type {?} */\nconst MONTH_LENGTH = [\n    // 1300-1304\n    '101010101010', '110101010100', '111011001001', '011011010100', '011011101010',\n    // 1305-1309\n    '001101101100', '101010101101', '010101010101', '011010101001', '011110010010',\n    // 1310-1314\n    '101110101001', '010111010100', '101011011010', '010101011100', '110100101101',\n    // 1315-1319\n    '011010010101', '011101001010', '101101010100', '101101101010', '010110101101',\n    // 1320-1324\n    '010010101110', '101001001111', '010100010111', '011010001011', '011010100101',\n    // 1325-1329\n    '101011010101', '001011010110', '100101011011', '010010011101', '101001001101',\n    // 1330-1334\n    '110100100110', '110110010101', '010110101100', '100110110110', '001010111010',\n    // 1335-1339\n    '101001011011', '010100101011', '101010010101', '011011001010', '101011101001',\n    // 1340-1344\n    '001011110100', '100101110110', '001010110110', '100101010110', '101011001010',\n    // 1345-1349\n    '101110100100', '101111010010', '010111011001', '001011011100', '100101101101',\n    // 1350-1354\n    '010101001101', '101010100101', '101101010010', '101110100101', '010110110100',\n    // 1355-1359\n    '100110110110', '010101010111', '001010010111', '010101001011', '011010100011',\n    // 1360-1364\n    '011101010010', '101101100101', '010101101010', '101010101011', '010100101011',\n    // 1365-1369\n    '110010010101', '110101001010', '110110100101', '010111001010', '101011010110',\n    // 1370-1374\n    '100101010111', '010010101011', '100101001011', '101010100101', '101101010010',\n    // 1375-1379\n    '101101101010', '010101110101', '001001110110', '100010110111', '010001011011',\n    // 1380-1384\n    '010101010101', '010110101001', '010110110100', '100111011010', '010011011101',\n    // 1385-1389\n    '001001101110', '100100110110', '101010101010', '110101010100', '110110110010',\n    // 1390-1394\n    '010111010101', '001011011010', '100101011011', '010010101011', '101001010101',\n    // 1395-1399\n    '101101001001', '101101100100', '101101110001', '010110110100', '101010110101',\n    // 1400-1404\n    '101001010101', '110100100101', '111010010010', '111011001001', '011011010100',\n    // 1405-1409\n    '101011101001', '100101101011', '010010101011', '101010010011', '110101001001',\n    // 1410-1414\n    '110110100100', '110110110010', '101010111001', '010010111010', '101001011011',\n    // 1415-1419\n    '010100101011', '101010010101', '101100101010', '101101010101', '010101011100',\n    // 1420-1424\n    '010010111101', '001000111101', '100100011101', '101010010101', '101101001010',\n    // 1425-1429\n    '101101011010', '010101101101', '001010110110', '100100111011', '010010011011',\n    // 1430-1434\n    '011001010101', '011010101001', '011101010100', '101101101010', '010101101100',\n    // 1435-1439\n    '101010101101', '010101010101', '101100101001', '101110010010', '101110101001',\n    // 1440-1444\n    '010111010100', '101011011010', '010101011010', '101010101011', '010110010101',\n    // 1445-1449\n    '011101001001', '011101100100', '101110101010', '010110110101', '001010110110',\n    // 1450-1454\n    '101001010110', '111001001101', '101100100101', '101101010010', '101101101010',\n    // 1455-1459\n    '010110101101', '001010101110', '100100101111', '010010010111', '011001001011',\n    // 1460-1464\n    '011010100101', '011010101100', '101011010110', '010101011101', '010010011101',\n    // 1465-1469\n    '101001001101', '110100010110', '110110010101', '010110101010', '010110110101',\n    // 1470-1474\n    '001011011010', '100101011011', '010010101101', '010110010101', '011011001010',\n    // 1475-1479\n    '011011100100', '101011101010', '010011110101', '001010110110', '100101010110',\n    // 1480-1484\n    '101010101010', '101101010100', '101111010010', '010111011001', '001011101010',\n    // 1485-1489\n    '100101101101', '010010101101', '101010010101', '101101001010', '101110100101',\n    // 1490-1494\n    '010110110010', '100110110101', '010011010110', '101010010111', '010101000111',\n    // 1495-1499\n    '011010010011', '011101001001', '101101010101', '010101101010', '101001101011',\n    // 1500-1504\n    '010100101011', '101010001011', '110101000110', '110110100011', '010111001010',\n    // 1505-1509\n    '101011010110', '010011011011', '001001101011', '100101001011', '101010100101',\n    // 1510-1514\n    '101101010010', '101101101001', '010101110101', '000101110110', '100010110111',\n    // 1515-1519\n    '001001011011', '010100101011', '010101100101', '010110110100', '100111011010',\n    // 1520-1524\n    '010011101101', '000101101101', '100010110110', '101010100110', '110101010010',\n    // 1525-1529\n    '110110101001', '010111010100', '101011011010', '100101011011', '010010101011',\n    // 1530-1534\n    '011001010011', '011100101001', '011101100010', '101110101001', '010110110010',\n    // 1535-1539\n    '101010110101', '010101010101', '101100100101', '110110010010', '111011001001',\n    // 1540-1544\n    '011011010010', '101011101001', '010101101011', '010010101011', '101001010101',\n    // 1545-1549\n    '110100101001', '110101010100', '110110101010', '100110110101', '010010111010',\n    // 1550-1554\n    '101000111011', '010010011011', '101001001101', '101010101010', '101011010101',\n    // 1555-1559\n    '001011011010', '100101011101', '010001011110', '101000101110', '110010011010',\n    // 1560-1564\n    '110101010101', '011010110010', '011010111001', '010010111010', '101001011101',\n    // 1565-1569\n    '010100101101', '101010010101', '101101010010', '101110101000', '101110110100',\n    // 1570-1574\n    '010110111001', '001011011010', '100101011010', '101101001010', '110110100100',\n    // 1575-1579\n    '111011010001', '011011101000', '101101101010', '010101101101', '010100110101',\n    // 1580-1584\n    '011010010101', '110101001010', '110110101000', '110111010100', '011011011010',\n    // 1585-1589\n    '010101011011', '001010011101', '011000101011', '101100010101', '101101001010',\n    // 1590-1594\n    '101110010101', '010110101010', '101010101110', '100100101110', '110010001111',\n    // 1595-1599\n    '010100100111', '011010010101', '011010101010', '101011010110', '010101011101',\n    // 1600\n    '001010011101'\n];\n/**\n * @param {?} date1\n * @param {?} date2\n * @return {?}\n */\nfunction getDaysDiff(date1, date2) {\n    /** @type {?} */\n    const diff = Math.abs(date1.getTime() - date2.getTime());\n    return Math.round(diff / ONE_DAY);\n}\nclass NgbCalendarIslamicUmalqura extends NgbCalendarIslamicCivil {\n    /**\n     * Returns the equivalent islamic(Umalqura) date value for a give input Gregorian date.\n     * `gdate` is s JS Date to be converted to Hijri.\n     * @param {?} gDate\n     * @return {?}\n     */\n    fromGregorian(gDate) {\n        /** @type {?} */\n        let hDay = 1;\n        /** @type {?} */\n        let hMonth = 0;\n        /** @type {?} */\n        let hYear = 1300;\n        /** @type {?} */\n        let daysDiff = getDaysDiff(gDate, GREGORIAN_FIRST_DATE);\n        if (gDate.getTime() - GREGORIAN_FIRST_DATE.getTime() >= 0 && gDate.getTime() - GREGORIAN_LAST_DATE.getTime() <= 0) {\n            /** @type {?} */\n            let year = 1300;\n            for (let i = 0; i < MONTH_LENGTH.length; i++, year++) {\n                for (let j = 0; j < 12; j++) {\n                    /** @type {?} */\n                    let numOfDays = +MONTH_LENGTH[i][j] + 29;\n                    if (daysDiff <= numOfDays) {\n                        hDay = daysDiff + 1;\n                        if (hDay > numOfDays) {\n                            hDay = 1;\n                            j++;\n                        }\n                        if (j > 11) {\n                            j = 0;\n                            year++;\n                        }\n                        hMonth = j;\n                        hYear = year;\n                        return new NgbDate(hYear, hMonth + 1, hDay);\n                    }\n                    daysDiff = daysDiff - numOfDays;\n                }\n            }\n        }\n        else {\n            return super.fromGregorian(gDate);\n        }\n    }\n    /**\n     * Converts the current Hijri date to Gregorian.\n     * @param {?} hDate\n     * @return {?}\n     */\n    toGregorian(hDate) {\n        /** @type {?} */\n        const hYear = hDate.year;\n        /** @type {?} */\n        const hMonth = hDate.month - 1;\n        /** @type {?} */\n        const hDay = hDate.day;\n        /** @type {?} */\n        let gDate = new Date(GREGORIAN_FIRST_DATE);\n        /** @type {?} */\n        let dayDiff = hDay - 1;\n        if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n            for (let y = 0; y < hYear - HIJRI_BEGIN; y++) {\n                for (let m = 0; m < 12; m++) {\n                    dayDiff += +MONTH_LENGTH[y][m] + 29;\n                }\n            }\n            for (let m = 0; m < hMonth; m++) {\n                dayDiff += +MONTH_LENGTH[hYear - HIJRI_BEGIN][m] + 29;\n            }\n            gDate.setDate(GREGORIAN_FIRST_DATE.getDate() + dayDiff);\n        }\n        else {\n            gDate = super.toGregorian(hDate);\n        }\n        return gDate;\n    }\n    /**\n     * Returns the number of days in a specific Hijri hMonth.\n     * `hMonth` is 1 for Muharram, 2 for Safar, etc.\n     * `hYear` is any Hijri hYear.\n     * @param {?} hMonth\n     * @param {?} hYear\n     * @return {?}\n     */\n    getDaysPerMonth(hMonth, hYear) {\n        if (hYear >= HIJRI_BEGIN && hYear <= HIJRI_END) {\n            /** @type {?} */\n            const pos = hYear - HIJRI_BEGIN;\n            return +MONTH_LENGTH[pos][hMonth - 1] + 29;\n        }\n        return super.getDaysPerMonth(hMonth, hYear);\n    }\n}\nNgbCalendarIslamicUmalqura.ɵfac = function NgbCalendarIslamicUmalqura_Factory(t) { return ɵNgbCalendarIslamicUmalqura_BaseFactory(t || NgbCalendarIslamicUmalqura); };\nNgbCalendarIslamicUmalqura.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbCalendarIslamicUmalqura, factory: NgbCalendarIslamicUmalqura.ɵfac });\nconst ɵNgbCalendarIslamicUmalqura_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarIslamicUmalqura);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbCalendarIslamicUmalqura, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Returns the equivalent JS date value for a give input Jalali date.\n * `jalaliDate` is an Jalali date to be converted to Gregorian.\n * @param {?} jalaliDate\n * @return {?}\n */\nfunction toGregorian(jalaliDate) {\n    /** @type {?} */\n    let jdn = jalaliToJulian(jalaliDate.year, jalaliDate.month, jalaliDate.day);\n    /** @type {?} */\n    let date = julianToGregorian(jdn);\n    date.setHours(6, 30, 3, 200);\n    return date;\n}\n/**\n * Returns the equivalent jalali date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to jalali.\n * utc to local\n * @param {?} gdate\n * @return {?}\n */\nfunction fromGregorian(gdate) {\n    /** @type {?} */\n    let g2d = gregorianToJulian(gdate.getFullYear(), gdate.getMonth() + 1, gdate.getDate());\n    return julianToJalali(g2d);\n}\n/**\n * @param {?} date\n * @param {?} yearValue\n * @return {?}\n */\nfunction setJalaliYear(date, yearValue) {\n    date.year = +yearValue;\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} month\n * @return {?}\n */\nfunction setJalaliMonth(date, month) {\n    month = +month;\n    date.year = date.year + Math.floor((month - 1) / 12);\n    date.month = Math.floor(((month - 1) % 12 + 12) % 12) + 1;\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} day\n * @return {?}\n */\nfunction setJalaliDay(date, day) {\n    /** @type {?} */\n    let mDays = getDaysPerMonth(date.month, date.year);\n    if (day <= 0) {\n        while (day <= 0) {\n            date = setJalaliMonth(date, date.month - 1);\n            mDays = getDaysPerMonth(date.month, date.year);\n            day += mDays;\n        }\n    }\n    else if (day > mDays) {\n        while (day > mDays) {\n            day -= mDays;\n            date = setJalaliMonth(date, date.month + 1);\n            mDays = getDaysPerMonth(date.month, date.year);\n        }\n    }\n    date.day = day;\n    return date;\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction mod$1(a, b) {\n    return a - b * Math.floor(a / b);\n}\n/**\n * @param {?} a\n * @param {?} b\n * @return {?}\n */\nfunction div(a, b) {\n    return Math.trunc(a / b);\n}\n/*\n This function determines if the Jalali (Persian) year is\n leap (366-day long) or is the common year (365 days), and\n finds the day in March (Gregorian calendar) of the first\n day of the Jalali year (jalaliYear).\n @param jalaliYear Jalali calendar year (-61 to 3177)\n @return\n leap: number of years since the last leap year (0 to 4)\n gYear: Gregorian year of the beginning of Jalali year\n march: the March day of Farvardin the 1st (1st day of jalaliYear)\n @see: http://www.astro.uni.torun.pl/~kb/Papers/EMP/PersianC-EMP.htm\n @see: http://www.fourmilab.ch/documents/calendar/\n */\n/**\n * @param {?} jalaliYear\n * @return {?}\n */\nfunction jalCal(jalaliYear) {\n    // Jalali years starting the 33-year rule.\n    /** @type {?} */\n    let breaks = [-61, 9, 38, 199, 426, 686, 756, 818, 1111, 1181, 1210, 1635, 2060, 2097, 2192, 2262, 2324, 2394, 2456, 3178];\n    /** @type {?} */\n    const breaksLength = breaks.length;\n    /** @type {?} */\n    const gYear = jalaliYear + 621;\n    /** @type {?} */\n    let leapJ = -14;\n    /** @type {?} */\n    let jp = breaks[0];\n    if (jalaliYear < jp || jalaliYear >= breaks[breaksLength - 1]) {\n        throw new Error('Invalid Jalali year ' + jalaliYear);\n    }\n    // Find the limiting years for the Jalali year jalaliYear.\n    /** @type {?} */\n    let jump;\n    for (let i = 1; i < breaksLength; i += 1) {\n        /** @type {?} */\n        const jm = breaks[i];\n        jump = jm - jp;\n        if (jalaliYear < jm) {\n            break;\n        }\n        leapJ = leapJ + div(jump, 33) * 8 + div(mod$1(jump, 33), 4);\n        jp = jm;\n    }\n    /** @type {?} */\n    let n = jalaliYear - jp;\n    // Find the number of leap years from AD 621 to the beginning\n    // of the current Jalali year in the Persian calendar.\n    leapJ = leapJ + div(n, 33) * 8 + div(mod$1(n, 33) + 3, 4);\n    if (mod$1(jump, 33) === 4 && jump - n === 4) {\n        leapJ += 1;\n    }\n    // And the same in the Gregorian calendar (until the year gYear).\n    /** @type {?} */\n    const leapG = div(gYear, 4) - div((div(gYear, 100) + 1) * 3, 4) - 150;\n    // Determine the Gregorian date of Farvardin the 1st.\n    /** @type {?} */\n    const march = 20 + leapJ - leapG;\n    // Find how many years have passed since the last leap year.\n    if (jump - n < 6) {\n        n = n - jump + div(jump + 4, 33) * 33;\n    }\n    /** @type {?} */\n    let leap = mod$1(mod$1(n + 1, 33) - 1, 4);\n    if (leap === -1) {\n        leap = 4;\n    }\n    return { leap: leap, gy: gYear, march: march };\n}\n/*\n Calculates Gregorian and Julian calendar dates from the Julian Day number\n (jdn) for the period since jdn=-34839655 (i.e. the year -100100 of both\n calendars) to some millions years ahead of the present.\n @param jdn Julian Day number\n @return\n gYear: Calendar year (years BC numbered 0, -1, -2, ...)\n gMonth: Calendar month (1 to 12)\n gDay: Calendar day of the month M (1 to 28/29/30/31)\n */\n/**\n * @param {?} julianDayNumber\n * @return {?}\n */\nfunction julianToGregorian(julianDayNumber) {\n    /** @type {?} */\n    let j = 4 * julianDayNumber + 139361631;\n    j = j + div(div(4 * julianDayNumber + 183187720, 146097) * 3, 4) * 4 - 3908;\n    /** @type {?} */\n    const i = div(mod$1(j, 1461), 4) * 5 + 308;\n    /** @type {?} */\n    const gDay = div(mod$1(i, 153), 5) + 1;\n    /** @type {?} */\n    const gMonth = mod$1(div(i, 153), 12) + 1;\n    /** @type {?} */\n    const gYear = div(j, 1461) - 100100 + div(8 - gMonth, 6);\n    return new Date(gYear, gMonth - 1, gDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jy Jalali year (1 to 3100)\n @param jm Jalali month (1 to 12)\n @param jd Jalali day (1 to 29/31)\n @return Julian Day number\n */\n/**\n * @param {?} gy\n * @param {?} gm\n * @param {?} gd\n * @return {?}\n */\nfunction gregorianToJulian(gy, gm, gd) {\n    /** @type {?} */\n    let d = div((gy + div(gm - 8, 6) + 100100) * 1461, 4) + div(153 * mod$1(gm + 9, 12) + 2, 5) + gd - 34840408;\n    d = d - div(div(gy + 100100 + div(gm - 8, 6), 100) * 3, 4) + 752;\n    return d;\n}\n/*\n Converts the Julian Day number to a date in the Jalali calendar.\n @param julianDayNumber Julian Day number\n @return\n jalaliYear: Jalali year (1 to 3100)\n jalaliMonth: Jalali month (1 to 12)\n jalaliDay: Jalali day (1 to 29/31)\n */\n/**\n * @param {?} julianDayNumber\n * @return {?}\n */\nfunction julianToJalali(julianDayNumber) {\n    /** @type {?} */\n    let gy = julianToGregorian(julianDayNumber).getFullYear() // Calculate Gregorian year (gy).\n    ;\n    /** @type {?} */\n    let jalaliYear = gy - 621;\n    /** @type {?} */\n    let r = jalCal(jalaliYear);\n    /** @type {?} */\n    let gregorianDay = gregorianToJulian(gy, 3, r.march);\n    /** @type {?} */\n    let jalaliDay;\n    /** @type {?} */\n    let jalaliMonth;\n    /** @type {?} */\n    let numberOfDays;\n    // Find number of days that passed since 1 Farvardin.\n    numberOfDays = julianDayNumber - gregorianDay;\n    if (numberOfDays >= 0) {\n        if (numberOfDays <= 185) {\n            // The first 6 months.\n            jalaliMonth = 1 + div(numberOfDays, 31);\n            jalaliDay = mod$1(numberOfDays, 31) + 1;\n            return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n        }\n        else {\n            // The remaining months.\n            numberOfDays -= 186;\n        }\n    }\n    else {\n        // Previous Jalali year.\n        jalaliYear -= 1;\n        numberOfDays += 179;\n        if (r.leap === 1) {\n            numberOfDays += 1;\n        }\n    }\n    jalaliMonth = 7 + div(numberOfDays, 30);\n    jalaliDay = mod$1(numberOfDays, 30) + 1;\n    return new NgbDate(jalaliYear, jalaliMonth, jalaliDay);\n}\n/*\n Converts a date of the Jalali calendar to the Julian Day number.\n @param jYear Jalali year (1 to 3100)\n @param jMonth Jalali month (1 to 12)\n @param jDay Jalali day (1 to 29/31)\n @return Julian Day number\n */\n/**\n * @param {?} jYear\n * @param {?} jMonth\n * @param {?} jDay\n * @return {?}\n */\nfunction jalaliToJulian(jYear, jMonth, jDay) {\n    /** @type {?} */\n    let r = jalCal(jYear);\n    return gregorianToJulian(r.gy, 3, r.march) + (jMonth - 1) * 31 - div(jMonth, 7) * (jMonth - 7) + jDay - 1;\n}\n/**\n * Returns the number of days in a specific jalali month.\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nfunction getDaysPerMonth(month, year) {\n    if (month <= 6) {\n        return 31;\n    }\n    if (month <= 11) {\n        return 30;\n    }\n    if (jalCal(year).leap === 0) {\n        return 30;\n    }\n    return 29;\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbCalendarPersian extends NgbCalendar {\n    /**\n     * @return {?}\n     */\n    getDaysPerWeek() { return 7; }\n    /**\n     * @return {?}\n     */\n    getMonths() { return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]; }\n    /**\n     * @return {?}\n     */\n    getWeeksPerMonth() { return 6; }\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date = setJalaliYear(date, date.year + number);\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = setJalaliMonth(date, date.month + number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return setJalaliDay(date, date.day + number);\n            default:\n                return date;\n        }\n    }\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    getPrev(date, period = 'd', number = 1) { return this.getNext(date, period, -number); }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getWeekday(date) {\n        /** @type {?} */\n        const day = toGregorian(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    /**\n     * @param {?} week\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    getWeekNumber(week, firstDayOfWeek) {\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        if (firstDayOfWeek === 7) {\n            firstDayOfWeek = 0;\n        }\n        /** @type {?} */\n        const thursdayIndex = (4 + 7 - firstDayOfWeek) % 7;\n        /** @type {?} */\n        const date = week[thursdayIndex];\n        /** @type {?} */\n        const jsDate = toGregorian(date);\n        jsDate.setDate(jsDate.getDate() + 4 - (jsDate.getDay() || 7)); // Thursday\n        // Thursday\n        /** @type {?} */\n        const time = jsDate.getTime();\n        /** @type {?} */\n        const startDate = toGregorian(new NgbDate(date.year, 1, 1));\n        return Math.floor(Math.round((time - startDate.getTime()) / 86400000) / 7) + 1;\n    }\n    /**\n     * @return {?}\n     */\n    getToday() { return fromGregorian(new Date()); }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) &&\n            !isNaN(toGregorian(date).getTime());\n    }\n}\nNgbCalendarPersian.ɵfac = function NgbCalendarPersian_Factory(t) { return ɵNgbCalendarPersian_BaseFactory(t || NgbCalendarPersian); };\nNgbCalendarPersian.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbCalendarPersian, factory: NgbCalendarPersian.ɵfac });\nconst ɵNgbCalendarPersian_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarPersian);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbCalendarPersian, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst PARTS_PER_HOUR = 1080;\n/** @type {?} */\nconst PARTS_PER_DAY = 24 * PARTS_PER_HOUR;\n/** @type {?} */\nconst PARTS_FRACTIONAL_MONTH = 12 * PARTS_PER_HOUR + 793;\n/** @type {?} */\nconst PARTS_PER_MONTH = 29 * PARTS_PER_DAY + PARTS_FRACTIONAL_MONTH;\n/** @type {?} */\nconst BAHARAD = 11 * PARTS_PER_HOUR + 204;\n/** @type {?} */\nconst HEBREW_DAY_ON_JAN_1_1970 = 2092591;\n/** @type {?} */\nconst GREGORIAN_EPOCH$1 = 1721425.5;\n/**\n * @param {?} year\n * @return {?}\n */\nfunction isGregorianLeapYear$1(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n}\n/**\n * @param {?} year\n * @return {?}\n */\nfunction numberOfFirstDayInYear(year) {\n    /** @type {?} */\n    let monthsBeforeYear = Math.floor((235 * year - 234) / 19);\n    /** @type {?} */\n    let fractionalMonthsBeforeYear = monthsBeforeYear * PARTS_FRACTIONAL_MONTH + BAHARAD;\n    /** @type {?} */\n    let dayNumber = monthsBeforeYear * 29 + Math.floor(fractionalMonthsBeforeYear / PARTS_PER_DAY);\n    /** @type {?} */\n    let timeOfDay = fractionalMonthsBeforeYear % PARTS_PER_DAY;\n    /** @type {?} */\n    let dayOfWeek = dayNumber % 7;\n    if (dayOfWeek === 2 || dayOfWeek === 4 || dayOfWeek === 6) {\n        dayNumber++;\n        dayOfWeek = dayNumber % 7;\n    }\n    if (dayOfWeek === 1 && timeOfDay > 15 * PARTS_PER_HOUR + 204 && !isHebrewLeapYear(year)) {\n        dayNumber += 2;\n    }\n    else if (dayOfWeek === 0 && timeOfDay > 21 * PARTS_PER_HOUR + 589 && isHebrewLeapYear(year - 1)) {\n        dayNumber++;\n    }\n    return dayNumber;\n}\n/**\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nfunction getDaysInGregorianMonth(month, year) {\n    /** @type {?} */\n    let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    if (isGregorianLeapYear$1(year)) {\n        days[1]++;\n    }\n    return days[month - 1];\n}\n/**\n * @param {?} year\n * @return {?}\n */\nfunction getHebrewMonths(year) {\n    return isHebrewLeapYear(year) ? 13 : 12;\n}\n/**\n * Returns the number of days in a specific Hebrew year.\n * `year` is any Hebrew year.\n * @param {?} year\n * @return {?}\n */\nfunction getDaysInHebrewYear(year) {\n    return numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n}\n/**\n * @param {?} year\n * @return {?}\n */\nfunction isHebrewLeapYear(year) {\n    /** @type {?} */\n    let b = (year * 12 + 17) % 19;\n    return b >= ((b < 0) ? -7 : 12);\n}\n/**\n * Returns the number of days in a specific Hebrew month.\n * `month` is 1 for Nisan, 2 for Iyar etc. Note: Hebrew leap year contains 13 months.\n * `year` is any Hebrew year.\n * @param {?} month\n * @param {?} year\n * @return {?}\n */\nfunction getDaysInHebrewMonth(month, year) {\n    /** @type {?} */\n    let yearLength = numberOfFirstDayInYear(year + 1) - numberOfFirstDayInYear(year);\n    /** @type {?} */\n    let yearType = (yearLength <= 380 ? yearLength : (yearLength - 30)) - 353;\n    /** @type {?} */\n    let leapYear = isHebrewLeapYear(year);\n    /** @type {?} */\n    let daysInMonth = leapYear ? [30, 29, 29, 29, 30, 30, 29, 30, 29, 30, 29, 30, 29] :\n        [30, 29, 29, 29, 30, 29, 30, 29, 30, 29, 30, 29];\n    if (yearType > 0) {\n        daysInMonth[2]++; // Kislev gets an extra day in normal or complete years.\n    }\n    if (yearType > 1) {\n        daysInMonth[1]++; // Heshvan gets an extra day in complete years only.\n    }\n    return daysInMonth[month - 1];\n}\n/**\n * @param {?} date\n * @return {?}\n */\nfunction getDayNumberInHebrewYear(date) {\n    /** @type {?} */\n    let numberOfDay = 0;\n    for (let i = 1; i < date.month; i++) {\n        numberOfDay += getDaysInHebrewMonth(i, date.year);\n    }\n    return numberOfDay + date.day;\n}\n/**\n * @param {?} date\n * @param {?} val\n * @return {?}\n */\nfunction setHebrewMonth(date, val) {\n    /** @type {?} */\n    let after = val >= 0;\n    if (!after) {\n        val = -val;\n    }\n    while (val > 0) {\n        if (after) {\n            if (val > getHebrewMonths(date.year) - date.month) {\n                val -= getHebrewMonths(date.year) - date.month + 1;\n                date.year++;\n                date.month = 1;\n            }\n            else {\n                date.month += val;\n                val = 0;\n            }\n        }\n        else {\n            if (val >= date.month) {\n                date.year--;\n                val -= date.month;\n                date.month = getHebrewMonths(date.year);\n            }\n            else {\n                date.month -= val;\n                val = 0;\n            }\n        }\n    }\n    return date;\n}\n/**\n * @param {?} date\n * @param {?} val\n * @return {?}\n */\nfunction setHebrewDay(date, val) {\n    /** @type {?} */\n    let after = val >= 0;\n    if (!after) {\n        val = -val;\n    }\n    while (val > 0) {\n        if (after) {\n            if (val > getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date)) {\n                val -= getDaysInHebrewYear(date.year) - getDayNumberInHebrewYear(date) + 1;\n                date.year++;\n                date.month = 1;\n                date.day = 1;\n            }\n            else if (val > getDaysInHebrewMonth(date.month, date.year) - date.day) {\n                val -= getDaysInHebrewMonth(date.month, date.year) - date.day + 1;\n                date.month++;\n                date.day = 1;\n            }\n            else {\n                date.day += val;\n                val = 0;\n            }\n        }\n        else {\n            if (val >= date.day) {\n                val -= date.day;\n                date.month--;\n                if (date.month === 0) {\n                    date.year--;\n                    date.month = getHebrewMonths(date.year);\n                }\n                date.day = getDaysInHebrewMonth(date.month, date.year);\n            }\n            else {\n                date.day -= val;\n                val = 0;\n            }\n        }\n    }\n    return date;\n}\n/**\n * Returns the equivalent Hebrew date value for a give input Gregorian date.\n * `gdate` is a JS Date to be converted to Hebrew date.\n * @param {?} gdate\n * @return {?}\n */\nfunction fromGregorian$1(gdate) {\n    /** @type {?} */\n    const date = new Date(gdate);\n    /** @type {?} */\n    const gYear = date.getFullYear();\n    /** @type {?} */\n    const gMonth = date.getMonth();\n    /** @type {?} */\n    const gDay = date.getDate();\n    /** @type {?} */\n    let julianDay = GREGORIAN_EPOCH$1 - 1 + 365 * (gYear - 1) + Math.floor((gYear - 1) / 4) -\n        Math.floor((gYear - 1) / 100) + Math.floor((gYear - 1) / 400) +\n        Math.floor((367 * (gMonth + 1) - 362) / 12 + (gMonth + 1 <= 2 ? 0 : isGregorianLeapYear$1(gYear) ? -1 : -2) + gDay);\n    julianDay = Math.floor(julianDay + 0.5);\n    /** @type {?} */\n    let daysSinceHebEpoch = julianDay - 347997;\n    /** @type {?} */\n    let monthsSinceHebEpoch = Math.floor(daysSinceHebEpoch * PARTS_PER_DAY / PARTS_PER_MONTH);\n    /** @type {?} */\n    let hYear = Math.floor((monthsSinceHebEpoch * 19 + 234) / 235) + 1;\n    /** @type {?} */\n    let firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n    /** @type {?} */\n    let dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n    while (dayOfYear < 1) {\n        hYear--;\n        firstDayOfThisYear = numberOfFirstDayInYear(hYear);\n        dayOfYear = daysSinceHebEpoch - firstDayOfThisYear;\n    }\n    /** @type {?} */\n    let hMonth = 1;\n    /** @type {?} */\n    let hDay = dayOfYear;\n    while (hDay > getDaysInHebrewMonth(hMonth, hYear)) {\n        hDay -= getDaysInHebrewMonth(hMonth, hYear);\n        hMonth++;\n    }\n    return new NgbDate(hYear, hMonth, hDay);\n}\n/**\n * Returns the equivalent JS date value for a given Hebrew date.\n * `hebrewDate` is an Hebrew date to be converted to Gregorian.\n * @param {?} hebrewDate\n * @return {?}\n */\nfunction toGregorian$1(hebrewDate) {\n    /** @type {?} */\n    const hYear = hebrewDate.year;\n    /** @type {?} */\n    const hMonth = hebrewDate.month;\n    /** @type {?} */\n    const hDay = hebrewDate.day;\n    /** @type {?} */\n    let days = numberOfFirstDayInYear(hYear);\n    for (let i = 1; i < hMonth; i++) {\n        days += getDaysInHebrewMonth(i, hYear);\n    }\n    days += hDay;\n    /** @type {?} */\n    let diffDays = days - HEBREW_DAY_ON_JAN_1_1970;\n    /** @type {?} */\n    let after = diffDays >= 0;\n    if (!after) {\n        diffDays = -diffDays;\n    }\n    /** @type {?} */\n    let gYear = 1970;\n    /** @type {?} */\n    let gMonth = 1;\n    /** @type {?} */\n    let gDay = 1;\n    while (diffDays > 0) {\n        if (after) {\n            if (diffDays >= (isGregorianLeapYear$1(gYear) ? 366 : 365)) {\n                diffDays -= isGregorianLeapYear$1(gYear) ? 366 : 365;\n                gYear++;\n            }\n            else if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n                diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n                gMonth++;\n            }\n            else {\n                gDay += diffDays;\n                diffDays = 0;\n            }\n        }\n        else {\n            if (diffDays >= (isGregorianLeapYear$1(gYear - 1) ? 366 : 365)) {\n                diffDays -= isGregorianLeapYear$1(gYear - 1) ? 366 : 365;\n                gYear--;\n            }\n            else {\n                if (gMonth > 1) {\n                    gMonth--;\n                }\n                else {\n                    gMonth = 12;\n                    gYear--;\n                }\n                if (diffDays >= getDaysInGregorianMonth(gMonth, gYear)) {\n                    diffDays -= getDaysInGregorianMonth(gMonth, gYear);\n                }\n                else {\n                    gDay = getDaysInGregorianMonth(gMonth, gYear) - diffDays + 1;\n                    diffDays = 0;\n                }\n            }\n        }\n    }\n    return new Date(gYear, gMonth - 1, gDay);\n}\n/**\n * @param {?} numerals\n * @return {?}\n */\nfunction hebrewNumerals(numerals) {\n    if (!numerals) {\n        return '';\n    }\n    /** @type {?} */\n    const hArray0_9 = ['', '\\u05d0', '\\u05d1', '\\u05d2', '\\u05d3', '\\u05d4', '\\u05d5', '\\u05d6', '\\u05d7', '\\u05d8'];\n    /** @type {?} */\n    const hArray10_19 = [\n        '\\u05d9', '\\u05d9\\u05d0', '\\u05d9\\u05d1', '\\u05d9\\u05d2', '\\u05d9\\u05d3', '\\u05d8\\u05d5', '\\u05d8\\u05d6',\n        '\\u05d9\\u05d6', '\\u05d9\\u05d7', '\\u05d9\\u05d8'\n    ];\n    /** @type {?} */\n    const hArray20_90 = ['', '', '\\u05db', '\\u05dc', '\\u05de', '\\u05e0', '\\u05e1', '\\u05e2', '\\u05e4', '\\u05e6'];\n    /** @type {?} */\n    const hArray100_900 = [\n        '', '\\u05e7', '\\u05e8', '\\u05e9', '\\u05ea', '\\u05ea\\u05e7', '\\u05ea\\u05e8', '\\u05ea\\u05e9', '\\u05ea\\u05ea',\n        '\\u05ea\\u05ea\\u05e7'\n    ];\n    /** @type {?} */\n    const hArray1000_9000 = [\n        '', '\\u05d0', '\\u05d1', '\\u05d1\\u05d0', '\\u05d1\\u05d1', '\\u05d4', '\\u05d4\\u05d0', '\\u05d4\\u05d1',\n        '\\u05d4\\u05d1\\u05d0', '\\u05d4\\u05d1\\u05d1'\n    ];\n    /** @type {?} */\n    const geresh = '\\u05f3';\n    /** @type {?} */\n    const gershaim = '\\u05f4';\n    /** @type {?} */\n    let mem = 0;\n    /** @type {?} */\n    let result = [];\n    /** @type {?} */\n    let step = 0;\n    while (numerals > 0) {\n        /** @type {?} */\n        let m = numerals % 10;\n        if (step === 0) {\n            mem = m;\n        }\n        else if (step === 1) {\n            if (m !== 1) {\n                result.unshift(hArray20_90[m], hArray0_9[mem]);\n            }\n            else {\n                result.unshift(hArray10_19[mem]);\n            }\n        }\n        else if (step === 2) {\n            result.unshift(hArray100_900[m]);\n        }\n        else {\n            if (m !== 5) {\n                result.unshift(hArray1000_9000[m], geresh, ' ');\n            }\n            break;\n        }\n        numerals = Math.floor(numerals / 10);\n        if (step === 0 && numerals === 0) {\n            result.unshift(hArray0_9[m]);\n        }\n        step++;\n    }\n    result = result.join('').split('');\n    if (result.length === 1) {\n        result.push(geresh);\n    }\n    else if (result.length > 1) {\n        result.splice(result.length - 1, 0, gershaim);\n    }\n    return result.join('');\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * \\@since 3.2.0\n */\nclass NgbCalendarHebrew extends NgbCalendar {\n    /**\n     * @return {?}\n     */\n    getDaysPerWeek() { return 7; }\n    /**\n     * @param {?=} year\n     * @return {?}\n     */\n    getMonths(year) {\n        if (year && isHebrewLeapYear(year)) {\n            return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13];\n        }\n        else {\n            return [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n        }\n    }\n    /**\n     * @return {?}\n     */\n    getWeeksPerMonth() { return 6; }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    isValid(date) {\n        /** @type {?} */\n        let b = date && isNumber(date.year) && isNumber(date.month) && isNumber(date.day);\n        b = b && date.month > 0 && date.month <= (isHebrewLeapYear(date.year) ? 13 : 12);\n        b = b && date.day > 0 && date.day <= getDaysInHebrewMonth(date.month, date.year);\n        return b && !isNaN(toGregorian$1(date).getTime());\n    }\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    getNext(date, period = 'd', number = 1) {\n        date = new NgbDate(date.year, date.month, date.day);\n        switch (period) {\n            case 'y':\n                date.year += number;\n                date.month = 1;\n                date.day = 1;\n                return date;\n            case 'm':\n                date = setHebrewMonth(date, number);\n                date.day = 1;\n                return date;\n            case 'd':\n                return setHebrewDay(date, number);\n            default:\n                return date;\n        }\n    }\n    /**\n     * @param {?} date\n     * @param {?=} period\n     * @param {?=} number\n     * @return {?}\n     */\n    getPrev(date, period = 'd', number = 1) { return this.getNext(date, period, -number); }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getWeekday(date) {\n        /** @type {?} */\n        const day = toGregorian$1(date).getDay();\n        // in JS Date Sun=0, in ISO 8601 Sun=7\n        return day === 0 ? 7 : day;\n    }\n    /**\n     * @param {?} week\n     * @param {?} firstDayOfWeek\n     * @return {?}\n     */\n    getWeekNumber(week, firstDayOfWeek) {\n        /** @type {?} */\n        const date = week[week.length - 1];\n        return Math.ceil(getDayNumberInHebrewYear(date) / 7);\n    }\n    /**\n     * @return {?}\n     */\n    getToday() { return fromGregorian$1(new Date()); }\n    /**\n     * \\@since 3.4.0\n     * @param {?} date\n     * @return {?}\n     */\n    toGregorian(date) { return fromJSDate(toGregorian$1(date)); }\n    /**\n     * \\@since 3.4.0\n     * @param {?} date\n     * @return {?}\n     */\n    fromGregorian(date) { return fromGregorian$1(toJSDate(date)); }\n}\nNgbCalendarHebrew.ɵfac = function NgbCalendarHebrew_Factory(t) { return ɵNgbCalendarHebrew_BaseFactory(t || NgbCalendarHebrew); };\nNgbCalendarHebrew.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbCalendarHebrew, factory: NgbCalendarHebrew.ɵfac });\nconst ɵNgbCalendarHebrew_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(NgbCalendarHebrew);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbCalendarHebrew, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst WEEKDAYS = ['שני', 'שלישי', 'רביעי', 'חמישי', 'שישי', 'שבת', 'ראשון'];\n/** @type {?} */\nconst MONTHS = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n/** @type {?} */\nconst MONTHS_LEAP = ['תשרי', 'חשון', 'כסלו', 'טבת', 'שבט', 'אדר א׳', 'אדר ב׳', 'ניסן', 'אייר', 'סיון', 'תמוז', 'אב', 'אלול'];\n/**\n * \\@since 3.2.0\n */\nclass NgbDatepickerI18nHebrew extends NgbDatepickerI18n {\n    /**\n     * @param {?} month\n     * @param {?=} year\n     * @return {?}\n     */\n    getMonthShortName(month, year) { return this.getMonthFullName(month, year); }\n    /**\n     * @param {?} month\n     * @param {?=} year\n     * @return {?}\n     */\n    getMonthFullName(month, year) {\n        return isHebrewLeapYear(year) ? MONTHS_LEAP[month - 1] : MONTHS[month - 1];\n    }\n    /**\n     * @param {?} weekday\n     * @return {?}\n     */\n    getWeekdayShortName(weekday) { return WEEKDAYS[weekday - 1]; }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayAriaLabel(date) {\n        return `${hebrewNumerals(date.day)} ${this.getMonthFullName(date.month, date.year)} ${hebrewNumerals(date.year)}`;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    getDayNumerals(date) { return hebrewNumerals(date.day); }\n    /**\n     * @param {?} weekNumber\n     * @return {?}\n     */\n    getWeekNumerals(weekNumber) { return hebrewNumerals(weekNumber); }\n    /**\n     * @param {?} year\n     * @return {?}\n     */\n    getYearNumerals(year) { return hebrewNumerals(year); }\n}\nNgbDatepickerI18nHebrew.ɵfac = function NgbDatepickerI18nHebrew_Factory(t) { return ɵNgbDatepickerI18nHebrew_BaseFactory(t || NgbDatepickerI18nHebrew); };\nNgbDatepickerI18nHebrew.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbDatepickerI18nHebrew, factory: NgbDatepickerI18nHebrew.ɵfac });\nconst ɵNgbDatepickerI18nHebrew_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(NgbDatepickerI18nHebrew);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDatepickerI18nHebrew, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * [`NgbDateAdapter`](#/components/datepicker/api#NgbDateAdapter) implementation that uses\n * native javascript dates as a user date model.\n */\nclass NgbDateNativeAdapter extends NgbDateAdapter {\n    /**\n     * Converts a native `Date` to a `NgbDateStruct`.\n     * @param {?} date\n     * @return {?}\n     */\n    fromModel(date) {\n        return (date instanceof Date && !isNaN(date.getTime())) ? this._fromNativeDate(date) : null;\n    }\n    /**\n     * Converts a `NgbDateStruct` to a native `Date`.\n     * @param {?} date\n     * @return {?}\n     */\n    toModel(date) {\n        return date && isInteger(date.year) && isInteger(date.month) && isInteger(date.day) ? this._toNativeDate(date) :\n            null;\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    _fromNativeDate(date) {\n        return { year: date.getFullYear(), month: date.getMonth() + 1, day: date.getDate() };\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    _toNativeDate(date) {\n        /** @type {?} */\n        const jsDate = new Date(date.year, date.month - 1, date.day, 12);\n        // avoid 30 -> 1930 conversion\n        jsDate.setFullYear(date.year);\n        return jsDate;\n    }\n}\nNgbDateNativeAdapter.ɵfac = function NgbDateNativeAdapter_Factory(t) { return ɵNgbDateNativeAdapter_BaseFactory(t || NgbDateNativeAdapter); };\nNgbDateNativeAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbDateNativeAdapter, factory: NgbDateNativeAdapter.ɵfac });\nconst ɵNgbDateNativeAdapter_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(NgbDateNativeAdapter);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDateNativeAdapter, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * Same as [`NgbDateNativeAdapter`](#/components/datepicker/api#NgbDateNativeAdapter), but with UTC dates.\n *\n * \\@since 3.2.0\n */\nclass NgbDateNativeUTCAdapter extends NgbDateNativeAdapter {\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    _fromNativeDate(date) {\n        return { year: date.getUTCFullYear(), month: date.getUTCMonth() + 1, day: date.getUTCDate() };\n    }\n    /**\n     * @param {?} date\n     * @return {?}\n     */\n    _toNativeDate(date) {\n        /** @type {?} */\n        const jsDate = new Date(Date.UTC(date.year, date.month - 1, date.day));\n        // avoid 30 -> 1930 conversion\n        jsDate.setUTCFullYear(date.year);\n        return jsDate;\n    }\n}\nNgbDateNativeUTCAdapter.ɵfac = function NgbDateNativeUTCAdapter_Factory(t) { return ɵNgbDateNativeUTCAdapter_BaseFactory(t || NgbDateNativeUTCAdapter); };\nNgbDateNativeUTCAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbDateNativeUTCAdapter, factory: NgbDateNativeUTCAdapter.ɵfac });\nconst ɵNgbDateNativeUTCAdapter_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(NgbDateNativeUTCAdapter);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDateNativeUTCAdapter, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbDatepickerModule {\n    /**\n     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n     * Will be removed in 4.0.0.\n     *\n     * @deprecated 3.0.0\n     * @return {?}\n     */\n    static forRoot() { return { ngModule: NgbDatepickerModule }; }\n}\nNgbDatepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbDatepickerModule });\nNgbDatepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbDatepickerModule_Factory(t) { return new (t || NgbDatepickerModule)(); }, imports: [[CommonModule, FormsModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbDatepickerModule, { declarations: function () { return [NgbDatepicker, NgbDatepickerMonthView, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView, NgbInputDatepicker]; }, imports: function () { return [CommonModule, FormsModule]; }, exports: function () { return [NgbDatepicker, NgbInputDatepicker]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDatepickerModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [\n                    NgbDatepicker, NgbDatepickerMonthView, NgbDatepickerNavigation, NgbDatepickerNavigationSelect, NgbDatepickerDayView,\n                    NgbInputDatepicker\n                ],\n                exports: [NgbDatepicker, NgbInputDatepicker],\n                imports: [CommonModule, FormsModule],\n                entryComponents: [NgbDatepicker]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbDropdown`](#/components/dropdown/api#NgbDropdown) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the dropdowns used in the application.\n */\nclass NgbDropdownConfig {\n    constructor() {\n        this.autoClose = true;\n        this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n    }\n}\nNgbDropdownConfig.ɵfac = function NgbDropdownConfig_Factory(t) { return new (t || NgbDropdownConfig)(); };\nNgbDropdownConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbDropdownConfig, factory: NgbDropdownConfig.ɵfac, providedIn: 'root' });\n/** @nocollapse */ NgbDropdownConfig.ngInjectableDef = defineInjectable({ factory: function NgbDropdownConfig_Factory() { return new NgbDropdownConfig(); }, token: NgbDropdownConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDropdownConfig, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbNavbar {\n}\nNgbNavbar.ɵfac = function NgbNavbar_Factory(t) { return new (t || NgbNavbar)(); };\nNgbNavbar.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbNavbar, selectors: [[\"\", 8, \"navbar\"]] });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbNavbar, [{\n        type: Directive,\n        args: [{ selector: '.navbar' }]\n    }], null, null); })();\n/**\n * A directive you should put put on a dropdown item to enable keyboard navigation.\n * Arrow keys will move focus between items marked with this directive.\n *\n * \\@since 4.1.0\n */\nclass NgbDropdownItem {\n    /**\n     * @param {?} elementRef\n     */\n    constructor(elementRef) {\n        this.elementRef = elementRef;\n        this._disabled = false;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set disabled(value) {\n        this._disabled = (/** @type {?} */ (value)) === '' || value === true; // accept an empty attribute as true\n    }\n    /**\n     * @return {?}\n     */\n    get disabled() { return this._disabled; }\n}\nNgbDropdownItem.ɵfac = function NgbDropdownItem_Factory(t) { return new (t || NgbDropdownItem)(ɵngcc0.ɵɵdirectiveInject(ElementRef)); };\nNgbDropdownItem.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbDropdownItem, selectors: [[\"\", \"ngbDropdownItem\", \"\"]], hostAttrs: [1, \"dropdown-item\"], hostVars: 2, hostBindings: function NgbDropdownItem_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"disabled\", ctx.disabled);\n    } }, inputs: { disabled: \"disabled\" } });\n/** @nocollapse */\nNgbDropdownItem.ctorParameters = () => [\n    { type: ElementRef }\n];\nNgbDropdownItem.propDecorators = {\n    disabled: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDropdownItem, [{\n        type: Directive,\n        args: [{ selector: '[ngbDropdownItem]', host: { 'class': 'dropdown-item', '[class.disabled]': 'disabled' } }]\n    }], function () { return [{ type: ElementRef }]; }, { disabled: [{\n            type: Input\n        }] }); })();\n/**\n * A directive that wraps dropdown menu content and dropdown items.\n */\nclass NgbDropdownMenu {\n    /**\n     * @param {?} dropdown\n     */\n    constructor(dropdown) {\n        this.dropdown = dropdown;\n        this.placement = 'bottom';\n        this.isOpen = false;\n    }\n}\nNgbDropdownMenu.ɵfac = function NgbDropdownMenu_Factory(t) { return new (t || NgbDropdownMenu)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgbDropdown))); };\nNgbDropdownMenu.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbDropdownMenu, selectors: [[\"\", \"ngbDropdownMenu\", \"\"]], contentQueries: function NgbDropdownMenu_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownItem, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.menuItems = _t);\n    } }, hostVars: 5, hostBindings: function NgbDropdownMenu_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keydown.ArrowUp\", function NgbDropdownMenu_keydown_ArrowUp_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.ArrowDown\", function NgbDropdownMenu_keydown_ArrowDown_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.Home\", function NgbDropdownMenu_keydown_Home_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.End\", function NgbDropdownMenu_keydown_End_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.Enter\", function NgbDropdownMenu_keydown_Enter_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.Space\", function NgbDropdownMenu_keydown_Space_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"x-placement\", ctx.placement);\n        ɵngcc0.ɵɵclassProp(\"dropdown-menu\", true)(\"show\", ctx.dropdown.isOpen());\n    } } });\n/** @nocollapse */\nNgbDropdownMenu.ctorParameters = () => [\n    { type: NgbDropdown, decorators: [{ type: Inject, args: [forwardRef(() => NgbDropdown),] }] }\n];\nNgbDropdownMenu.propDecorators = {\n    menuItems: [{ type: ContentChildren, args: [NgbDropdownItem,] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDropdownMenu, [{\n        type: Directive,\n        args: [{\n                selector: '[ngbDropdownMenu]',\n                host: {\n                    '[class.dropdown-menu]': 'true',\n                    '[class.show]': 'dropdown.isOpen()',\n                    '[attr.x-placement]': 'placement',\n                    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n                    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n                    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n                    '(keydown.End)': 'dropdown.onKeyDown($event)',\n                    '(keydown.Enter)': 'dropdown.onKeyDown($event)',\n                    '(keydown.Space)': 'dropdown.onKeyDown($event)'\n                }\n            }]\n    }], function () { return [{ type: NgbDropdown, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => NgbDropdown)]\n            }] }]; }, { menuItems: [{\n            type: ContentChildren,\n            args: [NgbDropdownItem]\n        }] }); })();\n/**\n * A directive to mark an element to which dropdown menu will be anchored.\n *\n * This is a simple version of the `NgbDropdownToggle` directive.\n * It plays the same role, but doesn't listen to click events to toggle dropdown menu thus enabling support\n * for events other than click.\n *\n * \\@since 1.1.0\n */\nclass NgbDropdownAnchor {\n    /**\n     * @param {?} dropdown\n     * @param {?} _elementRef\n     */\n    constructor(dropdown, _elementRef) {\n        this.dropdown = dropdown;\n        this._elementRef = _elementRef;\n        this.anchorEl = _elementRef.nativeElement;\n    }\n    /**\n     * @return {?}\n     */\n    getNativeElement() { return this._elementRef.nativeElement; }\n}\nNgbDropdownAnchor.ɵfac = function NgbDropdownAnchor_Factory(t) { return new (t || NgbDropdownAnchor)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgbDropdown)), ɵngcc0.ɵɵdirectiveInject(ElementRef)); };\nNgbDropdownAnchor.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbDropdownAnchor, selectors: [[\"\", \"ngbDropdownAnchor\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\", 1, \"dropdown-toggle\"], hostVars: 1, hostBindings: function NgbDropdownAnchor_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.dropdown.isOpen());\n    } } });\n/** @nocollapse */\nNgbDropdownAnchor.ctorParameters = () => [\n    { type: NgbDropdown, decorators: [{ type: Inject, args: [forwardRef(() => NgbDropdown),] }] },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDropdownAnchor, [{\n        type: Directive,\n        args: [{\n                selector: '[ngbDropdownAnchor]',\n                host: { 'class': 'dropdown-toggle', 'aria-haspopup': 'true', '[attr.aria-expanded]': 'dropdown.isOpen()' }\n            }]\n    }], function () { return [{ type: NgbDropdown, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => NgbDropdown)]\n            }] }, { type: ElementRef }]; }, null); })();\n/**\n * A directive to mark an element that will toggle dropdown via the `click` event.\n *\n * You can also use `NgbDropdownAnchor` as an alternative.\n */\nclass NgbDropdownToggle extends NgbDropdownAnchor {\n    /**\n     * @param {?} dropdown\n     * @param {?} elementRef\n     */\n    constructor(dropdown, elementRef) {\n        super(dropdown, elementRef);\n    }\n}\nNgbDropdownToggle.ɵfac = function NgbDropdownToggle_Factory(t) { return new (t || NgbDropdownToggle)(ɵngcc0.ɵɵdirectiveInject(forwardRef(() => NgbDropdown)), ɵngcc0.ɵɵdirectiveInject(ElementRef)); };\nNgbDropdownToggle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbDropdownToggle, selectors: [[\"\", \"ngbDropdownToggle\", \"\"]], hostAttrs: [\"aria-haspopup\", \"true\", 1, \"dropdown-toggle\"], hostVars: 1, hostBindings: function NgbDropdownToggle_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function NgbDropdownToggle_click_HostBindingHandler() { return ctx.dropdown.toggle(); })(\"keydown.ArrowUp\", function NgbDropdownToggle_keydown_ArrowUp_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.ArrowDown\", function NgbDropdownToggle_keydown_ArrowDown_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.Home\", function NgbDropdownToggle_keydown_Home_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); })(\"keydown.End\", function NgbDropdownToggle_keydown_End_HostBindingHandler($event) { return ctx.dropdown.onKeyDown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-expanded\", ctx.dropdown.isOpen());\n    } }, features: [ɵngcc0.ɵɵProvidersFeature([{ provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle) }]), ɵngcc0.ɵɵInheritDefinitionFeature] });\n/** @nocollapse */\nNgbDropdownToggle.ctorParameters = () => [\n    { type: NgbDropdown, decorators: [{ type: Inject, args: [forwardRef(() => NgbDropdown),] }] },\n    { type: ElementRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDropdownToggle, [{\n        type: Directive,\n        args: [{\n                selector: '[ngbDropdownToggle]',\n                host: {\n                    'class': 'dropdown-toggle',\n                    'aria-haspopup': 'true',\n                    '[attr.aria-expanded]': 'dropdown.isOpen()',\n                    '(click)': 'dropdown.toggle()',\n                    '(keydown.ArrowUp)': 'dropdown.onKeyDown($event)',\n                    '(keydown.ArrowDown)': 'dropdown.onKeyDown($event)',\n                    '(keydown.Home)': 'dropdown.onKeyDown($event)',\n                    '(keydown.End)': 'dropdown.onKeyDown($event)'\n                },\n                providers: [{ provide: NgbDropdownAnchor, useExisting: forwardRef(() => NgbDropdownToggle) }]\n            }]\n    }], function () { return [{ type: NgbDropdown, decorators: [{\n                type: Inject,\n                args: [forwardRef(() => NgbDropdown)]\n            }] }, { type: ElementRef }]; }, null); })();\n/**\n * A directive that provides contextual overlays for displaying lists of links and more.\n */\nclass NgbDropdown {\n    /**\n     * @param {?} _changeDetector\n     * @param {?} config\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} ngbNavbar\n     */\n    constructor(_changeDetector, config, _document, _ngZone, _elementRef, _renderer, ngbNavbar) {\n        this._changeDetector = _changeDetector;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._closed$ = new Subject();\n        /**\n         * Defines whether or not the dropdown menu is opened initially.\n         */\n        this._open = false;\n        /**\n         * An event fired when the dropdown is opened or closed.\n         *\n         * The event payload is a `boolean`:\n         * * `true` - the dropdown was opened\n         * * `false` - the dropdown was closed\n         */\n        this.openChange = new EventEmitter();\n        this.placement = config.placement;\n        this.container = config.container;\n        this.autoClose = config.autoClose;\n        this.display = ngbNavbar ? 'static' : 'dynamic';\n        this._zoneSubscription = _ngZone.onStable.subscribe(() => { this._positionMenu(); });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._applyPlacementClasses();\n        if (this._open) {\n            this._setCloseHandlers();\n        }\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes.container && this._open) {\n            this._applyContainer(this.container);\n        }\n        if (changes.placement && !changes.placement.isFirstChange) {\n            this._applyPlacementClasses();\n        }\n    }\n    /**\n     * Checks if the dropdown menu is open.\n     * @return {?}\n     */\n    isOpen() { return this._open; }\n    /**\n     * Opens the dropdown menu.\n     * @return {?}\n     */\n    open() {\n        if (!this._open) {\n            this._open = true;\n            this._applyContainer(this.container);\n            this.openChange.emit(true);\n            this._setCloseHandlers();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _setCloseHandlers() {\n        ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this._closed$, this._menu ? [this._menuElement.nativeElement] : [], this._anchor ? [this._anchor.getNativeElement()] : [], '.dropdown-item,.dropdown-divider');\n    }\n    /**\n     * Closes the dropdown menu.\n     * @return {?}\n     */\n    close() {\n        if (this._open) {\n            this._open = false;\n            this._resetContainer();\n            this._closed$.next();\n            this.openChange.emit(false);\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Toggles the dropdown menu.\n     * @return {?}\n     */\n    toggle() {\n        if (this.isOpen()) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._resetContainer();\n        this._closed$.next();\n        this._zoneSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    onKeyDown(event) {\n        // tslint:disable-next-line:deprecation\n        /** @type {?} */\n        const key = event.which;\n        /** @type {?} */\n        const itemElements = this._getMenuElements();\n        /** @type {?} */\n        let position = -1;\n        /** @type {?} */\n        let isEventFromItems = false;\n        /** @type {?} */\n        const isEventFromToggle = this._isEventFromToggle(event);\n        if (!isEventFromToggle && itemElements.length) {\n            itemElements.forEach((itemElement, index) => {\n                if (itemElement.contains((/** @type {?} */ (event.target)))) {\n                    isEventFromItems = true;\n                }\n                if (itemElement === this._document.activeElement) {\n                    position = index;\n                }\n            });\n        }\n        // closing on Enter / Space\n        if (key === Key.Space || key === Key.Enter) {\n            if (isEventFromItems && (this.autoClose === true || this.autoClose === 'inside')) {\n                this.close();\n            }\n            return;\n        }\n        // opening / navigating\n        if (isEventFromToggle || isEventFromItems) {\n            this.open();\n            if (itemElements.length) {\n                switch (key) {\n                    case Key.ArrowDown:\n                        position = Math.min(position + 1, itemElements.length - 1);\n                        break;\n                    case Key.ArrowUp:\n                        if (this._isDropup() && position === -1) {\n                            position = itemElements.length - 1;\n                            break;\n                        }\n                        position = Math.max(position - 1, 0);\n                        break;\n                    case Key.Home:\n                        position = 0;\n                        break;\n                    case Key.End:\n                        position = itemElements.length - 1;\n                        break;\n                }\n                itemElements[position].focus();\n            }\n            event.preventDefault();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _isDropup() { return this._elementRef.nativeElement.classList.contains('dropup'); }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    _isEventFromToggle(event) {\n        return this._anchor.getNativeElement().contains((/** @type {?} */ (event.target)));\n    }\n    /**\n     * @return {?}\n     */\n    _getMenuElements() {\n        if (this._menu == null) {\n            return [];\n        }\n        return this._menu.menuItems.filter(item => !item.disabled).map(item => item.elementRef.nativeElement);\n    }\n    /**\n     * @return {?}\n     */\n    _positionMenu() {\n        if (this.isOpen() && this._menu) {\n            this._applyPlacementClasses(this.display === 'dynamic' ?\n                positionElements(this._anchor.anchorEl, this._bodyContainer || this._menuElement.nativeElement, this.placement, this.container === 'body') :\n                this._getFirstPlacement(this.placement));\n        }\n    }\n    /**\n     * @param {?} placement\n     * @return {?}\n     */\n    _getFirstPlacement(placement) {\n        return Array.isArray(placement) ? placement[0] : (/** @type {?} */ (placement.split(' ')[0]));\n    }\n    /**\n     * @return {?}\n     */\n    _resetContainer() {\n        /** @type {?} */\n        const renderer = this._renderer;\n        if (this._menuElement) {\n            /** @type {?} */\n            const dropdownElement = this._elementRef.nativeElement;\n            /** @type {?} */\n            const dropdownMenuElement = this._menuElement.nativeElement;\n            renderer.appendChild(dropdownElement, dropdownMenuElement);\n            renderer.removeStyle(dropdownMenuElement, 'position');\n            renderer.removeStyle(dropdownMenuElement, 'transform');\n        }\n        if (this._bodyContainer) {\n            renderer.removeChild(this._document.body, this._bodyContainer);\n            this._bodyContainer = null;\n        }\n    }\n    /**\n     * @param {?=} container\n     * @return {?}\n     */\n    _applyContainer(container = null) {\n        this._resetContainer();\n        if (container === 'body') {\n            /** @type {?} */\n            const renderer = this._renderer;\n            /** @type {?} */\n            const dropdownMenuElement = this._menuElement.nativeElement;\n            /** @type {?} */\n            const bodyContainer = this._bodyContainer = this._bodyContainer || renderer.createElement('div');\n            // Override some styles to have the positionning working\n            renderer.setStyle(bodyContainer, 'position', 'absolute');\n            renderer.setStyle(dropdownMenuElement, 'position', 'static');\n            renderer.setStyle(bodyContainer, 'z-index', '1050');\n            renderer.appendChild(bodyContainer, dropdownMenuElement);\n            renderer.appendChild(this._document.body, bodyContainer);\n        }\n    }\n    /**\n     * @param {?=} placement\n     * @return {?}\n     */\n    _applyPlacementClasses(placement) {\n        if (this._menu) {\n            if (!placement) {\n                placement = this._getFirstPlacement(this.placement);\n            }\n            /** @type {?} */\n            const renderer = this._renderer;\n            /** @type {?} */\n            const dropdownElement = this._elementRef.nativeElement;\n            // remove the current placement classes\n            renderer.removeClass(dropdownElement, 'dropup');\n            renderer.removeClass(dropdownElement, 'dropdown');\n            this._menu.placement = placement;\n            /*\n                  * apply the new placement\n                  * in case of top use up-arrow or down-arrow otherwise\n                  */\n            /** @type {?} */\n            const dropdownClass = placement.search('^top') !== -1 ? 'dropup' : 'dropdown';\n            renderer.addClass(dropdownElement, dropdownClass);\n            /** @type {?} */\n            const bodyContainer = this._bodyContainer;\n            if (bodyContainer) {\n                renderer.removeClass(bodyContainer, 'dropup');\n                renderer.removeClass(bodyContainer, 'dropdown');\n                renderer.addClass(bodyContainer, dropdownClass);\n            }\n        }\n    }\n}\nNgbDropdown.ɵfac = function NgbDropdown_Factory(t) { return new (t || NgbDropdown)(ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(NgbDropdownConfig), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(NgbNavbar, 8)); };\nNgbDropdown.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbDropdown, selectors: [[\"\", \"ngbDropdown\", \"\"]], contentQueries: function NgbDropdown_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownMenu, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownMenu, true, ElementRef);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbDropdownAnchor, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._menu = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._menuElement = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._anchor = _t.first);\n    } }, hostVars: 2, hostBindings: function NgbDropdown_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"show\", ctx.isOpen());\n    } }, inputs: { _open: [\"open\", \"_open\"], placement: \"placement\", container: \"container\", autoClose: \"autoClose\", display: \"display\" }, outputs: { openChange: \"openChange\" }, exportAs: [\"ngbDropdown\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nNgbDropdown.ctorParameters = () => [\n    { type: ChangeDetectorRef },\n    { type: NgbDropdownConfig },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: NgbNavbar, decorators: [{ type: Optional }] }\n];\nNgbDropdown.propDecorators = {\n    _menu: [{ type: ContentChild, args: [NgbDropdownMenu,] }],\n    _menuElement: [{ type: ContentChild, args: [NgbDropdownMenu, { read: ElementRef },] }],\n    _anchor: [{ type: ContentChild, args: [NgbDropdownAnchor,] }],\n    autoClose: [{ type: Input }],\n    _open: [{ type: Input, args: ['open',] }],\n    placement: [{ type: Input }],\n    container: [{ type: Input }],\n    display: [{ type: Input }],\n    openChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDropdown, [{\n        type: Directive,\n        args: [{ selector: '[ngbDropdown]', exportAs: 'ngbDropdown', host: { '[class.show]': 'isOpen()' } }]\n    }], function () { return [{ type: ChangeDetectorRef }, { type: NgbDropdownConfig }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: NgZone }, { type: ElementRef }, { type: Renderer2 }, { type: NgbNavbar, decorators: [{\n                type: Optional\n            }] }]; }, { _open: [{\n            type: Input,\n            args: ['open']\n        }], openChange: [{\n            type: Output\n        }], placement: [{\n            type: Input\n        }], container: [{\n            type: Input\n        }], autoClose: [{\n            type: Input\n        }], display: [{\n            type: Input\n        }], _menu: [{\n            type: ContentChild,\n            args: [NgbDropdownMenu]\n        }], _menuElement: [{\n            type: ContentChild,\n            args: [NgbDropdownMenu, { read: ElementRef }]\n        }], _anchor: [{\n            type: ContentChild,\n            args: [NgbDropdownAnchor]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_DROPDOWN_DIRECTIVES = [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar];\nclass NgbDropdownModule {\n    /**\n     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n     * Will be removed in 4.0.0.\n     *\n     * @deprecated 3.0.0\n     * @return {?}\n     */\n    static forRoot() { return { ngModule: NgbDropdownModule }; }\n}\nNgbDropdownModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbDropdownModule });\nNgbDropdownModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbDropdownModule_Factory(t) { return new (t || NgbDropdownModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbDropdownModule, { declarations: [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar], exports: [NgbDropdown, NgbDropdownAnchor, NgbDropdownToggle, NgbDropdownMenu, NgbDropdownItem, NgbNavbar] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbDropdownModule, [{\n        type: NgModule,\n        args: [{ declarations: NGB_DROPDOWN_DIRECTIVES, exports: NGB_DROPDOWN_DIRECTIVES }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbModal`](#/components/modal/api#NgbModal) service.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all modals used in the application.\n *\n * \\@since 3.1.0\n */\nclass NgbModalConfig {\n    constructor() {\n        this.backdrop = true;\n        this.keyboard = true;\n    }\n}\nNgbModalConfig.ɵfac = function NgbModalConfig_Factory(t) { return new (t || NgbModalConfig)(); };\nNgbModalConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbModalConfig, factory: NgbModalConfig.ɵfac, providedIn: 'root' });\n/** @nocollapse */ NgbModalConfig.ngInjectableDef = defineInjectable({ factory: function NgbModalConfig_Factory() { return new NgbModalConfig(); }, token: NgbModalConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbModalConfig, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass ContentRef {\n    /**\n     * @param {?} nodes\n     * @param {?=} viewRef\n     * @param {?=} componentRef\n     */\n    constructor(nodes, viewRef, componentRef) {\n        this.nodes = nodes;\n        this.viewRef = viewRef;\n        this.componentRef = componentRef;\n    }\n}\n/**\n * @template T\n */\nclass PopupService {\n    /**\n     * @param {?} _type\n     * @param {?} _injector\n     * @param {?} _viewContainerRef\n     * @param {?} _renderer\n     * @param {?} _componentFactoryResolver\n     * @param {?} _applicationRef\n     */\n    constructor(_type, _injector, _viewContainerRef, _renderer, _componentFactoryResolver, _applicationRef) {\n        this._type = _type;\n        this._injector = _injector;\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._applicationRef = _applicationRef;\n    }\n    /**\n     * @param {?=} content\n     * @param {?=} context\n     * @return {?}\n     */\n    open(content, context) {\n        if (!this._windowRef) {\n            this._contentRef = this._getContentRef(content, context);\n            this._windowRef = this._viewContainerRef.createComponent(this._componentFactoryResolver.resolveComponentFactory(this._type), 0, this._injector, this._contentRef.nodes);\n        }\n        return this._windowRef;\n    }\n    /**\n     * @return {?}\n     */\n    close() {\n        if (this._windowRef) {\n            this._viewContainerRef.remove(this._viewContainerRef.indexOf(this._windowRef.hostView));\n            this._windowRef = null;\n            if (this._contentRef.viewRef) {\n                this._applicationRef.detachView(this._contentRef.viewRef);\n                this._contentRef.viewRef.destroy();\n                this._contentRef = null;\n            }\n        }\n    }\n    /**\n     * @param {?} content\n     * @param {?=} context\n     * @return {?}\n     */\n    _getContentRef(content, context) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            /** @type {?} */\n            const viewRef = content.createEmbeddedView(context);\n            this._applicationRef.attachView(viewRef);\n            return new ContentRef([viewRef.rootNodes], viewRef);\n        }\n        else {\n            return new ContentRef([[this._renderer.createText(`${content}`)]]);\n        }\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst noop = () => { };\n/**\n * Utility to handle the scrollbar.\n *\n * It allows to compensate the lack of a vertical scrollbar by adding an\n * equivalent padding on the right of the body, and to remove this compensation.\n */\nclass ScrollBar {\n    /**\n     * @param {?} _document\n     */\n    constructor(_document) {\n        this._document = _document;\n    }\n    /**\n     * Detects if a scrollbar is present and if yes, already compensates for its\n     * removal by adding an equivalent padding on the right of the body.\n     *\n     * @return {?} a callback used to revert the compensation (noop if there was none,\n     * otherwise a function removing the padding)\n     */\n    compensate() { return !this._isPresent() ? noop : this._adjustBody(this._getWidth()); }\n    /**\n     * Adds a padding of the given width on the right of the body.\n     *\n     * @param {?} width\n     * @return {?} a callback used to revert the padding to its previous value\n     */\n    _adjustBody(width) {\n        /** @type {?} */\n        const body = this._document.body;\n        /** @type {?} */\n        const userSetPadding = body.style.paddingRight;\n        /** @type {?} */\n        const paddingAmount = parseFloat(window.getComputedStyle(body)['padding-right']);\n        body.style['padding-right'] = `${paddingAmount + width}px`;\n        return () => body.style['padding-right'] = userSetPadding;\n    }\n    /**\n     * Tells whether a scrollbar is currently present on the body.\n     *\n     * @return {?} true if scrollbar is present, false otherwise\n     */\n    _isPresent() {\n        /** @type {?} */\n        const rect = this._document.body.getBoundingClientRect();\n        return rect.left + rect.right < window.innerWidth;\n    }\n    /**\n     * Calculates and returns the width of a scrollbar.\n     *\n     * @return {?} the width of a scrollbar on this page\n     */\n    _getWidth() {\n        /** @type {?} */\n        const measurer = this._document.createElement('div');\n        measurer.className = 'modal-scrollbar-measure';\n        /** @type {?} */\n        const body = this._document.body;\n        body.appendChild(measurer);\n        /** @type {?} */\n        const width = measurer.getBoundingClientRect().width - measurer.clientWidth;\n        body.removeChild(measurer);\n        return width;\n    }\n}\nScrollBar.ɵfac = function ScrollBar_Factory(t) { return new (t || ScrollBar)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nScrollBar.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: ScrollBar, factory: ScrollBar.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nScrollBar.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n/** @nocollapse */ ScrollBar.ngInjectableDef = defineInjectable({ factory: function ScrollBar_Factory() { return new ScrollBar(inject(DOCUMENT)); }, token: ScrollBar, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollBar, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbModalBackdrop {\n}\nNgbModalBackdrop.ɵfac = function NgbModalBackdrop_Factory(t) { return new (t || NgbModalBackdrop)(); };\nNgbModalBackdrop.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbModalBackdrop, selectors: [[\"ngb-modal-backdrop\"]], hostAttrs: [2, \"z-index\", \"1050\"], hostVars: 2, hostBindings: function NgbModalBackdrop_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(\"modal-backdrop fade show\" + (ctx.backdropClass ? \" \" + ctx.backdropClass : \"\"));\n    } }, inputs: { backdropClass: \"backdropClass\" }, decls: 0, vars: 0, template: function NgbModalBackdrop_Template(rf, ctx) { }, encapsulation: 2 });\nNgbModalBackdrop.propDecorators = {\n    backdropClass: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbModalBackdrop, [{\n        type: Component,\n        args: [{\n                selector: 'ngb-modal-backdrop',\n                template: '',\n                host: { '[class]': '\"modal-backdrop fade show\" + (backdropClass ? \" \" + backdropClass : \"\")', 'style': 'z-index: 1050' }\n            }]\n    }], null, { backdropClass: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A reference to the currently opened (active) modal.\n *\n * Instances of this class can be injected into your component passed as modal content.\n * So you can `.close()` or `.dismiss()` the modal window from your component.\n */\nclass NgbActiveModal {\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     * @param {?=} result\n     * @return {?}\n     */\n    close(result) { }\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     * @param {?=} reason\n     * @return {?}\n     */\n    dismiss(reason) { }\n}\n/**\n * A reference to the newly opened modal returned by the `NgbModal.open()` method.\n */\nclass NgbModalRef {\n    /**\n     * @param {?} _windowCmptRef\n     * @param {?} _contentRef\n     * @param {?=} _backdropCmptRef\n     * @param {?=} _beforeDismiss\n     */\n    constructor(_windowCmptRef, _contentRef, _backdropCmptRef, _beforeDismiss) {\n        this._windowCmptRef = _windowCmptRef;\n        this._contentRef = _contentRef;\n        this._backdropCmptRef = _backdropCmptRef;\n        this._beforeDismiss = _beforeDismiss;\n        _windowCmptRef.instance.dismissEvent.subscribe((reason) => { this.dismiss(reason); });\n        this.result = new Promise((resolve, reject) => {\n            this._resolve = resolve;\n            this._reject = reject;\n        });\n        this.result.then(null, () => { });\n    }\n    /**\n     * The instance of a component used for the modal content.\n     *\n     * When a `TemplateRef` is used as the content, will return `undefined`.\n     * @return {?}\n     */\n    get componentInstance() {\n        if (this._contentRef.componentRef) {\n            return this._contentRef.componentRef.instance;\n        }\n    }\n    /**\n     * Closes the modal with an optional `result` value.\n     *\n     * The `NgbMobalRef.result` promise will be resolved with the provided value.\n     * @param {?=} result\n     * @return {?}\n     */\n    close(result) {\n        if (this._windowCmptRef) {\n            this._resolve(result);\n            this._removeModalElements();\n        }\n    }\n    /**\n     * @param {?=} reason\n     * @return {?}\n     */\n    _dismiss(reason) {\n        this._reject(reason);\n        this._removeModalElements();\n    }\n    /**\n     * Dismisses the modal with an optional `reason` value.\n     *\n     * The `NgbModalRef.result` promise will be rejected with the provided value.\n     * @param {?=} reason\n     * @return {?}\n     */\n    dismiss(reason) {\n        if (this._windowCmptRef) {\n            if (!this._beforeDismiss) {\n                this._dismiss(reason);\n            }\n            else {\n                /** @type {?} */\n                const dismiss = this._beforeDismiss();\n                if (dismiss && dismiss.then) {\n                    dismiss.then(result => {\n                        if (result !== false) {\n                            this._dismiss(reason);\n                        }\n                    }, () => { });\n                }\n                else if (dismiss !== false) {\n                    this._dismiss(reason);\n                }\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _removeModalElements() {\n        /** @type {?} */\n        const windowNativeEl = this._windowCmptRef.location.nativeElement;\n        windowNativeEl.parentNode.removeChild(windowNativeEl);\n        this._windowCmptRef.destroy();\n        if (this._backdropCmptRef) {\n            /** @type {?} */\n            const backdropNativeEl = this._backdropCmptRef.location.nativeElement;\n            backdropNativeEl.parentNode.removeChild(backdropNativeEl);\n            this._backdropCmptRef.destroy();\n        }\n        if (this._contentRef && this._contentRef.viewRef) {\n            this._contentRef.viewRef.destroy();\n        }\n        this._windowCmptRef = null;\n        this._backdropCmptRef = null;\n        this._contentRef = null;\n    }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @enum {number} */\nconst ModalDismissReasons = {\n    BACKDROP_CLICK: 0,\n    ESC: 1,\n};\nModalDismissReasons[ModalDismissReasons.BACKDROP_CLICK] = 'BACKDROP_CLICK';\nModalDismissReasons[ModalDismissReasons.ESC] = 'ESC';\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbModalWindow {\n    /**\n     * @param {?} _document\n     * @param {?} _elRef\n     */\n    constructor(_document, _elRef) {\n        this._document = _document;\n        this._elRef = _elRef;\n        this.backdrop = true;\n        this.keyboard = true;\n        this.dismissEvent = new EventEmitter();\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    backdropClick($event) {\n        if (this.backdrop === true && this._elRef.nativeElement === $event.target) {\n            this.dismiss(ModalDismissReasons.BACKDROP_CLICK);\n        }\n    }\n    /**\n     * @param {?} $event\n     * @return {?}\n     */\n    escKey($event) {\n        if (this.keyboard && !$event.defaultPrevented) {\n            this.dismiss(ModalDismissReasons.ESC);\n        }\n    }\n    /**\n     * @param {?} reason\n     * @return {?}\n     */\n    dismiss(reason) { this.dismissEvent.emit(reason); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() { this._elWithFocus = this._document.activeElement; }\n    /**\n     * @return {?}\n     */\n    ngAfterViewInit() {\n        if (!this._elRef.nativeElement.contains(document.activeElement)) {\n            /** @type {?} */\n            const autoFocusable = (/** @type {?} */ (this._elRef.nativeElement.querySelector(`[ngbAutofocus]`)));\n            /** @type {?} */\n            const firstFocusable = getFocusableBoundaryElements(this._elRef.nativeElement)[0];\n            /** @type {?} */\n            const elementToFocus = autoFocusable || firstFocusable || this._elRef.nativeElement;\n            elementToFocus.focus();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const body = this._document.body;\n        /** @type {?} */\n        const elWithFocus = this._elWithFocus;\n        /** @type {?} */\n        let elementToFocus;\n        if (elWithFocus && elWithFocus['focus'] && body.contains(elWithFocus)) {\n            elementToFocus = elWithFocus;\n        }\n        else {\n            elementToFocus = body;\n        }\n        elementToFocus.focus();\n        this._elWithFocus = null;\n    }\n}\nNgbModalWindow.ɵfac = function NgbModalWindow_Factory(t) { return new (t || NgbModalWindow)(ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ElementRef)); };\nNgbModalWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbModalWindow, selectors: [[\"ngb-modal-window\"]], hostAttrs: [\"role\", \"dialog\", \"tabindex\", \"-1\"], hostVars: 4, hostBindings: function NgbModalWindow_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"keyup.esc\", function NgbModalWindow_keyup_esc_HostBindingHandler($event) { return ctx.escKey($event); })(\"click\", function NgbModalWindow_click_HostBindingHandler($event) { return ctx.backdropClick($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-modal\", true)(\"aria-labelledby\", ctx.ariaLabelledBy);\n        ɵngcc0.ɵɵclassMap(\"modal fade show d-block\" + (ctx.windowClass ? \" \" + ctx.windowClass : \"\"));\n    } }, inputs: { backdrop: \"backdrop\", keyboard: \"keyboard\", ariaLabelledBy: \"ariaLabelledBy\", centered: \"centered\", size: \"size\", windowClass: \"windowClass\" }, outputs: { dismissEvent: \"dismiss\" }, ngContentSelectors: _c3, decls: 3, vars: 2, consts: [[\"role\", \"document\"], [1, \"modal-content\"]], template: function NgbModalWindow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(\"modal-dialog\" + (ctx.size ? \" modal-\" + ctx.size : \"\") + (ctx.centered ? \" modal-dialog-centered\" : \"\"));\n    } }, encapsulation: 2 });\n/** @nocollapse */\nNgbModalWindow.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ElementRef }\n];\nNgbModalWindow.propDecorators = {\n    ariaLabelledBy: [{ type: Input }],\n    backdrop: [{ type: Input }],\n    centered: [{ type: Input }],\n    keyboard: [{ type: Input }],\n    size: [{ type: Input }],\n    windowClass: [{ type: Input }],\n    dismissEvent: [{ type: Output, args: ['dismiss',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbModalWindow, [{\n        type: Component,\n        args: [{\n                selector: 'ngb-modal-window',\n                host: {\n                    '[class]': '\"modal fade show d-block\" + (windowClass ? \" \" + windowClass : \"\")',\n                    'role': 'dialog',\n                    'tabindex': '-1',\n                    '(keyup.esc)': 'escKey($event)',\n                    '(click)': 'backdropClick($event)',\n                    '[attr.aria-modal]': 'true',\n                    '[attr.aria-labelledby]': 'ariaLabelledBy'\n                },\n                template: `\n    <div [class]=\"'modal-dialog' + (size ? ' modal-' + size : '') + (centered ? ' modal-dialog-centered' : '')\" role=\"document\">\n        <div class=\"modal-content\"><ng-content></ng-content></div>\n    </div>\n    `\n            }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ElementRef }]; }, { backdrop: [{\n            type: Input\n        }], keyboard: [{\n            type: Input\n        }], dismissEvent: [{\n            type: Output,\n            args: ['dismiss']\n        }], ariaLabelledBy: [{\n            type: Input\n        }], centered: [{\n            type: Input\n        }], size: [{\n            type: Input\n        }], windowClass: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbModalStack {\n    /**\n     * @param {?} _applicationRef\n     * @param {?} _injector\n     * @param {?} _document\n     * @param {?} _scrollBar\n     * @param {?} _rendererFactory\n     */\n    constructor(_applicationRef, _injector, _document, _scrollBar, _rendererFactory) {\n        this._applicationRef = _applicationRef;\n        this._injector = _injector;\n        this._document = _document;\n        this._scrollBar = _scrollBar;\n        this._rendererFactory = _rendererFactory;\n        this._activeWindowCmptHasChanged = new Subject();\n        this._ariaHiddenValues = new Map();\n        this._backdropAttributes = ['backdropClass'];\n        this._modalRefs = [];\n        this._windowAttributes = ['ariaLabelledBy', 'backdrop', 'centered', 'keyboard', 'size', 'windowClass'];\n        this._windowCmpts = [];\n        // Trap focus on active WindowCmpt\n        this._activeWindowCmptHasChanged.subscribe(() => {\n            if (this._windowCmpts.length) {\n                /** @type {?} */\n                const activeWindowCmpt = this._windowCmpts[this._windowCmpts.length - 1];\n                ngbFocusTrap(activeWindowCmpt.location.nativeElement, this._activeWindowCmptHasChanged);\n                this._revertAriaHidden();\n                this._setAriaHidden(activeWindowCmpt.location.nativeElement);\n            }\n        });\n    }\n    /**\n     * @param {?} moduleCFR\n     * @param {?} contentInjector\n     * @param {?} content\n     * @param {?} options\n     * @return {?}\n     */\n    open(moduleCFR, contentInjector, content, options) {\n        /** @type {?} */\n        const containerEl = isDefined(options.container) ? this._document.querySelector(options.container) : this._document.body;\n        /** @type {?} */\n        const renderer = this._rendererFactory.createRenderer(null, null);\n        /** @type {?} */\n        const revertPaddingForScrollBar = this._scrollBar.compensate();\n        /** @type {?} */\n        const removeBodyClass = () => {\n            if (!this._modalRefs.length) {\n                renderer.removeClass(this._document.body, 'modal-open');\n                this._revertAriaHidden();\n            }\n        };\n        if (!containerEl) {\n            throw new Error(`The specified modal container \"${options.container || 'body'}\" was not found in the DOM.`);\n        }\n        /** @type {?} */\n        const activeModal = new NgbActiveModal();\n        /** @type {?} */\n        const contentRef = this._getContentRef(moduleCFR, options.injector || contentInjector, content, activeModal);\n        /** @type {?} */\n        let backdropCmptRef = options.backdrop !== false ? this._attachBackdrop(moduleCFR, containerEl) : null;\n        /** @type {?} */\n        let windowCmptRef = this._attachWindowComponent(moduleCFR, containerEl, contentRef);\n        /** @type {?} */\n        let ngbModalRef = new NgbModalRef(windowCmptRef, contentRef, backdropCmptRef, options.beforeDismiss);\n        this._registerModalRef(ngbModalRef);\n        this._registerWindowCmpt(windowCmptRef);\n        ngbModalRef.result.then(revertPaddingForScrollBar, revertPaddingForScrollBar);\n        ngbModalRef.result.then(removeBodyClass, removeBodyClass);\n        activeModal.close = (result) => { ngbModalRef.close(result); };\n        activeModal.dismiss = (reason) => { ngbModalRef.dismiss(reason); };\n        this._applyWindowOptions(windowCmptRef.instance, options);\n        if (this._modalRefs.length === 1) {\n            renderer.addClass(this._document.body, 'modal-open');\n        }\n        if (backdropCmptRef && backdropCmptRef.instance) {\n            this._applyBackdropOptions(backdropCmptRef.instance, options);\n        }\n        return ngbModalRef;\n    }\n    /**\n     * @param {?=} reason\n     * @return {?}\n     */\n    dismissAll(reason) { this._modalRefs.forEach(ngbModalRef => ngbModalRef.dismiss(reason)); }\n    /**\n     * @return {?}\n     */\n    hasOpenModals() { return this._modalRefs.length > 0; }\n    /**\n     * @param {?} moduleCFR\n     * @param {?} containerEl\n     * @return {?}\n     */\n    _attachBackdrop(moduleCFR, containerEl) {\n        /** @type {?} */\n        let backdropFactory = moduleCFR.resolveComponentFactory(NgbModalBackdrop);\n        /** @type {?} */\n        let backdropCmptRef = backdropFactory.create(this._injector);\n        this._applicationRef.attachView(backdropCmptRef.hostView);\n        containerEl.appendChild(backdropCmptRef.location.nativeElement);\n        return backdropCmptRef;\n    }\n    /**\n     * @param {?} moduleCFR\n     * @param {?} containerEl\n     * @param {?} contentRef\n     * @return {?}\n     */\n    _attachWindowComponent(moduleCFR, containerEl, contentRef) {\n        /** @type {?} */\n        let windowFactory = moduleCFR.resolveComponentFactory(NgbModalWindow);\n        /** @type {?} */\n        let windowCmptRef = windowFactory.create(this._injector, contentRef.nodes);\n        this._applicationRef.attachView(windowCmptRef.hostView);\n        containerEl.appendChild(windowCmptRef.location.nativeElement);\n        return windowCmptRef;\n    }\n    /**\n     * @param {?} windowInstance\n     * @param {?} options\n     * @return {?}\n     */\n    _applyWindowOptions(windowInstance, options) {\n        this._windowAttributes.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                windowInstance[optionName] = options[optionName];\n            }\n        });\n    }\n    /**\n     * @param {?} backdropInstance\n     * @param {?} options\n     * @return {?}\n     */\n    _applyBackdropOptions(backdropInstance, options) {\n        this._backdropAttributes.forEach((optionName) => {\n            if (isDefined(options[optionName])) {\n                backdropInstance[optionName] = options[optionName];\n            }\n        });\n    }\n    /**\n     * @param {?} moduleCFR\n     * @param {?} contentInjector\n     * @param {?} content\n     * @param {?} activeModal\n     * @return {?}\n     */\n    _getContentRef(moduleCFR, contentInjector, content, activeModal) {\n        if (!content) {\n            return new ContentRef([]);\n        }\n        else if (content instanceof TemplateRef) {\n            return this._createFromTemplateRef(content, activeModal);\n        }\n        else if (isString(content)) {\n            return this._createFromString(content);\n        }\n        else {\n            return this._createFromComponent(moduleCFR, contentInjector, content, activeModal);\n        }\n    }\n    /**\n     * @param {?} content\n     * @param {?} activeModal\n     * @return {?}\n     */\n    _createFromTemplateRef(content, activeModal) {\n        /** @type {?} */\n        const context = {\n            $implicit: activeModal,\n            /**\n             * @param {?} result\n             * @return {?}\n             */\n            close(result) { activeModal.close(result); },\n            /**\n             * @param {?} reason\n             * @return {?}\n             */\n            dismiss(reason) { activeModal.dismiss(reason); }\n        };\n        /** @type {?} */\n        const viewRef = content.createEmbeddedView(context);\n        this._applicationRef.attachView(viewRef);\n        return new ContentRef([viewRef.rootNodes], viewRef);\n    }\n    /**\n     * @param {?} content\n     * @return {?}\n     */\n    _createFromString(content) {\n        /** @type {?} */\n        const component = this._document.createTextNode(`${content}`);\n        return new ContentRef([[component]]);\n    }\n    /**\n     * @param {?} moduleCFR\n     * @param {?} contentInjector\n     * @param {?} content\n     * @param {?} context\n     * @return {?}\n     */\n    _createFromComponent(moduleCFR, contentInjector, content, context) {\n        /** @type {?} */\n        const contentCmptFactory = moduleCFR.resolveComponentFactory(content);\n        /** @type {?} */\n        const modalContentInjector = Injector.create({ providers: [{ provide: NgbActiveModal, useValue: context }], parent: contentInjector });\n        /** @type {?} */\n        const componentRef = contentCmptFactory.create(modalContentInjector);\n        this._applicationRef.attachView(componentRef.hostView);\n        return new ContentRef([[componentRef.location.nativeElement]], componentRef.hostView, componentRef);\n    }\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    _setAriaHidden(element) {\n        /** @type {?} */\n        const parent = element.parentElement;\n        if (parent && element !== this._document.body) {\n            Array.from(parent.children).forEach(sibling => {\n                if (sibling !== element && sibling.nodeName !== 'SCRIPT') {\n                    this._ariaHiddenValues.set(sibling, sibling.getAttribute('aria-hidden'));\n                    sibling.setAttribute('aria-hidden', 'true');\n                }\n            });\n            this._setAriaHidden(parent);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _revertAriaHidden() {\n        this._ariaHiddenValues.forEach((value, element) => {\n            if (value) {\n                element.setAttribute('aria-hidden', value);\n            }\n            else {\n                element.removeAttribute('aria-hidden');\n            }\n        });\n        this._ariaHiddenValues.clear();\n    }\n    /**\n     * @param {?} ngbModalRef\n     * @return {?}\n     */\n    _registerModalRef(ngbModalRef) {\n        /** @type {?} */\n        const unregisterModalRef = () => {\n            /** @type {?} */\n            const index = this._modalRefs.indexOf(ngbModalRef);\n            if (index > -1) {\n                this._modalRefs.splice(index, 1);\n            }\n        };\n        this._modalRefs.push(ngbModalRef);\n        ngbModalRef.result.then(unregisterModalRef, unregisterModalRef);\n    }\n    /**\n     * @param {?} ngbWindowCmpt\n     * @return {?}\n     */\n    _registerWindowCmpt(ngbWindowCmpt) {\n        this._windowCmpts.push(ngbWindowCmpt);\n        this._activeWindowCmptHasChanged.next();\n        ngbWindowCmpt.onDestroy(() => {\n            /** @type {?} */\n            const index = this._windowCmpts.indexOf(ngbWindowCmpt);\n            if (index > -1) {\n                this._windowCmpts.splice(index, 1);\n                this._activeWindowCmptHasChanged.next();\n            }\n        });\n    }\n}\nNgbModalStack.ɵfac = function NgbModalStack_Factory(t) { return new (t || NgbModalStack)(ɵngcc0.ɵɵinject(ApplicationRef), ɵngcc0.ɵɵinject(Injector), ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ScrollBar), ɵngcc0.ɵɵinject(RendererFactory2)); };\nNgbModalStack.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbModalStack, factory: NgbModalStack.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nNgbModalStack.ctorParameters = () => [\n    { type: ApplicationRef },\n    { type: Injector },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ScrollBar },\n    { type: RendererFactory2 }\n];\n/** @nocollapse */ NgbModalStack.ngInjectableDef = defineInjectable({ factory: function NgbModalStack_Factory() { return new NgbModalStack(inject(ApplicationRef), inject(INJECTOR), inject(DOCUMENT), inject(ScrollBar), inject(RendererFactory2)); }, token: NgbModalStack, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbModalStack, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ApplicationRef }, { type: Injector }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ScrollBar }, { type: RendererFactory2 }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A service for opening modal windows.\n *\n * Creating a modal is straightforward: create a component or a template and pass it as an argument to\n * the `.open()` method.\n */\nclass NgbModal {\n    /**\n     * @param {?} _moduleCFR\n     * @param {?} _injector\n     * @param {?} _modalStack\n     * @param {?} _config\n     */\n    constructor(_moduleCFR, _injector, _modalStack, _config) {\n        this._moduleCFR = _moduleCFR;\n        this._injector = _injector;\n        this._modalStack = _modalStack;\n        this._config = _config;\n    }\n    /**\n     * Opens a new modal window with the specified content and supplied options.\n     *\n     * Content can be provided as a `TemplateRef` or a component type. If you pass a component type as content,\n     * then instances of those components can be injected with an instance of the `NgbActiveModal` class. You can then\n     * use `NgbActiveModal` methods to close / dismiss modals from \"inside\" of your component.\n     *\n     * Also see the [`NgbModalOptions`](#/components/modal/api#NgbModalOptions) for the list of supported options.\n     * @param {?} content\n     * @param {?=} options\n     * @return {?}\n     */\n    open(content, options = {}) {\n        /** @type {?} */\n        const combinedOptions = Object.assign({}, this._config, options);\n        return this._modalStack.open(this._moduleCFR, this._injector, content, combinedOptions);\n    }\n    /**\n     * Dismisses all currently displayed modal windows with the supplied reason.\n     *\n     * \\@since 3.1.0\n     * @param {?=} reason\n     * @return {?}\n     */\n    dismissAll(reason) { this._modalStack.dismissAll(reason); }\n    /**\n     * Indicates if there are currently any open modal windows in the application.\n     *\n     * \\@since 3.3.0\n     * @return {?}\n     */\n    hasOpenModals() { return this._modalStack.hasOpenModals(); }\n}\nNgbModal.ɵfac = function NgbModal_Factory(t) { return new (t || NgbModal)(ɵngcc0.ɵɵinject(ComponentFactoryResolver), ɵngcc0.ɵɵinject(Injector), ɵngcc0.ɵɵinject(NgbModalStack), ɵngcc0.ɵɵinject(NgbModalConfig)); };\nNgbModal.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbModal, factory: NgbModal.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nNgbModal.ctorParameters = () => [\n    { type: ComponentFactoryResolver },\n    { type: Injector },\n    { type: NgbModalStack },\n    { type: NgbModalConfig }\n];\n/** @nocollapse */ NgbModal.ngInjectableDef = defineInjectable({ factory: function NgbModal_Factory() { return new NgbModal(inject(ComponentFactoryResolver), inject(INJECTOR), inject(NgbModalStack), inject(NgbModalConfig)); }, token: NgbModal, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbModal, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ComponentFactoryResolver }, { type: Injector }, { type: NgbModalStack }, { type: NgbModalConfig }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbModalModule {\n    /**\n     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n     * Will be removed in 4.0.0.\n     *\n     * @deprecated 3.0.0\n     * @return {?}\n     */\n    static forRoot() { return { ngModule: NgbModalModule }; }\n}\nNgbModalModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbModalModule });\nNgbModalModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbModalModule_Factory(t) { return new (t || NgbModalModule)(); }, providers: [NgbModal] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbModalModule, { declarations: [NgbModalBackdrop, NgbModalWindow] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbModalModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgbModalBackdrop, NgbModalWindow],\n                entryComponents: [NgbModalBackdrop, NgbModalWindow],\n                providers: [NgbModal]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbPagination`](#/components/pagination/api#NgbPagination) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the paginations used in the application.\n */\nclass NgbPaginationConfig {\n    constructor() {\n        this.disabled = false;\n        this.boundaryLinks = false;\n        this.directionLinks = true;\n        this.ellipses = true;\n        this.maxSize = 0;\n        this.pageSize = 10;\n        this.rotate = false;\n    }\n}\nNgbPaginationConfig.ɵfac = function NgbPaginationConfig_Factory(t) { return new (t || NgbPaginationConfig)(); };\nNgbPaginationConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbPaginationConfig, factory: NgbPaginationConfig.ɵfac, providedIn: 'root' });\n/** @nocollapse */ NgbPaginationConfig.ngInjectableDef = defineInjectable({ factory: function NgbPaginationConfig_Factory() { return new NgbPaginationConfig(); }, token: NgbPaginationConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPaginationConfig, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A directive to match the 'ellipsis' link template\n *\n * \\@since 4.1.0\n */\nclass NgbPaginationEllipsis {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationEllipsis.ɵfac = function NgbPaginationEllipsis_Factory(t) { return new (t || NgbPaginationEllipsis)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };\nNgbPaginationEllipsis.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbPaginationEllipsis, selectors: [[\"ng-template\", \"ngbPaginationEllipsis\", \"\"]] });\n/** @nocollapse */\nNgbPaginationEllipsis.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPaginationEllipsis, [{\n        type: Directive,\n        args: [{ selector: 'ng-template[ngbPaginationEllipsis]' }]\n    }], function () { return [{ type: TemplateRef }]; }, null); })();\n/**\n * A directive to match the 'first' link template\n *\n * \\@since 4.1.0\n */\nclass NgbPaginationFirst {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationFirst.ɵfac = function NgbPaginationFirst_Factory(t) { return new (t || NgbPaginationFirst)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };\nNgbPaginationFirst.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbPaginationFirst, selectors: [[\"ng-template\", \"ngbPaginationFirst\", \"\"]] });\n/** @nocollapse */\nNgbPaginationFirst.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPaginationFirst, [{\n        type: Directive,\n        args: [{ selector: 'ng-template[ngbPaginationFirst]' }]\n    }], function () { return [{ type: TemplateRef }]; }, null); })();\n/**\n * A directive to match the 'last' link template\n *\n * \\@since 4.1.0\n */\nclass NgbPaginationLast {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationLast.ɵfac = function NgbPaginationLast_Factory(t) { return new (t || NgbPaginationLast)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };\nNgbPaginationLast.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbPaginationLast, selectors: [[\"ng-template\", \"ngbPaginationLast\", \"\"]] });\n/** @nocollapse */\nNgbPaginationLast.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPaginationLast, [{\n        type: Directive,\n        args: [{ selector: 'ng-template[ngbPaginationLast]' }]\n    }], function () { return [{ type: TemplateRef }]; }, null); })();\n/**\n * A directive to match the 'next' link template\n *\n * \\@since 4.1.0\n */\nclass NgbPaginationNext {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationNext.ɵfac = function NgbPaginationNext_Factory(t) { return new (t || NgbPaginationNext)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };\nNgbPaginationNext.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbPaginationNext, selectors: [[\"ng-template\", \"ngbPaginationNext\", \"\"]] });\n/** @nocollapse */\nNgbPaginationNext.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPaginationNext, [{\n        type: Directive,\n        args: [{ selector: 'ng-template[ngbPaginationNext]' }]\n    }], function () { return [{ type: TemplateRef }]; }, null); })();\n/**\n * A directive to match the page 'number' link template\n *\n * \\@since 4.1.0\n */\nclass NgbPaginationNumber {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationNumber.ɵfac = function NgbPaginationNumber_Factory(t) { return new (t || NgbPaginationNumber)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };\nNgbPaginationNumber.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbPaginationNumber, selectors: [[\"ng-template\", \"ngbPaginationNumber\", \"\"]] });\n/** @nocollapse */\nNgbPaginationNumber.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPaginationNumber, [{\n        type: Directive,\n        args: [{ selector: 'ng-template[ngbPaginationNumber]' }]\n    }], function () { return [{ type: TemplateRef }]; }, null); })();\n/**\n * A directive to match the 'previous' link template\n *\n * \\@since 4.1.0\n */\nclass NgbPaginationPrevious {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbPaginationPrevious.ɵfac = function NgbPaginationPrevious_Factory(t) { return new (t || NgbPaginationPrevious)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };\nNgbPaginationPrevious.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbPaginationPrevious, selectors: [[\"ng-template\", \"ngbPaginationPrevious\", \"\"]] });\n/** @nocollapse */\nNgbPaginationPrevious.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPaginationPrevious, [{\n        type: Directive,\n        args: [{ selector: 'ng-template[ngbPaginationPrevious]' }]\n    }], function () { return [{ type: TemplateRef }]; }, null); })();\n/**\n * A component that displays page numbers and allows to customize them in several ways.\n */\nclass NgbPagination {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        this.pageCount = 0;\n        this.pages = [];\n        /**\n         *  The current page.\n         *\n         *  Page numbers start with `1`.\n         */\n        this.page = 1;\n        /**\n         *  An event fired when the page is changed. Will fire only if collection size is set and all values are valid.\n         *\n         *  Event payload is the number of the newly selected page.\n         *\n         *  Page numbers start with `1`.\n         */\n        this.pageChange = new EventEmitter(true);\n        this.disabled = config.disabled;\n        this.boundaryLinks = config.boundaryLinks;\n        this.directionLinks = config.directionLinks;\n        this.ellipses = config.ellipses;\n        this.maxSize = config.maxSize;\n        this.pageSize = config.pageSize;\n        this.rotate = config.rotate;\n        this.size = config.size;\n    }\n    /**\n     * @return {?}\n     */\n    hasPrevious() { return this.page > 1; }\n    /**\n     * @return {?}\n     */\n    hasNext() { return this.page < this.pageCount; }\n    /**\n     * @return {?}\n     */\n    nextDisabled() { return !this.hasNext() || this.disabled; }\n    /**\n     * @return {?}\n     */\n    previousDisabled() { return !this.hasPrevious() || this.disabled; }\n    /**\n     * @param {?} pageNumber\n     * @return {?}\n     */\n    selectPage(pageNumber) { this._updatePages(pageNumber); }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) { this._updatePages(this.page); }\n    /**\n     * @param {?} pageNumber\n     * @return {?}\n     */\n    isEllipsis(pageNumber) { return pageNumber === -1; }\n    /**\n     * Appends ellipses and first/last page number to the displayed pages\n     * @param {?} start\n     * @param {?} end\n     * @return {?}\n     */\n    _applyEllipses(start, end) {\n        if (this.ellipses) {\n            if (start > 0) {\n                if (start > 1) {\n                    this.pages.unshift(-1);\n                }\n                this.pages.unshift(1);\n            }\n            if (end < this.pageCount) {\n                if (end < (this.pageCount - 1)) {\n                    this.pages.push(-1);\n                }\n                this.pages.push(this.pageCount);\n            }\n        }\n    }\n    /**\n     * Rotates page numbers based on maxSize items visible.\n     * Currently selected page stays in the middle:\n     *\n     * Ex. for selected page = 6:\n     * [5,*6*,7] for maxSize = 3\n     * [4,5,*6*,7] for maxSize = 4\n     * @return {?}\n     */\n    _applyRotation() {\n        /** @type {?} */\n        let start = 0;\n        /** @type {?} */\n        let end = this.pageCount;\n        /** @type {?} */\n        let leftOffset = Math.floor(this.maxSize / 2);\n        /** @type {?} */\n        let rightOffset = this.maxSize % 2 === 0 ? leftOffset - 1 : leftOffset;\n        if (this.page <= leftOffset) {\n            // very beginning, no rotation -> [0..maxSize]\n            end = this.maxSize;\n        }\n        else if (this.pageCount - this.page < leftOffset) {\n            // very end, no rotation -> [len-maxSize..len]\n            start = this.pageCount - this.maxSize;\n        }\n        else {\n            // rotate\n            start = this.page - leftOffset - 1;\n            end = this.page + rightOffset;\n        }\n        return [start, end];\n    }\n    /**\n     * Paginates page numbers based on maxSize items per page.\n     * @return {?}\n     */\n    _applyPagination() {\n        /** @type {?} */\n        let page = Math.ceil(this.page / this.maxSize) - 1;\n        /** @type {?} */\n        let start = page * this.maxSize;\n        /** @type {?} */\n        let end = start + this.maxSize;\n        return [start, end];\n    }\n    /**\n     * @param {?} newPageNo\n     * @return {?}\n     */\n    _setPageInRange(newPageNo) {\n        /** @type {?} */\n        const prevPageNo = this.page;\n        this.page = getValueInRange(newPageNo, this.pageCount, 1);\n        if (this.page !== prevPageNo && isNumber(this.collectionSize)) {\n            this.pageChange.emit(this.page);\n        }\n    }\n    /**\n     * @param {?} newPage\n     * @return {?}\n     */\n    _updatePages(newPage) {\n        this.pageCount = Math.ceil(this.collectionSize / this.pageSize);\n        if (!isNumber(this.pageCount)) {\n            this.pageCount = 0;\n        }\n        // fill-in model needed to render pages\n        this.pages.length = 0;\n        for (let i = 1; i <= this.pageCount; i++) {\n            this.pages.push(i);\n        }\n        // set page within 1..max range\n        this._setPageInRange(newPage);\n        // apply maxSize if necessary\n        if (this.maxSize > 0 && this.pageCount > this.maxSize) {\n            /** @type {?} */\n            let start = 0;\n            /** @type {?} */\n            let end = this.pageCount;\n            // either paginating or rotating page numbers\n            if (this.rotate) {\n                [start, end] = this._applyRotation();\n            }\n            else {\n                [start, end] = this._applyPagination();\n            }\n            this.pages = this.pages.slice(start, end);\n            // adding ellipses\n            this._applyEllipses(start, end);\n        }\n    }\n}\nNgbPagination.ɵfac = function NgbPagination_Factory(t) { return new (t || NgbPagination)(ɵngcc0.ɵɵdirectiveInject(NgbPaginationConfig)); };\nNgbPagination.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbPagination, selectors: [[\"ngb-pagination\"]], contentQueries: function NgbPagination_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationEllipsis, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationFirst, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationLast, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationNext, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationNumber, true);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbPaginationPrevious, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplEllipsis = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplFirst = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplLast = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplNext = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplNumber = _t.first);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tplPrevious = _t.first);\n    } }, hostAttrs: [\"role\", \"navigation\"], inputs: { page: \"page\", disabled: \"disabled\", boundaryLinks: \"boundaryLinks\", directionLinks: \"directionLinks\", ellipses: \"ellipses\", maxSize: \"maxSize\", pageSize: \"pageSize\", rotate: \"rotate\", size: \"size\", collectionSize: \"collectionSize\" }, outputs: { pageChange: \"pageChange\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 18, vars: 7, consts: function () { var i18n_26; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_pagination_first$$FESM2015_NG_BOOTSTRAP_JS__27 = goog.getMsg(\"\\u00AB\\u00AB\");\n        i18n_26 = MSG_EXTERNAL_ngb_pagination_first$$FESM2015_NG_BOOTSTRAP_JS__27;\n    }\n    else {\n        i18n_26 = $localize `:@@ngb.pagination.first␟656506dfd46380956a655f919f1498d018f75ca0␟6867721956102594380:««`;\n    } var i18n_28; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_pagination_previous$$FESM2015_NG_BOOTSTRAP_JS__29 = goog.getMsg(\"\\u00AB\");\n        i18n_28 = MSG_EXTERNAL_ngb_pagination_previous$$FESM2015_NG_BOOTSTRAP_JS__29;\n    }\n    else {\n        i18n_28 = $localize `:@@ngb.pagination.previous␟6e52b6ee77a4848d899dd21b591c6fd499e3aef3␟6479320895410098858:«`;\n    } var i18n_30; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_pagination_next$$FESM2015_NG_BOOTSTRAP_JS__31 = goog.getMsg(\"\\u00BB\");\n        i18n_30 = MSG_EXTERNAL_ngb_pagination_next$$FESM2015_NG_BOOTSTRAP_JS__31;\n    }\n    else {\n        i18n_30 = $localize `:@@ngb.pagination.next␟ba9cbb4ff311464308a3627e4f1c3345d9fe6d7d␟5458177150283468089:»`;\n    } var i18n_32; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_pagination_last$$FESM2015_NG_BOOTSTRAP_JS__33 = goog.getMsg(\"\\u00BB\\u00BB\");\n        i18n_32 = MSG_EXTERNAL_ngb_pagination_last$$FESM2015_NG_BOOTSTRAP_JS__33;\n    }\n    else {\n        i18n_32 = $localize `:@@ngb.pagination.last␟49f27a460bc97e7e00be5b37098bfa79884fc7d9␟5277020320267646988:»»`;\n    } var i18n_34; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_pagination_first_aria$$FESM2015_NG_BOOTSTRAP_JS__35 = goog.getMsg(\"First\");\n        i18n_34 = MSG_EXTERNAL_ngb_pagination_first_aria$$FESM2015_NG_BOOTSTRAP_JS__35;\n    }\n    else {\n        i18n_34 = $localize `:@@ngb.pagination.first-aria␟f2f852318759c6396b5d3d17031d53817d7b38cc␟2241508602425256033:First`;\n    } var i18n_37; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_pagination_previous_aria$$FESM2015_NG_BOOTSTRAP_JS__38 = goog.getMsg(\"Previous\");\n        i18n_37 = MSG_EXTERNAL_ngb_pagination_previous_aria$$FESM2015_NG_BOOTSTRAP_JS__38;\n    }\n    else {\n        i18n_37 = $localize `:@@ngb.pagination.previous-aria␟680d5c75b7fd8d37961083608b9fcdc4167b4c43␟4452427314943113135:Previous`;\n    } var i18n_42; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_pagination_next_aria$$FESM2015_NG_BOOTSTRAP_JS__43 = goog.getMsg(\"Next\");\n        i18n_42 = MSG_EXTERNAL_ngb_pagination_next_aria$$FESM2015_NG_BOOTSTRAP_JS__43;\n    }\n    else {\n        i18n_42 = $localize `:@@ngb.pagination.next-aria␟f732c304c7433e5a83ffcd862c3dce709a0f4982␟3885497195825665706:Next`;\n    } var i18n_44; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_pagination_last_aria$$FESM2015_NG_BOOTSTRAP_JS__45 = goog.getMsg(\"Last\");\n        i18n_44 = MSG_EXTERNAL_ngb_pagination_last_aria$$FESM2015_NG_BOOTSTRAP_JS__45;\n    }\n    else {\n        i18n_44 = $localize `:@@ngb.pagination.last-aria␟5c729788ba138508aca1bec050b610f7bf81db3e␟4882268002141858767:Last`;\n    } return [[\"first\", \"\"], [\"previous\", \"\"], [\"next\", \"\"], [\"last\", \"\"], [\"ellipsis\", \"\"], [\"defaultNumber\", \"\"], [\"class\", \"page-item\", 3, \"disabled\", 4, \"ngIf\"], [\"class\", \"page-item\", 3, \"active\", \"disabled\", 4, \"ngFor\", \"ngForOf\"], [\"aria-hidden\", \"true\"], i18n_26, i18n_28, i18n_30, i18n_32, [\"class\", \"sr-only\", 4, \"ngIf\"], [1, \"sr-only\"], [1, \"page-item\"], [\"href\", \"\", 1, \"page-link\", 3, \"click\", 6, \"aria-label\"], [\"aria-label\", i18n_34], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"aria-label\", i18n_37], [\"class\", \"page-link\", 4, \"ngIf\"], [\"class\", \"page-link\", \"href\", \"\", 3, \"click\", 4, \"ngIf\"], [1, \"page-link\"], [\"href\", \"\", 1, \"page-link\", 3, \"click\"], [\"aria-label\", i18n_42], [\"aria-label\", i18n_44]]; }, template: function NgbPagination_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgbPagination_ng_template_0_Template, 2, 0, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(2, NgbPagination_ng_template_2_Template, 2, 0, \"ng-template\", null, 1, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(4, NgbPagination_ng_template_4_Template, 2, 0, \"ng-template\", null, 2, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(6, NgbPagination_ng_template_6_Template, 2, 0, \"ng-template\", null, 3, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(8, NgbPagination_ng_template_8_Template, 1, 0, \"ng-template\", null, 4, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(10, NgbPagination_ng_template_10_Template, 2, 2, \"ng-template\", null, 5, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵelementStart(12, \"ul\");\n        ɵngcc0.ɵɵtemplate(13, NgbPagination_li_13_Template, 4, 8, \"li\", 6);\n        ɵngcc0.ɵɵtemplate(14, NgbPagination_li_14_Template, 4, 7, \"li\", 6);\n        ɵngcc0.ɵɵtemplate(15, NgbPagination_li_15_Template, 3, 6, \"li\", 7);\n        ɵngcc0.ɵɵtemplate(16, NgbPagination_li_16_Template, 4, 8, \"li\", 6);\n        ɵngcc0.ɵɵtemplate(17, NgbPagination_li_17_Template, 4, 8, \"li\", 6);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(12);\n        ɵngcc0.ɵɵclassMap(\"pagination\" + (ctx.size ? \" pagination-\" + ctx.size : \"\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.pages);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.directionLinks);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.boundaryLinks);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nNgbPagination.ctorParameters = () => [\n    { type: NgbPaginationConfig }\n];\nNgbPagination.propDecorators = {\n    tplEllipsis: [{ type: ContentChild, args: [NgbPaginationEllipsis,] }],\n    tplFirst: [{ type: ContentChild, args: [NgbPaginationFirst,] }],\n    tplLast: [{ type: ContentChild, args: [NgbPaginationLast,] }],\n    tplNext: [{ type: ContentChild, args: [NgbPaginationNext,] }],\n    tplNumber: [{ type: ContentChild, args: [NgbPaginationNumber,] }],\n    tplPrevious: [{ type: ContentChild, args: [NgbPaginationPrevious,] }],\n    disabled: [{ type: Input }],\n    boundaryLinks: [{ type: Input }],\n    directionLinks: [{ type: Input }],\n    ellipses: [{ type: Input }],\n    rotate: [{ type: Input }],\n    collectionSize: [{ type: Input }],\n    maxSize: [{ type: Input }],\n    page: [{ type: Input }],\n    pageSize: [{ type: Input }],\n    pageChange: [{ type: Output }],\n    size: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPagination, [{\n        type: Component,\n        args: [{\n                selector: 'ngb-pagination',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: { 'role': 'navigation' },\n                template: `\n    <ng-template #first><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.first\">&laquo;&laquo;</span></ng-template>\n    <ng-template #previous><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.previous\">&laquo;</span></ng-template>\n    <ng-template #next><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.next\">&raquo;</span></ng-template>\n    <ng-template #last><span aria-hidden=\"true\" i18n=\"@@ngb.pagination.last\">&raquo;&raquo;</span></ng-template>\n    <ng-template #ellipsis>...</ng-template>\n    <ng-template #defaultNumber let-page let-currentPage=\"currentPage\">\n      {{ page }}\n      <span *ngIf=\"page === currentPage\" class=\"sr-only\">(current)</span>\n    </ng-template>\n    <ul [class]=\"'pagination' + (size ? ' pagination-' + size : '')\">\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"First\" i18n-aria-label=\"@@ngb.pagination.first-aria\" class=\"page-link\" href\n          (click)=\"selectPage(1); $event.preventDefault()\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <ng-template [ngTemplateOutlet]=\"tplFirst?.templateRef || first\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"directionLinks\" class=\"page-item\"\n        [class.disabled]=\"previousDisabled()\">\n        <a aria-label=\"Previous\" i18n-aria-label=\"@@ngb.pagination.previous-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page-1); $event.preventDefault()\" [attr.tabindex]=\"(hasPrevious() ? null : '-1')\">\n          <ng-template [ngTemplateOutlet]=\"tplPrevious?.templateRef || previous\"\n                       [ngTemplateOutletContext]=\"{disabled: previousDisabled()}\"></ng-template>\n        </a>\n      </li>\n      <li *ngFor=\"let pageNumber of pages\" class=\"page-item\" [class.active]=\"pageNumber === page\"\n        [class.disabled]=\"isEllipsis(pageNumber) || disabled\">\n        <a *ngIf=\"isEllipsis(pageNumber)\" class=\"page-link\">\n          <ng-template [ngTemplateOutlet]=\"tplEllipsis?.templateRef || ellipsis\"\n                       [ngTemplateOutletContext]=\"{disabled: true, currentPage: page}\"></ng-template>\n        </a>\n        <a *ngIf=\"!isEllipsis(pageNumber)\" class=\"page-link\" href (click)=\"selectPage(pageNumber); $event.preventDefault()\">\n          <ng-template [ngTemplateOutlet]=\"tplNumber?.templateRef || defaultNumber\"\n                       [ngTemplateOutletContext]=\"{disabled: disabled, $implicit: pageNumber, currentPage: page}\"></ng-template>\n        </a>\n      </li>\n      <li *ngIf=\"directionLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Next\" i18n-aria-label=\"@@ngb.pagination.next-aria\" class=\"page-link\" href\n          (click)=\"selectPage(page+1); $event.preventDefault()\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <ng-template [ngTemplateOutlet]=\"tplNext?.templateRef || next\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n\n      <li *ngIf=\"boundaryLinks\" class=\"page-item\" [class.disabled]=\"nextDisabled()\">\n        <a aria-label=\"Last\" i18n-aria-label=\"@@ngb.pagination.last-aria\" class=\"page-link\" href\n          (click)=\"selectPage(pageCount); $event.preventDefault()\" [attr.tabindex]=\"(hasNext() ? null : '-1')\">\n          <ng-template [ngTemplateOutlet]=\"tplLast?.templateRef || last\"\n                       [ngTemplateOutletContext]=\"{disabled: nextDisabled(), currentPage: page}\"></ng-template>\n        </a>\n      </li>\n    </ul>\n  `\n            }]\n    }], function () { return [{ type: NgbPaginationConfig }]; }, { page: [{\n            type: Input\n        }], pageChange: [{\n            type: Output\n        }], disabled: [{\n            type: Input\n        }], boundaryLinks: [{\n            type: Input\n        }], directionLinks: [{\n            type: Input\n        }], ellipses: [{\n            type: Input\n        }], maxSize: [{\n            type: Input\n        }], pageSize: [{\n            type: Input\n        }], rotate: [{\n            type: Input\n        }], size: [{\n            type: Input\n        }], tplEllipsis: [{\n            type: ContentChild,\n            args: [NgbPaginationEllipsis]\n        }], tplFirst: [{\n            type: ContentChild,\n            args: [NgbPaginationFirst]\n        }], tplLast: [{\n            type: ContentChild,\n            args: [NgbPaginationLast]\n        }], tplNext: [{\n            type: ContentChild,\n            args: [NgbPaginationNext]\n        }], tplNumber: [{\n            type: ContentChild,\n            args: [NgbPaginationNumber]\n        }], tplPrevious: [{\n            type: ContentChild,\n            args: [NgbPaginationPrevious]\n        }], collectionSize: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst DIRECTIVES = [\n    NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber,\n    NgbPaginationPrevious\n];\nclass NgbPaginationModule {\n    /**\n     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n     * Will be removed in 4.0.0.\n     *\n     * @deprecated 3.0.0\n     * @return {?}\n     */\n    static forRoot() { return { ngModule: NgbPaginationModule }; }\n}\nNgbPaginationModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbPaginationModule });\nNgbPaginationModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbPaginationModule_Factory(t) { return new (t || NgbPaginationModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbPaginationModule, { declarations: function () { return [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPaginationModule, [{\n        type: NgModule,\n        args: [{ declarations: DIRECTIVES, exports: DIRECTIVES, imports: [CommonModule] }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass Trigger {\n    /**\n     * @param {?} open\n     * @param {?=} close\n     */\n    constructor(open, close) {\n        this.open = open;\n        this.close = close;\n        if (!close) {\n            this.close = open;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    isManual() { return this.open === 'manual' || this.close === 'manual'; }\n}\n/** @type {?} */\nconst DEFAULT_ALIASES = {\n    'hover': ['mouseenter', 'mouseleave'],\n    'focus': ['focusin', 'focusout'],\n};\n/**\n * @param {?} triggers\n * @param {?=} aliases\n * @return {?}\n */\nfunction parseTriggers(triggers, aliases = DEFAULT_ALIASES) {\n    /** @type {?} */\n    const trimmedTriggers = (triggers || '').trim();\n    if (trimmedTriggers.length === 0) {\n        return [];\n    }\n    /** @type {?} */\n    const parsedTriggers = trimmedTriggers.split(/\\s+/).map(trigger => trigger.split(':')).map((triggerPair) => {\n        /** @type {?} */\n        let alias = aliases[triggerPair[0]] || triggerPair;\n        return new Trigger(alias[0], alias[1]);\n    });\n    /** @type {?} */\n    const manualTriggers = parsedTriggers.filter(triggerPair => triggerPair.isManual());\n    if (manualTriggers.length > 1) {\n        throw 'Triggers parse error: only one manual trigger is allowed';\n    }\n    if (manualTriggers.length === 1 && parsedTriggers.length > 1) {\n        throw 'Triggers parse error: manual trigger can\\'t be mixed with other triggers';\n    }\n    return parsedTriggers;\n}\n/**\n * @param {?} renderer\n * @param {?} nativeElement\n * @param {?} triggers\n * @param {?} isOpenedFn\n * @return {?}\n */\nfunction observeTriggers(renderer, nativeElement, triggers, isOpenedFn) {\n    return new Observable(subscriber => {\n        /** @type {?} */\n        const listeners = [];\n        /** @type {?} */\n        const openFn = () => subscriber.next(true);\n        /** @type {?} */\n        const closeFn = () => subscriber.next(false);\n        /** @type {?} */\n        const toggleFn = () => subscriber.next(!isOpenedFn());\n        triggers.forEach((trigger) => {\n            if (trigger.open === trigger.close) {\n                listeners.push(renderer.listen(nativeElement, trigger.open, toggleFn));\n            }\n            else {\n                listeners.push(renderer.listen(nativeElement, trigger.open, openFn), renderer.listen(nativeElement, trigger.close, closeFn));\n            }\n        });\n        return () => { listeners.forEach(unsubscribeFn => unsubscribeFn()); };\n    });\n}\n/** @type {?} */\nconst delayOrNoop = (time) => time > 0 ? delay(time) : (a) => a;\n/**\n * @param {?} openDelay\n * @param {?} closeDelay\n * @param {?} isOpenedFn\n * @return {?}\n */\nfunction triggerDelay(openDelay, closeDelay, isOpenedFn) {\n    return (input$) => {\n        /** @type {?} */\n        let pending = null;\n        /** @type {?} */\n        const filteredInput$ = input$.pipe(map(open => ({ open })), filter(event => {\n            /** @type {?} */\n            const currentlyOpen = isOpenedFn();\n            if (currentlyOpen !== event.open && (!pending || pending.open === currentlyOpen)) {\n                pending = event;\n                return true;\n            }\n            if (pending && pending.open !== event.open) {\n                pending = null;\n            }\n            return false;\n        }), share());\n        /** @type {?} */\n        const delayedOpen$ = filteredInput$.pipe(filter(event => event.open), delayOrNoop(openDelay));\n        /** @type {?} */\n        const delayedClose$ = filteredInput$.pipe(filter(event => !event.open), delayOrNoop(closeDelay));\n        return merge(delayedOpen$, delayedClose$)\n            .pipe(filter(event => {\n            if (event === pending) {\n                pending = null;\n                return event.open !== isOpenedFn();\n            }\n            return false;\n        }), map(event => event.open));\n    };\n}\n/**\n * @param {?} renderer\n * @param {?} nativeElement\n * @param {?} triggers\n * @param {?} isOpenedFn\n * @param {?} openFn\n * @param {?} closeFn\n * @param {?=} openDelay\n * @param {?=} closeDelay\n * @return {?}\n */\nfunction listenToTriggers(renderer, nativeElement, triggers, isOpenedFn, openFn, closeFn, openDelay = 0, closeDelay = 0) {\n    /** @type {?} */\n    const parsedTriggers = parseTriggers(triggers);\n    if (parsedTriggers.length === 1 && parsedTriggers[0].isManual()) {\n        return () => { };\n    }\n    /** @type {?} */\n    const subscription = observeTriggers(renderer, nativeElement, parsedTriggers, isOpenedFn)\n        .pipe(triggerDelay(openDelay, closeDelay, isOpenedFn))\n        .subscribe(open => (open ? openFn() : closeFn()));\n    return () => subscription.unsubscribe();\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbPopover`](#/components/popover/api#NgbPopover) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the popovers used in the application.\n */\nclass NgbPopoverConfig {\n    constructor() {\n        this.autoClose = true;\n        this.placement = 'auto';\n        this.triggers = 'click';\n        this.disablePopover = false;\n        this.openDelay = 0;\n        this.closeDelay = 0;\n    }\n}\nNgbPopoverConfig.ɵfac = function NgbPopoverConfig_Factory(t) { return new (t || NgbPopoverConfig)(); };\nNgbPopoverConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbPopoverConfig, factory: NgbPopoverConfig.ɵfac, providedIn: 'root' });\n/** @nocollapse */ NgbPopoverConfig.ngInjectableDef = defineInjectable({ factory: function NgbPopoverConfig_Factory() { return new NgbPopoverConfig(); }, token: NgbPopoverConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPopoverConfig, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$3 = 0;\nclass NgbPopoverWindow {\n    /**\n     * @return {?}\n     */\n    isTitleTemplate() { return this.title instanceof TemplateRef; }\n}\nNgbPopoverWindow.ɵfac = function NgbPopoverWindow_Factory(t) { return new (t || NgbPopoverWindow)(); };\nNgbPopoverWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbPopoverWindow, selectors: [[\"ngb-popover-window\"]], hostAttrs: [\"role\", \"tooltip\"], hostVars: 3, hostBindings: function NgbPopoverWindow_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassMap(\"popover\" + (ctx.popoverClass ? \" \" + ctx.popoverClass : \"\"));\n    } }, inputs: { title: \"title\", id: \"id\", popoverClass: \"popoverClass\", context: \"context\" }, ngContentSelectors: _c3, decls: 4, vars: 1, consts: [[1, \"arrow\"], [\"class\", \"popover-header\", 4, \"ngIf\"], [1, \"popover-body\"], [1, \"popover-header\"], [\"simpleTitle\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]], template: function NgbPopoverWindow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵtemplate(1, NgbPopoverWindow_h3_1_Template, 4, 2, \"h3\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.title != null);\n    } }, directives: [ɵngcc1.NgIf, ɵngcc1.NgTemplateOutlet], styles: [\"ngb-popover-window.bs-popover-bottom .arrow,ngb-popover-window.bs-popover-top .arrow{left:50%;margin-left:-.5rem}ngb-popover-window.bs-popover-bottom-left .arrow,ngb-popover-window.bs-popover-top-left .arrow{left:2em}ngb-popover-window.bs-popover-bottom-right .arrow,ngb-popover-window.bs-popover-top-right .arrow{left:auto;right:2em}ngb-popover-window.bs-popover-left .arrow,ngb-popover-window.bs-popover-right .arrow{top:50%;margin-top:-.5rem}ngb-popover-window.bs-popover-left-top .arrow,ngb-popover-window.bs-popover-right-top .arrow{top:.7em}ngb-popover-window.bs-popover-left-bottom .arrow,ngb-popover-window.bs-popover-right-bottom .arrow{top:auto;bottom:.7em}\"], encapsulation: 2, changeDetection: 0 });\nNgbPopoverWindow.propDecorators = {\n    title: [{ type: Input }],\n    id: [{ type: Input }],\n    popoverClass: [{ type: Input }],\n    context: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPopoverWindow, [{\n        type: Component,\n        args: [{\n                selector: 'ngb-popover-window',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                host: { '[class]': '\"popover\" + (popoverClass ? \" \" + popoverClass : \"\")', 'role': 'tooltip', '[id]': 'id' },\n                template: `\n    <div class=\"arrow\"></div>\n    <h3 class=\"popover-header\" *ngIf=\"title != null\">\n      <ng-template #simpleTitle>{{title}}</ng-template>\n      <ng-template [ngTemplateOutlet]=\"isTitleTemplate() ? title : simpleTitle\" [ngTemplateOutletContext]=\"context\"></ng-template>\n    </h3>\n    <div class=\"popover-body\"><ng-content></ng-content></div>`,\n                styles: [\"ngb-popover-window.bs-popover-bottom .arrow,ngb-popover-window.bs-popover-top .arrow{left:50%;margin-left:-.5rem}ngb-popover-window.bs-popover-bottom-left .arrow,ngb-popover-window.bs-popover-top-left .arrow{left:2em}ngb-popover-window.bs-popover-bottom-right .arrow,ngb-popover-window.bs-popover-top-right .arrow{left:auto;right:2em}ngb-popover-window.bs-popover-left .arrow,ngb-popover-window.bs-popover-right .arrow{top:50%;margin-top:-.5rem}ngb-popover-window.bs-popover-left-top .arrow,ngb-popover-window.bs-popover-right-top .arrow{top:.7em}ngb-popover-window.bs-popover-left-bottom .arrow,ngb-popover-window.bs-popover-right-bottom .arrow{top:auto;bottom:.7em}\"]\n            }]\n    }], null, { title: [{\n            type: Input\n        }], id: [{\n            type: Input\n        }], popoverClass: [{\n            type: Input\n        }], context: [{\n            type: Input\n        }] }); })();\n/**\n * A lightweight and extensible directive for fancy popover creation.\n */\nclass NgbPopover {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} injector\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} config\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _changeDetector\n     * @param {?} _applicationRef\n     */\n    constructor(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, _changeDetector, _applicationRef) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._changeDetector = _changeDetector;\n        this._applicationRef = _applicationRef;\n        /**\n         * An event emitted when the popover is shown. Contains no payload.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the popover is hidden. Contains no payload.\n         */\n        this.hidden = new EventEmitter();\n        this._ngbPopoverWindowId = `ngb-popover-${nextId$3++}`;\n        this.autoClose = config.autoClose;\n        this.placement = config.placement;\n        this.triggers = config.triggers;\n        this.container = config.container;\n        this.disablePopover = config.disablePopover;\n        this.popoverClass = config.popoverClass;\n        this.openDelay = config.openDelay;\n        this.closeDelay = config.closeDelay;\n        this._popupService = new PopupService(NgbPopoverWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, _applicationRef);\n        this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n            if (this._windowRef) {\n                positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body', 'bs-popover');\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    _isDisabled() {\n        if (this.disablePopover) {\n            return true;\n        }\n        if (!this.ngbPopover && !this.popoverTitle) {\n            return true;\n        }\n        return false;\n    }\n    /**\n     * Opens the popover.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the popover template when it is created.\n     * @param {?=} context\n     * @return {?}\n     */\n    open(context) {\n        if (!this._windowRef && !this._isDisabled()) {\n            this._windowRef = this._popupService.open(this.ngbPopover, context);\n            this._windowRef.instance.title = this.popoverTitle;\n            this._windowRef.instance.context = context;\n            this._windowRef.instance.popoverClass = this.popoverClass;\n            this._windowRef.instance.id = this._ngbPopoverWindowId;\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbPopoverWindowId);\n            if (this.container === 'body') {\n                this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            // We need to detect changes, because we don't know where .open() might be called from.\n            // Ex. opening popover from one of lifecycle hooks that run after the CD\n            // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n            this._windowRef.changeDetectorRef.detectChanges();\n            // We need to mark for check, because popover won't work inside the OnPush component.\n            // Ex. when we use expression like `{{ popover.isOpen() : 'opened' : 'closed' }}`\n            // inside the template of an OnPush component and we change the popover from\n            // open -> closed, the expression in question won't be updated unless we explicitly\n            // mark the parent component to be checked.\n            this._windowRef.changeDetectorRef.markForCheck();\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [this._windowRef.location.nativeElement]);\n            this.shown.emit();\n        }\n    }\n    /**\n     * Closes the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     * @return {?}\n     */\n    close() {\n        if (this._windowRef) {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n            this._popupService.close();\n            this._windowRef = null;\n            this.hidden.emit();\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Toggles the popover.\n     *\n     * This is considered to be a \"manual\" triggering of the popover.\n     * @return {?}\n     */\n    toggle() {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Returns `true`, if the popover is currently shown.\n     * @return {?}\n     */\n    isOpen() { return this._windowRef != null; }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        // close popover if title and content become empty, or disablePopover set to true\n        if ((changes['ngbPopover'] || changes['popoverTitle'] || changes['disablePopover']) && this._isDisabled()) {\n            this.close();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.close();\n        // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n        // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n        if (this._unregisterListenersFn) {\n            this._unregisterListenersFn();\n        }\n        this._zoneSubscription.unsubscribe();\n    }\n}\nNgbPopover.ɵfac = function NgbPopover_Factory(t) { return new (t || NgbPopover)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(Injector), ɵngcc0.ɵɵdirectiveInject(ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(NgbPopoverConfig), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ApplicationRef)); };\nNgbPopover.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbPopover, selectors: [[\"\", \"ngbPopover\", \"\"]], inputs: { autoClose: \"autoClose\", placement: \"placement\", triggers: \"triggers\", container: \"container\", disablePopover: \"disablePopover\", popoverClass: \"popoverClass\", openDelay: \"openDelay\", closeDelay: \"closeDelay\", ngbPopover: \"ngbPopover\", popoverTitle: \"popoverTitle\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, exportAs: [\"ngbPopover\"], features: [ɵngcc0.ɵɵNgOnChangesFeature] });\n/** @nocollapse */\nNgbPopover.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: Injector },\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: NgbPopoverConfig },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef },\n    { type: ApplicationRef }\n];\nNgbPopover.propDecorators = {\n    autoClose: [{ type: Input }],\n    ngbPopover: [{ type: Input }],\n    popoverTitle: [{ type: Input }],\n    placement: [{ type: Input }],\n    triggers: [{ type: Input }],\n    container: [{ type: Input }],\n    disablePopover: [{ type: Input }],\n    popoverClass: [{ type: Input }],\n    openDelay: [{ type: Input }],\n    closeDelay: [{ type: Input }],\n    shown: [{ type: Output }],\n    hidden: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPopover, [{\n        type: Directive,\n        args: [{ selector: '[ngbPopover]', exportAs: 'ngbPopover' }]\n    }], function () { return [{ type: ElementRef }, { type: Renderer2 }, { type: Injector }, { type: ComponentFactoryResolver }, { type: ViewContainerRef }, { type: NgbPopoverConfig }, { type: NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ChangeDetectorRef }, { type: ApplicationRef }]; }, { shown: [{\n            type: Output\n        }], hidden: [{\n            type: Output\n        }], autoClose: [{\n            type: Input\n        }], placement: [{\n            type: Input\n        }], triggers: [{\n            type: Input\n        }], container: [{\n            type: Input\n        }], disablePopover: [{\n            type: Input\n        }], popoverClass: [{\n            type: Input\n        }], openDelay: [{\n            type: Input\n        }], closeDelay: [{\n            type: Input\n        }], ngbPopover: [{\n            type: Input\n        }], popoverTitle: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbPopoverModule {\n    /**\n     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n     * Will be removed in 4.0.0.\n     *\n     * @deprecated 3.0.0\n     * @return {?}\n     */\n    static forRoot() { return { ngModule: NgbPopoverModule }; }\n}\nNgbPopoverModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbPopoverModule });\nNgbPopoverModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbPopoverModule_Factory(t) { return new (t || NgbPopoverModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbPopoverModule, { declarations: function () { return [NgbPopover, NgbPopoverWindow]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgbPopover]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbPopoverModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgbPopover, NgbPopoverWindow],\n                exports: [NgbPopover],\n                imports: [CommonModule],\n                entryComponents: [NgbPopoverWindow]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbProgressbar`](#/components/progressbar/api#NgbProgressbar) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the progress bars used in the application.\n */\nclass NgbProgressbarConfig {\n    constructor() {\n        this.max = 100;\n        this.animated = false;\n        this.striped = false;\n        this.showValue = false;\n    }\n}\nNgbProgressbarConfig.ɵfac = function NgbProgressbarConfig_Factory(t) { return new (t || NgbProgressbarConfig)(); };\nNgbProgressbarConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbProgressbarConfig, factory: NgbProgressbarConfig.ɵfac, providedIn: 'root' });\n/** @nocollapse */ NgbProgressbarConfig.ngInjectableDef = defineInjectable({ factory: function NgbProgressbarConfig_Factory() { return new NgbProgressbarConfig(); }, token: NgbProgressbarConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbProgressbarConfig, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A directive that provides feedback on the progress of a workflow or an action.\n */\nclass NgbProgressbar {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        /**\n         * The current value for the progress bar.\n         *\n         * Should be in the `[0, max]` range.\n         */\n        this.value = 0;\n        this.max = config.max;\n        this.animated = config.animated;\n        this.striped = config.striped;\n        this.type = config.type;\n        this.showValue = config.showValue;\n        this.height = config.height;\n    }\n    /**\n     * @return {?}\n     */\n    getValue() { return getValueInRange(this.value, this.max); }\n    /**\n     * @return {?}\n     */\n    getPercentValue() { return 100 * this.getValue() / this.max; }\n}\nNgbProgressbar.ɵfac = function NgbProgressbar_Factory(t) { return new (t || NgbProgressbar)(ɵngcc0.ɵɵdirectiveInject(NgbProgressbarConfig)); };\nNgbProgressbar.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbProgressbar, selectors: [[\"ngb-progressbar\"]], inputs: { value: \"value\", max: \"max\", animated: \"animated\", striped: \"striped\", type: \"type\", showValue: \"showValue\", height: \"height\" }, ngContentSelectors: _c3, decls: 4, vars: 12, consts: function () { var i18n_46; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_progressbar_value$$FESM2015_NG_BOOTSTRAP_JS__47 = goog.getMsg(\"{$interpolation}%\", { \"interpolation\": \"\\uFFFD0\\uFFFD\" });\n        i18n_46 = MSG_EXTERNAL_ngb_progressbar_value$$FESM2015_NG_BOOTSTRAP_JS__47;\n    }\n    else {\n        i18n_46 = $localize `:@@ngb.progressbar.value␟04d611d19c117c60c9e14d0a04399a027184bc77␟5214781723415385277:${\"\\uFFFD0\\uFFFD\"}:INTERPOLATION:%`;\n    } return [[1, \"progress\"], [\"role\", \"progressbar\", \"aria-valuemin\", \"0\"], [4, \"ngIf\"], i18n_46]; }, template: function NgbProgressbar_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵtemplate(2, NgbProgressbar_span_2_Template, 2, 1, \"span\", 2);\n        ɵngcc0.ɵɵprojection(3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵstyleProp(\"height\", ctx.height);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassMapInterpolate3(\"progress-bar\", ctx.type ? \" bg-\" + ctx.type : \"\", \"\", ctx.animated ? \" progress-bar-animated\" : \"\", \"\", ctx.striped ? \" progress-bar-striped\" : \"\", \"\");\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx.getPercentValue(), \"%\");\n        ɵngcc0.ɵɵattribute(\"aria-valuenow\", ctx.getValue())(\"aria-valuemax\", ctx.max);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.showValue);\n    } }, directives: [ɵngcc1.NgIf], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nNgbProgressbar.ctorParameters = () => [\n    { type: NgbProgressbarConfig }\n];\nNgbProgressbar.propDecorators = {\n    max: [{ type: Input }],\n    animated: [{ type: Input }],\n    striped: [{ type: Input }],\n    showValue: [{ type: Input }],\n    type: [{ type: Input }],\n    value: [{ type: Input }],\n    height: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbProgressbar, [{\n        type: Component,\n        args: [{\n                selector: 'ngb-progressbar',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                template: `\n    <div class=\"progress\" [style.height]=\"height\">\n      <div class=\"progress-bar{{type ? ' bg-' + type : ''}}{{animated ? ' progress-bar-animated' : ''}}{{striped ?\n    ' progress-bar-striped' : ''}}\" role=\"progressbar\" [style.width.%]=\"getPercentValue()\"\n    [attr.aria-valuenow]=\"getValue()\" aria-valuemin=\"0\" [attr.aria-valuemax]=\"max\">\n        <span *ngIf=\"showValue\" i18n=\"@@ngb.progressbar.value\">{{getPercentValue()}}%</span><ng-content></ng-content>\n      </div>\n    </div>\n  `\n            }]\n    }], function () { return [{ type: NgbProgressbarConfig }]; }, { value: [{\n            type: Input\n        }], max: [{\n            type: Input\n        }], animated: [{\n            type: Input\n        }], striped: [{\n            type: Input\n        }], type: [{\n            type: Input\n        }], showValue: [{\n            type: Input\n        }], height: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbProgressbarModule {\n    /**\n     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n     * Will be removed in 4.0.0.\n     *\n     * @deprecated 3.0.0\n     * @return {?}\n     */\n    static forRoot() { return { ngModule: NgbProgressbarModule }; }\n}\nNgbProgressbarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbProgressbarModule });\nNgbProgressbarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbProgressbarModule_Factory(t) { return new (t || NgbProgressbarModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbProgressbarModule, { declarations: function () { return [NgbProgressbar]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgbProgressbar]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbProgressbarModule, [{\n        type: NgModule,\n        args: [{ declarations: [NgbProgressbar], exports: [NgbProgressbar], imports: [CommonModule] }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbRating`](#/components/rating/api#NgbRating) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the ratings used in the application.\n */\nclass NgbRatingConfig {\n    constructor() {\n        this.max = 10;\n        this.readonly = false;\n        this.resettable = false;\n    }\n}\nNgbRatingConfig.ɵfac = function NgbRatingConfig_Factory(t) { return new (t || NgbRatingConfig)(); };\nNgbRatingConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbRatingConfig, factory: NgbRatingConfig.ɵfac, providedIn: 'root' });\n/** @nocollapse */ NgbRatingConfig.ngInjectableDef = defineInjectable({ factory: function NgbRatingConfig_Factory() { return new NgbRatingConfig(); }, token: NgbRatingConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbRatingConfig, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_RATING_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgbRating),\n    multi: true\n};\n/**\n * A directive that helps visualising and interacting with a star rating bar.\n */\nclass NgbRating {\n    /**\n     * @param {?} config\n     * @param {?} _changeDetectorRef\n     */\n    constructor(config, _changeDetectorRef) {\n        this._changeDetectorRef = _changeDetectorRef;\n        this.contexts = [];\n        this.disabled = false;\n        /**\n         * An event emitted when the user is hovering over a given rating.\n         *\n         * Event payload equals to the rating being hovered over.\n         */\n        this.hover = new EventEmitter();\n        /**\n         * An event emitted when the user stops hovering over a given rating.\n         *\n         * Event payload equals to the rating of the last item being hovered over.\n         */\n        this.leave = new EventEmitter();\n        /**\n         * An event emitted when the user selects a new rating.\n         *\n         * Event payload equals to the newly selected rating.\n         */\n        this.rateChange = new EventEmitter(true);\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n        this.max = config.max;\n        this.readonly = config.readonly;\n    }\n    /**\n     * @return {?}\n     */\n    ariaValueText() { return `${this.nextRate} out of ${this.max}`; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    enter(value) {\n        if (!this.readonly && !this.disabled) {\n            this._updateState(value);\n        }\n        this.hover.emit(value);\n    }\n    /**\n     * @return {?}\n     */\n    handleBlur() { this.onTouched(); }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    handleClick(value) { this.update(this.resettable && this.rate === value ? 0 : value); }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handleKeyDown(event) {\n        // tslint:disable-next-line:deprecation\n        switch (event.which) {\n            case Key.ArrowDown:\n            case Key.ArrowLeft:\n                this.update(this.rate - 1);\n                break;\n            case Key.ArrowUp:\n            case Key.ArrowRight:\n                this.update(this.rate + 1);\n                break;\n            case Key.Home:\n                this.update(0);\n                break;\n            case Key.End:\n                this.update(this.max);\n                break;\n            default:\n                return;\n        }\n        // note 'return' in default case\n        event.preventDefault();\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['rate']) {\n            this.update(this.rate);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.contexts = Array.from({ length: this.max }, (v, k) => ({ fill: 0, index: k }));\n        this._updateState(this.rate);\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) { this.onChange = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * @return {?}\n     */\n    reset() {\n        this.leave.emit(this.nextRate);\n        this._updateState(this.rate);\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) { this.disabled = isDisabled; }\n    /**\n     * @param {?} value\n     * @param {?=} internalChange\n     * @return {?}\n     */\n    update(value, internalChange = true) {\n        /** @type {?} */\n        const newRate = getValueInRange(value, this.max, 0);\n        if (!this.readonly && !this.disabled && this.rate !== newRate) {\n            this.rate = newRate;\n            this.rateChange.emit(this.rate);\n        }\n        if (internalChange) {\n            this.onChange(this.rate);\n            this.onTouched();\n        }\n        this._updateState(this.rate);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this.update(value, false);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * @param {?} index\n     * @return {?}\n     */\n    _getFillValue(index) {\n        /** @type {?} */\n        const diff = this.nextRate - index;\n        if (diff >= 1) {\n            return 100;\n        }\n        if (diff < 1 && diff > 0) {\n            return parseInt((diff * 100).toFixed(2), 10);\n        }\n        return 0;\n    }\n    /**\n     * @param {?} nextValue\n     * @return {?}\n     */\n    _updateState(nextValue) {\n        this.nextRate = nextValue;\n        this.contexts.forEach((context, index) => context.fill = this._getFillValue(index));\n    }\n}\nNgbRating.ɵfac = function NgbRating_Factory(t) { return new (t || NgbRating)(ɵngcc0.ɵɵdirectiveInject(NgbRatingConfig), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); };\nNgbRating.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbRating, selectors: [[\"ngb-rating\"]], contentQueries: function NgbRating_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, TemplateRef, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.starTemplateFromContent = _t.first);\n    } }, hostAttrs: [\"tabindex\", \"0\", \"role\", \"slider\", \"aria-valuemin\", \"0\", 1, \"d-inline-flex\"], hostVars: 4, hostBindings: function NgbRating_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"blur\", function NgbRating_blur_HostBindingHandler() { return ctx.handleBlur(); })(\"keydown\", function NgbRating_keydown_HostBindingHandler($event) { return ctx.handleKeyDown($event); })(\"mouseleave\", function NgbRating_mouseleave_HostBindingHandler() { return ctx.reset(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"aria-valuemax\", ctx.max)(\"aria-valuenow\", ctx.nextRate)(\"aria-valuetext\", ctx.ariaValueText())(\"aria-disabled\", ctx.readonly ? true : null);\n    } }, inputs: { max: \"max\", readonly: \"readonly\", rate: \"rate\", resettable: \"resettable\", starTemplate: \"starTemplate\" }, outputs: { hover: \"hover\", leave: \"leave\", rateChange: \"rateChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([NGB_RATING_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 3, vars: 1, consts: [[\"t\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"sr-only\"], [3, \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]], template: function NgbRating_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgbRating_ng_template_0_Template, 1, 1, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(2, NgbRating_ng_template_2_Template, 4, 5, \"ng-template\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.contexts);\n    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nNgbRating.ctorParameters = () => [\n    { type: NgbRatingConfig },\n    { type: ChangeDetectorRef }\n];\nNgbRating.propDecorators = {\n    max: [{ type: Input }],\n    rate: [{ type: Input }],\n    readonly: [{ type: Input }],\n    resettable: [{ type: Input }],\n    starTemplate: [{ type: Input }],\n    starTemplateFromContent: [{ type: ContentChild, args: [TemplateRef,] }],\n    hover: [{ type: Output }],\n    leave: [{ type: Output }],\n    rateChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbRating, [{\n        type: Component,\n        args: [{\n                selector: 'ngb-rating',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                host: {\n                    'class': 'd-inline-flex',\n                    'tabindex': '0',\n                    'role': 'slider',\n                    'aria-valuemin': '0',\n                    '[attr.aria-valuemax]': 'max',\n                    '[attr.aria-valuenow]': 'nextRate',\n                    '[attr.aria-valuetext]': 'ariaValueText()',\n                    '[attr.aria-disabled]': 'readonly ? true : null',\n                    '(blur)': 'handleBlur()',\n                    '(keydown)': 'handleKeyDown($event)',\n                    '(mouseleave)': 'reset()'\n                },\n                template: `\n    <ng-template #t let-fill=\"fill\">{{ fill === 100 ? '&#9733;' : '&#9734;' }}</ng-template>\n    <ng-template ngFor [ngForOf]=\"contexts\" let-index=\"index\">\n      <span class=\"sr-only\">({{ index < nextRate ? '*' : ' ' }})</span>\n      <span (mouseenter)=\"enter(index + 1)\" (click)=\"handleClick(index + 1)\" [style.cursor]=\"readonly || disabled ? 'default' : 'pointer'\">\n        <ng-template [ngTemplateOutlet]=\"starTemplate || starTemplateFromContent || t\" [ngTemplateOutletContext]=\"contexts[index]\">\n        </ng-template>\n      </span>\n    </ng-template>\n  `,\n                providers: [NGB_RATING_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: NgbRatingConfig }, { type: ChangeDetectorRef }]; }, { hover: [{\n            type: Output\n        }], leave: [{\n            type: Output\n        }], rateChange: [{\n            type: Output\n        }], max: [{\n            type: Input\n        }], readonly: [{\n            type: Input\n        }], rate: [{\n            type: Input\n        }], resettable: [{\n            type: Input\n        }], starTemplate: [{\n            type: Input\n        }], starTemplateFromContent: [{\n            type: ContentChild,\n            args: [TemplateRef]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbRatingModule {\n    /**\n     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n     * Will be removed in 4.0.0.\n     *\n     * @deprecated 3.0.0\n     * @return {?}\n     */\n    static forRoot() { return { ngModule: NgbRatingModule }; }\n}\nNgbRatingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbRatingModule });\nNgbRatingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbRatingModule_Factory(t) { return new (t || NgbRatingModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbRatingModule, { declarations: function () { return [NgbRating]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgbRating]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbRatingModule, [{\n        type: NgModule,\n        args: [{ declarations: [NgbRating], exports: [NgbRating], imports: [CommonModule] }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbTabset`](#/components/tabset/api#NgbTabset) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tabsets used in the application.\n */\nclass NgbTabsetConfig {\n    constructor() {\n        this.justify = 'start';\n        this.orientation = 'horizontal';\n        this.type = 'tabs';\n    }\n}\nNgbTabsetConfig.ɵfac = function NgbTabsetConfig_Factory(t) { return new (t || NgbTabsetConfig)(); };\nNgbTabsetConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbTabsetConfig, factory: NgbTabsetConfig.ɵfac, providedIn: 'root' });\n/** @nocollapse */ NgbTabsetConfig.ngInjectableDef = defineInjectable({ factory: function NgbTabsetConfig_Factory() { return new NgbTabsetConfig(); }, token: NgbTabsetConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTabsetConfig, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$4 = 0;\n/**\n * A directive to wrap tab titles that need to contain HTML markup or other directives.\n *\n * Alternatively you could use the `NgbTab.title` input for string titles.\n */\nclass NgbTabTitle {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbTabTitle.ɵfac = function NgbTabTitle_Factory(t) { return new (t || NgbTabTitle)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };\nNgbTabTitle.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbTabTitle, selectors: [[\"ng-template\", \"ngbTabTitle\", \"\"]] });\n/** @nocollapse */\nNgbTabTitle.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTabTitle, [{\n        type: Directive,\n        args: [{ selector: 'ng-template[ngbTabTitle]' }]\n    }], function () { return [{ type: TemplateRef }]; }, null); })();\n/**\n * A directive to wrap content to be displayed in a tab.\n */\nclass NgbTabContent {\n    /**\n     * @param {?} templateRef\n     */\n    constructor(templateRef) {\n        this.templateRef = templateRef;\n    }\n}\nNgbTabContent.ɵfac = function NgbTabContent_Factory(t) { return new (t || NgbTabContent)(ɵngcc0.ɵɵdirectiveInject(TemplateRef)); };\nNgbTabContent.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbTabContent, selectors: [[\"ng-template\", \"ngbTabContent\", \"\"]] });\n/** @nocollapse */\nNgbTabContent.ctorParameters = () => [\n    { type: TemplateRef }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTabContent, [{\n        type: Directive,\n        args: [{ selector: 'ng-template[ngbTabContent]' }]\n    }], function () { return [{ type: TemplateRef }]; }, null); })();\n/**\n * A directive representing an individual tab.\n */\nclass NgbTab {\n    constructor() {\n        /**\n         * The tab identifier.\n         *\n         * Must be unique for the entire document for proper accessibility support.\n         */\n        this.id = `ngb-tab-${nextId$4++}`;\n        /**\n         * If `true`, the current tab is disabled and can't be toggled.\n         */\n        this.disabled = false;\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // We are using @ContentChildren instead of @ContentChild as in the Angular version being used\n        // only @ContentChildren allows us to specify the {descendants: false} option.\n        // Without {descendants: false} we are hitting bugs described in:\n        // https://github.com/ng-bootstrap/ng-bootstrap/issues/2240\n        this.titleTpl = this.titleTpls.first;\n        this.contentTpl = this.contentTpls.first;\n    }\n}\nNgbTab.ɵfac = function NgbTab_Factory(t) { return new (t || NgbTab)(); };\nNgbTab.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbTab, selectors: [[\"ngb-tab\"]], contentQueries: function NgbTab_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbTabTitle, false);\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbTabContent, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.titleTpls = _t);\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.contentTpls = _t);\n    } }, inputs: { id: \"id\", disabled: \"disabled\", title: \"title\" } });\nNgbTab.propDecorators = {\n    id: [{ type: Input }],\n    title: [{ type: Input }],\n    disabled: [{ type: Input }],\n    titleTpls: [{ type: ContentChildren, args: [NgbTabTitle, { descendants: false },] }],\n    contentTpls: [{ type: ContentChildren, args: [NgbTabContent, { descendants: false },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTab, [{\n        type: Directive,\n        args: [{ selector: 'ngb-tab' }]\n    }], function () { return []; }, { id: [{\n            type: Input\n        }], disabled: [{\n            type: Input\n        }], title: [{\n            type: Input\n        }], titleTpls: [{\n            type: ContentChildren,\n            args: [NgbTabTitle, { descendants: false }]\n        }], contentTpls: [{\n            type: ContentChildren,\n            args: [NgbTabContent, { descendants: false }]\n        }] }); })();\n/**\n * A component that makes it easy to create tabbed interface.\n */\nclass NgbTabset {\n    /**\n     * @param {?} config\n     */\n    constructor(config) {\n        /**\n         * If `true`, non-visible tabs content will be removed from DOM. Otherwise it will just be hidden.\n         */\n        this.destroyOnHide = true;\n        /**\n         * A tab change event emitted right before the tab change happens.\n         *\n         * See [`NgbTabChangeEvent`](#/components/tabset/api#NgbTabChangeEvent) for payload details.\n         */\n        this.tabChange = new EventEmitter();\n        this.type = config.type;\n        this.justify = config.justify;\n        this.orientation = config.orientation;\n    }\n    /**\n     * The horizontal alignment of the tabs with flexbox utilities.\n     * @param {?} className\n     * @return {?}\n     */\n    set justify(className) {\n        if (className === 'fill' || className === 'justified') {\n            this.justifyClass = `nav-${className}`;\n        }\n        else {\n            this.justifyClass = `justify-content-${className}`;\n        }\n    }\n    /**\n     * Selects the tab with the given id and shows its associated content panel.\n     *\n     * Any other tab that was previously selected becomes unselected and its associated pane is removed from DOM or\n     * hidden depending on the `destroyOnHide` value.\n     * @param {?} tabId\n     * @return {?}\n     */\n    select(tabId) {\n        /** @type {?} */\n        let selectedTab = this._getTabById(tabId);\n        if (selectedTab && !selectedTab.disabled && this.activeId !== selectedTab.id) {\n            /** @type {?} */\n            let defaultPrevented = false;\n            this.tabChange.emit({ activeId: this.activeId, nextId: selectedTab.id, preventDefault: () => { defaultPrevented = true; } });\n            if (!defaultPrevented) {\n                this.activeId = selectedTab.id;\n            }\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngAfterContentChecked() {\n        // auto-correct activeId that might have been set incorrectly as input\n        /** @type {?} */\n        let activeTab = this._getTabById(this.activeId);\n        this.activeId = activeTab ? activeTab.id : (this.tabs.length ? this.tabs.first.id : null);\n    }\n    /**\n     * @param {?} id\n     * @return {?}\n     */\n    _getTabById(id) {\n        /** @type {?} */\n        let tabsWithId = this.tabs.filter(tab => tab.id === id);\n        return tabsWithId.length ? tabsWithId[0] : null;\n    }\n}\nNgbTabset.ɵfac = function NgbTabset_Factory(t) { return new (t || NgbTabset)(ɵngcc0.ɵɵdirectiveInject(NgbTabsetConfig)); };\nNgbTabset.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbTabset, selectors: [[\"ngb-tabset\"]], contentQueries: function NgbTabset_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {\n        ɵngcc0.ɵɵcontentQuery(dirIndex, NgbTab, false);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.tabs = _t);\n    } }, inputs: { destroyOnHide: \"destroyOnHide\", type: \"type\", justify: \"justify\", orientation: \"orientation\", activeId: \"activeId\" }, outputs: { tabChange: \"tabChange\" }, exportAs: [\"ngbTabset\"], decls: 4, vars: 4, consts: [[\"role\", \"tablist\"], [\"class\", \"nav-item\", 4, \"ngFor\", \"ngForOf\"], [1, \"tab-content\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [1, \"nav-item\"], [\"href\", \"\", \"role\", \"tab\", 1, \"nav-link\", 3, \"id\", \"click\"], [3, \"ngTemplateOutlet\"], [\"role\", \"tabpanel\", 3, \"class\", \"id\", 4, \"ngIf\"], [\"role\", \"tabpanel\", 3, \"id\"]], template: function NgbTabset_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"ul\", 0);\n        ɵngcc0.ɵɵtemplate(1, NgbTabset_li_1_Template, 4, 11, \"li\", 1);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, NgbTabset_ng_template_3_Template, 1, 1, \"ng-template\", 3);\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(\"nav nav-\" + ctx.type + (ctx.orientation == \"horizontal\" ? \" \" + ctx.justifyClass : \" flex-column\"));\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf], encapsulation: 2 });\n/** @nocollapse */\nNgbTabset.ctorParameters = () => [\n    { type: NgbTabsetConfig }\n];\nNgbTabset.propDecorators = {\n    tabs: [{ type: ContentChildren, args: [NgbTab,] }],\n    activeId: [{ type: Input }],\n    destroyOnHide: [{ type: Input }],\n    justify: [{ type: Input }],\n    orientation: [{ type: Input }],\n    type: [{ type: Input }],\n    tabChange: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTabset, [{\n        type: Component,\n        args: [{\n                selector: 'ngb-tabset',\n                exportAs: 'ngbTabset',\n                template: `\n    <ul [class]=\"'nav nav-' + type + (orientation == 'horizontal'?  ' ' + justifyClass : ' flex-column')\" role=\"tablist\">\n      <li class=\"nav-item\" *ngFor=\"let tab of tabs\">\n        <a [id]=\"tab.id\" class=\"nav-link\" [class.active]=\"tab.id === activeId\" [class.disabled]=\"tab.disabled\"\n          href (click)=\"select(tab.id); $event.preventDefault()\" role=\"tab\" [attr.tabindex]=\"(tab.disabled ? '-1': undefined)\"\n          [attr.aria-controls]=\"(!destroyOnHide || tab.id === activeId ? tab.id + '-panel' : null)\"\n          [attr.aria-selected]=\"tab.id === activeId\" [attr.aria-disabled]=\"tab.disabled\">\n          {{tab.title}}<ng-template [ngTemplateOutlet]=\"tab.titleTpl?.templateRef\"></ng-template>\n        </a>\n      </li>\n    </ul>\n    <div class=\"tab-content\">\n      <ng-template ngFor let-tab [ngForOf]=\"tabs\">\n        <div\n          class=\"tab-pane {{tab.id === activeId ? 'active' : null}}\"\n          *ngIf=\"!destroyOnHide || tab.id === activeId\"\n          role=\"tabpanel\"\n          [attr.aria-labelledby]=\"tab.id\" id=\"{{tab.id}}-panel\">\n          <ng-template [ngTemplateOutlet]=\"tab.contentTpl?.templateRef\"></ng-template>\n        </div>\n      </ng-template>\n    </div>\n  `\n            }]\n    }], function () { return [{ type: NgbTabsetConfig }]; }, { destroyOnHide: [{\n            type: Input\n        }], tabChange: [{\n            type: Output\n        }], type: [{\n            type: Input\n        }], justify: [{\n            type: Input\n        }], orientation: [{\n            type: Input\n        }], activeId: [{\n            type: Input\n        }], tabs: [{\n            type: ContentChildren,\n            args: [NgbTab]\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_TABSET_DIRECTIVES = [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle];\nclass NgbTabsetModule {\n    /**\n     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n     * Will be removed in 4.0.0.\n     *\n     * @deprecated 3.0.0\n     * @return {?}\n     */\n    static forRoot() { return { ngModule: NgbTabsetModule }; }\n}\nNgbTabsetModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbTabsetModule });\nNgbTabsetModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbTabsetModule_Factory(t) { return new (t || NgbTabsetModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTabsetModule, { declarations: function () { return [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgbTabset, NgbTab, NgbTabContent, NgbTabTitle]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTabsetModule, [{\n        type: NgModule,\n        args: [{ declarations: NGB_TABSET_DIRECTIVES, exports: NGB_TABSET_DIRECTIVES, imports: [CommonModule] }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbTime {\n    /**\n     * @param {?=} hour\n     * @param {?=} minute\n     * @param {?=} second\n     */\n    constructor(hour, minute, second) {\n        this.hour = toInteger(hour);\n        this.minute = toInteger(minute);\n        this.second = toInteger(second);\n    }\n    /**\n     * @param {?=} step\n     * @return {?}\n     */\n    changeHour(step = 1) { this.updateHour((isNaN(this.hour) ? 0 : this.hour) + step); }\n    /**\n     * @param {?} hour\n     * @return {?}\n     */\n    updateHour(hour) {\n        if (isNumber(hour)) {\n            this.hour = (hour < 0 ? 24 + hour : hour) % 24;\n        }\n        else {\n            this.hour = NaN;\n        }\n    }\n    /**\n     * @param {?=} step\n     * @return {?}\n     */\n    changeMinute(step = 1) { this.updateMinute((isNaN(this.minute) ? 0 : this.minute) + step); }\n    /**\n     * @param {?} minute\n     * @return {?}\n     */\n    updateMinute(minute) {\n        if (isNumber(minute)) {\n            this.minute = minute % 60 < 0 ? 60 + minute % 60 : minute % 60;\n            this.changeHour(Math.floor(minute / 60));\n        }\n        else {\n            this.minute = NaN;\n        }\n    }\n    /**\n     * @param {?=} step\n     * @return {?}\n     */\n    changeSecond(step = 1) { this.updateSecond((isNaN(this.second) ? 0 : this.second) + step); }\n    /**\n     * @param {?} second\n     * @return {?}\n     */\n    updateSecond(second) {\n        if (isNumber(second)) {\n            this.second = second < 0 ? 60 + second % 60 : second % 60;\n            this.changeMinute(Math.floor(second / 60));\n        }\n        else {\n            this.second = NaN;\n        }\n    }\n    /**\n     * @param {?=} checkSecs\n     * @return {?}\n     */\n    isValid(checkSecs = true) {\n        return isNumber(this.hour) && isNumber(this.minute) && (checkSecs ? isNumber(this.second) : true);\n    }\n    /**\n     * @return {?}\n     */\n    toString() { return `${this.hour || 0}:${this.minute || 0}:${this.second || 0}`; }\n}\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbTimepicker`](#/components/timepicker/api#NgbTimepicker) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the timepickers used in the application.\n */\nclass NgbTimepickerConfig {\n    constructor() {\n        this.meridian = false;\n        this.spinners = true;\n        this.seconds = false;\n        this.hourStep = 1;\n        this.minuteStep = 1;\n        this.secondStep = 1;\n        this.disabled = false;\n        this.readonlyInputs = false;\n        this.size = 'medium';\n    }\n}\nNgbTimepickerConfig.ɵfac = function NgbTimepickerConfig_Factory(t) { return new (t || NgbTimepickerConfig)(); };\nNgbTimepickerConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbTimepickerConfig, factory: NgbTimepickerConfig.ɵfac, providedIn: 'root' });\n/** @nocollapse */ NgbTimepickerConfig.ngInjectableDef = defineInjectable({ factory: function NgbTimepickerConfig_Factory() { return new NgbTimepickerConfig(); }, token: NgbTimepickerConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTimepickerConfig, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * @return {?}\n */\nfunction NGB_DATEPICKER_TIME_ADAPTER_FACTORY() {\n    return new NgbTimeStructAdapter();\n}\n/**\n * An abstract service that does the conversion between the internal timepicker `NgbTimeStruct` model and\n * any provided user time model `T`, ex. a string, a native date, etc.\n *\n * The adapter is used **only** for conversion when binding timepicker to a form control,\n * ex. `[(ngModel)]=\"userTimeModel\"`. Here `userTimeModel` can be of any type.\n *\n * The default timepicker implementation assumes we use `NgbTimeStruct` as a user model.\n *\n * See the [custom time adapter demo](#/components/timepicker/examples#adapter) for an example.\n *\n * \\@since 2.2.0\n * @abstract\n * @template T\n */\nclass NgbTimeAdapter {\n}\nNgbTimeAdapter.ɵfac = function NgbTimeAdapter_Factory(t) { return new (t || NgbTimeAdapter)(); };\nNgbTimeAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbTimeAdapter, factory: function () { return NGB_DATEPICKER_TIME_ADAPTER_FACTORY(); }, providedIn: 'root' });\n/** @nocollapse */ NgbTimeAdapter.ngInjectableDef = defineInjectable({ factory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY, token: NgbTimeAdapter, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTimeAdapter, [{\n        type: Injectable,\n        args: [{ providedIn: 'root', useFactory: NGB_DATEPICKER_TIME_ADAPTER_FACTORY }]\n    }], null, null); })();\nclass NgbTimeStructAdapter extends NgbTimeAdapter {\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     * @param {?} time\n     * @return {?}\n     */\n    fromModel(time) {\n        return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n            { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null } :\n            null;\n    }\n    /**\n     * Converts a NgbTimeStruct value into NgbTimeStruct value\n     * @param {?} time\n     * @return {?}\n     */\n    toModel(time) {\n        return (time && isInteger(time.hour) && isInteger(time.minute)) ?\n            { hour: time.hour, minute: time.minute, second: isInteger(time.second) ? time.second : null } :\n            null;\n    }\n}\nNgbTimeStructAdapter.ɵfac = function NgbTimeStructAdapter_Factory(t) { return ɵNgbTimeStructAdapter_BaseFactory(t || NgbTimeStructAdapter); };\nNgbTimeStructAdapter.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbTimeStructAdapter, factory: NgbTimeStructAdapter.ɵfac });\nconst ɵNgbTimeStructAdapter_BaseFactory = /*@__PURE__*/ ɵngcc0.ɵɵgetInheritedFactory(NgbTimeStructAdapter);\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTimeStructAdapter, [{\n        type: Injectable\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_TIMEPICKER_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgbTimepicker),\n    multi: true\n};\n/**\n * A directive that helps with wth picking hours, minutes and seconds.\n */\nclass NgbTimepicker {\n    /**\n     * @param {?} _config\n     * @param {?} _ngbTimeAdapter\n     * @param {?} _cd\n     */\n    constructor(_config, _ngbTimeAdapter, _cd) {\n        this._config = _config;\n        this._ngbTimeAdapter = _ngbTimeAdapter;\n        this._cd = _cd;\n        this.onChange = (_) => { };\n        this.onTouched = () => { };\n        this.meridian = _config.meridian;\n        this.spinners = _config.spinners;\n        this.seconds = _config.seconds;\n        this.hourStep = _config.hourStep;\n        this.minuteStep = _config.minuteStep;\n        this.secondStep = _config.secondStep;\n        this.disabled = _config.disabled;\n        this.readonlyInputs = _config.readonlyInputs;\n        this.size = _config.size;\n    }\n    /**\n     * The number of hours to add/subtract when clicking hour spinners.\n     * @param {?} step\n     * @return {?}\n     */\n    set hourStep(step) {\n        this._hourStep = isInteger(step) ? step : this._config.hourStep;\n    }\n    /**\n     * @return {?}\n     */\n    get hourStep() { return this._hourStep; }\n    /**\n     * The number of minutes to add/subtract when clicking minute spinners.\n     * @param {?} step\n     * @return {?}\n     */\n    set minuteStep(step) {\n        this._minuteStep = isInteger(step) ? step : this._config.minuteStep;\n    }\n    /**\n     * @return {?}\n     */\n    get minuteStep() { return this._minuteStep; }\n    /**\n     * The number of seconds to add/subtract when clicking second spinners.\n     * @param {?} step\n     * @return {?}\n     */\n    set secondStep(step) {\n        this._secondStep = isInteger(step) ? step : this._config.secondStep;\n    }\n    /**\n     * @return {?}\n     */\n    get secondStep() { return this._secondStep; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        /** @type {?} */\n        const structValue = this._ngbTimeAdapter.fromModel(value);\n        this.model = structValue ? new NgbTime(structValue.hour, structValue.minute, structValue.second) : new NgbTime();\n        if (!this.seconds && (!structValue || !isNumber(structValue.second))) {\n            this.model.second = 0;\n        }\n        this._cd.markForCheck();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) { this.onChange = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this.onTouched = fn; }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) { this.disabled = isDisabled; }\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n    changeHour(step) {\n        this.model.changeHour(step);\n        this.propagateModelChange();\n    }\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n    changeMinute(step) {\n        this.model.changeMinute(step);\n        this.propagateModelChange();\n    }\n    /**\n     * @param {?} step\n     * @return {?}\n     */\n    changeSecond(step) {\n        this.model.changeSecond(step);\n        this.propagateModelChange();\n    }\n    /**\n     * @param {?} newVal\n     * @return {?}\n     */\n    updateHour(newVal) {\n        /** @type {?} */\n        const isPM = this.model.hour >= 12;\n        /** @type {?} */\n        const enteredHour = toInteger(newVal);\n        if (this.meridian && (isPM && enteredHour < 12 || !isPM && enteredHour === 12)) {\n            this.model.updateHour(enteredHour + 12);\n        }\n        else {\n            this.model.updateHour(enteredHour);\n        }\n        this.propagateModelChange();\n    }\n    /**\n     * @param {?} newVal\n     * @return {?}\n     */\n    updateMinute(newVal) {\n        this.model.updateMinute(toInteger(newVal));\n        this.propagateModelChange();\n    }\n    /**\n     * @param {?} newVal\n     * @return {?}\n     */\n    updateSecond(newVal) {\n        this.model.updateSecond(toInteger(newVal));\n        this.propagateModelChange();\n    }\n    /**\n     * @return {?}\n     */\n    toggleMeridian() {\n        if (this.meridian) {\n            this.changeHour(12);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    formatHour(value) {\n        if (isNumber(value)) {\n            if (this.meridian) {\n                return padNumber(value % 12 === 0 ? 12 : value % 12);\n            }\n            else {\n                return padNumber(value % 24);\n            }\n        }\n        else {\n            return padNumber(NaN);\n        }\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    formatMinSec(value) { return padNumber(value); }\n    /**\n     * @return {?}\n     */\n    get isSmallSize() { return this.size === 'small'; }\n    /**\n     * @return {?}\n     */\n    get isLargeSize() { return this.size === 'large'; }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        if (changes['seconds'] && !this.seconds && this.model && !isNumber(this.model.second)) {\n            this.model.second = 0;\n            this.propagateModelChange(false);\n        }\n    }\n    /**\n     * @param {?=} touched\n     * @return {?}\n     */\n    propagateModelChange(touched = true) {\n        if (touched) {\n            this.onTouched();\n        }\n        if (this.model.isValid(this.seconds)) {\n            this.onChange(this._ngbTimeAdapter.toModel({ hour: this.model.hour, minute: this.model.minute, second: this.model.second }));\n        }\n        else {\n            this.onChange(this._ngbTimeAdapter.toModel(null));\n        }\n    }\n}\nNgbTimepicker.ɵfac = function NgbTimepicker_Factory(t) { return new (t || NgbTimepicker)(ɵngcc0.ɵɵdirectiveInject(NgbTimepickerConfig), ɵngcc0.ɵɵdirectiveInject(NgbTimeAdapter), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef)); };\nNgbTimepicker.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbTimepicker, selectors: [[\"ngb-timepicker\"]], inputs: { meridian: \"meridian\", spinners: \"spinners\", seconds: \"seconds\", hourStep: \"hourStep\", minuteStep: \"minuteStep\", secondStep: \"secondStep\", readonlyInputs: \"readonlyInputs\", size: \"size\" }, features: [ɵngcc0.ɵɵProvidersFeature([NGB_TIMEPICKER_VALUE_ACCESSOR]), ɵngcc0.ɵɵNgOnChangesFeature], decls: 18, vars: 25, consts: function () { var i18n_48; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_timepicker_HH$$FESM2015_NG_BOOTSTRAP_JS_49 = goog.getMsg(\"HH\");\n        i18n_48 = MSG_EXTERNAL_ngb_timepicker_HH$$FESM2015_NG_BOOTSTRAP_JS_49;\n    }\n    else {\n        i18n_48 = $localize `:@@ngb.timepicker.HH␟ce676ab1d6d98f85c836381cf100a4a91ef95a1f␟4043638465245303811:HH`;\n    } var i18n_50; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_timepicker_hours$$FESM2015_NG_BOOTSTRAP_JS_51 = goog.getMsg(\"Hours\");\n        i18n_50 = MSG_EXTERNAL_ngb_timepicker_hours$$FESM2015_NG_BOOTSTRAP_JS_51;\n    }\n    else {\n        i18n_50 = $localize `:@@ngb.timepicker.hours␟3bbce5fef7e1151da052a4e529453edb340e3912␟8070396816726827304:Hours`;\n    } var i18n_52; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_timepicker_MM$$FESM2015_NG_BOOTSTRAP_JS_53 = goog.getMsg(\"MM\");\n        i18n_52 = MSG_EXTERNAL_ngb_timepicker_MM$$FESM2015_NG_BOOTSTRAP_JS_53;\n    }\n    else {\n        i18n_52 = $localize `:@@ngb.timepicker.MM␟72c8edf6a50068a05bde70991e36b1e881f4ca54␟1647282246509919852:MM`;\n    } var i18n_54; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_timepicker_minutes$$FESM2015_NG_BOOTSTRAP_JS_55 = goog.getMsg(\"Minutes\");\n        i18n_54 = MSG_EXTERNAL_ngb_timepicker_minutes$$FESM2015_NG_BOOTSTRAP_JS_55;\n    }\n    else {\n        i18n_54 = $localize `:@@ngb.timepicker.minutes␟41e62daa962947c0d23ded0981975d1bddf0bf38␟5531237363767747080:Minutes`;\n    } var i18n_56; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_timepicker_increment_hours$$FESM2015_NG_BOOTSTRAP_JS__57 = goog.getMsg(\"Increment hours\");\n        i18n_56 = MSG_EXTERNAL_ngb_timepicker_increment_hours$$FESM2015_NG_BOOTSTRAP_JS__57;\n    }\n    else {\n        i18n_56 = $localize `:@@ngb.timepicker.increment-hours␟cb74bc1d625a6c1742f0d7d47306cf495780c218␟5939278348542933629:Increment hours`;\n    } var i18n_58; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_timepicker_decrement_hours$$FESM2015_NG_BOOTSTRAP_JS__59 = goog.getMsg(\"Decrement hours\");\n        i18n_58 = MSG_EXTERNAL_ngb_timepicker_decrement_hours$$FESM2015_NG_BOOTSTRAP_JS__59;\n    }\n    else {\n        i18n_58 = $localize `:@@ngb.timepicker.decrement-hours␟147c7a19429da7d999e247d22e33fee370b1691b␟3651829882940481818:Decrement hours`;\n    } var i18n_60; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_timepicker_increment_minutes$$FESM2015_NG_BOOTSTRAP_JS__61 = goog.getMsg(\"Increment minutes\");\n        i18n_60 = MSG_EXTERNAL_ngb_timepicker_increment_minutes$$FESM2015_NG_BOOTSTRAP_JS__61;\n    }\n    else {\n        i18n_60 = $localize `:@@ngb.timepicker.increment-minutes␟f5a4a3bc05e053f6732475d0e74875ec01c3a348␟180147720391025024:Increment minutes`;\n    } var i18n_62; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_timepicker_decrement_minutes$$FESM2015_NG_BOOTSTRAP_JS__63 = goog.getMsg(\"Decrement minutes\");\n        i18n_62 = MSG_EXTERNAL_ngb_timepicker_decrement_minutes$$FESM2015_NG_BOOTSTRAP_JS__63;\n    }\n    else {\n        i18n_62 = $localize `:@@ngb.timepicker.decrement-minutes␟c1a6899e529c096da5b660385d4e77fe1f7ad271␟7447789825403243588:Decrement minutes`;\n    } var i18n_64; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_timepicker_SS$$FESM2015_NG_BOOTSTRAP_JS__65 = goog.getMsg(\"SS\");\n        i18n_64 = MSG_EXTERNAL_ngb_timepicker_SS$$FESM2015_NG_BOOTSTRAP_JS__65;\n    }\n    else {\n        i18n_64 = $localize `:@@ngb.timepicker.SS␟ebe38d36a40a2383c5fefa9b4608ffbda08bd4a3␟3628127143071124194:SS`;\n    } var i18n_66; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_timepicker_seconds$$FESM2015_NG_BOOTSTRAP_JS__67 = goog.getMsg(\"Seconds\");\n        i18n_66 = MSG_EXTERNAL_ngb_timepicker_seconds$$FESM2015_NG_BOOTSTRAP_JS__67;\n    }\n    else {\n        i18n_66 = $localize `:@@ngb.timepicker.seconds␟4f2ed9e71a7c981db3e50ae2fedb28aff2ec4e6c␟8874012390997067175:Seconds`;\n    } var i18n_68; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_timepicker_increment_seconds$$FESM2015_NG_BOOTSTRAP_JS___69 = goog.getMsg(\"Increment seconds\");\n        i18n_68 = MSG_EXTERNAL_ngb_timepicker_increment_seconds$$FESM2015_NG_BOOTSTRAP_JS___69;\n    }\n    else {\n        i18n_68 = $localize `:@@ngb.timepicker.increment-seconds␟912322ecee7d659d04dcf494a70e22e49d334b26␟5364772110539092174:Increment seconds`;\n    } var i18n_70; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_timepicker_decrement_seconds$$FESM2015_NG_BOOTSTRAP_JS___71 = goog.getMsg(\"Decrement seconds\");\n        i18n_70 = MSG_EXTERNAL_ngb_timepicker_decrement_seconds$$FESM2015_NG_BOOTSTRAP_JS___71;\n    }\n    else {\n        i18n_70 = $localize `:@@ngb.timepicker.decrement-seconds␟5db47ac104294243a70eb9124fbea9d0004ddf69␟753633511487974857:Decrement seconds`;\n    } var i18n_72; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_timepicker_PM$$FESM2015_NG_BOOTSTRAP_JS___73 = goog.getMsg(\"PM\");\n        i18n_72 = MSG_EXTERNAL_ngb_timepicker_PM$$FESM2015_NG_BOOTSTRAP_JS___73;\n    }\n    else {\n        i18n_72 = $localize `:@@ngb.timepicker.PM␟ea3531b9e785bbfa3a8e3bac5a63256791fe6742␟8786206544894467023:PM`;\n    } var i18n_74; if (typeof ngI18nClosureMode !== \"undefined\" && ngI18nClosureMode) {\n        const MSG_EXTERNAL_ngb_timepicker_AM$$FESM2015_NG_BOOTSTRAP_JS___75 = goog.getMsg(\"AM\");\n        i18n_74 = MSG_EXTERNAL_ngb_timepicker_AM$$FESM2015_NG_BOOTSTRAP_JS___75;\n    }\n    else {\n        i18n_74 = $localize `:@@ngb.timepicker.AM␟7a15fe3d37ae85ad0d31e40bb0c366e6a6ce6aa9␟5815402189639789859:AM`;\n    } return [[3, \"disabled\"], [1, \"ngb-tp\"], [1, \"ngb-tp-input-container\", \"ngb-tp-hour\"], [\"tabindex\", \"-1\", \"type\", \"button\", \"class\", \"btn btn-link\", 3, \"btn-sm\", \"btn-lg\", \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"text\", \"maxlength\", \"2\", 1, \"ngb-tp-input\", \"form-control\", 3, \"value\", \"readOnly\", \"disabled\", \"change\", \"keydown.ArrowUp\", \"keydown.ArrowDown\", 6, \"placeholder\", \"aria-label\"], [\"placeholder\", i18n_48, \"aria-label\", i18n_50], [1, \"ngb-tp-spacer\"], [1, \"ngb-tp-input-container\", \"ngb-tp-minute\"], [\"placeholder\", i18n_52, \"aria-label\", i18n_54], [\"class\", \"ngb-tp-spacer\", 4, \"ngIf\"], [\"class\", \"ngb-tp-input-container ngb-tp-second\", 4, \"ngIf\"], [\"class\", \"ngb-tp-meridian\", 4, \"ngIf\"], [\"tabindex\", \"-1\", \"type\", \"button\", 1, \"btn\", \"btn-link\", 3, \"disabled\", \"click\"], [1, \"chevron\", \"ngb-tp-chevron\"], [1, \"sr-only\"], i18n_56, [1, \"chevron\", \"ngb-tp-chevron\", \"bottom\"], i18n_58, i18n_60, i18n_62, [1, \"ngb-tp-input-container\", \"ngb-tp-second\"], [\"placeholder\", i18n_64, \"aria-label\", i18n_66], i18n_68, i18n_70, [1, \"ngb-tp-meridian\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-primary\", 3, \"disabled\", \"click\"], [4, \"ngIf\", \"ngIfElse\"], [\"am\", \"\"], i18n_72, i18n_74]; }, template: function NgbTimepicker_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"fieldset\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, NgbTimepicker_button_3_Template, 4, 7, \"button\", 3);\n        ɵngcc0.ɵɵelementStart(4, \"input\", 4);\n        ɵngcc0.ɵɵi18nAttributes(5, 5);\n        ɵngcc0.ɵɵlistener(\"change\", function NgbTimepicker_Template_input_change_4_listener($event) { return ctx.updateHour($event.target.value); })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_4_listener($event) { ctx.changeHour(ctx.hourStep); return $event.preventDefault(); })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_4_listener($event) { ctx.changeHour(-ctx.hourStep); return $event.preventDefault(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(6, NgbTimepicker_button_6_Template, 4, 7, \"button\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(7, \"div\", 6);\n        ɵngcc0.ɵɵtext(8, \":\");\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementStart(9, \"div\", 7);\n        ɵngcc0.ɵɵtemplate(10, NgbTimepicker_button_10_Template, 4, 7, \"button\", 3);\n        ɵngcc0.ɵɵelementStart(11, \"input\", 4);\n        ɵngcc0.ɵɵi18nAttributes(12, 8);\n        ɵngcc0.ɵɵlistener(\"change\", function NgbTimepicker_Template_input_change_11_listener($event) { return ctx.updateMinute($event.target.value); })(\"keydown.ArrowUp\", function NgbTimepicker_Template_input_keydown_ArrowUp_11_listener($event) { ctx.changeMinute(ctx.minuteStep); return $event.preventDefault(); })(\"keydown.ArrowDown\", function NgbTimepicker_Template_input_keydown_ArrowDown_11_listener($event) { ctx.changeMinute(-ctx.minuteStep); return $event.preventDefault(); });\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(13, NgbTimepicker_button_13_Template, 4, 7, \"button\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵtemplate(14, NgbTimepicker_div_14_Template, 2, 0, \"div\", 9);\n        ɵngcc0.ɵɵtemplate(15, NgbTimepicker_div_15_Template, 5, 9, \"div\", 10);\n        ɵngcc0.ɵɵtemplate(16, NgbTimepicker_div_16_Template, 1, 0, \"div\", 9);\n        ɵngcc0.ɵɵtemplate(17, NgbTimepicker_div_17_Template, 5, 9, \"div\", 11);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵproperty(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n        ɵngcc0.ɵɵproperty(\"value\", ctx.formatHour(ctx.model == null ? null : ctx.model.hour))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n        ɵngcc0.ɵɵadvance(4);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"form-control-sm\", ctx.isSmallSize)(\"form-control-lg\", ctx.isLargeSize);\n        ɵngcc0.ɵɵproperty(\"value\", ctx.formatMinSec(ctx.model == null ? null : ctx.model.minute))(\"readOnly\", ctx.readonlyInputs)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.spinners);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.seconds);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.seconds);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.meridian);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.meridian);\n    } }, directives: [ɵngcc1.NgIf], styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron::before{border-style:solid;border-width:.29em .29em 0 0;content:'';display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;-webkit-transform:rotate(135deg);transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\"], encapsulation: 2 });\n/** @nocollapse */\nNgbTimepicker.ctorParameters = () => [\n    { type: NgbTimepickerConfig },\n    { type: NgbTimeAdapter },\n    { type: ChangeDetectorRef }\n];\nNgbTimepicker.propDecorators = {\n    meridian: [{ type: Input }],\n    spinners: [{ type: Input }],\n    seconds: [{ type: Input }],\n    hourStep: [{ type: Input }],\n    minuteStep: [{ type: Input }],\n    secondStep: [{ type: Input }],\n    readonlyInputs: [{ type: Input }],\n    size: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTimepicker, [{\n        type: Component,\n        args: [{\n                selector: 'ngb-timepicker',\n                encapsulation: ViewEncapsulation.None,\n                template: `\n    <fieldset [disabled]=\"disabled\" [class.disabled]=\"disabled\">\n      <div class=\"ngb-tp\">\n        <div class=\"ngb-tp-input-container ngb-tp-hour\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-hours\">Increment hours</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" placeholder=\"HH\" i18n-placeholder=\"@@ngb.timepicker.HH\"\n            [value]=\"formatHour(model?.hour)\" (change)=\"updateHour($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Hours\" i18n-aria-label=\"@@ngb.timepicker.hours\"\n            (keydown.ArrowUp)=\"changeHour(hourStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeHour(-hourStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeHour(-hourStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-hours\">Decrement hours</span>\n          </button>\n        </div>\n        <div class=\"ngb-tp-spacer\">:</div>\n        <div class=\"ngb-tp-input-container ngb-tp-minute\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-minutes\">Increment minutes</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" placeholder=\"MM\" i18n-placeholder=\"@@ngb.timepicker.MM\"\n            [value]=\"formatMinSec(model?.minute)\" (change)=\"updateMinute($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Minutes\" i18n-aria-label=\"@@ngb.timepicker.minutes\"\n            (keydown.ArrowUp)=\"changeMinute(minuteStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeMinute(-minuteStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeMinute(-minuteStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\"  i18n=\"@@ngb.timepicker.decrement-minutes\">Decrement minutes</span>\n          </button>\n        </div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-spacer\">:</div>\n        <div *ngIf=\"seconds\" class=\"ngb-tp-input-container ngb-tp-second\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\" [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.increment-seconds\">Increment seconds</span>\n          </button>\n          <input type=\"text\" class=\"ngb-tp-input form-control\" [class.form-control-sm]=\"isSmallSize\" [class.form-control-lg]=\"isLargeSize\"\n            maxlength=\"2\" placeholder=\"SS\" i18n-placeholder=\"@@ngb.timepicker.SS\"\n            [value]=\"formatMinSec(model?.second)\" (change)=\"updateSecond($event.target.value)\"\n            [readOnly]=\"readonlyInputs\" [disabled]=\"disabled\" aria-label=\"Seconds\" i18n-aria-label=\"@@ngb.timepicker.seconds\"\n            (keydown.ArrowUp)=\"changeSecond(secondStep); $event.preventDefault()\"\n            (keydown.ArrowDown)=\"changeSecond(-secondStep); $event.preventDefault()\">\n          <button *ngIf=\"spinners\" tabindex=\"-1\" type=\"button\" (click)=\"changeSecond(-secondStep)\"\n            class=\"btn btn-link\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"  [class.disabled]=\"disabled\"\n            [disabled]=\"disabled\">\n            <span class=\"chevron ngb-tp-chevron bottom\"></span>\n            <span class=\"sr-only\" i18n=\"@@ngb.timepicker.decrement-seconds\">Decrement seconds</span>\n          </button>\n        </div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-spacer\"></div>\n        <div *ngIf=\"meridian\" class=\"ngb-tp-meridian\">\n          <button type=\"button\" class=\"btn btn-outline-primary\" [class.btn-sm]=\"isSmallSize\" [class.btn-lg]=\"isLargeSize\"\n            [disabled]=\"disabled\" [class.disabled]=\"disabled\"\n                  (click)=\"toggleMeridian()\">\n            <ng-container *ngIf=\"model?.hour >= 12; else am\" i18n=\"@@ngb.timepicker.PM\">PM</ng-container>\n            <ng-template #am i18n=\"@@ngb.timepicker.AM\">AM</ng-template>\n          </button>\n        </div>\n      </div>\n    </fieldset>\n  `,\n                providers: [NGB_TIMEPICKER_VALUE_ACCESSOR],\n                styles: [\"ngb-timepicker{font-size:1rem}.ngb-tp{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}.ngb-tp-input-container{width:4em}.ngb-tp-chevron::before{border-style:solid;border-width:.29em .29em 0 0;content:'';display:inline-block;height:.69em;left:.05em;position:relative;top:.15em;-webkit-transform:rotate(-45deg);transform:rotate(-45deg);vertical-align:middle;width:.69em}.ngb-tp-chevron.bottom:before{top:-.3em;-webkit-transform:rotate(135deg);transform:rotate(135deg)}.ngb-tp-input{text-align:center}.ngb-tp-hour,.ngb-tp-meridian,.ngb-tp-minute,.ngb-tp-second{display:-ms-flexbox;display:flex;-ms-flex-direction:column;flex-direction:column;-ms-flex-align:center;align-items:center;-ms-flex-pack:distribute;justify-content:space-around}.ngb-tp-spacer{width:1em;text-align:center}\"]\n            }]\n    }], function () { return [{ type: NgbTimepickerConfig }, { type: NgbTimeAdapter }, { type: ChangeDetectorRef }]; }, { meridian: [{\n            type: Input\n        }], spinners: [{\n            type: Input\n        }], seconds: [{\n            type: Input\n        }], hourStep: [{\n            type: Input\n        }], minuteStep: [{\n            type: Input\n        }], secondStep: [{\n            type: Input\n        }], readonlyInputs: [{\n            type: Input\n        }], size: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbTimepickerModule {\n    /**\n     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n     * Will be removed in 4.0.0.\n     *\n     * @deprecated 3.0.0\n     * @return {?}\n     */\n    static forRoot() { return { ngModule: NgbTimepickerModule }; }\n}\nNgbTimepickerModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbTimepickerModule });\nNgbTimepickerModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbTimepickerModule_Factory(t) { return new (t || NgbTimepickerModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTimepickerModule, { declarations: function () { return [NgbTimepicker]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgbTimepicker]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTimepickerModule, [{\n        type: NgModule,\n        args: [{ declarations: [NgbTimepicker], exports: [NgbTimepicker], imports: [CommonModule] }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbTooltip`](#/components/tooltip/api#NgbTooltip) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the tooltips used in the application.\n */\nclass NgbTooltipConfig {\n    constructor() {\n        this.autoClose = true;\n        this.placement = 'auto';\n        this.triggers = 'hover focus';\n        this.disableTooltip = false;\n        this.openDelay = 0;\n        this.closeDelay = 0;\n    }\n}\nNgbTooltipConfig.ɵfac = function NgbTooltipConfig_Factory(t) { return new (t || NgbTooltipConfig)(); };\nNgbTooltipConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbTooltipConfig, factory: NgbTooltipConfig.ɵfac, providedIn: 'root' });\n/** @nocollapse */ NgbTooltipConfig.ngInjectableDef = defineInjectable({ factory: function NgbTooltipConfig_Factory() { return new NgbTooltipConfig(); }, token: NgbTooltipConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTooltipConfig, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nlet nextId$5 = 0;\nclass NgbTooltipWindow {\n}\nNgbTooltipWindow.ɵfac = function NgbTooltipWindow_Factory(t) { return new (t || NgbTooltipWindow)(); };\nNgbTooltipWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbTooltipWindow, selectors: [[\"ngb-tooltip-window\"]], hostAttrs: [\"role\", \"tooltip\"], hostVars: 3, hostBindings: function NgbTooltipWindow_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n        ɵngcc0.ɵɵclassMap(\"tooltip show\" + (ctx.tooltipClass ? \" \" + ctx.tooltipClass : \"\"));\n    } }, inputs: { id: \"id\", tooltipClass: \"tooltipClass\" }, ngContentSelectors: _c3, decls: 3, vars: 0, consts: [[1, \"arrow\"], [1, \"tooltip-inner\"]], template: function NgbTooltipWindow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelement(0, \"div\", 0);\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n    } }, styles: [\"ngb-tooltip-window.bs-tooltip-bottom .arrow,ngb-tooltip-window.bs-tooltip-top .arrow{left:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-bottom-left .arrow,ngb-tooltip-window.bs-tooltip-top-left .arrow{left:1em}ngb-tooltip-window.bs-tooltip-bottom-right .arrow,ngb-tooltip-window.bs-tooltip-top-right .arrow{left:auto;right:.8rem}ngb-tooltip-window.bs-tooltip-left .arrow,ngb-tooltip-window.bs-tooltip-right .arrow{top:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-left-top .arrow,ngb-tooltip-window.bs-tooltip-right-top .arrow{top:.4rem}ngb-tooltip-window.bs-tooltip-left-bottom .arrow,ngb-tooltip-window.bs-tooltip-right-bottom .arrow{top:auto;bottom:.4rem}\"], encapsulation: 2, changeDetection: 0 });\nNgbTooltipWindow.propDecorators = {\n    id: [{ type: Input }],\n    tooltipClass: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTooltipWindow, [{\n        type: Component,\n        args: [{\n                selector: 'ngb-tooltip-window',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                host: { '[class]': '\"tooltip show\" + (tooltipClass ? \" \" + tooltipClass : \"\")', 'role': 'tooltip', '[id]': 'id' },\n                template: `<div class=\"arrow\"></div><div class=\"tooltip-inner\"><ng-content></ng-content></div>`,\n                styles: [\"ngb-tooltip-window.bs-tooltip-bottom .arrow,ngb-tooltip-window.bs-tooltip-top .arrow{left:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-bottom-left .arrow,ngb-tooltip-window.bs-tooltip-top-left .arrow{left:1em}ngb-tooltip-window.bs-tooltip-bottom-right .arrow,ngb-tooltip-window.bs-tooltip-top-right .arrow{left:auto;right:.8rem}ngb-tooltip-window.bs-tooltip-left .arrow,ngb-tooltip-window.bs-tooltip-right .arrow{top:calc(50% - .4rem)}ngb-tooltip-window.bs-tooltip-left-top .arrow,ngb-tooltip-window.bs-tooltip-right-top .arrow{top:.4rem}ngb-tooltip-window.bs-tooltip-left-bottom .arrow,ngb-tooltip-window.bs-tooltip-right-bottom .arrow{top:auto;bottom:.4rem}\"]\n            }]\n    }], null, { id: [{\n            type: Input\n        }], tooltipClass: [{\n            type: Input\n        }] }); })();\n/**\n * A lightweight and extensible directive for fancy tooltip creation.\n */\nclass NgbTooltip {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _renderer\n     * @param {?} injector\n     * @param {?} componentFactoryResolver\n     * @param {?} viewContainerRef\n     * @param {?} config\n     * @param {?} _ngZone\n     * @param {?} _document\n     * @param {?} _changeDetector\n     * @param {?} _applicationRef\n     */\n    constructor(_elementRef, _renderer, injector, componentFactoryResolver, viewContainerRef, config, _ngZone, _document, _changeDetector, _applicationRef) {\n        this._elementRef = _elementRef;\n        this._renderer = _renderer;\n        this._ngZone = _ngZone;\n        this._document = _document;\n        this._changeDetector = _changeDetector;\n        this._applicationRef = _applicationRef;\n        /**\n         * An event emitted when the tooltip is shown. Contains no payload.\n         */\n        this.shown = new EventEmitter();\n        /**\n         * An event emitted when the popover is hidden. Contains no payload.\n         */\n        this.hidden = new EventEmitter();\n        this._ngbTooltipWindowId = `ngb-tooltip-${nextId$5++}`;\n        this.autoClose = config.autoClose;\n        this.placement = config.placement;\n        this.triggers = config.triggers;\n        this.container = config.container;\n        this.disableTooltip = config.disableTooltip;\n        this.tooltipClass = config.tooltipClass;\n        this.openDelay = config.openDelay;\n        this.closeDelay = config.closeDelay;\n        this._popupService = new PopupService(NgbTooltipWindow, injector, viewContainerRef, _renderer, componentFactoryResolver, _applicationRef);\n        this._zoneSubscription = _ngZone.onStable.subscribe(() => {\n            if (this._windowRef) {\n                positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body', 'bs-tooltip');\n            }\n        });\n    }\n    /**\n     * The string content or a `TemplateRef` for the content to be displayed in the tooltip.\n     *\n     * If the content if falsy, the tooltip won't open.\n     * @param {?} value\n     * @return {?}\n     */\n    set ngbTooltip(value) {\n        this._ngbTooltip = value;\n        if (!value && this._windowRef) {\n            this.close();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    get ngbTooltip() { return this._ngbTooltip; }\n    /**\n     * Opens the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering.\n     * The `context` is an optional value to be injected into the tooltip template when it is created.\n     * @param {?=} context\n     * @return {?}\n     */\n    open(context) {\n        if (!this._windowRef && this._ngbTooltip && !this.disableTooltip) {\n            this._windowRef = this._popupService.open(this._ngbTooltip, context);\n            this._windowRef.instance.tooltipClass = this.tooltipClass;\n            this._windowRef.instance.id = this._ngbTooltipWindowId;\n            this._renderer.setAttribute(this._elementRef.nativeElement, 'aria-describedby', this._ngbTooltipWindowId);\n            if (this.container === 'body') {\n                this._document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            // We need to detect changes, because we don't know where .open() might be called from.\n            // Ex. opening tooltip from one of lifecycle hooks that run after the CD\n            // (say from ngAfterViewInit) will result in 'ExpressionHasChanged' exception\n            this._windowRef.changeDetectorRef.detectChanges();\n            // We need to mark for check, because tooltip won't work inside the OnPush component.\n            // Ex. when we use expression like `{{ tooltip.isOpen() : 'opened' : 'closed' }}`\n            // inside the template of an OnPush component and we change the tooltip from\n            // open -> closed, the expression in question won't be updated unless we explicitly\n            // mark the parent component to be checked.\n            this._windowRef.changeDetectorRef.markForCheck();\n            ngbAutoClose(this._ngZone, this._document, this.autoClose, () => this.close(), this.hidden, [this._windowRef.location.nativeElement]);\n            this.shown.emit();\n        }\n    }\n    /**\n     * Closes the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     * @return {?}\n     */\n    close() {\n        if (this._windowRef != null) {\n            this._renderer.removeAttribute(this._elementRef.nativeElement, 'aria-describedby');\n            this._popupService.close();\n            this._windowRef = null;\n            this.hidden.emit();\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Toggles the tooltip.\n     *\n     * This is considered to be a \"manual\" triggering of the tooltip.\n     * @return {?}\n     */\n    toggle() {\n        if (this._windowRef) {\n            this.close();\n        }\n        else {\n            this.open();\n        }\n    }\n    /**\n     * Returns `true`, if the popover is currently shown.\n     * @return {?}\n     */\n    isOpen() { return this._windowRef != null; }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this._unregisterListenersFn = listenToTriggers(this._renderer, this._elementRef.nativeElement, this.triggers, this.isOpen.bind(this), this.open.bind(this), this.close.bind(this), +this.openDelay, +this.closeDelay);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.close();\n        // This check is needed as it might happen that ngOnDestroy is called before ngOnInit\n        // under certain conditions, see: https://github.com/ng-bootstrap/ng-bootstrap/issues/2199\n        if (this._unregisterListenersFn) {\n            this._unregisterListenersFn();\n        }\n        this._zoneSubscription.unsubscribe();\n    }\n}\nNgbTooltip.ɵfac = function NgbTooltip_Factory(t) { return new (t || NgbTooltip)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(Injector), ɵngcc0.ɵɵdirectiveInject(ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(NgbTooltipConfig), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ApplicationRef)); };\nNgbTooltip.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbTooltip, selectors: [[\"\", \"ngbTooltip\", \"\"]], inputs: { autoClose: \"autoClose\", placement: \"placement\", triggers: \"triggers\", container: \"container\", disableTooltip: \"disableTooltip\", tooltipClass: \"tooltipClass\", openDelay: \"openDelay\", closeDelay: \"closeDelay\", ngbTooltip: \"ngbTooltip\" }, outputs: { shown: \"shown\", hidden: \"hidden\" }, exportAs: [\"ngbTooltip\"] });\n/** @nocollapse */\nNgbTooltip.ctorParameters = () => [\n    { type: ElementRef },\n    { type: Renderer2 },\n    { type: Injector },\n    { type: ComponentFactoryResolver },\n    { type: ViewContainerRef },\n    { type: NgbTooltipConfig },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: ChangeDetectorRef },\n    { type: ApplicationRef }\n];\nNgbTooltip.propDecorators = {\n    autoClose: [{ type: Input }],\n    placement: [{ type: Input }],\n    triggers: [{ type: Input }],\n    container: [{ type: Input }],\n    disableTooltip: [{ type: Input }],\n    tooltipClass: [{ type: Input }],\n    openDelay: [{ type: Input }],\n    closeDelay: [{ type: Input }],\n    shown: [{ type: Output }],\n    hidden: [{ type: Output }],\n    ngbTooltip: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTooltip, [{\n        type: Directive,\n        args: [{ selector: '[ngbTooltip]', exportAs: 'ngbTooltip' }]\n    }], function () { return [{ type: ElementRef }, { type: Renderer2 }, { type: Injector }, { type: ComponentFactoryResolver }, { type: ViewContainerRef }, { type: NgbTooltipConfig }, { type: NgZone }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: ChangeDetectorRef }, { type: ApplicationRef }]; }, { shown: [{\n            type: Output\n        }], hidden: [{\n            type: Output\n        }], autoClose: [{\n            type: Input\n        }], placement: [{\n            type: Input\n        }], triggers: [{\n            type: Input\n        }], container: [{\n            type: Input\n        }], disableTooltip: [{\n            type: Input\n        }], tooltipClass: [{\n            type: Input\n        }], openDelay: [{\n            type: Input\n        }], closeDelay: [{\n            type: Input\n        }], ngbTooltip: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbTooltipModule {\n    /**\n     * No need in forRoot anymore with tree-shakeable services\n     *\n     * @deprecated 3.0.0\n     * @return {?}\n     */\n    static forRoot() { return { ngModule: NgbTooltipModule }; }\n}\nNgbTooltipModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbTooltipModule });\nNgbTooltipModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbTooltipModule_Factory(t) { return new (t || NgbTooltipModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTooltipModule, { declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTooltipModule, [{\n        type: NgModule,\n        args: [{ declarations: [NgbTooltip, NgbTooltipWindow], exports: [NgbTooltip], entryComponents: [NgbTooltipWindow] }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A component that helps with text highlighting.\n *\n * If splits the `result` text into parts that contain the searched `term` and generates the HTML markup to simplify\n * highlighting:\n *\n * Ex. `result=\"Alaska\"` and `term=\"as\"` will produce `Al<span class=\"ngb-highlight\">as</span>ka`.\n */\nclass NgbHighlight {\n    constructor() {\n        /**\n         * The CSS class for `<span>` elements wrapping the `term` inside the `result`.\n         */\n        this.highlightClass = 'ngb-highlight';\n    }\n    /**\n     * @param {?} changes\n     * @return {?}\n     */\n    ngOnChanges(changes) {\n        /** @type {?} */\n        const resultStr = toString(this.result);\n        if (!resultStr) {\n            this.parts = [resultStr];\n            return;\n        }\n        /** @type {?} */\n        let resultTerms = Array.isArray(this.term) ? this.term.map(x => toString(x)) : [toString(this.term)];\n        resultTerms = resultTerms.filter(x => x);\n        if (!resultTerms.length) {\n            this.parts = [resultStr];\n            return;\n        }\n        /** @type {?} */\n        const regexStr = `(${resultTerms.map(x => regExpEscape(x)).join('|')})`;\n        this.parts = resultStr.split(new RegExp(regexStr, 'gmi'));\n    }\n}\nNgbHighlight.ɵfac = function NgbHighlight_Factory(t) { return new (t || NgbHighlight)(); };\nNgbHighlight.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbHighlight, selectors: [[\"ngb-highlight\"]], inputs: { highlightClass: \"highlightClass\", result: \"result\", term: \"term\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 1, vars: 1, consts: [[\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"class\", 4, \"ngIf\", \"ngIfElse\"], [\"even\", \"\"]], template: function NgbHighlight_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgbHighlight_ng_template_0_Template, 3, 2, \"ng-template\", 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.parts);\n    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgIf], styles: [\".ngb-highlight{font-weight:700}\"], encapsulation: 2, changeDetection: 0 });\nNgbHighlight.propDecorators = {\n    highlightClass: [{ type: Input }],\n    result: [{ type: Input }],\n    term: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbHighlight, [{\n        type: Component,\n        args: [{\n                selector: 'ngb-highlight',\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                encapsulation: ViewEncapsulation.None,\n                template: `<ng-template ngFor [ngForOf]=\"parts\" let-part let-isOdd=\"odd\">` +\n                    `<span *ngIf=\"isOdd; else even\" [class]=\"highlightClass\">{{part}}</span><ng-template #even>{{part}}</ng-template>` +\n                    `</ng-template>`,\n                styles: [\".ngb-highlight{font-weight:700}\"]\n            }]\n    }], function () { return []; }, { highlightClass: [{\n            type: Input\n        }], result: [{\n            type: Input\n        }], term: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbTypeaheadWindow {\n    constructor() {\n        this.activeIdx = 0;\n        /**\n         * Flag indicating if the first row should be active initially\n         */\n        this.focusFirst = true;\n        /**\n         * A function used to format a given result before display. This function should return a formatted string without any\n         * HTML markup\n         */\n        this.formatter = toString;\n        /**\n         * Event raised when user selects a particular result row\n         */\n        this.selectEvent = new EventEmitter();\n        this.activeChangeEvent = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    hasActive() { return this.activeIdx > -1 && this.activeIdx < this.results.length; }\n    /**\n     * @return {?}\n     */\n    getActive() { return this.results[this.activeIdx]; }\n    /**\n     * @param {?} activeIdx\n     * @return {?}\n     */\n    markActive(activeIdx) {\n        this.activeIdx = activeIdx;\n        this._activeChanged();\n    }\n    /**\n     * @return {?}\n     */\n    next() {\n        if (this.activeIdx === this.results.length - 1) {\n            this.activeIdx = this.focusFirst ? (this.activeIdx + 1) % this.results.length : -1;\n        }\n        else {\n            this.activeIdx++;\n        }\n        this._activeChanged();\n    }\n    /**\n     * @return {?}\n     */\n    prev() {\n        if (this.activeIdx < 0) {\n            this.activeIdx = this.results.length - 1;\n        }\n        else if (this.activeIdx === 0) {\n            this.activeIdx = this.focusFirst ? this.results.length - 1 : -1;\n        }\n        else {\n            this.activeIdx--;\n        }\n        this._activeChanged();\n    }\n    /**\n     * @return {?}\n     */\n    resetActive() {\n        this.activeIdx = this.focusFirst ? 0 : -1;\n        this._activeChanged();\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    select(item) { this.selectEvent.emit(item); }\n    /**\n     * @return {?}\n     */\n    ngOnInit() { this.resetActive(); }\n    /**\n     * @return {?}\n     */\n    _activeChanged() {\n        this.activeChangeEvent.emit(this.activeIdx >= 0 ? this.id + '-' + this.activeIdx : undefined);\n    }\n}\nNgbTypeaheadWindow.ɵfac = function NgbTypeaheadWindow_Factory(t) { return new (t || NgbTypeaheadWindow)(); };\nNgbTypeaheadWindow.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: NgbTypeaheadWindow, selectors: [[\"ngb-typeahead-window\"]], hostAttrs: [\"role\", \"listbox\", 1, \"dropdown-menu\", \"show\"], hostVars: 1, hostBindings: function NgbTypeaheadWindow_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"mousedown\", function NgbTypeaheadWindow_mousedown_HostBindingHandler($event) { return $event.preventDefault(); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"id\", ctx.id);\n    } }, inputs: { focusFirst: \"focusFirst\", formatter: \"formatter\", id: \"id\", results: \"results\", term: \"term\", resultTemplate: \"resultTemplate\" }, outputs: { selectEvent: \"select\", activeChangeEvent: \"activeChange\" }, exportAs: [\"ngbTypeaheadWindow\"], decls: 3, vars: 1, consts: [[\"rt\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [3, \"result\", \"term\"], [\"type\", \"button\", \"role\", \"option\", 1, \"dropdown-item\", 3, \"id\", \"mouseenter\", \"click\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]], template: function NgbTypeaheadWindow_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵtemplate(0, NgbTypeaheadWindow_ng_template_0_Template, 1, 2, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n        ɵngcc0.ɵɵtemplate(2, NgbTypeaheadWindow_ng_template_2_Template, 2, 9, \"ng-template\", 1);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(2);\n        ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.results);\n    } }, directives: [ɵngcc1.NgForOf, NgbHighlight, ɵngcc1.NgTemplateOutlet], encapsulation: 2 });\nNgbTypeaheadWindow.propDecorators = {\n    id: [{ type: Input }],\n    focusFirst: [{ type: Input }],\n    results: [{ type: Input }],\n    term: [{ type: Input }],\n    formatter: [{ type: Input }],\n    resultTemplate: [{ type: Input }],\n    selectEvent: [{ type: Output, args: ['select',] }],\n    activeChangeEvent: [{ type: Output, args: ['activeChange',] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTypeaheadWindow, [{\n        type: Component,\n        args: [{\n                selector: 'ngb-typeahead-window',\n                exportAs: 'ngbTypeaheadWindow',\n                host: { '(mousedown)': '$event.preventDefault()', 'class': 'dropdown-menu show', 'role': 'listbox', '[id]': 'id' },\n                template: `\n    <ng-template #rt let-result=\"result\" let-term=\"term\" let-formatter=\"formatter\">\n      <ngb-highlight [result]=\"formatter(result)\" [term]=\"term\"></ngb-highlight>\n    </ng-template>\n    <ng-template ngFor [ngForOf]=\"results\" let-result let-idx=\"index\">\n      <button type=\"button\" class=\"dropdown-item\" role=\"option\"\n        [id]=\"id + '-' + idx\"\n        [class.active]=\"idx === activeIdx\"\n        (mouseenter)=\"markActive(idx)\"\n        (click)=\"select(result)\">\n          <ng-template [ngTemplateOutlet]=\"resultTemplate || rt\"\n          [ngTemplateOutletContext]=\"{result: result, term: term, formatter: formatter}\"></ng-template>\n      </button>\n    </ng-template>\n  `\n            }]\n    }], function () { return []; }, { focusFirst: [{\n            type: Input\n        }], formatter: [{\n            type: Input\n        }], selectEvent: [{\n            type: Output,\n            args: ['select']\n        }], activeChangeEvent: [{\n            type: Output,\n            args: ['activeChange']\n        }], id: [{\n            type: Input\n        }], results: [{\n            type: Input\n        }], term: [{\n            type: Input\n        }], resultTemplate: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst ARIA_LIVE_DELAY = new InjectionToken('live announcer delay', { providedIn: 'root', factory: ARIA_LIVE_DELAY_FACTORY });\n/**\n * @return {?}\n */\nfunction ARIA_LIVE_DELAY_FACTORY() {\n    return 100;\n}\n/**\n * @param {?} document\n * @param {?=} lazyCreate\n * @return {?}\n */\nfunction getLiveElement(document, lazyCreate = false) {\n    /** @type {?} */\n    let element = (/** @type {?} */ (document.body.querySelector('#ngb-live')));\n    if (element == null && lazyCreate) {\n        element = document.createElement('div');\n        element.setAttribute('id', 'ngb-live');\n        element.setAttribute('aria-live', 'polite');\n        element.setAttribute('aria-atomic', 'true');\n        element.classList.add('sr-only');\n        document.body.appendChild(element);\n    }\n    return element;\n}\nclass Live {\n    /**\n     * @param {?} _document\n     * @param {?} _delay\n     */\n    constructor(_document, _delay) {\n        this._document = _document;\n        this._delay = _delay;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        /** @type {?} */\n        const element = getLiveElement(this._document);\n        if (element) {\n            element.parentElement.removeChild(element);\n        }\n    }\n    /**\n     * @param {?} message\n     * @return {?}\n     */\n    say(message) {\n        /** @type {?} */\n        const element = getLiveElement(this._document, true);\n        /** @type {?} */\n        const delay$$1 = this._delay;\n        element.textContent = '';\n        /** @type {?} */\n        const setText = () => element.textContent = message;\n        if (delay$$1 === null) {\n            setText();\n        }\n        else {\n            setTimeout(setText, delay$$1);\n        }\n    }\n}\nLive.ɵfac = function Live_Factory(t) { return new (t || Live)(ɵngcc0.ɵɵinject(DOCUMENT), ɵngcc0.ɵɵinject(ARIA_LIVE_DELAY)); };\nLive.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: Live, factory: Live.ɵfac, providedIn: 'root' });\n/** @nocollapse */\nLive.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: undefined, decorators: [{ type: Inject, args: [ARIA_LIVE_DELAY,] }] }\n];\n/** @nocollapse */ Live.ngInjectableDef = defineInjectable({ factory: function Live_Factory() { return new Live(inject(DOCUMENT), inject(ARIA_LIVE_DELAY)); }, token: Live, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Live, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [ARIA_LIVE_DELAY]\n            }] }]; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/**\n * A configuration service for the [`NgbTypeahead`](#/components/typeahead/api#NgbTypeahead) component.\n *\n * You can inject this service, typically in your root component, and customize the values of its properties in\n * order to provide default values for all the typeaheads used in the application.\n */\nclass NgbTypeaheadConfig {\n    constructor() {\n        this.editable = true;\n        this.focusFirst = true;\n        this.showHint = false;\n        this.placement = ['bottom-left', 'bottom-right', 'top-left', 'top-right'];\n    }\n}\nNgbTypeaheadConfig.ɵfac = function NgbTypeaheadConfig_Factory(t) { return new (t || NgbTypeaheadConfig)(); };\nNgbTypeaheadConfig.ɵprov = ɵngcc0.ɵɵdefineInjectable({ token: NgbTypeaheadConfig, factory: NgbTypeaheadConfig.ɵfac, providedIn: 'root' });\n/** @nocollapse */ NgbTypeaheadConfig.ngInjectableDef = defineInjectable({ factory: function NgbTypeaheadConfig_Factory() { return new NgbTypeaheadConfig(); }, token: NgbTypeaheadConfig, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTypeaheadConfig, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_TYPEAHEAD_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => NgbTypeahead),\n    multi: true\n};\n/** @type {?} */\nlet nextWindowId = 0;\n/**\n * A directive providing a simple way of creating powerful typeaheads from any text input.\n */\nclass NgbTypeahead {\n    /**\n     * @param {?} _elementRef\n     * @param {?} _viewContainerRef\n     * @param {?} _renderer\n     * @param {?} _injector\n     * @param {?} componentFactoryResolver\n     * @param {?} config\n     * @param {?} ngZone\n     * @param {?} _live\n     * @param {?} _document\n     * @param {?} _ngZone\n     * @param {?} _changeDetector\n     * @param {?} _applicationRef\n     */\n    constructor(_elementRef, _viewContainerRef, _renderer, _injector, componentFactoryResolver, config, ngZone, _live, _document, _ngZone, _changeDetector, _applicationRef) {\n        this._elementRef = _elementRef;\n        this._viewContainerRef = _viewContainerRef;\n        this._renderer = _renderer;\n        this._injector = _injector;\n        this._live = _live;\n        this._document = _document;\n        this._ngZone = _ngZone;\n        this._changeDetector = _changeDetector;\n        this._applicationRef = _applicationRef;\n        this._closed$ = new Subject();\n        /**\n         * The value for the `autocomplete` attribute for the `<input>` element.\n         *\n         * Defaults to `\"off\"` to disable the native browser autocomplete, but you can override it if necessary.\n         *\n         * \\@since 2.1.0\n         */\n        this.autocomplete = 'off';\n        /**\n         * The preferred placement of the typeahead.\n         *\n         * Possible values are `\"top\"`, `\"top-left\"`, `\"top-right\"`, `\"bottom\"`, `\"bottom-left\"`,\n         * `\"bottom-right\"`, `\"left\"`, `\"left-top\"`, `\"left-bottom\"`, `\"right\"`, `\"right-top\"`,\n         * `\"right-bottom\"`\n         *\n         * Accepts an array of strings or a string with space separated possible values.\n         *\n         * The default order of preference is `\"bottom-left bottom-right top-left top-right\"`\n         *\n         * Please see the [positioning overview](#/positioning) for more details.\n         */\n        this.placement = 'bottom-left';\n        /**\n         * An event emitted right before an item is selected from the result list.\n         *\n         * Event payload is of type [`NgbTypeaheadSelectItemEvent`](#/components/typeahead/api#NgbTypeaheadSelectItemEvent).\n         */\n        this.selectItem = new EventEmitter();\n        this.popupId = `ngb-typeahead-${nextWindowId++}`;\n        this._onTouched = () => { };\n        this._onChange = (_) => { };\n        this.container = config.container;\n        this.editable = config.editable;\n        this.focusFirst = config.focusFirst;\n        this.showHint = config.showHint;\n        this.placement = config.placement;\n        this._valueChanges = fromEvent(_elementRef.nativeElement, 'input')\n            .pipe(map($event => ((/** @type {?} */ ($event.target))).value));\n        this._resubscribeTypeahead = new BehaviorSubject(null);\n        this._popupService = new PopupService(NgbTypeaheadWindow, _injector, _viewContainerRef, _renderer, componentFactoryResolver, _applicationRef);\n        this._zoneSubscription = ngZone.onStable.subscribe(() => {\n            if (this.isPopupOpen()) {\n                positionElements(this._elementRef.nativeElement, this._windowRef.location.nativeElement, this.placement, this.container === 'body');\n            }\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        /** @type {?} */\n        const inputValues$ = this._valueChanges.pipe(tap(value => {\n            this._inputValueBackup = this.showHint ? value : null;\n            if (this.editable) {\n                this._onChange(value);\n            }\n        }));\n        /** @type {?} */\n        const results$ = inputValues$.pipe(this.ngbTypeahead);\n        /** @type {?} */\n        const processedResults$ = results$.pipe(tap(() => {\n            if (!this.editable) {\n                this._onChange(undefined);\n            }\n        }));\n        /** @type {?} */\n        const userInput$ = this._resubscribeTypeahead.pipe(switchMap(() => processedResults$));\n        this._subscription = this._subscribeToUserInput(userInput$);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._closePopup();\n        this._unsubscribeFromUserInput();\n        this._zoneSubscription.unsubscribe();\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnChange(fn) { this._onChange = fn; }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    registerOnTouched(fn) { this._onTouched = fn; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    writeValue(value) {\n        this._writeInputValue(this._formatItemForInput(value));\n        if (this.showHint) {\n            this._inputValueBackup = value;\n        }\n    }\n    /**\n     * @param {?} isDisabled\n     * @return {?}\n     */\n    setDisabledState(isDisabled) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'disabled', isDisabled);\n    }\n    /**\n     * Dismisses typeahead popup window\n     * @return {?}\n     */\n    dismissPopup() {\n        if (this.isPopupOpen()) {\n            this._resubscribeTypeahead.next(null);\n            this._closePopup();\n            if (this.showHint && this._inputValueBackup !== null) {\n                this._writeInputValue(this._inputValueBackup);\n            }\n            this._changeDetector.markForCheck();\n        }\n    }\n    /**\n     * Returns true if the typeahead popup window is displayed\n     * @return {?}\n     */\n    isPopupOpen() { return this._windowRef != null; }\n    /**\n     * @return {?}\n     */\n    handleBlur() {\n        this._resubscribeTypeahead.next(null);\n        this._onTouched();\n    }\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    handleKeyDown(event) {\n        if (!this.isPopupOpen()) {\n            return;\n        }\n        // tslint:disable-next-line:deprecation\n        switch (event.which) {\n            case Key.ArrowDown:\n                event.preventDefault();\n                this._windowRef.instance.next();\n                this._showHint();\n                break;\n            case Key.ArrowUp:\n                event.preventDefault();\n                this._windowRef.instance.prev();\n                this._showHint();\n                break;\n            case Key.Enter:\n            case Key.Tab:\n                /** @type {?} */\n                const result = this._windowRef.instance.getActive();\n                if (isDefined(result)) {\n                    event.preventDefault();\n                    event.stopPropagation();\n                    this._selectResult(result);\n                }\n                this._closePopup();\n                break;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _openPopup() {\n        if (!this.isPopupOpen()) {\n            this._inputValueBackup = this._elementRef.nativeElement.value;\n            this._windowRef = this._popupService.open();\n            this._windowRef.instance.id = this.popupId;\n            this._windowRef.instance.selectEvent.subscribe((result) => this._selectResultClosePopup(result));\n            this._windowRef.instance.activeChangeEvent.subscribe((activeId) => this.activeDescendant = activeId);\n            if (this.container === 'body') {\n                window.document.querySelector(this.container).appendChild(this._windowRef.location.nativeElement);\n            }\n            this._changeDetector.markForCheck();\n            ngbAutoClose(this._ngZone, this._document, 'outside', () => this.dismissPopup(), this._closed$, [this._elementRef.nativeElement, this._windowRef.location.nativeElement]);\n        }\n    }\n    /**\n     * @return {?}\n     */\n    _closePopup() {\n        this._closed$.next();\n        this._popupService.close();\n        this._windowRef = null;\n        this.activeDescendant = undefined;\n    }\n    /**\n     * @param {?} result\n     * @return {?}\n     */\n    _selectResult(result) {\n        /** @type {?} */\n        let defaultPrevented = false;\n        this.selectItem.emit({ item: result, preventDefault: () => { defaultPrevented = true; } });\n        this._resubscribeTypeahead.next(null);\n        if (!defaultPrevented) {\n            this.writeValue(result);\n            this._onChange(result);\n        }\n    }\n    /**\n     * @param {?} result\n     * @return {?}\n     */\n    _selectResultClosePopup(result) {\n        this._selectResult(result);\n        this._closePopup();\n    }\n    /**\n     * @return {?}\n     */\n    _showHint() {\n        if (this.showHint && this._windowRef.instance.hasActive() && this._inputValueBackup != null) {\n            /** @type {?} */\n            const userInputLowerCase = this._inputValueBackup.toLowerCase();\n            /** @type {?} */\n            const formattedVal = this._formatItemForInput(this._windowRef.instance.getActive());\n            if (userInputLowerCase === formattedVal.substr(0, this._inputValueBackup.length).toLowerCase()) {\n                this._writeInputValue(this._inputValueBackup + formattedVal.substr(this._inputValueBackup.length));\n                this._elementRef.nativeElement['setSelectionRange'].apply(this._elementRef.nativeElement, [this._inputValueBackup.length, formattedVal.length]);\n            }\n            else {\n                this._writeInputValue(formattedVal);\n            }\n        }\n    }\n    /**\n     * @param {?} item\n     * @return {?}\n     */\n    _formatItemForInput(item) {\n        return item != null && this.inputFormatter ? this.inputFormatter(item) : toString(item);\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    _writeInputValue(value) {\n        this._renderer.setProperty(this._elementRef.nativeElement, 'value', toString(value));\n    }\n    /**\n     * @param {?} userInput$\n     * @return {?}\n     */\n    _subscribeToUserInput(userInput$) {\n        return userInput$.subscribe((results) => {\n            if (!results || results.length === 0) {\n                this._closePopup();\n            }\n            else {\n                this._openPopup();\n                this._windowRef.instance.focusFirst = this.focusFirst;\n                this._windowRef.instance.results = results;\n                this._windowRef.instance.term = this._elementRef.nativeElement.value;\n                if (this.resultFormatter) {\n                    this._windowRef.instance.formatter = this.resultFormatter;\n                }\n                if (this.resultTemplate) {\n                    this._windowRef.instance.resultTemplate = this.resultTemplate;\n                }\n                this._windowRef.instance.resetActive();\n                // The observable stream we are subscribing to might have async steps\n                // and if a component containing typeahead is using the OnPush strategy\n                // the change detection turn wouldn't be invoked automatically.\n                this._windowRef.changeDetectorRef.detectChanges();\n                this._showHint();\n            }\n            // live announcer\n            /** @type {?} */\n            const count = results ? results.length : 0;\n            this._live.say(count === 0 ? 'No results available' : `${count} result${count === 1 ? '' : 's'} available`);\n        });\n    }\n    /**\n     * @return {?}\n     */\n    _unsubscribeFromUserInput() {\n        if (this._subscription) {\n            this._subscription.unsubscribe();\n        }\n        this._subscription = null;\n    }\n}\nNgbTypeahead.ɵfac = function NgbTypeahead_Factory(t) { return new (t || NgbTypeahead)(ɵngcc0.ɵɵdirectiveInject(ElementRef), ɵngcc0.ɵɵdirectiveInject(ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(Renderer2), ɵngcc0.ɵɵdirectiveInject(Injector), ɵngcc0.ɵɵdirectiveInject(ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(NgbTypeaheadConfig), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(Live), ɵngcc0.ɵɵdirectiveInject(DOCUMENT), ɵngcc0.ɵɵdirectiveInject(NgZone), ɵngcc0.ɵɵdirectiveInject(ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ApplicationRef)); };\nNgbTypeahead.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: NgbTypeahead, selectors: [[\"input\", \"ngbTypeahead\", \"\"]], hostAttrs: [\"autocapitalize\", \"off\", \"autocorrect\", \"off\", \"role\", \"combobox\", \"aria-multiline\", \"false\"], hostVars: 7, hostBindings: function NgbTypeahead_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"blur\", function NgbTypeahead_blur_HostBindingHandler() { return ctx.handleBlur(); })(\"keydown\", function NgbTypeahead_keydown_HostBindingHandler($event) { return ctx.handleKeyDown($event); });\n    } if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"autocomplete\", ctx.autocomplete);\n        ɵngcc0.ɵɵattribute(\"aria-autocomplete\", ctx.showHint ? \"both\" : \"list\")(\"aria-activedescendant\", ctx.activeDescendant)(\"aria-owns\", ctx.isPopupOpen() ? ctx.popupId : null)(\"aria-expanded\", ctx.isPopupOpen());\n        ɵngcc0.ɵɵclassProp(\"open\", ctx.isPopupOpen());\n    } }, inputs: { autocomplete: \"autocomplete\", placement: \"placement\", container: \"container\", editable: \"editable\", focusFirst: \"focusFirst\", showHint: \"showHint\", inputFormatter: \"inputFormatter\", ngbTypeahead: \"ngbTypeahead\", resultFormatter: \"resultFormatter\", resultTemplate: \"resultTemplate\" }, outputs: { selectItem: \"selectItem\" }, exportAs: [\"ngbTypeahead\"], features: [ɵngcc0.ɵɵProvidersFeature([NGB_TYPEAHEAD_VALUE_ACCESSOR])] });\n/** @nocollapse */\nNgbTypeahead.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ViewContainerRef },\n    { type: Renderer2 },\n    { type: Injector },\n    { type: ComponentFactoryResolver },\n    { type: NgbTypeaheadConfig },\n    { type: NgZone },\n    { type: Live },\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] },\n    { type: NgZone },\n    { type: ChangeDetectorRef },\n    { type: ApplicationRef }\n];\nNgbTypeahead.propDecorators = {\n    autocomplete: [{ type: Input }],\n    container: [{ type: Input }],\n    editable: [{ type: Input }],\n    focusFirst: [{ type: Input }],\n    inputFormatter: [{ type: Input }],\n    ngbTypeahead: [{ type: Input }],\n    resultFormatter: [{ type: Input }],\n    resultTemplate: [{ type: Input }],\n    showHint: [{ type: Input }],\n    placement: [{ type: Input }],\n    selectItem: [{ type: Output }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTypeahead, [{\n        type: Directive,\n        args: [{\n                selector: 'input[ngbTypeahead]',\n                exportAs: 'ngbTypeahead',\n                host: {\n                    '(blur)': 'handleBlur()',\n                    '[class.open]': 'isPopupOpen()',\n                    '(keydown)': 'handleKeyDown($event)',\n                    '[autocomplete]': 'autocomplete',\n                    'autocapitalize': 'off',\n                    'autocorrect': 'off',\n                    'role': 'combobox',\n                    'aria-multiline': 'false',\n                    '[attr.aria-autocomplete]': 'showHint ? \"both\" : \"list\"',\n                    '[attr.aria-activedescendant]': 'activeDescendant',\n                    '[attr.aria-owns]': 'isPopupOpen() ? popupId : null',\n                    '[attr.aria-expanded]': 'isPopupOpen()'\n                },\n                providers: [NGB_TYPEAHEAD_VALUE_ACCESSOR]\n            }]\n    }], function () { return [{ type: ElementRef }, { type: ViewContainerRef }, { type: Renderer2 }, { type: Injector }, { type: ComponentFactoryResolver }, { type: NgbTypeaheadConfig }, { type: NgZone }, { type: Live }, { type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }, { type: NgZone }, { type: ChangeDetectorRef }, { type: ApplicationRef }]; }, { autocomplete: [{\n            type: Input\n        }], placement: [{\n            type: Input\n        }], selectItem: [{\n            type: Output\n        }], container: [{\n            type: Input\n        }], editable: [{\n            type: Input\n        }], focusFirst: [{\n            type: Input\n        }], showHint: [{\n            type: Input\n        }], inputFormatter: [{\n            type: Input\n        }], ngbTypeahead: [{\n            type: Input\n        }], resultFormatter: [{\n            type: Input\n        }], resultTemplate: [{\n            type: Input\n        }] }); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\nclass NgbTypeaheadModule {\n    /**\n     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n     * Will be removed in 4.0.0.\n     *\n     * @deprecated 3.0.0\n     * @return {?}\n     */\n    static forRoot() { return { ngModule: NgbTypeaheadModule }; }\n}\nNgbTypeaheadModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbTypeaheadModule });\nNgbTypeaheadModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbTypeaheadModule_Factory(t) { return new (t || NgbTypeaheadModule)(); }, imports: [[CommonModule]] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbTypeaheadModule, { declarations: function () { return [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgbTypeahead, NgbHighlight]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbTypeaheadModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgbTypeahead, NgbHighlight, NgbTypeaheadWindow],\n                exports: [NgbTypeahead, NgbHighlight],\n                imports: [CommonModule],\n                entryComponents: [NgbTypeaheadWindow]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n/** @type {?} */\nconst NGB_MODULES = [\n    NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule,\n    NgbDropdownModule, NgbModalModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule,\n    NgbTabsetModule, NgbTimepickerModule, NgbTooltipModule, NgbTypeaheadModule\n];\nclass NgbModule {\n    /**\n     * Importing with '.forRoot()' is no longer necessary, you can simply import the module.\n     * Will be removed in 4.0.0.\n     *\n     * @deprecated 3.0.0\n     * @return {?}\n     */\n    static forRoot() { return { ngModule: NgbModule }; }\n}\nNgbModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: NgbModule });\nNgbModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function NgbModule_Factory(t) { return new (t || NgbModule)(); }, imports: [NGB_MODULES, NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTabsetModule, NgbTimepickerModule, NgbTooltipModule, NgbTypeaheadModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgbModule, { imports: [NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTabsetModule, NgbTimepickerModule, NgbTooltipModule, NgbTypeaheadModule], exports: [NgbAccordionModule, NgbAlertModule, NgbButtonsModule, NgbCarouselModule, NgbCollapseModule, NgbDatepickerModule, NgbDropdownModule, NgbModalModule, NgbPaginationModule, NgbPopoverModule, NgbProgressbarModule, NgbRatingModule, NgbTabsetModule, NgbTimepickerModule, NgbTooltipModule, NgbTypeaheadModule] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(NgbModule, [{\n        type: NgModule,\n        args: [{ imports: NGB_MODULES, exports: NGB_MODULES }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc\n */\n\nexport { NgbAccordionModule, NgbAccordionConfig, NgbAccordion, NgbPanel, NgbPanelTitle, NgbPanelContent, NgbPanelHeader, NgbPanelToggle, NgbAlertModule, NgbAlertConfig, NgbAlert, NgbButtonsModule, NgbButtonLabel, NgbCheckBox, NgbRadio, NgbRadioGroup, NgbCarouselModule, NgbCarouselConfig, NgbCarousel, NgbSlide, NgbCollapseModule, NgbCollapse, NgbCalendar, NgbCalendarGregorian, NgbCalendarIslamicCivil, NgbCalendarIslamicUmalqura, NgbCalendarHebrew, NgbCalendarPersian, NgbDatepickerModule, NgbDatepickerI18n, NgbDatepickerI18nHebrew, NgbDatepickerConfig, NgbDate, NgbDateParserFormatter, NgbDateAdapter, NgbDateNativeAdapter, NgbDateNativeUTCAdapter, NgbDatepicker, NgbInputDatepicker, NgbDropdownModule, NgbDropdownAnchor, NgbDropdownConfig, NgbDropdownItem, NgbDropdownMenu, NgbDropdownToggle, NgbDropdown, NgbModalModule, NgbModal, NgbModalConfig, NgbActiveModal, NgbModalRef, ModalDismissReasons, NgbPaginationModule, NgbPaginationConfig, NgbPagination, NgbPaginationEllipsis, NgbPaginationFirst, NgbPaginationLast, NgbPaginationNext, NgbPaginationNumber, NgbPaginationPrevious, NgbPopoverModule, NgbPopoverConfig, NgbPopover, NgbProgressbarModule, NgbProgressbarConfig, NgbProgressbar, NgbRatingModule, NgbRatingConfig, NgbRating, NgbTabsetModule, NgbTabsetConfig, NgbTabset, NgbTab, NgbTabContent, NgbTabTitle, NgbTimepickerModule, NgbTimepickerConfig, NgbTimepicker, NgbTimeAdapter, NgbTooltipModule, NgbTooltipConfig, NgbTooltip, NgbHighlight, NgbTypeaheadModule, NgbTypeaheadConfig, NgbTypeahead, NgbModule, NGB_CAROUSEL_DIRECTIVES as ɵa, NGB_DATEPICKER_DATE_ADAPTER_FACTORY as ɵi, NgbDateStructAdapter as ɵj, NgbDatepickerDayView as ɵd, NGB_DATEPICKER_18N_FACTORY as ɵg, NgbDatepickerI18nDefault as ɵh, NgbDatepickerKeyMapService as ɵt, NgbDatepickerMonthView as ɵc, NgbDatepickerNavigation as ɵe, NgbDatepickerNavigationSelect as ɵf, NgbDatepickerService as ɵs, NgbCalendarHijri as ɵbb, NGB_DATEPICKER_CALENDAR_FACTORY as ɵb, NGB_DATEPICKER_PARSER_FORMATTER_FACTORY as ɵk, NgbDateISOParserFormatter as ɵl, NgbNavbar as ɵm, NgbModalBackdrop as ɵu, NgbModalStack as ɵw, NgbModalWindow as ɵv, NgbPopoverWindow as ɵn, NGB_DATEPICKER_TIME_ADAPTER_FACTORY as ɵo, NgbTimeStructAdapter as ɵp, NgbTooltipWindow as ɵq, NgbTypeaheadWindow as ɵr, ARIA_LIVE_DELAY as ɵy, ARIA_LIVE_DELAY_FACTORY as ɵz, Live as ɵba, ContentRef as ɵbc, ScrollBar as ɵx };\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"]}